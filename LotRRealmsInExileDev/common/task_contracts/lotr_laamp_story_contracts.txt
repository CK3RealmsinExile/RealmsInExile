lotr_bountig_story = {
	# for grouping together contract types, e.g. mercenary, potentially determines map icon
	group = lotr_story_group

	# Icon used in the UI
	icon = "gfx/interface/icons/activities/activity_lore.dds"

	# Description or 'back-story' of the task contract, defaults to "<key>_desc"
	# root = task_contract_type
	# desc = ""

	# Description for request telling 'what to do' in order to complete the contract, defaults to "<key>_request"
	# root = task_contract_type
	# task_contract_request = ""

	# Contract owner should travel to contract location to accept and stay there for the duration of the contract
	travel = yes

	# Contract is of a criminal nature
	is_criminal = no

	# Range setting
	# yes - uses diplomatic range to contract employer
	# no - uses ADVENTURER_DISTANCE_RESTRICTION define as radius
	use_diplomatic_range = no

	weight = {
		# Standard weights.
		value = task_contract_weight_default_value
		add = laamp_contracts_weight_up_diplomacy_value
		add = laamp_contracts_weight_up_diplomacy_slight_value
	}

	# Validity Triggers
	valid_to_create = {
		# Standard triggers.
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:employer
			LAAMP = root
		}
	}
	valid_to_accept = {
		# Standard triggers.
		scope:employer = { is_landed = yes }
		valid_laamp_basic_accept_only_trigger = yes
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:employer
			LAAMP = root
		}
	}
	valid_to_continue = {
	}
	valid_to_keep = {
	}

	# On_actions
	on_accepted = {
		task_contract_taker = { play_sound_effect = "event:/DLC/EP3/SFX/UI/Contracts/ep3_ui_contracts_accept_contract" }
		# task_contract_taker = {
		# 	set_variable = willi
		# }
	}
	on_create = {
		scope:contract = {

		}
	}

	# Rewards root - task_contract
	task_contract_reward = { #
		success_standard = {
			should_print_on_complete = yes
			effect = {
				task_contract_taker = {
					play_sound_effect = "event:/DLC/EP3/SFX/UI/Contracts/ep3_ui_contracts_success_on_contract"
					save_scope_as = bountig
				}
			}
		}
		failure_standard = {
			positive = no
			should_print_on_complete = yes
			effect = {
				task_contract_taker = { play_sound_effect = "event:/DLC/EP3/SFX/UI/Contracts/ep3_ui_contracts_failure_on_contract" }
				
			}
		}
	}
}
