task_ravage_the_land = {
	position = councillor_steward

	task_type = task_type_county
	county_target = realm
	ai_county_target = realm
	task_progress = task_progress_percentage
	restart_on_finish = yes
	highlight_own_realm = yes

	is_shown = {
		scope:councillor_liege = {
			OR = {
				is_orc = yes
				is_maiar_fallen = yes
				is_nazgul = yes
				AND = {
					is_evil_istari = yes
					is_target_in_global_variable_list = {
						name = unavailable_unique_decisions
						target = flag:decision_creation_of_the_uruk_hai
					}
				}
			}
		}
	}
	
	effect_desc = {
		desc = {
			triggered_desc = {
				trigger = {
					scope:councillor_liege = { is_orc = yes }
				}
				desc = task_ravage_the_land_effect_desc_1_orc
			}
			triggered_desc = {
				trigger = {
					scope:councillor_liege = {
						AND = {
							OR = {
								is_maiar_fallen = yes
								is_nazgul = yes
							}
							capital_county = title:c_amon_lanc
						}
					}
				}
				desc = task_ravage_the_land_effect_desc_1_dol_guldur
			}
			triggered_desc = {
				trigger = {
					scope:councillor_liege = {
						is_maiar_fallen = yes
						NOT = {
							capital_county = title:c_amon_lanc
						}
					}
				}
				desc = task_ravage_the_land_effect_desc_1_mordor_umaiar
			}
			triggered_desc = {
				trigger = {
					scope:councillor_liege = {
						is_nazgul = yes
						NOT = {
							capital_county = title:c_amon_lanc
						}
					}
				}
				desc = task_ravage_the_land_effect_desc_1_mordor_nazgul
			}
			triggered_desc = {
				trigger = {
					scope:councillor_liege = {
						is_evil_istari = yes
					}
				}
				desc = task_ravage_the_land_effect_desc_1_isengard_nonorc
			}
			desc = task_ravage_the_land_effect_desc_2
			desc = task_ravage_the_land_effect_desc_3
		}

		desc = {
			desc = council_task_possible_side_effects
			triggered_desc = {
				trigger = {
					stewardship < high_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_armed_peasants_county_modifier }
						}
					}
				}
				desc = task_ravage_the_land_armed_peasants
			}
			triggered_desc = {
				trigger = {
					stewardship < high_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county.title_province = {
							NOT = { has_province_modifier = steward_lack_of_tribute_province_modifier }
						}
					}
				}
				desc = task_ravage_the_land_lack_of_tribute
			}
			triggered_desc = {
				trigger = {
					stewardship < high_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county.title_province = {
							NOT = { has_province_modifier = steward_levy_desertion_province_modifier }
						}
					}
				}
				desc = task_ravage_the_land_levy_desertion
			}
			triggered_desc = {
				trigger = {
					martial < high_skill_rating
				}
				desc = task_ravage_the_land_wounded_steward
			}
		}
	}

	progress = {
		value = 0
		add = {
			value = steward_ravage_the_land_base
			desc = STEWARD_PROGRESS_BASE
		}
		add = {
			value = scope:councillor.steward_ravage_the_land_monthly_increase_stewardship
			desc = SCALED_COUNCILLOR_STEWARDSHIP_VALUE
		}
		add = {
			value = scope:councillor.steward_ravage_the_land_monthly_increase_martial
			desc = SCALED_COUNCILLOR_MARTIAL_VALUE
		}

		add = steward_ravage_the_land_contextual_bonuses
		
		if = { # Development reduces the speed. Should be the last non-multiply modifier applied to avoid negative values
			limit = {
				exists = scope:county
				scope:county = {
					development_level > 0
				}
			}
			add = {
				value = scope:county.ravage_the_land_development_penalty
				multiply = 0.5 # Half the normal impact from development... we're slashing and burning here!
				desc = STEWARD_RAVAGE_THE_LAND_DEVELOPMENT_PENALTY
			}
		}
		
		# Conversion speed game rules
		if = {
			limit = {
				has_game_rule = slower_culture_conversion_speed
			}
			multiply = {
				value = slower_game_rule_value
				desc = GAME_RULE_SLOWER_REASON
			}
		}
		if = {
			limit = {
				has_game_rule = significantly_slower_culture_conversion_speed
			}
			multiply = {
				value = significantly_slower_game_rule_value
				desc = GAME_RULE_SIGNIFICANTLY_SLOWER_REASON
			}
		}
		if = {
			limit = {
				has_game_rule = significantly_faster_culture_conversion_speed
			}
			multiply = {
				value = significantly_faster_game_rule_value
				desc = GAME_RULE_SIGNIFICANTLY_FASTER_REASON
			}
		}
		if = {
			limit = {
				has_game_rule = faster_culture_conversion_speed
			}
			multiply = {
				value = faster_game_rule_value
				desc = GAME_RULE_FASTER_REASON
			}
		}
	}

	potential_county = {
		scope:county = {
			custom_tooltip = {
				text = county_is_already_orcish
				is_orc = no
			}	
			custom_tooltip = {
				text = county_holder_is_not_orcish
				holder = { 
					OR = {
						is_orc = yes
						is_maiar_fallen = yes
						is_nazgul = yes
						is_evil_istari = yes
					}
				}
			}
			custom_tooltip = {
				text = county_culture_matches_a_liege_or_above
				NOT = {
					scope:councillor_liege = {
						any_liege_or_above = {
							culture = scope:county.culture
						}
					}
				}
			}
		}
		trigger_if = {
			limit = {
				scope:councillor_liege = { is_ai = yes }
			}
			NOT = { scope:councillor_liege = { restricted_culture = yes } }
			OR = {
				NOT = {
					scope:county.culture = {
						cultural_acceptance = { target = scope:councillor_liege.culture value >= 50 }
					}
				}
				scope:councillor_liege.culture = { # All AI's are motivated to spread new Hybrid/Divergent cultures
					OR = {
						is_hybrid_culture = yes
						is_divergent_culture = yes
					}
					any_parent_culture = {
						this = scope:county.culture
					}
				}
			}
			OR = {
				is_independent_ruler = yes
				scope:councillor_liege.primary_title.tier > tier_county
				scope:councillor_liege.culture = { # All AI's are motivated to spread new Hybrid/Divergent cultures
					OR = {
						is_hybrid_culture = yes
						is_divergent_culture = yes
					}
					any_parent_culture = {
						this = scope:county.culture
					}
				}
			}
			OR = {
				scope:county = {
					any_neighboring_county = {
						culture = scope:councillor_liege.culture # The AI only wants to convert counties bordering their own culture
					}
				}
				
				AND = {
					NOT = {
						scope:county = {
							any_neighboring_county = {
								culture = scope:councillor_liege.culture # The AI only wants to convert counties bordering their own culture
							}
						}
					}
				}
			}
		}
		trigger_if = { #LotR - AI should not seek to convert the Nurnoth
			limit = {
				scope:councillor_liege = {
					is_ai = yes
				}
			}
			NOT = { faith = faith:faith_nurn_slave }
		}
	}

	on_start_task_county = {
	}

	on_cancel_task_county = {
	}

	on_finish_task_county = {
		scope:county = {
			if = {
				limit = {
					NOT = {
						scope:councillor_liege.culture = {
							is_hybrid_culture = yes
							any_parent_culture = {
								this = scope:county.culture
							}
						}
					}
				}
				culture = {
					change_cultural_acceptance = {
						target = scope:councillor_liege.culture
						value = culture_conversion_acceptance_impact
						desc = cultural_acceptance_loss_promote_culture
					}
				}
			}
			if = {
				limit = {
					scope:councillor_liege = {
						is_orc = yes
					}
				}
				set_county_culture = scope:councillor_liege.culture
			}
			else_if = {
				limit = {
					scope:councillor_liege = {
						AND = {
							OR = {
								is_maiar_fallen = yes
								is_nazgul = yes
							}
							capital_county = title:c_amon_lanc
						}
					}
					scope:county = { is_orc = no }
				}
				set_county_culture = culture:kazgumhoth
			}
			else_if = {
				limit = {
					scope:councillor_liege = {
						is_maiar_fallen = yes
					}
					scope:county = { is_orc = no }
				}
				set_county_culture = culture:morlughai
			}
			else_if = {
				limit = {
					scope:councillor_liege = {
						is_nazgul = yes
					}
					scope:county = { is_orc = no }
				}
				set_county_culture = culture:ungurhai
			}
			else_if = {
				limit = {
					scope:councillor_liege = {
						is_evil_istari = yes
					}
					scope:county = { is_orc = no }
				}
				set_county_culture = culture:isengard_urukhai
			}
			set_county_faith = scope:councillor_liege.faith
			change_development_level = this.half_county_development_reduction
		}

		scope:councillor = {
			start_default_task = yes
		}
	}

	monthly_on_action = task_ravage_the_land_side_effects

	ai_will_do = {
		value = 0
		if = { # LotR
			limit = { scope:councillor_liege = { restricted_culture = yes } }
			multiply = 0
		}
		if = { # If your big boss is neither an orc nor an evil immortal, dont do this
			limit = {
				scope:councillor_liege.top_liege = {
					NOR = {
						is_orc = yes
						AND = {
							cannot_be_killed = yes
							faith_is_good = no
						}
					}
				}
			}
			multiply = 0
		}
		if = {
			limit = {
				scope:councillor = {
					is_performing_council_task = task_ravage_the_land
				}
			}
			add = 10000 # Always keep going if this is already chosen
		}
		else_if = { # Juke note: tweak this if orcs get too trigger happy. Also, didnt inclue sauron/nazgul/saruman for now
			limit = {
				scope:councillor_liege = {
					is_orc = yes
					any_realm_county = {
						culture = {
							is_orc_culture = no
						}
					}
				}
			}
			add = 200
		}
		#else_if = { # Juke note: To convert other orcs, use 'convert culture'
		#	limit = {
		#		scope:councillor_liege = {
		#			OR = {
		#				gold >= steward_convert_culture_value
		#				AND = {
		#					gold > 0
		#					culture = {
		#						OR = {
		#							is_hybrid_culture = yes
		#							is_divergent_culture = yes
		#						}
		#					}
		#					any_realm_county = {
		#						culture = {
		#							save_temporary_scope_as = culture_check
		#							scope:councillor_liege.culture = {
		#								any_parent_culture = {
		#									this = scope:culture_check
		#								}
		#							}
		#						}
		#					}
		#				}
		#			}
		#		}
		#	}
		#	add = 200
		#}
		#if = { # Juke note: To convert other orcs, use 'convert culture'
		#	limit = {
		#		scope:councillor_liege = {
		#			culture = {
		#				OR = {
		#					is_hybrid_culture = yes
		#					is_divergent_culture = yes
		#				}
		#			}
		#			any_sub_realm_county = {
		#				culture = {
		#					save_temporary_scope_as = culture_check
		#					scope:councillor_liege.culture = {
		#						any_parent_culture = {
		#							this = scope:culture_check
		#						}
		#					}
		#				}
		#			}
		#		}
		#	}
		#	add = 200
		#}
		# Motivate the AI with an escalation agenda to take this task
		if = {
			limit = {
				has_character_flag = agenda_towards_escalation
			}
			add = 500
		}
		else_if = {
			limit = {
				has_character_flag = agenda_towards_deescalation
			}
			add = -250
		}
		if = {
			# Don't do this too often
			limit = {
				scope:councillor_liege = {
					has_character_flag = no_ai_culture_convert
					NAND = { # ignore it if in Hostility with escalation
						has_character_flag = agenda_towards_escalation
						any_character_struggle = {
							involvement = involved
							is_struggle_phase = struggle_iberia_phase_hostility
						}
					}
				}
			}
			multiply = 0
		}
		if = {
			# Interrupt this task if you're bankrupt
			limit = {
				scope:councillor_liege = {
					gold < -50
				}
			}
			multiply = 0
		}
	}
}

task_elven_settlement = {
	position = councillor_steward

	task_type = task_type_county
	county_target = realm
	ai_county_target = realm
	task_progress = task_progress_percentage
	restart_on_finish = yes
	highlight_own_realm = yes

	is_shown = {
		scope:councillor_liege = {
			restricted_culture = no
			is_elf = yes
		}
	}
	
	effect_desc = {
		desc = task_elven_settlement_effect_desc
		desc = {
			triggered_desc = {
				trigger = {
					scope:county.holder = { NOT = { this = scope:councillor_liege } }
				}
				desc = task_elven_settlement_effect_gain_control_desc
			}
		}
		desc = {
			desc = council_task_possible_side_effects
			triggered_desc = {
				trigger = {
					stewardship > mediocre_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_task_efficient_taxation_modifier }
						}
					}
				}
				desc = task_promote_culture_improve_county_opinion
			}
			triggered_desc = {
				trigger = {
					stewardship > mediocre_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_task_efficient_taxation_modifier }
						}
					}
				}
				desc = task_promote_culture_increased_taxes
			}
			triggered_desc = {
				trigger = {
					stewardship > mediocre_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_task_efficient_taxation_modifier }
						}
					}
				}
				desc = task_promote_culture_increased_levies
			}
			triggered_desc = {
				trigger = {
					stewardship < high_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_settler_resistance_modifier }
						}
					}
				}
				desc = task_promote_culture_resistance_to_settlers
			}
			triggered_desc = {
				trigger = {
					stewardship < high_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_settler_resistance_modifier }
						}
					}
				}
				desc = task_promote_culture_resistance_to_administration
			}
		}
	}

	progress = {
		value = 0
		add = {
			value = steward_promote_culture_base
			desc = STEWARD_PROGRESS_BASE
		}
		add = {
			value = scope:councillor.steward_promote_culture_monthly_increase
			desc = SCALED_COUNCILLOR_STEWARDSHIP_VALUE
		}

		add = steward_promote_culture_contextual_bonuses
		
		if = { # Development reduces the speed. Should be the last non-multiply modifier applied to avoid negative values
			limit = {
				exists = scope:county
				scope:county = {
					development_level > 0
				}
			}
			add = {
				value = scope:county.promote_culture_development_penalty
				desc = STEWARD_PROMOTE_CULTURE_DEVELOPMENT_PENALTY
			}
		}
		# Reward for Greenwood restoration
		if = {
			limit = {
				scope:county.empire = title:e_greenwood
				scope:councillor_liege = {
					has_dynasty = yes
					dynasty = { has_dynasty_modifier = legacy_of_oropher_modifier }
				}
			}
			multiply = {
				value = 2
				desc = eryn_lasgalen_formation_bonus
			}
		}
		# Conversion speed game rules
		if = {
			limit = {
				has_game_rule = slower_culture_conversion_speed
			}
			multiply = {
				value = slower_game_rule_value
				desc = GAME_RULE_SLOWER_REASON
			}
		}
		if = {
			limit = {
				has_game_rule = significantly_slower_culture_conversion_speed
			}
			multiply = {
				value = significantly_slower_game_rule_value
				desc = GAME_RULE_SIGNIFICANTLY_SLOWER_REASON
			}
		}
		if = {
			limit = {
				has_game_rule = significantly_faster_culture_conversion_speed
			}
			multiply = {
				value = significantly_faster_game_rule_value
				desc = GAME_RULE_SIGNIFICANTLY_FASTER_REASON
			}
		}
		if = {
			limit = {
				has_game_rule = faster_culture_conversion_speed
			}
			multiply = {
				value = faster_game_rule_value
				desc = GAME_RULE_FASTER_REASON
			}
		}
		# Elven Conversion speed game rules
		if = {
			limit = {
				has_game_rule = slow_elven_conversion
			}
			multiply = {
				value = 0.5
				desc = GAME_RULE_SLOWER_REASON
			}
		}
		
	}

	potential_county = {
		scope:county = {
			custom_tooltip = {
				text = COUNTY_IS_ELVEN_TRIGGER_GLOBAL
				NOR = {
					culture = { has_cultural_pillar = heritage_quendi }
					culture = { has_cultural_pillar = heritage_calaquendi }
					culture = { has_cultural_pillar = heritage_lomiquendi }
					culture = { has_cultural_pillar = heritage_moriquendi }
				}
			}
			trigger_if = {
				limit = {
					scope:councillor_liege = { has_variable = hold_court_8130_culture_block }
				}
				custom_tooltip = {
					text = hold_court_8130_conversion_tt
					NOT = { culture = scope:councillor_liege.var:hold_court_8130_culture_block }
				}
			}
		}
		trigger_if = {
			limit = {
				scope:councillor_liege = { is_ai = yes }
			}
			NOT = { scope:councillor_liege = { restricted_culture = yes } }
			OR = {
				NOT = {
					scope:county.culture = {
						cultural_acceptance = { target = scope:councillor_liege.culture value >= 50 }
					}
				}
				scope:councillor_liege.culture = { # All AI's are motivated to spread new Hybrid/Divergent cultures
					OR = {
						is_hybrid_culture = yes
						is_divergent_culture = yes
					}
					any_parent_culture = {
						this = scope:county.culture
					}
				}
			}
			OR = {
				is_independent_ruler = yes
				scope:councillor_liege.primary_title.tier > tier_county
				scope:councillor_liege.culture = { # All AI's are motivated to spread new Hybrid/Divergent cultures
					OR = {
						is_hybrid_culture = yes
						is_divergent_culture = yes
					}
					any_parent_culture = {
						this = scope:county.culture
					}
				}
			}
			OR = {
				scope:county = {
					any_neighboring_county = {
						culture = scope:councillor_liege.culture # The AI only wants to convert counties bordering their own culture
					}
				}
				
				AND = {
					NOT = {
						scope:county = {
							any_neighboring_county = {
								culture = scope:councillor_liege.culture # The AI only wants to convert counties bordering their own culture
							}
						}
					}
				}
			}
		}
	}

	on_finish_task_county = {
		scope:councillor_liege = {
			if = {
				limit = {	
					NOT = {
						culture = {
							is_hybrid_culture = yes
							any_parent_culture = {
								this = scope:county.culture
							}
						}
					}
				}
				if = {
					limit = {
						is_independent_ruler = no
					}
					add_character_flag = {
						flag = no_ai_culture_convert
						years = 60
					}
				}
				else = {
					add_character_flag = {
						flag = no_ai_culture_convert
						years = 30
					}
				}
			}
		}
		scope:county = {
			if = {
				limit = {
					NOT = {
						scope:councillor_liege.culture = {
							is_hybrid_culture = yes
							any_parent_culture = {
								this = scope:county.culture
							}
						}
					}
				}
				culture = {
					change_cultural_acceptance = {
						target = scope:councillor_liege.culture
						value = culture_conversion_acceptance_impact
						desc = cultural_acceptance_loss_promote_culture
					}
				}
			}
			set_county_culture = scope:councillor_liege.culture
			set_county_faith = scope:councillor_liege.faith
			every_province = {
				limit = { 
					county = scope:county
					has_holding = yes
				}
				set_holding_type = elven_holding
			}
			if = {
				limit = { NOT = { holder = scope:councillor_liege } }
				create_title_and_vassal_change = {
					type = usurped
					save_scope_as = change
					add_claim_on_loss = no
				}
				change_title_holder = {
					holder = scope:councillor_liege
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		scope:councillor = {
			start_default_task = yes
		}
	}

	monthly_on_action = task_promote_culture_side_effects

	ai_will_do = {
		value = 0
		if = { # LotR
			limit = { scope:councillor_liege = { restricted_culture = yes } }
			multiply = 0
		}
		if = {
			limit = {
				scope:councillor = {
					is_performing_council_task = task_promote_culture
				}
			}
			add = 10000 # Always keep going if this is already chosen
		}
		else_if = { # Lotr - Elven expansion gamerule
			limit = {
				scope:councillor_liege = {
					is_elf = yes
					has_game_rule = free_elven_expansion
					any_sub_realm_county = {
						culture = {
							is_elf_culture = no
						}
						opposite_alignment = {
							TARGET = scope:councillor_liege
						}
						has_county_modifier = elven_homeland_county_modifier
					}
				}
			}
			add = 200
		}
		else_if = {
			limit = {
				scope:councillor_liege = {
					OR = {
						gold >= steward_convert_culture_value
						AND = {
							gold > 0
							culture = {
								OR = {
									is_hybrid_culture = yes
									is_divergent_culture = yes
								}
							}
							any_realm_county = {
								culture = {
									save_temporary_scope_as = culture_check
									scope:councillor_liege.culture = {
										any_parent_culture = {
											this = scope:culture_check
										}
									}
								}
							}
						}
					}
				}
			}
			add = 200
		}
		if = {
			limit = {
				scope:councillor_liege = {
					culture = {
						OR = {
							is_hybrid_culture = yes
							is_divergent_culture = yes
						}
					}
					any_sub_realm_county = {
						culture = {
							save_temporary_scope_as = culture_check
							scope:councillor_liege.culture = {
								any_parent_culture = {
									this = scope:culture_check
								}
							}
						}
					}
				}
			}
			add = 200
		}
		if = {
			# Interrupt this task if you're bankrupt
			limit = {
				scope:councillor_liege = {
					gold < -50
				}
			}
			multiply = 0
		}
	}
}