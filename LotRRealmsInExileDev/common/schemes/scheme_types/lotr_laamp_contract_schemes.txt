@laamp_base_contract_phases_per_agent_charge = 1

##################################################
# INFO
# For laamp contracts that are broadly applicable: that is, they should be able to trigger virtually anywhere and with a minimum of triggers.
# The idea is that any given laamp led by a character skilled in any one thing should always be viable — maybe through crime, maybe by demeaning themselves, but they should always have some contracts around to work with.
##################################################

##################################################
# #Diplo Contracts
#
# #Martial Contracts
#
# #Stewardship Contracts
# lotr_laamp_1011		Assault Enemy Column
#
# #Intrigue Contracts
# lotr_laamp_3011		Murder an enemy commander
# lotr_laamp_3051		Hunt down monster
#
# #Learning Contracts
# lotr_laamp_4001		Heal character or ruler
#
# #Prowess Contracts
# lotr_laamp_5001		Raid settlement
#
##################################################

##################################################
# MARTIAL CONTRACT SCHEMES

# Assault Enemy Column
lotr_laamp_1011_contract_scheme = {
	# Basic Setup
	skill = martial
	desc = lotr_laamp_1011_contract_scheme_desc_general
	success_desc = laamp_base_0000_contract_scheme_desc_success
	icon = martial
	illustration = "gfx/interface/illustrations/event_scenes/military_camp.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = MARTIAL }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		lotr_laamp_1011_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { lotr_laamp_1011_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			lotr_laamp_1011_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

##################################################
# INTRIGUE CONTRACT SCHEMES

# Murder an enemy commander
lotr_laamp_3011_contract_scheme = {
	# Basic Setup
	skill = intrigue
	desc = lotr_laamp_3011_contract_scheme_desc_general
	success_desc = lotr_laamp_3011_contract_scheme_desc_success
	discovery_desc = "MURDER_DISCOVERY_DESC"
	icon = intrigue
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	is_secret = yes
	maximum_breaches = 5
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	speed_per_target_skill_point = t2_spsp_target_value
	base_progress_goal = t3_base_phase_length_value
	maximum_secrecy = 95
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = t2_spsp_target_spy_value
	
	# Core Triggers
	valid = {
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:owner.var:contract_employer
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = INTRIGUE }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	base_secrecy = {
		add = secrecy_base_value
		add = countermeasure_apply_secrecy_maluses_value
	}
	
	# On Actions
	# on_start = {
		# add_scheme_starting_opportunities_intrigue_effect = yes
	# }
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		lotr_laamp_3011_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { lotr_laamp_3011_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			lotr_laamp_3011_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = {
		hostile_scheme_monthly_discovery_chance_effect = yes
		if = {
			limit = {
				NOT = { exists = scope:discovery_event_happening }
			}			
			random_list = {
				100 = {
					scheme_owner = {
						trigger_event = { on_action = murder_ongoing }
					}
				}
				50 = { fire_generic_contract_scheme_on_going_events_effect = yes }
			}
		}
	}
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			remove_variable = contract_employer
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Monster Hunt
lotr_laamp_3051_contract_scheme = {
	# Basic Setup
	skill = intrigue
	desc = lotr_laamp_3051_contract_scheme_desc_general
	success_desc = lotr_laamp_3051_contract_scheme_desc_success
	icon = intrigue
	illustration = "gfx/interface/illustrations/event_scenes/forest_deep.dds"
	category = contract
	target_type = nothing
	is_secret = no
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0

	# Core Triggers
	valid = {
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:owner.var:contract_employer
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { 
		is_valid_agent_standard_trigger = yes 
	}
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = INTRIGUE }
		
		#laamp_contract_scheme_basic_success_chance_modifier = yes

		# Intrigue modifiers
		modifier = {
			add = {
				value = scope:owner.intrigue
				multiply = 2
			}
			desc = lotr_laamp_3051_contract_scheme_intrigue_desc
		}
		
		modifier = {
			add = 20
			desc = lotr_laamp_3051_contract.tt.elf
			scope:owner = { is_elf = yes }
		}
		modifier = {
			add = 20
			desc = lotr_laamp_3051_contract.tt.dunadan
			scope:owner = { culture = culture:dunedain_ranger }
		}
		modifier = {
			add = 5
			desc = lotr_laamp_3051_contract.tt.hunter
			scope:owner = { 
				has_trait = lifestyle_hunter
			}
		}
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		lotr_laamp_3051_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { lotr_laamp_3051_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			lotr_laamp_3051_contract_scheme_prep_effect = yes
		}
	}
	#on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = intrigue_contract_scheme_invalidated_message
				#right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

##################################################
# LEARNING CONTRACT SCHEMES

# Heal character or ruler
lotr_laamp_4001_contract_scheme = {
	# Basic Setup
	skill = learning
	desc = lotr_laamp_4001_contract_scheme_desc_general
	success_desc = lotr_laamp_4001_contract_scheme_desc_success
	icon = learning
	illustration = "gfx/interface/illustrations/event_scenes/study_physician.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t3_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t1_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { 
		is_valid_agent_standard_trigger = yes 
	}
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = LEARNING }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes

		laamp_improved_learning_contract_success_modifier = yes
		
		modifier = {
			add = 20
			desc = lotr_laamp_4001_contract.tt.elf_physician
			scope:owner = { is_elf = yes }
		}
		modifier = {
			add = 30
			desc = lotr_laamp_4001_contract.tt.istar_physician
			scope:owner = { is_istari  = yes }
		}
		modifier = {
			add = 5
			desc = lotr_laamp_4001_contract.tt.t0_physician
			scope:owner = { 
				has_trait = lifestyle_physician
				has_trait_xp = {
					trait = lifestyle_physician
					value < 50
				}
			}
		}
		modifier = {
			add = 10
			desc = lotr_laamp_4001_contract.tt.t1_physician
			scope:owner = { 
				has_trait = lifestyle_physician
				has_trait_xp = {
					trait = lifestyle_physician
					value >= 50
					value < 100
				}
			}
		}
		modifier = {
			add = 15
			desc = lotr_laamp_4001_contract.tt.t2_physician
			scope:owner = { 
				has_trait = lifestyle_physician
				has_trait_xp = {
					trait = lifestyle_physician
					value >= 100
				}
			}
		}
		modifier = {
			add = 10
			desc = lotr_laamp_4001_contract.tt.elessar
			scope:owner = { 
				any_character_artifact = {
					has_variable = elessar
				}
			}
		}
		modifier = {
			add = 30
			desc = lotr_laamp_4001_contract.tt.elven_ring
			scope:owner = { 
				any_character_artifact = {
					has_variable = elven_ring
				}
			}
		}
		modifier = {
			add = -200
			desc = lotr_laamp_4001_contract.tt.black_breath
			scope:owner = { 
				NOR = {
					is_elf = yes
					is_istari = yes
					OR = {
						dynasty = dynasty:dynasty_elros
						dynasty = dynasty:dynasty_elendil
						dynasty = dynasty:dynasty_anarion
					}
				}
			}
			scope:task_contract.task_contract_target = { has_trait = black_breath }
		}	
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		lotr_laamp_4001_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { lotr_laamp_4001_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			lotr_laamp_4001_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = learning_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

lotr_laamp_5001_contract_scheme = {
	# Basic Setup
	skill = prowess
	desc = "lotr_laamp_4001_contract_scheme_desc"
	success_desc = "lotr_laamp_5001_contract_scheme_SUCCESS_DESC"
	discovery_desc = "lotr_laamp_5001_contract_scheme_DISCOVERY_DESC"
	icon = icon_raid_estate_scheme
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	category = contract
	target_type = character

	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	speed_per_target_skill_point = t2_spsp_target_value
	spymaster_speed_per_skill_point = t2_spsp_owner_spy_value
	target_spymaster_speed_per_skill_point = t2_spsp_target_spy_value
	tier_speed = 1
	base_progress_goal = t3_base_phase_length_value
	maximum_secrecy = 95
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = 1
	success_chance_growth_per_skill_point = t3_scgpsp_value

	is_secret = yes
	maximum_breaches = 5

	# Core Triggers
	valid = {
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { 
		is_valid_agent_standard_trigger = yes 
	}
	agent_groups_owner_perspective = { courtiers }

	odds_prediction = {
		add = hostile_scheme_base_odds_prediction_target_is_char_value
		add = odds_skill_contribution_intrigue_value
		add = agent_groups_owner_perspective_value
		add = odds_raid_estate_scheme_misc_value
		min = 0
	}

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = INTRIGUE }
		hostile_scheme_base_chance_modifier = yes

		# Spiritual Head of Faith
		modifier = {
			add = -30
			desc = "SCHEME_VS_SPIRITUAL_HOF"
			scope:target.faith = {
				this = scope:owner.faith
				has_doctrine = doctrine_spiritual_head
				religious_head ?= scope:target
			}
		}
		# Sponsored Inspiration
		modifier = {
			add = -15
			desc = target_has_sponsored_inspiration
			scope:target = {
				exists = inspiration
				inspiration = { exists = inspiration_sponsor }
			}
		}
		# Family Feud
		house_feud_hostile_scheme_success_modifier = yes
		# Diarchs are better at schemes within their liege's realm
		diarch_scheming_within_realm_bonus_modifier = yes
		# Modifiers
		modifier = { # RAID PROTECTION 1
			scope:target.capital_province = { 
				OR= {
					has_building = march_02
					has_building = hunting_grounds_05
					has_building = outposts_05
					has_building = elven_citadel_01
					has_building = wonder_aglarond_02_helm
					has_building = wonder_citadel_cairos_01
					has_building = wonder_citadel_cairos_02
					has_building = wonder_edhellond_01
					has_building = wonder_edhellond_03
					has_building = wonder_madh_ortogh
					has_building = wonder_ovatharak
					has_building = wonder_citadel_hyarmendacil_02
					has_building = wonder_abaraglareth
					has_building_or_higher = wonder_hidar_oasis_01
					has_building = wonder_amon_lanc_02
					has_building_or_higher = wonder_gundabad_01
					has_building_or_higher = wonder_cameth_brin_01
					has_building_or_higher = wonder_cameth_brin_original_01
					has_building = wonder_house_of_elrond
					has_building = wonder_carn_dum_01
					has_building = wonder_akos
				}
			}
			desc = RAID_PROTECTION_BUILDING_DESC
			add =  -10
		}
		modifier = { # RAID PROTECTION 2
			scope:target.capital_province = { 
				OR= {
					has_building = march_03
					has_building = wonder_aglarond_03_dike
					has_building = wonder_gap_of_khy_fortress_01
				}
			}
			desc = RAID_PROTECTION_BUILDING_DESC
			add = -15
		}
		modifier = { # RAID PROTECTION 3
			scope:target.capital_province = { 
				OR= {
					has_building_or_higher = caravanserai_07
					has_building = elven_citadel_02
					has_building = wonder_city_of_the_dead_01
					has_building = wonder_rammas_echor_02
					has_building = wonder_gap_of_khy_fortress_02
				}
			}
			desc = RAID_PROTECTION_BUILDING_DESC
			add = -20
		}
		modifier = { # RAID PROTECTION 4
			scope:target.capital_province = { 
				OR= {
					has_building = wonder_gap_of_khy_fortress_02
					has_building = wonder_prison_of_artaxshasa
				}
			}
			desc = RAID_PROTECTION_BUILDING_DESC
			add = -60
		}
		modifier = {
			add = 10
			desc = eparch_scheme_bonus_with_value_desc
			scope:owner = { has_court_position = eparch_court_position }
		}
	}
	base_secrecy = {
		add = secrecy_base_value
		add = countermeasure_apply_secrecy_maluses_value
		add = eparch_scheme_secrecy_bonus_value
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		lotr_laamp_5001_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { lotr_laamp_5001_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			lotr_laamp_5001_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }

	## Invalidation
	on_invalidated = {
		scheme_target_character = { save_scope_as = target }
		scheme_owner = {
			save_scope_as = owner
			if = {
				limit = {
					scope:target.capital_province = { has_province_modifier = recently_looted_modifier }
				}
				send_interface_toast = {
					title = scheme_invalidated_title
					type = prowess_contract_scheme_invalidated_message
					left_icon = scope:target
					custom_tooltip = scheme_target_capital_raided
				}
			} else = {
				send_interface_toast = {
					title = scheme_invalidated_title
					type = prowess_contract_scheme_invalidated_message
					left_icon = scope:target
				}
			}
		}
	}
}