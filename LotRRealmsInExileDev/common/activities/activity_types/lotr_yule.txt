activity_yule = {
	is_shown = {
		highest_held_title_tier > tier_barony
		is_landed = yes
		# Triggers WIP
		OR = {
			is_hobbit = yes
			culture = { has_cultural_pillar = heritage_eriadorim }
			culture = { has_cultural_parameter = heritage_group_northmen }
		}
		
		trigger_if = {
			limit = {
				is_ai = yes
			}
			is_at_war = no
			short_term_gold >= RICE_activity_cost
		}	
	}

	can_start = {
		faith = { has_doctrine = tenet_yuletide }
		# Supposed to start early January - # Trig - adjusted to permit between October and Dec (Consider failsafe to allow player to trigger in January (cf yule.0020))
		custom_description = {
			text = lotr_yule_celebration_month_requirement
			# current_month = 1
			current_month >= 10
		}
	}

	can_start_showing_failures_only = {
		is_available_adult = yes
	}

	is_valid = {
		NOT = {
			has_variable = activity_invalidated
		}
		scope:host = {
			is_landed = yes
			NOT = { is_incapable = yes }
		}
	}

	on_invalidated = {
		# Host becomes unlanded
		if = {
			limit = {
				scope:host = { is_landed = no }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			every_attending_character = {
				trigger_event = activity_system.0320
			}
		}
		if = {
			limit = {
				scope:host = { is_incapable = yes }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			scope:host = {
				trigger_event = activity_system.0330
			}
			every_attending_character = {
				limit = { NOT = { this = scope:host } }
				trigger_event = activity_system.0331
			}
		}
	}

	on_host_death = {
		scope:activity = {
			set_variable = {
				name = activity_invalidated
			}
		}
	}

	province_filter = capital
	ai_province_filter = capital
	wait_time_before_start = { days = 7 }

	###################
	# OPTIONS
	###################

	options = {

		#########
		# GIFTS
		#########
		lotr_yule_gift_size_option = {
			lotr_yule_gift_small = {
				default = yes
				ai_will_do = {
					value = 15
					if = {
						limit = {
							short_term_gold <= 100
						}
						add = {
							value = 10
						}
					}
					if = {
						limit = {
							has_trait = greedy
						}
						add = 10
					}
				}
			}
			lotr_yule_gift_medium = {
				cost = { 
					gold = {
						add = {
							value = 0
							desc = lotr_yule_gift_amount
							add = {
								value = minor_gold_value
								desc = lotr_yule_gift_amount
							}
						}
					}
				}			
				ai_will_do = {
					value = 30
					if = {
						limit = {
							short_term_gold <= minor_gold_value
						}
						subtract = {
							value = 30
						}
					}
					if = {
						limit = {
							has_trait = ambitious
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = arrogant
						}
						add = 5
					}
				}
			}
			lotr_yule_gift_large = {
				cost = { 
					gold = {
						add = {
							value = 0
							desc = lotr_yule_gift_amount
							add = {
								value = medium_gold_value
								desc = lotr_yule_gift_amount
							}
						}
					}
				}			
				ai_will_do = {
					value = 15
					if = {
						limit = {
							short_term_gold <= medium_gold_value
						}
						subtract = {
							value = 15
						}
					}
					if = {
						limit = {
							has_trait = ambitious
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = arrogant
						}
						add = 5
					}
				}
			}
		}
	}


	###################
	# PHASES
	###################

	phases = {
		lotr_yule_celebration_phase = {
			is_predefined = yes
			
			on_phase_active = {
				if = {
					limit = {
						this = scope:host
					}
					trigger_event = yule.0020
				}		
			}
			on_end = {
				# Run conclusion stuff here
				# if = {
				# 	limit = { this = scope:host }
				# 	scope:activity = { progress_activity_phase_after = { weeks = 2 } }
				# }
			}
		}
	}

	max_guest_arrival_delay_time = { days = 14 }

	# desc is only shown in debug AI watch window
	ai_will_do = {
		value = 25
		
		if = {
			limit = {
				is_hobbit = yes
			}
			add = 50
		}
		
		if = {
			limit = {
				has_trait = shy
			}
			add = -25
		}

		if = {
			limit = {
				has_trait = gregarious
			}
			add = 25
		}
		
		if = {
			limit = {
				has_trait = greedy
			}
			add = -25
		}
		if = {
			limit = {
				has_trait = generous
			}
			add = 25
		}
		
		#Can you actually afford this?
		if = {
			limit = {
				NOT = { can_make_expensive_purchase_trigger = { PRICE = RICE_activity_cost } }
			}
			add = -50
		}
	}

	ai_check_interval = 60

	ai_will_select_province = {
		value = 10
	}
	
	is_location_valid = {

	}

	max_province_icons = 1
	
	cost = {
		gold = {
			add = {
				value = 0
				add = {
					value = RICE_activity_cost
					desc = hunt_base_cost
				}
			}
		}
	}

	ui_predicted_cost = {
		gold = {
			value = RICE_activity_cost

			# Make it a multiple of 5 (rounded up)
			divide = 5 
			ceiling = yes 
			multiply = 5

			add = { # Gift
				value = 0
				add = minor_gold_value
				add = medium_gold_value
				# Divide by 3 to get the average option cost
				divide = 3
			}

		}
	}
	cooldown = { days = RICE_standard_festival_cooldown_time }
	
	###################
	# ACTIVITY-SPECIFIC PULSES
	###################
	
	pulse_actions = {

	}

	on_start = {

	}

	on_enter_passive_state = {
		
	}

	###################
	# GUEST HANDLING
	###################

	max_guests = 30

	guest_invite_rules = {
		rules = {
			# Relations.
			2 = activity_invite_rule_lovers
			2 = activity_invite_rule_rivals_if_appropriate

			# Family.
			3 = activity_invite_rule_extended_family

			# Misc landless.
			5 = activity_invite_rule_knights

			# MP 
			6 = activity_invite_mp
		}
		defaults = {
			1 = activity_invite_rule_friends
			1 = activity_invite_rule_close_family
			1 = activity_invite_rule_confederates
			3 = activity_invite_rule_courtiers
			4 = activity_invite_rule_guests
			1 = activity_invite_spouses
		}
	}

	can_be_activity_guest = {
		is_adult = yes
		is_available = yes
		in_diplomatic_range = scope:host
		is_landed = no
	}

	host_intents = {
		intents = { lotr_yule_festive_intent lotr_yule_generosity_intent lotr_yule_devotion_intent }
		default = lotr_yule_festive_intent
	}

	guest_intents = {
		intents = { lotr_yule_festive_intent }
		default = lotr_yule_festive_intent
	}

	guest_join_chance = {
		base = 10
		base_activity_modifier = yes

		# Scripted Modifiers
		activity_guest_shared_ai_accept_modifier = yes
	}
	
	on_complete = {
		# if = {
		# 	limit = { this = scope:host }
		# 	#create_character_memory = {
		# 	#	type = RICE_polabian_drowning_marzanna_host_memory
		# 	#}
		# 	scope:host = {
		# 		lotr_yule_completed_log_entry_effect = yes
		# 	}
		# }
		# else = {			
		# 	create_character_memory = {
		# 		type = RICE_polabian_drowning_marzanna_guest_memory
		# 		participants = {
		# 			host = scope:host
		# 		}
		# 	}
		# }
	}

	### Graphics
	# map_entity = {
	# 	trigger = {
	# 		activity_location.culture = {
	# 			OR = {
	# 				has_graphical_mena_culture_group_trigger = yes
	# 				has_graphical_steppe_culture_group_trigger = yes
	# 				has_graphical_african_culture_group_trigger = yes
	# 			}
	# 		}
	# 	}
	# 	reference = "building_mena_feast_01_entity"
	# }

	# map_entity = {
	# 	trigger = {
	# 		activity_location.culture = {
	# 			has_graphical_india_culture_group_trigger = yes
	# 		}
	# 	}
	# 	reference = "building_indian_feast_01_entity"
	# }
	
	# map_entity = "building_western_feast_01_entity"

	# Travel
	# background = {
	# 	trigger = {
	# 		NOT = { scope:host.location = scope:activity.activity_location }
	# 	}
	# 	texture = "gfx/interface/illustrations/event_scenes/RICE_polish_river.dds"
	# 	environment = "environment_event_garden"
	# 	ambience = "event:/SFX/Events/Backgrounds/castle_garden_day"
	# }


	# Different locations BACKGROUNDS WIP

	background = {
		trigger = {
			scope:host.location = {
				geographical_region = middleearth_forodwaith
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/throneroom_forodwaith.dds"
		environment = "environment_event_steppe"
		ambience = "event:/SFX/Events/Backgrounds/steppe_day"
	}
	background = {
		trigger = {
			scope:host.location = {
				geographical_region = middleearth_harad
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_wedding_ceremony_mena.dds"
		environment = "environment_event_garden"
		ambience = "event:/SFX/Events/Backgrounds/townmarket_western_day"
	}
	background = {
		trigger = {
			scope:host.location = {
				OR = {
					is_hobbit = yes
					culture = { has_cultural_pillar = heritage_eriadorim } #Bree
				}
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/market_hobbit.dds"
		environment = "environment_event_garden"
		ambience = "event:/SFX/Events/Backgrounds/townmarket_western_day"
	}
	background = {
		trigger = {
			scope:host.location = {
				is_dwarf = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/market_dwarven.dds"
		environment = "environment_event_garden"
		ambience = "event:/SFX/Events/Backgrounds/townmarket_western_day"
	}
	background = {
		trigger = {
			scope:host.location = {
				is_elf = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/elven_town.dds"
		environment = "environment_event_garden"
		ambience = "event:/SFX/Events/Backgrounds/townmarket_western_day"
	}
	background = {
		trigger = {
			scope:host.location = {				
				culture = { has_cultural_pillar = heritage_dunedain }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/market_dunedain.dds"
		environment = "environment_event_garden"
		ambience = "event:/SFX/Events/Backgrounds/townmarket_western_day"
	}
	# Fallback
	background = {
		texture = "gfx/interface/illustrations/event_scenes/market_tribal.dds"
		environment = "environment_event_garden"
		ambience = "event:/SFX/Events/Backgrounds/townmarket_western_day"
	}


	window_characters = {

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = personality_greedy
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = toast_goblet
			}
		}
		
		host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = happiness
			}
		}
		
		travel_host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = idle
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = drink_goblet
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = personality_content
			}
		}
	}
}
