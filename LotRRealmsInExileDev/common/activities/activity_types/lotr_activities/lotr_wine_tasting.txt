activity_lotr_wine_tasting = { # Adapted from RICE Group Munya Vacation
	is_shown = {
		highest_held_title_tier > tier_barony
		is_landed = yes
		OR = {
			culture = { has_cultural_tradition = tradition_dorwinion_vineyards }
		}
		#capital_province = {
		#	geographical_region = world_europe_west_iberia
		#}
		trigger_if = {
			limit = {
				is_ai = yes
			}
			is_at_war = no
			short_term_gold >= lotr_wine_tasting_cost_value
		}
		# LOTR
		NOT = {
			cannot_be_killed = yes
			is_in_valinor = yes
		}
	}

	can_start = {
		OR = {
			culture = { has_cultural_tradition = tradition_dorwinion_vineyards }
		}
		#NOT = { has_character_modifier = lotr_wine_tasting_vacationed_at_a_vineyard }
	}

	can_start_showing_failures_only = {
		is_available_adult = yes
	}

	is_valid = {
		NOT = {
			has_variable = activity_invalidated
		}
		scope:host = {
			is_landed = yes
			NOT = { is_incapable = yes }
		}
		# If no one shows up
		trigger_if = {
			limit = {
				is_current_phase_active = yes
			}
			has_attending_activity_guests = yes
		}
	}

	on_invalidated = {
		# Host becomes unlanded
		if = {
			limit = {
				scope:host = { is_landed = no }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			every_attending_character = {
				trigger_event = activity_system.0320
			}
		}
		if = {
			limit = {
				scope:host = { is_incapable = yes }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			scope:host = {
				trigger_event = activity_system.0330
			}
			every_attending_character = {
				limit = { NOT = { this = scope:host } }
				trigger_event = activity_system.0331
			}
		}
		if = { # No one shows up
			limit = {
				has_attending_activity_guests = no
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
				activity_location = { save_scope_as = location }
			}
			scope:host = { trigger_event = activity_system.0100 }
		}
	}

	on_host_death = {
		scope:activity = {
			set_variable = {
				name = activity_invalidated
			}
		}
	}

	province_filter = realm
	ai_province_filter = realm

	province_description = {
		#Does this have an empty holding?
		triggered_desc = {
			trigger = {
				has_holding = no
			}
			desc = lotr_wine_tasting_countryside_province_desc
		}
		triggered_desc = {
			trigger = { has_building_or_higher = leisure_palace_01 }
			desc = activity_feast_province_desc_leisure_palace
		}
		# ++ / double plus good
		triggered_desc = {
			trigger = { has_building_or_higher = farm_estates_01 }
			desc = activity_feast_province_desc_farm_estates
		}
		# + / plus good
		triggered_desc = {
			trigger = { has_building_or_higher = orchards_01 }
			desc = activity_feast_province_desc_orchards
		}
		triggered_desc = {
			trigger = { has_building_or_higher = cereal_fields_01 }
			desc = activity_feast_province_desc_cereal_fields
		}
		triggered_desc = {
			trigger = { has_building_or_higher = plantations_01 }
			desc = activity_feast_province_desc_plantations
		}
	}

	
	wait_time_before_start = { days = 7 }

	###################
	# OPTIONS
	###################

	special_option_category = special_type

	options = {
		#########
		# TYPE OF VACATION
		#########
		special_type = {
			lotr_wine_tasting_type_party = {
				default = yes	
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = gregarious
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = gluttonous
						}
						add = 5
					}
				}
			}
			lotr_wine_tasting_type_gardens = {
				is_valid = {
					culture = { has_cultural_tradition = tradition_dorwinion_vineyards }
				}		
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = calm
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = lazy
						}
						add = 5
					}
				}
			}
			lotr_wine_tasting_type_poetry = {
				is_valid = {
					culture = { has_cultural_tradition = tradition_dorwinion_vineyards }
				}		
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = ambitious
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = humble
						}
						add = 5
					}
				}
			}
		}
		#########
		# LENGTH
		#########
		lotr_wine_tasting_length = {
			lotr_wine_tasting_length_short = {
				default = yes	
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = diligent
						}
						add = 10
					}
				}
			}
			lotr_wine_tasting_length_medium = {	
				cost = { 
					gold = {
						add = {
							value = 0
							desc = lotr_visit_vineyard_length_desc
							add = {
								value = 25
								desc = lotr_visit_vineyard_length_desc
							}
						}
					}
				}	
				ai_will_do = {
					value = 10
					if = {
						limit = {
							short_term_gold <= 25
						}
						subtract = {
							value = 10
						}
					}
				}
			}
			lotr_wine_tasting_length_long = {	
				cost = { 
					gold = {
						add = {
							value = 0
							desc = lotr_visit_vineyard_length_desc
							add = {
								value = 50
								desc = lotr_visit_vineyard_length_desc
							}
						}
					}
				}	
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = lazy
						}
						add = 10
					}					
					if = {
						limit = {
							short_term_gold <= 50
						}
						subtract = {
							value = 10
						}
					}
				}
			}
		}

	}

	###################
	# PHASES
	###################

	phases = {
		lotr_wine_tasting_group_vacation_phase = {
			is_predefined = yes
			
			on_phase_active = {

				###########################################################
				#
				# Trigger the appropriate intro event
				#
				###########################################################

				if = {
					limit = {
						this = scope:host
					}
					trigger_event = wine_tasting.0070
				}

			}

			on_end = {
				# Run conclusion stuff here
				# if = {
				# 	limit = { this = scope:host }
				# 	scope:activity = { progress_activity_phase_after = { weeks = 2 } }
				# }
			}
		}
	}

	max_guest_arrival_delay_time = { months = 1 }

	# desc is only shown in debug AI watch window
	ai_will_do = {
		value = 50
		
		# Do I like wine?
		if = {
			limit = {
				has_trait = temperate
			}
			add = -15
		}
		if = {
			limit = {
				has_trait = gluttonous
			}
			add = 15
		}

		# Do you like People?
		if = {
			limit = {
				has_trait = shy
			}
			add = -30
		}
		if = {
			limit = {
				has_trait = gregarious
			}
			add = 30
		}
		
		#Can you actually afford this?
		if = {
			limit = {
				NOT = { can_make_expensive_purchase_trigger = { PRICE = lotr_wine_tasting_cost_value } }
			}
			add = -50
		}
	}

	ai_check_interval = 60

	ai_will_select_province = {
		value = 10
		add = {
			value = scope:score # Derived from province_score
			multiply = 5
		}
		if = {
			limit = {
				this = scope:host.capital_province
			}
			add = {
				value = 20
				desc = "Capital Province preferred"
			}
		}
	}
	
	# Anywhere
	is_location_valid = {

	}

	max_province_icons = 3

	province_score = {
		add = 0
		if = {
			limit = {
				has_holding = no
			}
			add = 50
		}
		# Capital
		if = {
			limit = {
				this = scope:host.capital_province
			}
			add = 50
		}
		if = {
			limit = { has_building_or_higher = leisure_palace_01 }
			add = 50
		}
		# Double good / ++
		if = {
			limit = { has_building_or_higher = farm_estates_01 }
			add = 25
		}
		# Good / +
		if = {
			limit = { has_building_or_higher = orchards_01 }
			add = 10
		}
		if = {
			limit = { has_building_or_higher = cereal_fields_01 }
			add = 10
		}
		if = {
			limit = { has_building_or_higher = plantations_01 }
			add = 10
		}
	}
	
	cost = {
		gold = {
			add = {
				value = 0
				add = {
					value = lotr_wine_tasting_cost_value
					desc = hunt_base_cost
				}
				if = {
					limit = {
						scope:province ?= { has_building_or_higher = leisure_palace_01 }
					}
					add = {
						value = 0
						add = {
							value = feast_activity_cost
							add = {
								value = feast_activity_cost
								multiply = activity_cost_scale_by_era
								subtract = feast_activity_cost
							}
						}
						multiply = feast_activity_cost_discount_max_value
						desc = feast_cost_discount_leisure_palaces
					}
				}
				if = {
					limit = { 
						scope:province ?= {
							has_building_or_higher = farm_estates_01
						}
					}
					add = {
						value = 0
						add = {
							value = feast_activity_cost
							add = {
								value = feast_activity_cost
								multiply = activity_cost_scale_by_era
								subtract = feast_activity_cost
							}
						}
						multiply = feast_activity_cost_discount_medium_value
						desc = feast_cost_discount_farm_estates
					}
				}
				if = {
					limit = {
						scope:province ?= {	has_building_or_higher = orchards_01 }
					}
					add = {
						value = 0
						add = {
							value = feast_activity_cost
							add = {
								value = feast_activity_cost
								multiply = activity_cost_scale_by_era
								subtract = feast_activity_cost
							}
						}
						multiply = feast_activity_cost_discount_min_value
						desc = feast_cost_discount_orchards
					}
				}
				if = {
					limit = {
						scope:province ?= {	has_building_or_higher = cereal_fields_01 }
					}
					add = {
						value = 0
						add = {
							value = feast_activity_cost
							add = {
								value = feast_activity_cost
								multiply = activity_cost_scale_by_era
								subtract = feast_activity_cost
							}
						}
						multiply = feast_activity_cost_discount_min_value
						desc = feast_cost_discount_cereal_fields
					}
				}
				if = {
					limit = {
						scope:province ?= {	has_building_or_higher = plantations_01	}
					}
					add = {
						value = 0
						add = {
							value = feast_activity_cost
							add = {
								value = feast_activity_cost
								multiply = activity_cost_scale_by_era
								subtract = feast_activity_cost
							}
						}
						multiply = feast_activity_cost_discount_min_value
						desc = activity_feast_province_desc_plantations
					}
				}
			}
		}
	}

	ui_predicted_cost = {
		gold = {
			value = lotr_wine_tasting_cost_value

			add = { # Vacation length
				value = 0
				add = 25
				add = 50
				# Divide by 3 to get the average option cost
				divide = 3
			}

			# Make it a multiple of 5 (rounded up)
			divide = 5 
			ceiling = yes 
			multiply = 5

		}
	}
	cooldown = { days = 3650 }
	
	###################
	# ACTIVITY-SPECIFIC PULSES
	###################
	
	pulse_actions = {

	}

	on_start = {		
		# if = {
		# 	limit = {
		# 		this = scope:host
		# 	}
		# 	# Trigger the appropriate hot springs event
		# 	if = {
		# 		limit = {
		# 			has_trait = shy
		# 		}
		# 		trigger_event = RICEmisc.8888
		# 	}
		# 	else = {
		# 		trigger_event = RICEmisc.8888
		# 	}
		# }
	}

	# Once you arrive at the springs, trigger the relevant event(s)
	on_leave_travel_state = {
	}

	on_enter_passive_state = {

	}

	###################
	# GUEST HANDLING
	###################
	
	#allow_zero_guest_invites = yes

	max_guests = 20

	guest_invite_rules = {
		rules = {
			# Relations.
			2 = activity_invite_rule_lovers
			2 = activity_invite_rule_rivals_if_appropriate

			# Family.
			3 = activity_invite_rule_extended_family

			# Magnates.
			4 = activity_invite_neighbouring_rulers

			# Misc landless.
			5 = activity_invite_rule_knights

			# MP 
			6 = activity_invite_mp
		}
		defaults = {
			1 = activity_invite_rule_friends
			1 = activity_invite_rule_close_family
			1 = activity_invite_rule_liege
			1 = activity_invite_rule_vassals
			2 = activity_invite_rule_fellow_vassals
			3 = activity_invite_rule_courtiers
			4 = activity_invite_rule_guests
			1 = activity_invite_spouses
		}
	}

	can_be_activity_guest = {
		is_adult = yes
		is_available = yes
		in_diplomatic_range = scope:host
		lotr_can_be_activity_guest = yes
	}


	host_intents = {
		intents = { lotr_wine_tasting_merriment_intent lotr_wine_tasting_reputation_intent }
		default = lotr_wine_tasting_merriment_intent
	}

	guest_intents = {
		intents = { lotr_wine_tasting_merriment_intent lotr_wine_tasting_reputation_intent }
		default = lotr_wine_tasting_merriment_intent
	}

	guest_join_chance = {
		base = 0
		base_activity_modifier = yes

		# Scripted Modifiers
		activity_guest_shared_ai_accept_modifier = yes
	}
	
	on_complete = {
		# if = {
		# 	limit = { this = scope:host }
		# 	create_character_memory = {
		# 		type = lotr_wine_tasting_host_memory
		# 	}
		# 	#scope:host = {
		# 	#	lotr_wine_tasting_completed_log_entry_effect = yes
		# 	#}
		# }
		# else = {			
		# 	create_character_memory = {
		# 		type = lotr_wine_tasting_guest_memory
		# 		participants = {
		# 			host = scope:host
		# 		}
		# 	}
		# }
	}
	
	
	# Travel
	background = { # Bridge
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				is_riverside_province = yes
				geographical_region = world_europe
				OR = {
					terrain = farmlands
					terrain = plains
					terrain = mountains
					terrain = hills
				}
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_bridge.dds"
		environment = "environment_travel_bridge"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	
	background = { # Farmland, settled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				terrain = farmlands
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_farm.dds"
		environment = "environment_travel_farmlands"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { # Farmland, unsettled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				terrain = farmlands
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/farms.dds"
		environment = "environment_event_farms"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #Desert, settled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_desert_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_desert.dds"
		environment = "environment_travel_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}
	background = { #Desert, unsettled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_desert_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/desert.dds"
		environment = "environment_event_bp1_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}

	background = { #forest snowy
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location ?= { hunt_snowy_forest_trigger = yes }
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_hunt_snowy_forest.dds"
		environment = "environment_hunt_snowy_forest"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}

	background = { #forest_pine
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_forest_pine_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/forest_pine.dds"
		environment = "environment_event_forest_pine"
		ambience = "event:/SFX/Events/Backgrounds/coniferous_forest_day"
	}

	background = { #forest
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_forest_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/forest.dds"
		environment = "environment_event_forest"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #mountains, settled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_mountains_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_mountains.dds"
		environment = "environment_travel_mountain_settlement"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	background = { #mountains, unsettled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_mountains_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/mountains.dds"
		environment = "environment_event_mountains"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}

	background = { #steppe, settled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_steppe_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_steppe.dds"
		environment = "environment_travel_steppe_settlement"
		ambience = "event:/SFX/Events/Backgrounds/steppe_day"
	}
	background = { #steppe, unsettled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_steppe_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/steppe.dds"
		environment = "environment_event_steppe"
		ambience = "event:/SFX/Events/Backgrounds/steppe_day"
	}

	background = { #drylands (formerly desert)
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_drylands_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/drylands.dds"
		environment = "environment_event_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}

	background = { #wetlands
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_wetlands_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_wetlands.dds"
		environment = "environment_event_bp1_wetlands" 
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #jungle
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_jungle_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_jungle.dds"
		environment = "environment_event_bp1_jungle"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #plains, settled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_plains_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_hills.dds"
		environment = "environment_travel_hills_settlement"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { #plains, unsettled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_plains_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_plains.dds"
		environment = "environment_event_bp1_plains"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #hills, settled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_hills_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_hills.dds"
		environment = "environment_travel_hills_settlement"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { #hills, unsettled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_hills_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_hills.dds"
		environment = "environment_event_bp1_hills"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #sea
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				is_sea_province = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/fp1_ocean.dds"
		environment = "environment_event_fp1_ocean"
		ambience = "event:/DLC/FP1/SFX/Events/event_ocean_longship"
	}
	
	# End Travel
	background = {
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
		}
		texture = "gfx/interface/illustrations/event_scenes/RICE_andalusian_countryside.dds"
		environment = "environment_event_farms"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	# Fallback
	background = {
		texture = "gfx/interface/illustrations/event_scenes/RICE_granada_alhambra_exterior.dds"
		environment = "environment_event_garden"
		ambience = "event:/SFX/Events/Backgrounds/castle_garden_day"
	}


	window_characters = {

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = admiration
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = personality_content
			}
		}
		
		host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = happiness
			}
		}
		
		travel_host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = personality_greedy
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = reading
			}
		}
	}
}

