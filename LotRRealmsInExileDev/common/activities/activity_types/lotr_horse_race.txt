activity_lotr_horse_race = {# Adapted from RICE Palio Races
	is_shown = {
		highest_held_title_tier > tier_barony
		is_landed = yes
		OR = {
			culture = { has_cultural_tradition = tradition_horse_breeder }
		}
		#capital_province = {
		#	geographical_region = world_europe_west_iberia
		#}	
		trigger_if = {
			limit = {
				is_ai = yes
			}
			is_at_war = no
			short_term_gold >= lotr_visit_vineyard_cost_value
		}
		# LOTR
		NOT = {
			cannot_be_killed = yes
			is_in_valinor = yes
		}
	}

	can_start = {
		OR = {
			culture = { has_cultural_tradition = tradition_horse_breeder }
		}
		#NOT = { has_character_modifier = lotr_wine_tasting_vacationed_at_a_vineyard }
	}

	can_start_showing_failures_only = {
		is_available_adult = yes
	}

	on_invalidated = {
		scope:activity = {
			every_attending_character = {
				limit = {
					has_variable = lotr_horse_race_participation
				}
				remove_variable = lotr_horse_race_participation
			}	
			every_attending_character = {
				limit = {
					has_variable = lotr_horse_race_winner
				}
				remove_variable = lotr_horse_race_winner
			}	
			if = {
				limit = {
					has_variable = lotr_horse_race_county_type
				}
				remove_variable = lotr_horse_race_county_type
			}	
		}
		# Host becomes unlanded
		if = {
			limit = {
				scope:host = { is_landed = no }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			every_attending_character = {
				trigger_event = activity_system.0320
			}
		}
		if = {
			limit = {
				scope:host = { is_incapable = yes }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			scope:host = {
				trigger_event = activity_system.0330
			}
			every_attending_character = {
				limit = { NOT = { this = scope:host } }
				trigger_event = activity_system.0331
			}
		}
		if = { # No one shows up
			limit = {
				has_attending_activity_guests = no
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
				activity_location = { save_scope_as = location }
			}
			scope:host = { trigger_event = activity_system.0100 }
		}
	}

	on_host_death = {		
		scope:activity = {
			every_attending_character = {
				limit = {
					has_variable = lotr_horse_race_participation
				}
				remove_variable = lotr_horse_race_participation
			}	
			every_attending_character = {
				limit = {
					has_variable = lotr_horse_race_winner
				}
				remove_variable = lotr_horse_race_winner
			}	
			if = {
				limit = {
					has_variable = lotr_horse_race_county_type
				}
				remove_variable = lotr_horse_race_county_type
			}	
			set_variable = {
				name = activity_invalidated
			}
		}
	}
	wait_time_before_start = { days = 14 }

	###################
	# OPTIONS
	###################

	special_option_category = special_type

	options = {
		#########
		# TYPE OF PALIO
		#########
		special_type = {
			lotr_horse_race_religious = {
				default = yes
				ai_will_do = {
					value = 15
					if = {
						limit = {
							has_trait = zealous
						}
						add = 10
					}
				}
			}
			lotr_horse_race_civic = {
				ai_will_do = {
					value = 5
					if = {
						limit = {
							has_trait = generous
						}
						add = 10
					}
					if = {
						limit = {
							has_trait = diligent
						}
						add = 10
					}
				}
			}
			lotr_horse_race_dynastic = {
				ai_will_do = {
					value = 5
					if = {
						limit = {
							has_trait = ambitious
						}
						add = 10
					}
					if = {
						limit = {
							has_trait = arrogant
						}
						add = 10
					}
				}
			}
		}

		#########
		# SIZE OF CHAMPION'S BANNER
		#########
		lotr_horse_race_champions_banner_type = {
			lotr_horse_race_champions_banner_small = {
				default = yes
				ai_will_do = {
					value = 15
					if = {
						limit = {
							short_term_gold <= 100
						}
						add = {
							value = 10
						}
					}
					if = {
						limit = {
							has_trait = greedy
						}
						add = 10
					}
				}
			}
			lotr_horse_race_champions_banner_medium = {
				cost = { 
					gold = {
						add = {
							value = 0
							desc = lotr_horse_race_champions_banner_amount
							add = {
								value = minor_gold_value
								desc = lotr_horse_race_champions_banner_amount
							}
						}
					}
				}			
				ai_will_do = {
					value = 30
					if = {
						limit = {
							short_term_gold <= minor_gold_value
						}
						subtract = {
							value = 30
						}
					}
					if = {
						limit = {
							has_trait = ambitious
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = arrogant
						}
						add = 5
					}
				}
			}
			lotr_horse_race_champions_banner_large = {
				cost = { 
					gold = {
						add = {
							value = 0
							desc = lotr_horse_race_champions_banner_amount
							add = {
								value = medium_gold_value
								desc = lotr_horse_race_champions_banner_amount
							}
						}
					}
				}			
				ai_will_do = {
					value = 15
					if = {
						limit = {
							short_term_gold <= medium_gold_value
						}
						subtract = {
							value = 15
						}
					}
					if = {
						limit = {
							has_trait = ambitious
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = arrogant
						}
						add = 5
					}
				}
			}
		}
		
		#########
		# RACE CHARITY
		#########
		lotr_horse_race_charity_type = {
			lotr_horse_race_charity_small = {
				default = yes
				ai_will_do = {
					value = 20
					if = {
						limit = {
							has_trait = greedy
						}
						add = 10
					}
				}
			}
			lotr_horse_race_charity_medium = {
				cost = { 
					gold = {
						add = {
							value = 0
							desc = lotr_horse_race_charity_amount
							add = {
								value = minor_gold_value
								desc = lotr_horse_race_charity_amount
							}
						}
					}
				}			
				ai_will_do = {
					value = 30
					if = {
						limit = {
							short_term_gold <= minor_gold_value
						}
						subtract = {
							value = 30
						}
					}
					if = {
						limit = {
							has_trait = compassionate
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = just
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = generous
						}
						add = 5
					}
				}
			}
			lotr_horse_race_charity_large = {
				cost = { 
					gold = {
						add = {
							value = 0
							desc = lotr_horse_race_charity_amount
							add = {
								value = medium_gold_value
								desc = lotr_horse_race_charity_amount
							}
						}
					}
				}			
				ai_will_do = {
					value = 10
					if = {
						limit = {
							short_term_gold <= medium_gold_value
						}
						subtract = {
							value = 10
						}
					}
					if = {
						limit = {
							has_trait = compassionate
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = just
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = generous
						}
						add = 5
					}
				}
			}
		}
		
		#########
		# RACE PARTICIPATION
		#########
		lotr_horse_race_preparations_type = {
			lotr_horse_race_preparations_none = {
				ai_will_do = {
					value = 20
					if = {
						limit = {
							has_trait = greedy
						}
						add = 10
					}
				}
			}
			lotr_horse_race_preparations_basic = {
				default = yes
				cost = { 
					gold = {
						add = {
							value = 0
							desc = lotr_horse_race_preparations_amount
							add = {
								value = minor_gold_value
								desc = lotr_horse_race_preparations_amount
							}
						}
					}
				}			
				ai_will_do = {
					value = 30
					if = {
						limit = {
							short_term_gold <= minor_gold_value
						}
						subtract = {
							value = 30
						}
					}
					if = {
						limit = {
							has_trait = compassionate
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = just
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = generous
						}
						add = 5
					}
				}
			}
			lotr_horse_race_preparations_extensive = {
				cost = { 
					gold = {
						add = {
							value = 0
							desc = lotr_horse_race_preparations_amount
							add = {
								value = medium_gold_value
								desc = lotr_horse_race_preparations_amount
							}
						}
					}
				}			
				ai_will_do = {
					value = 10
					if = {
						limit = {
							short_term_gold <= medium_gold_value
						}
						subtract = {
							value = 10
						}
					}
					if = {
						limit = {
							has_trait = compassionate
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = just
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = generous
						}
						add = 5
					}
				}
			}
		}

	}

	###################
	# PHASES
	###################

	phases = {
		lotr_horse_race_banner_phase = {
			is_predefined = yes
			
			on_phase_active = {
				if = {
					limit = {
						this = scope:host
					}
					trigger_event = lotr_horse_race.0022
				}	
			}
			on_weekly_pulse = {
			# Fires for every attendee	
			trigger_event = { on_action = horse_race_ongoing_event_pulse }

			}

			on_end = {
				# Run conclusion stuff here
				# if = {
				# 	limit = { this = scope:host }
				# 	scope:activity = { progress_activity_phase_after = { weeks = 2 } }
				# }
			}
		}
	}

	max_guest_arrival_delay_time = { months = 3 }

	# desc is only shown in debug AI watch window
	ai_will_do = {
		value = 50
		
		if = {
			limit = {
				has_trait = shy
			}
			add = -10
		}
		if = {
			limit = {
				has_trait = gregarious
			}
			add = 10
		}
		
		if = {
			limit = {
				has_trait = lazy
			}
			add = -10
		}
		if = {
			limit = {
				has_trait = ambitious
			}
			add = 10
		}
		
		#Can you actually afford this?
		if = {
			limit = {
				NOT = { can_make_expensive_purchase_trigger = { PRICE = lotr_visit_vineyard_cost_value } }
			}
			add = -50
		}
	}

	ai_check_interval = 60

	ai_will_select_province = {
		value = 10
		# Capital
		if = {
			limit = {
				this = scope:host.capital_province
			}
			add = {
				value = 30
				desc = "Capital Province preferred"
			}
		}
		#if = {
		#	limit = {
		#		this.county = {
		#			RICE_has_major_palio_trigger = yes
		#		}
		#	}
		#	add = {
		#		value = 30
		#		desc = "Home to a famous Palio tradition"
		#	}
		#}
		# if = {
		# 	limit = { "scope:host.capital_province.squared_distance(root)" <= squared_distance_small }
		# 	add = {
		# 		value = 10
		# 		desc = "super close"
		# 	}
		# }
	}
	
	is_location_valid = {
		has_holding = yes
	}

	province_filter = domain
	ai_province_filter = domain

	province_description = {
		# Major Palio traditions
		triggered_desc = {
			trigger = {				
				this.county = {
					has_county_modifier = lotr_horse_race_religious_modifier
				}
			}
			desc = lotr_horse_race_religious_province_desc
		}
		triggered_desc = {
			trigger = {				
				this.county = {
					has_county_modifier = lotr_horse_race_civic_modifier
				}
			}
			desc = lotr_horse_race_civic_province_desc
		}
		triggered_desc = {
			trigger = {				
				this.county = {
					has_county_modifier = lotr_horse_race_dynastic_modifier
				}
			}
			desc = lotr_horse_race_dynastic_province_desc
		}
	}

	max_province_icons = 3

	province_score = {
		add = 0
		# Capital
		if = {
			limit = {
				this = scope:host.capital_province
			}
			add = 50
		}
		# Major Palio
		#if = {
		#	limit = {				
		#		this.county = {
		#			RICE_has_major_palio_trigger = yes
		#		}
		#	}
		#	add = 50
		#}
		# Flavor
		add = {
			value = county.development_level
			divide = 4
		}
	}
	
	cost = {
		gold = {
			add = {
				value = 0
				add = {
					value = lotr_visit_vineyard_cost_value
					desc = hunt_base_cost
				}
				if = { #PLACEHOLDER BUILDING THAT REDUCEDS PRICE; ADJUST LATER
					limit = { 
						scope:province ?= {
							has_building_or_higher = farm_estates_01
						}
					}
					add = {
						value = 0
						add = {
							value = feast_activity_cost
							add = {
								value = feast_activity_cost
								multiply = activity_cost_scale_by_era
								subtract = feast_activity_cost
							}
						}
						multiply = feast_activity_cost_discount_medium_value
						desc = feast_cost_discount_farm_estates
					}
				}
			}
		}
	}

	ui_predicted_cost = {
		gold = {
			value = lotr_visit_vineyard_cost_value

			add = { # Banner
				value = 0
				add = minor_gold_value
				add = medium_gold_value
				# Divide by 3 to get the average option cost
				divide = 3
			}
			
			add = { # Charity
				value = 0
				add = 50
				add = 100
				# Divide by 3 to get the average option cost
				divide = 3
			}
			
			add = { # Preparations
				value = 0
				add = minor_gold_value
				add = medium_gold_value
				# Divide by 3 to get the average option cost
				divide = 3
			}

			# Make it a multiple of 5 (rounded up)
			divide = 5 
			ceiling = yes 
			multiply = 5
		}
	}
	cooldown = { days = 3650 }
	
	###################
	# ACTIVITY-SPECIFIC PULSES
	###################
	
	pulse_actions = {
		
	}

	on_start = {
		if = {
			limit = {
				scope:activity = {
					has_activity_option = { 
						category = lotr_horse_race_preparations_type
						option = lotr_horse_race_preparations_none
					}
				}
			}
			scope:host = {
				set_variable = {
					name = lotr_horse_race_participation
					value = flag:none
					days = 200 # Failsafe in case it doesn't get removed at the end
				}
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					has_activity_option = { 
						category = lotr_horse_race_preparations_type
						option = lotr_horse_race_preparations_basic
					}
				}
			}
			scope:host = {
				set_variable = {
					name = lotr_horse_race_participation
					value = flag:basic
					days = 200 # Failsafe in case it doesn't get removed at the end
				}
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					has_activity_option = { 
						category = lotr_horse_race_preparations_type
						option = lotr_horse_race_preparations_extensive
					}
				}
			}
			scope:host = {
				set_variable = {
					name = lotr_horse_race_participation
					value = flag:extensive
					days = 200 # Failsafe in case it doesn't get removed at the end
				}
			}
		}
	}

	on_enter_passive_state = {
		# Decide to participate or not if you are a house head, and not the house or in the same house as the host
		if = {
			limit = {
				is_house_head = yes
				NOT = { this = scope:host }
				NOT = {
					this.house ?= scope:host.house
				}
				NOT = { has_variable = lotr_horse_race_participation }
			}
			trigger_event = lotr_horse_race.0021 #### ADJUST
		}
	}

	###################
	# GUEST HANDLING
	###################

	max_guests = 50

	guest_invite_rules = {
		rules = {
			# Relations.
			2 = activity_invite_rule_lovers
			2 = activity_invite_rule_rivals_if_appropriate

			# Family.
			3 = activity_invite_rule_extended_family

			# Magnates.
			4 = activity_invite_neighbouring_rulers

			# Misc landless.
			5 = activity_invite_rule_knights

			# MP 
			6 = activity_invite_mp
		}
		defaults = {
			1 = activity_invite_rule_friends
			1 = activity_invite_rule_close_family
			1 = activity_invite_rule_liege
			1 = activity_invite_rule_vassals
			2 = activity_invite_rule_fellow_vassals
			2 = activity_invite_neighbouring_rulers
			2 = activity_invite_rule_all_lieges
			3 = activity_invite_rule_courtiers
			2 = activity_invite_rule_guests
			1 = activity_invite_spouses
		}
	}

	can_be_activity_guest = {
		is_adult = yes
		is_available = yes
		in_diplomatic_range = scope:host
		is_landed = no
		lotr_can_be_activity_guest = yes
	}

	host_intents = {
		intents = { lotr_horse_race_fun_intent lotr_horse_race_networking_intent lotr_horse_race_veneration_intent lotr_horse_race_pomp_intent }
		default = lotr_horse_race_fun_intent
	}

	guest_intents = {
		intents = { lotr_horse_race_fun_intent lotr_horse_race_networking_intent lotr_horse_race_veneration_intent }
		default = lotr_horse_race_fun_intent
	}

	guest_join_chance = {
		base = 10
		base_activity_modifier = yes

		# Scripted Modifiers
		activity_guest_shared_ai_accept_modifier = yes
	}
	
	on_complete = {
		
		scope:activity = {
			every_attending_character = {
				limit = {
					has_variable = lotr_horse_race_participation
				}
				remove_variable = lotr_horse_race_participation
			}	
			every_attending_character = {
				limit = {
					has_variable = lotr_horse_race_winner
				}
				remove_variable = lotr_horse_race_winner
			}	
			if = {
				limit = {
					has_variable = lotr_horse_race_county_type
				}
				remove_variable = lotr_horse_race_county_type
			}	
		}
		# if = {
		# 	limit = {
		# 		has_variable = lotr_horse_race_participation
		# 	}
		# 	remove_variable = lotr_horse_race_participation
		# }	
		# if = {
		# 	limit = {
		# 		has_variable = lotr_horse_race_winner
		# 	}
		# 	remove_variable = lotr_horse_race_winner
		# }	
		#if = {
			#limit = { this = scope:host }
			#create_character_memory = {
			#	type = lotr_horse_race_host_memory
			#}
			#scope:host = {
			#	lotr_horse_race_completed_log_entry_effect = yes
			#}
		#}
		# else = {			
		# 	create_character_memory = {
		# 		type = lotr_horse_race_guest_memory
		# 		participants = {
		# 			host = scope:host
		# 		}
		# 	}
		# }
	}

	### Graphics
	# map_entity = {
	# 	trigger = {
	# 		activity_location.culture = {
	# 			OR = {
	# 				has_graphical_mena_culture_group_trigger = yes
	# 				has_graphical_steppe_culture_group_trigger = yes
	# 				has_graphical_african_culture_group_trigger = yes
	# 			}
	# 		}
	# 	}
	# 	reference = "building_mena_feast_01_entity"
	# }

	# map_entity = {
	# 	trigger = {
	# 		activity_location.culture = {
	# 			has_graphical_india_culture_group_trigger = yes
	# 		}
	# 	}
	# 	reference = "building_indian_feast_01_entity"
	# }
	
	# map_entity = "building_western_feast_01_entity"

	###################
	# GRAPHICS
	###################

	# Travel
	background = { # Bridge
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				is_riverside_province = yes
				geographical_region = world_europe
				OR = {
					terrain = farmlands
					terrain = plains
					terrain = mountains
					terrain = hills
				}
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_bridge.dds"
		environment = "environment_travel_bridge"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	
	background = { # Farmland, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				terrain = farmlands
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_farm.dds"
		environment = "environment_travel_farmlands"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { # Farmland, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				terrain = farmlands
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/farms.dds"
		environment = "environment_event_farms"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #Desert, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_desert_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_desert.dds"
		environment = "environment_travel_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}
	background = { #Desert, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_desert_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/desert.dds"
		environment = "environment_event_bp1_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}

	background = { #forest snowy
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location ?= { hunt_snowy_forest_trigger = yes }
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_hunt_snowy_forest.dds"
		environment = "environment_hunt_snowy_forest"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}

	background = { #forest_pine
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_forest_pine_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/forest_pine.dds"
		environment = "environment_event_forest_pine"
		ambience = "event:/SFX/Events/Backgrounds/coniferous_forest_day"
	}

	background = { #forest
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_forest_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/forest.dds"
		environment = "environment_event_forest"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #mountains, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_mountains_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_mountains.dds"
		environment = "environment_travel_mountain_settlement"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	background = { #mountains, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_mountains_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/mountains.dds"
		environment = "environment_event_mountains"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}

	background = { #steppe, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_steppe_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_steppe.dds"
		environment = "environment_travel_steppe_settlement"
		ambience = "event:/SFX/Events/Backgrounds/steppe_day"
	}
	background = { #steppe, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_steppe_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/steppe.dds"
		environment = "environment_event_steppe"
		ambience = "event:/SFX/Events/Backgrounds/steppe_day"
	}

	background = { #drylands (formerly desert)
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_drylands_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/drylands.dds"
		environment = "environment_event_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}

	background = { #wetlands
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_wetlands_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_wetlands.dds"
		environment = "environment_event_bp1_wetlands" 
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #jungle
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_jungle_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_jungle.dds"
		environment = "environment_event_bp1_jungle"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #plains, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_plains_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_hills.dds"
		environment = "environment_travel_hills_settlement"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { #plains, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_plains_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_plains.dds"
		environment = "environment_event_bp1_plains"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #hills, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_hills_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_hills.dds"
		environment = "environment_travel_hills_settlement"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { #hills, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_hills_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_hills.dds"
		environment = "environment_event_bp1_hills"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #sea
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				is_sea_province = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/fp1_ocean.dds"
		environment = "environment_event_fp1_ocean"
		ambience = "event:/DLC/FP1/SFX/Events/event_ocean_longship"
	}

	#Fallback
	background = {
		texture = "gfx/interface/illustrations/event_scenes/alley_day.dds"
		environment = "environment_event_alley_day"
		ambience = "event:/SFX/Events/Backgrounds/city_alley_day_western"
	}



	window_characters = {

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = throne_room_applaud_1
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = throne_room_cheer_1
			}
		}
		
		host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = personality_content
			}
		}
		
		travel_host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = throne_room_applaud_1
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = throne_room_cheer_1
			}
		}
	}
}
