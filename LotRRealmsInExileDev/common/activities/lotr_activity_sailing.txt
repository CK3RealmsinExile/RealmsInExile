

#Things to use in hunt-events:
	#Variables "good_hunt" and "bad_hunt" to affect the outcome of the hunt
	#The list "potential_hunt_participants" for good ai-characters to use in events

	activity_sailing = {
		expiration_days = 100
		solo = yes
		color = { 0.253906 0.867188 0.105469 1 }

		on_spawn = {
			invite_character_to_activity = activity_owner
			accept_invitation_for_character = activity_owner
	
			#Save scopes
			activity_owner = {
				if = {
					limit = {
						any_courtier_or_guest = {
							is_available_healthy_ai_adult = yes
						}
					}
					random_courtier = { #To make it more likely that the list EXISTS so that no errors are generated when checking for the size
						limit = {
							is_available_healthy_ai_adult = yes
						}
						scope:activity = {
							add_to_variable_list = {
								name = potential_sailing_participants
								target = prev
							}
						}
					}
					every_courtier_or_guest = {
						limit = {
							is_available_healthy_ai_adult = yes
							OR = {
								is_heir_of = scope:activity.activity_owner
								has_relation_rival = scope:activity.activity_owner
								has_relation_lover = scope:activity.activity_owner
								has_relation_friend = scope:activity.activity_owner
							}
							scope:activity = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_sailing_participants
										target = prev
									}
								}
							}
						}
						scope:activity = {
							add_to_variable_list = {
								name = potential_sailing_participants
								target = prev
							}
						}
					}
				}
				if = {
					limit = {
						any_vassal = {
							is_available_healthy_ai_adult = yes
							is_of_major_interest_trigger = {
								CHARACTER = scope:activity.activity_owner
							}
							scope:activity = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_sailing_participants
										target = prev
									}
								}
							}
						}
					}
					every_vassal = {
						limit = {
							is_available_healthy_ai_adult = yes
							is_of_major_interest_trigger = {
								CHARACTER = scope:activity.activity_owner
							}
							scope:activity = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_sailing_participants
										target = prev
									}
								}
							}
						}
						scope:activity = {
							add_to_variable_list = {
								name = potential_sailing_participants
								target = prev
							}
						}
					}
				}
				if = {
					limit = {
						scope:activity = {
							OR = {
								NOT = {
									any_in_list = {
										variable = potential_sailing_participants
										exists = this
									}
								}
								variable_list_size = {
									name = potential_sailing_participants
									value <= sailing_participants
								}
							}
						}
						any_vassal = {
							is_available_healthy_ai_adult = yes
							scope:activity = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_sailing_participants
										target = prev
									}
								}
							}
						}
					}
					every_vassal = {
						limit = {
							is_available_healthy_ai_adult = yes
							is_of_minor_interest_trigger = {
								CHARACTER = scope:activity.activity_owner
							}
							scope:activity = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_sailing_participants
										target = prev
									}
								}
							}
						}
						alternative_limit = {
							is_available_healthy_ai_adult = yes
							scope:activity = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_sailing_participants
										target = prev
									}
								}
							}
						}
						scope:activity = {
							add_to_variable_list = {
								name = potential_sailing_participants
								target = prev
							}
						}
					}
				}
				if = {
					limit = {
						scope:activity = {
							OR = {
								NOT = {
									any_in_list = {
										variable = potential_sailing_participants
										exists = this
									}
								}
								variable_list_size = {
									name = potential_sailing_participants
									value <= sailing_participants
								}
							}
						}
						any_courtier = {
							is_available_healthy_ai_adult = yes
							scope:activity = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_sailing_participants
										target = prev
									}
								}
							}
						}
					}
					while = {
						limit = {
							scope:activity = {
								variable_list_size = {
									name = potential_sailing_participants
									value <= sailing_participants
								}
							}
							any_courtier = {
								is_available_healthy_ai_adult = yes
								scope:activity = {
									NOT = {
										is_target_in_variable_list = {
											name = potential_sailing_participants
											target = prev
										}
									}
								}
							}
						}
						random_courtier = {
							limit = {
								is_available_healthy_ai_adult = yes
								scope:activity = {
									NOT = {
										is_target_in_variable_list = {
											name = potential_sailing_participants
											target = prev
										}
									}
								}
							}
							scope:activity = {
								add_to_variable_list = {
									name = potential_sailing_participants
									target = prev
								}
							}
						}
					}
				}
			}
			scope:activity = {
				activity_province = {
					save_scope_as = sailing_province
				}
			}
		}
		on_activate = {
			activity_owner = {
				#trigger_event = {
				#	on_action = sailing_random_pulse
				#	days = { 10 20 }
				#}
				if = {
					limit = { owns_a_boat = no }
					trigger_event = sailing.1001
				}
				else_if = {
					limit = { owns_a_damaged_boat = yes }
					trigger_event = sailing.1004
				}
				else = {
					trigger_event = {
						on_action = sailing_dockyard_events
					}
				}
			}
		}
		on_complete = {
			activity_owner = {
				# remove_variable = sailing_outcome
				# remove_variable = local_animal
				# remove_character_flag = mariner_1
				# remove_character_flag = mariner_2
				# remove_character_flag = mariner_3
	
				target_weight_modifier_effect = {
					VALUE = sailing_weight_modifier_value
				}
			}
			every_in_list = {
				variable = potential_sailing_participants
				limit = {
					is_alive = yes
				}
				target_weight_modifier_effect = {
					VALUE = sailing_weight_modifier_value
				}
			}
		}
		on_expire = {
	
		}
	}