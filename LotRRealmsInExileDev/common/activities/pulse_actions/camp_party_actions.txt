#Activity Pulse Actions for Camp Parties
#Re-uses and re-purposes some existing APAs from feasts and the like 

apa_bonded_by_fire = {
	icon = social
	is_valid = {
		is_current_phase_active = yes
		any_attending_character = {
			count > 1
			is_adult = yes
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_bonded_by_fire
			}
			multiply = 0.1
		}
	}

	effect = {
		set_variable = {
			name = apa_bonded_by_fire
			value = yes
		}
		random_attending_character = {
			limit = {
				is_adult = yes
			}
			save_scope_as = first
		}

		random_attending_character = {
			limit = {
				is_adult = yes
			}
			save_scope_as = second
		}

		add_activity_log_entry = {
			key = apa_bonded_by_fire
			tags = { pulse_action }
			character = scope:first
			target = scope:second
			
			scope:first = {
				add_stress = minor_stress_loss
				add_opinion = {
					target = scope:second
					modifier = friendliness_opinion
					opinion = 15
				}
			}

			scope:second = {
				add_stress = minor_stress_loss
				add_opinion = {
					target = scope:first
					modifier = friendliness_opinion
					opinion = 15
				}				
			}

			scope:activity = { activity_special_type_progression_variable = { NUM = 10 } }
			custom_tooltip = camp_party_tt_positive_medium
		}
	}
}

apa_taught_repair = {
	icon = learning
	is_valid = {
		is_current_phase_active = yes
		any_attending_character = {
			count > 2
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_taught_repair
			}
			multiply = 0.1
		}
	}

	effect = {
		set_variable = {
			name = apa_taught_repair
			value = yes
		}

		random_attending_character = {
			save_scope_as = first
		}
		random_attending_character = {
			limit = {
				NOT = {
					this = scope:first
				}
			}
			save_scope_as = second
		}

		add_activity_log_entry = {
			key = apa_taught_repair
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:first = {
				add_stress = miniscule_stress_loss
				bp2_lifestyle_xp_gain_per_type_effect = { VALUE = minor }
			}

			scope:second = {
				bp2_lifestyle_xp_gain_per_type_effect = { VALUE = medium }
			}
		}
	}
}

apa_revelry_hangover_camp = {
	icon = stress
	is_valid = {
		is_current_phase_active = yes
		OR = {
			has_activity_option = {
				category = camp_party_option_drinks
				option = camp_party_drinks_adequate
			}
			has_activity_option = {
				category = camp_party_option_drinks
				option = camp_party_drinks_abundant
			}
		}
		any_attending_character = {
			drinks_alcohol_trigger = yes
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_revelry_hangover_camp
			}
			multiply = 0.1
		}
	}

	effect = {
		set_variable = {
			name = apa_revelry_hangover_camp
			value = yes
		}

		random_attending_character = {
			limit = {
				drinks_alcohol_trigger = yes
			}
			save_scope_as = first
		}

		add_activity_log_entry = {
			key = apa_revelry_hangover
			tags = { pulse_action }
			character = scope:first
	
			scope:first = {
				add_character_modifier = {
					modifier = legend_hangover_modifier
					years = 1
				}
			}	
		}
	}
}

apa_local_food_camp = {
	icon = social
	is_valid = {
		is_current_phase_active = yes
		any_attending_character = {
			NOT = {
				culture = location.culture
				culture = scope:activity.activity_host.culture
			}
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_local_food_camp
			}
			multiply = 0.1
		}
	}

	effect = {
		set_variable = {
			name = apa_local_food_camp
			value = yes
		}

		random_attending_character = {
			limit = {
				NOT = {
					culture = location.culture
					culture = scope:activity.activity_host.culture
				}
			}
			save_scope_as = first
		}

		add_activity_log_entry = {
			key = apa_local_food
			tags = { pulse_action }
			character = scope:first

			scope:activity = { activity_special_type_progression_variable = { NUM = 10 } }
			custom_tooltip = camp_party_tt_positive_medium

			every_attending_character = {
				limit = {
					NOR = {
						this = scope:first
						is_ai = no
					}
				}
				add_opinion = {
					target = scope:first
					modifier = shared_delicacy_opinion
					opinion = 5
				}
			}
		}
	}
}

apa_lauded_food_camp = {
	icon = stress
	is_valid = {
		is_current_phase_active = yes
		OR = {
			has_activity_option = {
				category = camp_party_option_food
				option = camp_party_food_simple
			}
			has_activity_option = {
				category = camp_party_option_food
				option = camp_party_food_lavish
			}
		}
		any_attending_character = {
			NOT = { this = scope:host }
			is_physically_able_ai_adult = yes
			OR = {
				likes_character_trigger = { CHARACTER = scope:host }
				loves_food_trigger = yes
			}
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_lauded_food_camp
			}
			multiply = 0.1
		}
	}

	effect = {
		set_variable = {
			name = apa_lauded_food_camp
			value = yes
		}

		random_attending_character = {
			limit = {
				NOT = { this = scope:host }
				is_physically_able_ai_adult = yes
				OR = {
					likes_character_trigger = { CHARACTER = scope:host }
					loves_food_trigger = yes
				}
			}
			save_scope_as = first
		}

		scope:host = {
			save_scope_as = root_scope
		}

		add_activity_log_entry = {
			key = lauded_food
			tags = { pulse_action }
			character = scope:first
			
			scope:host = {
				add_prestige = minor_prestige_gain
			}
			scope:first = {
				add_opinion = {
					modifier = impressed_opinion
					target = scope:host
					opinion = 5
				}
			}
		}
	}
}

apa_guest_of_honor_impressed = {
	icon = public
	is_valid = {
		is_current_phase_active = yes
		exists = special_guest:camp_party_honorary_guest
		
		special_guest:camp_party_honorary_guest = {
			is_alive = yes
			NOR = {
				has_trait = inappetetic
				has_trait = temperate
			}
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = camp_party_option_food
						option = camp_party_food_simple
					}
				}
			}
			add = 0.5
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = camp_party_option_food
						option = camp_party_food_lavish
					}
				}
			}
			add = 1
		}
		if = {
			limit = {
				has_variable = apa_guest_of_honor_impressed
			}	
			multiply = 0.1
		}
	}

	effect = {
		set_variable = {
			name = apa_guest_of_honor_impressed
			value = yes
		}

		scope:host = {
			save_scope_as = root_scope
		}
		
		special_guest:camp_party_honorary_guest = {
			save_scope_as = first
		}

		add_activity_log_entry = {
			key = guest_of_honor_impressed
			tags = { pulse_action }
			character = scope:first
			
			scope:host = {
				add_stress = minor_stress_loss
			}

			scope:activity = { activity_special_type_progression_variable = { NUM = 10 } }
			custom_tooltip = camp_party_tt_positive_medium
		
			scope:first = {
				add_opinion = {
					modifier = tasty_food_opinion
					target = scope:host
					opinion = 25
				}
			}
		}
	}
}

apa_camp_host_gifted = {
	is_valid = {
		scope:host = {
			is_alive = yes
		}
		any_attending_character = {
			is_ai = yes
			gold > 4
			opinion = {
				target = scope:host
				value >= low_positive_opinion
			}
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_camp_host_gifted
			}
			multiply = 0.1
		}
	}

	effect = {
		set_variable = {
			name = apa_camp_host_gifted
			value = yes
		}
		scope:host = {
			save_scope_as = first
		}
		random_attending_character = {
			limit = {
				is_ai = yes
				gold > 4
				opinion = {
					target = scope:host
					value >= low_positive_opinion
				}
			}
			save_scope_as = second
		}

		add_activity_log_entry = {
			key = apa_camp_host_gifted
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:second = {
				generate_trinket_effect = {
					TRINKET_RECEIVER = scope:first
					TRINKET_GIVER = scope:second
					GRAB_ALL_TRINKETS = yes
					HISTORY_TYPE = given
				}
			}
		}
	}
}

apa_cultural_acceptance = {
	icon = stewardship
	
	is_valid = {
		is_current_phase_active = yes
		any_attending_character = {
			is_physically_able_ai_adult = yes
			save_temporary_scope_as = attendee_1
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			NOT = {
				culture = scope:attendee_1.culture
			}
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_cultural_acceptance
			}
			multiply = 0.1
		}
	}

	effect = {
		set_variable = {
			name = apa_cultural_acceptance
			value = yes
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
			}
			save_scope_as = first
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				NOT = {
					culture = scope:first.culture
				}
			}
			save_scope_as = second
		}

		add_activity_log_entry = {
			key = apa_cultural_acceptance
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:activity = { activity_special_type_progression_variable = { NUM = 5 } }
			custom_tooltip = camp_party_tt_positive_tiny
			
			scope:first.culture = {
				change_cultural_acceptance = {
					target = scope:second.culture
					value = miniscule_positive_culture_acceptance
					desc = cultural_acceptance_gain_apa
				}
			}
		}
	}
}

apa_fireside_chat_shared_stories_martial = {
	#somebody teaches somebody else a skill, +2 temp modifier
	icon = martial

	is_valid = {
		is_current_phase_active = yes
		scope:activity.activity_host = {
			has_activity_intent = fireside_chat_intent
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			martial > 10
			save_temporary_scope_as = attendee_1
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			NOT = {
				this = scope:attendee_1
				has_character_modifier = ep3_fireside_chat_martial
				calc_true_if = { #you cannot catch'em all
					amount = 2
					has_character_modifier = ep3_fireside_chat_diplomacy
					has_character_modifier = ep3_fireside_chat_learning
					has_character_modifier = ep3_fireside_chat_intrigue
					has_character_modifier = ep3_fireside_chat_stewardship
				}
			}
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_fireside_chat_martial
			}
			multiply = 0.5
		}
	}

	effect = {
		set_variable = {
			name = apa_fireside_chat_martial
			value = yes
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				martial > 10
				save_temporary_scope_as = first_temp
				root = {
					any_attending_character = {
						is_physically_able_ai_adult = yes
						NOT = {
							this = scope:first_temp
							has_character_modifier = ep3_fireside_chat_martial
							calc_true_if = { #you cannot catch'em all
								amount = 2
								has_character_modifier = ep3_fireside_chat_diplomacy
								has_character_modifier = ep3_fireside_chat_learning
								has_character_modifier = ep3_fireside_chat_intrigue
								has_character_modifier = ep3_fireside_chat_stewardship
							}
						}
						save_temporary_scope_as = second_temp
					}
				}
			}
			save_scope_as = first
			scope:second_temp = { save_scope_as = second }
		}

		add_activity_log_entry = {
			key = apa_fireside_chat_shared_stories_martial
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:activity = { activity_special_type_progression_variable = { NUM = 5 } }
			custom_tooltip = camp_party_tt_positive_tiny

			scope:second = {
				add_character_modifier = {
					modifier = ep3_fireside_chat_martial
					years = 4
				}
			}
		}
	}
}

apa_fireside_chat_shared_stories_learning = {
	#somebody teaches somebody else a skill, +2 temp modifier
	icon = learning

	is_valid = {
		is_current_phase_active = yes
		scope:activity.activity_host = {
			has_activity_intent = fireside_chat_intent
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			learning > 10
			save_temporary_scope_as = attendee_1
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			NOT = {
				this = scope:attendee_1
				has_character_modifier = ep3_fireside_chat_learning
				calc_true_if = { #you cannot catch'em all
					amount = 2
					has_character_modifier = ep3_fireside_chat_diplomacy
					has_character_modifier = ep3_fireside_chat_martial
					has_character_modifier = ep3_fireside_chat_intrigue
					has_character_modifier = ep3_fireside_chat_stewardship
				}
			}
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_fireside_chat_learning
			}
			multiply = 0.5
		}
	}

	effect = {
		set_variable = {
			name = apa_fireside_chat_learning
			value = yes
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				learning > 10
				save_temporary_scope_as = first_temp
				root = {
					any_attending_character = {
						is_physically_able_ai_adult = yes
						NOT = {
							this = scope:first_temp
							has_character_modifier = ep3_fireside_chat_learning
							calc_true_if = { #you cannot catch'em all
								amount = 2
								has_character_modifier = ep3_fireside_chat_diplomacy
								has_character_modifier = ep3_fireside_chat_martial
								has_character_modifier = ep3_fireside_chat_intrigue
								has_character_modifier = ep3_fireside_chat_stewardship
							}
						}
						save_temporary_scope_as = second_temp
					}
				}
			}
			save_scope_as = first
			scope:second_temp = { save_scope_as = second }
		}

		add_activity_log_entry = {
			key = apa_fireside_chat_shared_stories_learning
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:activity = { activity_special_type_progression_variable = { NUM = 5 } }
			custom_tooltip = camp_party_tt_positive_tiny

			scope:second = {
				add_character_modifier = {
					modifier = ep3_fireside_chat_learning
					years = 4
				}
			}
		}
	}
}

apa_fireside_chat_shared_stories_diplomacy = {
	#somebody teaches somebody else a skill, +2 temp modifier
	icon = diplomacy

	is_valid = {
		is_current_phase_active = yes
		scope:activity.activity_host = {
			has_activity_intent = fireside_chat_intent
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			diplomacy > 10
			save_temporary_scope_as = attendee_1
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			NOT = {
				this = scope:attendee_1
				has_character_modifier = ep3_fireside_chat_diplomacy
				calc_true_if = { #you cannot catch'em all
					amount = 2
					has_character_modifier = ep3_fireside_chat_learning
					has_character_modifier = ep3_fireside_chat_martial
					has_character_modifier = ep3_fireside_chat_intrigue
					has_character_modifier = ep3_fireside_chat_stewardship
				}
			}
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_fireside_chat_diplomacy
			}
			multiply = 0.5
		}
	}

	effect = {
		set_variable = {
			name = apa_fireside_chat_diplomacy
			value = yes
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				diplomacy > 10
				save_temporary_scope_as = first_temp
				root = {
					any_attending_character = {
						is_physically_able_ai_adult = yes
						NOT = {
							this = scope:first_temp
							has_character_modifier = ep3_fireside_chat_diplomacy
							calc_true_if = { #you cannot catch'em all
								amount = 2
								has_character_modifier = ep3_fireside_chat_martial
								has_character_modifier = ep3_fireside_chat_learning
								has_character_modifier = ep3_fireside_chat_intrigue
								has_character_modifier = ep3_fireside_chat_stewardship
							}
						}
						save_temporary_scope_as = second_temp
					}
				}
			}
			save_scope_as = first
			scope:second_temp = { save_scope_as = second }
		}

		add_activity_log_entry = {
			key = apa_fireside_chat_shared_stories_diplomacy
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:activity = { activity_special_type_progression_variable = { NUM = 5 } }
			custom_tooltip = camp_party_tt_positive_tiny

			scope:second = {
				add_character_modifier = {
					modifier = ep3_fireside_chat_diplomacy
					years = 4
				}
			}
		}
	}
}

apa_fireside_chat_shared_stories_stewardship = {
	#somebody teaches somebody else a skill, +2 temp modifier
	icon = learning

	is_valid = {
		is_current_phase_active = yes
		scope:activity.activity_host = {
			has_activity_intent = fireside_chat_intent
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			stewardship > 10
			save_temporary_scope_as = attendee_1
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			NOT = {
				this = scope:attendee_1
				has_character_modifier = ep3_fireside_chat_stewardship
				calc_true_if = { #you cannot catch'em all
					amount = 2
					has_character_modifier = ep3_fireside_chat_diplomacy
					has_character_modifier = ep3_fireside_chat_martial
					has_character_modifier = ep3_fireside_chat_intrigue
					has_character_modifier = ep3_fireside_chat_learning
				}
			}
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_fireside_chat_stewardship
			}
			multiply = 0.5
		}
	}

	effect = {
		set_variable = {
			name = apa_fireside_chat_stewardship
			value = yes
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				stewardship > 10
				save_temporary_scope_as = first_temp
				root = {
					any_attending_character = {
						is_physically_able_ai_adult = yes
						NOT = {
							this = scope:first_temp
							has_character_modifier = ep3_fireside_chat_stewardship
							calc_true_if = { #you cannot catch'em all
								amount = 2
								has_character_modifier = ep3_fireside_chat_martial
								has_character_modifier = ep3_fireside_chat_learning
								has_character_modifier = ep3_fireside_chat_intrigue
								has_character_modifier = ep3_fireside_chat_diplomacy
							}
						}
						save_temporary_scope_as = second_temp
					}
				}
			}
			save_scope_as = first
			scope:second_temp = { save_scope_as = second }
		}

		add_activity_log_entry = {
			key = apa_fireside_chat_shared_stories_stewardship
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:activity = { activity_special_type_progression_variable = { NUM = 5 } }
			custom_tooltip = camp_party_tt_positive_tiny

			scope:second = {
				add_character_modifier = {
					modifier = ep3_fireside_chat_stewardship
					years = 4
				}
			}
		}
	}
}

apa_fireside_chat_shared_stories_intrigue = {
	#somebody teaches somebody else a skill, +2 temp modifier
	icon = intrigue

	is_valid = {
		is_current_phase_active = yes
		scope:activity.activity_host = {
			has_activity_intent = fireside_chat_intent
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			intrigue > 10
			save_temporary_scope_as = attendee_1
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			NOT = {
				this = scope:attendee_1
				has_character_modifier = ep3_fireside_chat_intrigue
				calc_true_if = { #you cannot catch'em all
					amount = 2
					has_character_modifier = ep3_fireside_chat_diplomacy
					has_character_modifier = ep3_fireside_chat_martial
					has_character_modifier = ep3_fireside_chat_learning
					has_character_modifier = ep3_fireside_chat_stewardship
				}
			}
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_fireside_chat_intrigue
			}
			multiply = 0.5
		}
	}

	effect = {
		set_variable = {
			name = apa_fireside_chat_intrigue
			value = yes
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				intrigue > 10
				save_temporary_scope_as = first_temp
				root = {
					any_attending_character = {
						is_physically_able_ai_adult = yes
						NOT = {
							this = scope:first_temp
							has_character_modifier = ep3_fireside_chat_intrigue
							calc_true_if = { #you cannot catch'em all
								amount = 2
								has_character_modifier = ep3_fireside_chat_martial
								has_character_modifier = ep3_fireside_chat_learning
								has_character_modifier = ep3_fireside_chat_stewardship
								has_character_modifier = ep3_fireside_chat_diplomacy
							}
						}
						save_temporary_scope_as = second_temp
					}
				}
			}
			save_scope_as = first
			scope:second_temp = { save_scope_as = second }
		}

		add_activity_log_entry = {
			key = apa_fireside_chat_shared_stories_intrigue
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:activity = { activity_special_type_progression_variable = { NUM = 5 } }
			custom_tooltip = camp_party_tt_positive_tiny

			scope:first = {
				add_gold = 1
			}

			scope:second = {
				remove_short_term_gold = 1
				add_character_modifier = {
					modifier = ep3_fireside_chat_intrigue
					years = 4
				}
			}
		}
	}
}

apa_fireside_chat_shared_drinks = {
	#lets get revelin'
	icon = lifestyle_reveler

	is_valid = {
		is_current_phase_active = yes
		scope:activity.activity_host = {
			has_activity_intent = fireside_chat_intent
		}
		any_attending_character = {
			count >= 2
			is_physically_able_ai_adult = yes
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_fireside_chat_drinks
			}
			multiply = 0.2
		}
	}

	effect = {
		set_variable = {
			name = apa_fireside_chat_drinks
			value = yes
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
			}
			save_scope_as = first
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				NOT = { this = scope:first }
			}
			save_scope_as = second
		}
		add_activity_log_entry = {
			key = apa_fireside_chat_shared_drinks
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:activity = { activity_special_type_progression_variable = { NUM = 10 } }
			custom_tooltip = camp_party_tt_positive_medium
			
			scope:second = {
				if = {
					limit = {
						has_trait = lifestyle_reveler
					}
					add_trait_xp = {
						trait = lifestyle_reveler
						value = {
							integer_range = {
								min = small_lifestyle_random_xp_low
								max = small_lifestyle_random_xp_high
							}
						}
					}
				}
				else = {
					add_trait = lifestyle_reveler
				}
			}

			scope:first = {
				if = {
					limit = {
						has_trait = lifestyle_reveler
					}
					add_trait_xp = {
						trait = lifestyle_reveler
						value = {
							integer_range = {
								min = small_lifestyle_random_xp_low
								max = small_lifestyle_random_xp_high
							}
						}
					}
				}
				else = {
					add_trait = lifestyle_reveler
				}
			}
		}
	}
}

apa_fireside_chat_inspiring_speech = {
	#mainly activity progresser
	icon = prestige

	is_valid = {
		is_current_phase_active = yes
		scope:activity.activity_host = {
			has_activity_intent = fireside_chat_intent
		}
		any_attending_character = {
			count >= 2
			is_physically_able_ai_adult = yes
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_fireside_chat_speech
			}
			multiply = 0.2
		}
	}

	effect = {
		set_variable = {
			name = apa_fireside_chat_speech
			value = yes
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
			}
			save_scope_as = first
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				NOT = { this = scope:first }
			}
			save_scope_as = second
		}
		add_activity_log_entry = {
			key = apa_fireside_chat_inspiring_speech
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:activity = { activity_special_type_progression_variable = { NUM = 10 } }
			custom_tooltip = camp_party_tt_positive_medium

			scope:first = {
				add_prestige = minor_prestige_gain
			}			
		}
	}
}

apa_camp_party_sad_lonesome = {
	#youse alone and you dont like it
	icon = stress_negative

	is_valid = {
		NOT = {
			has_variable = apa_lonesome
		}
		is_current_phase_active = yes
		any_attending_character = {
			count = 0
			NOT = {
				this = scope:activity.activity_host
			}
		}
		scope:activity.activity_host ?= {
			NOT = {
				has_character_modifier = ep3_camp_party_sad_lonesome
				has_trait = shy
				has_trait = paranoid
			}
		}
	}

	weight = 1

	effect = {
		set_variable = {
			name = apa_lonesome
			value = yes
		}
		add_activity_log_entry = {
			key = apa_camp_party_sad_lonesome
			tags = { pulse_action }
			character = scope:activity.activity_host

			scope:activity.activity_host = {
				add_character_modifier = {
					modifier = ep3_camp_party_sad_lonesome
					years = 6
				}
				add_stress = medium_stress_impact_gain
			}
		}
	}
}

apa_camp_party_shadows_in_the_dark = {
	#youse alone and it makes you scared

	icon = stress_neutral

	is_valid = {
		NOT = {
			has_variable = apa_lonesome
		}
		is_current_phase_active = yes
		any_attending_character = {
			count <= 1
			NOT = {
				this = scope:activity.activity_host
			}
		}
		scope:activity.activity_host ?= {
			NOT = {
				has_character_modifier = ep3_camp_party_shadows_in_the_dark
				has_trait = shy
				has_trait = brave
			}
		}
	}

	weight = 1

	effect = {
		set_variable = {
			name = apa_lonesome
			value = yes
		}
		add_activity_log_entry = {
			key = apa_camp_party_shadows_in_the_dark
			tags = { pulse_action }
			character = scope:activity.activity_host

			scope:activity.activity_host = {
				add_character_modifier = {
					modifier = ep3_camp_party_shadows_in_the_dark
					years = 6
				}
			}
		}
	}
}

apa_camp_party_fortress_of_solitude = {
	#youse alone and you like it

	icon = stress_positive

	is_valid = {
		NOT = {
			has_variable = apa_lonesome
		}
		is_current_phase_active = yes
		any_attending_character = {
			count = 0
			NOT = {
				this = scope:activity.activity_host
			}
		}
		scope:activity.activity_host ?= {
			NOT = {
				has_character_modifier = camp_party_fortress_of_solitude
			}
			OR = {
				has_trait = shy
				has_trait = paranoid
			}
		}
	}

	weight = 1

	effect = {
		set_variable = {
			name = apa_lonesome
			value = yes
		}
		add_activity_log_entry = {
			key = apa_camp_party_fortress_of_solitude
			tags = { pulse_action }
			character = scope:activity.activity_host

			scope:activity.activity_host = {
				add_character_modifier = {
					modifier = camp_party_fortress_of_solitude
					years = 6
				}
				add_stress = medium_stress_impact_loss
			}
		}
	}
}

apa_camp_party_lecture = {
	#scholars purpose, nerds get nerdier, smol perma learning gain

	icon = martial

	is_valid = {
		is_current_phase_active = yes
		scope:activity.activity_host = {
			has_realm_law = camp_purpose_scholars
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			learning > 12
			save_temporary_scope_as = attendee_1
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			NOT = { this = scope:attendee_1 }
			martial < scope:attendee_1.learning
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_camp_party_lecture
			}
			multiply = 0.4
		}
	}

	effect = {
		set_variable = {
			name = apa_camp_party_lecture
			value = yes
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				learning > 12
				save_temporary_scope_as = first_temp
				root = {
					any_attending_character = {
						is_physically_able_ai_adult = yes
						NOT = {
							this = scope:first_temp
						}
						learning < scope:first_temp.learning
						save_temporary_scope_as = second_temp
					}
				}
			}
			save_scope_as = first
			scope:second_temp = { save_scope_as = second }
		}
		
		add_activity_log_entry = {
			key = apa_camp_party_lecture
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:activity = { activity_special_type_progression_variable = { NUM = 5 } }
			custom_tooltip = camp_party_tt_positive_tiny
			
			scope:second = {
				add_learning_skill = 1
			}
		}
	}
}

apa_camp_party_tales_of_distant_lands = {
	#explorers talk wild stories, smol traveler xp increase

	icon = learning

	is_valid = {
		is_current_phase_active = yes
		scope:activity.activity_host = {
			OR = {
				has_realm_law = camp_purpose_explorers
				has_realm_law = camp_purpose_rangers
			}
		}	
		any_attending_character = {
			is_physically_able_ai_adult = yes
			has_trait = lifestyle_traveler
			save_temporary_scope_as = attendee_1
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			NOT = { this = scope:attendee_1 }
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_camp_party_distant_lands
			}
			multiply = 0.4
		}
	}

	effect = {
		set_variable = {
			name = apa_camp_party_distant_lands
			value = yes
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				has_trait = lifestyle_traveler
			}
			save_scope_as = first
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				NOT = { this = scope:first }
			}
			save_scope_as = second
		}
		add_activity_log_entry = {
			key = apa_camp_party_tales_of_distant_lands
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:activity = { activity_special_type_progression_variable = { NUM = 5 } }
			custom_tooltip = camp_party_tt_positive_tiny
			
			scope:second = {
				if = {
					limit = {
						has_trait = lifestyle_traveler
					}
					add_trait_xp = {
						trait = lifestyle_traveler
						track = travel
						value = {
							integer_range = {
								min = small_lifestyle_random_xp_low
								max = small_lifestyle_random_xp_high
							}
						}
					}
				}
				else = {
					add_trait = lifestyle_traveler
				}
			}

			scope:first = {
				add_trait_xp = {
					trait = lifestyle_traveler
					track = travel
					value = {
						integer_range = {
							min = small_lifestyle_random_xp_low
							max = small_lifestyle_random_xp_high
						}
					}
				}
			}
		}
	}
}

apa_camp_party_tales_of_war = {
	#freeboters or swords for hire talk manure about best ways to stabbity stab someone, smol perma martial gain

	icon = martial

	is_valid = {
		is_current_phase_active = yes
		scope:activity.activity_host = {
			OR = {
				has_realm_law = camp_purpose_brigands
				has_realm_law = camp_purpose_mercenaries
			}
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			martial > 12
			save_temporary_scope_as = attendee_1
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			NOT = { this = scope:attendee_1 }
			martial < scope:attendee_1.martial
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_camp_party_tales_of_war
			}
			multiply = 0.4
		}
	}

	effect = {
		set_variable = {
			name = apa_camp_party_tales_of_war
			value = yes
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				martial > 12
				save_temporary_scope_as = first_temp
				root = {
					any_attending_character = {
						NOT = {
							this = scope:first_temp
						}
						is_physically_able_ai_adult = yes
						martial < scope:first_temp.martial
						save_temporary_scope_as = second_temp
					}
				}
			}
			save_scope_as = first
			scope:second_temp = { save_scope_as = second }
		}
		add_activity_log_entry = {
			key = apa_camp_party_tales_of_war
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:activity = { activity_special_type_progression_variable = { NUM = 5 } }
			custom_tooltip = camp_party_tt_positive_tiny
			
			scope:second = {
				add_martial_skill = 1 
			}
		}
	}
}

apa_camp_party_tales_of_lands_lost = {
	#legitimist get angery, smol dynasty renown gain if of the same dynasty
	icon = dynasty #check

	is_valid = {
		is_current_phase_active = yes
		scope:activity.activity_host = {
			has_realm_law = camp_purpose_legitimists
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			dynasty = scope:activity.activity_host.dynasty
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_camp_party_lands_lost
			}
			multiply = 0.4
		}
	}

	effect = {
		set_variable = {
			name = apa_camp_party_lands_lost
			value = yes
		}
		scope:activity.activity_host = {
			save_scope_as = first
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				NOT = { this = scope:activity.activity_host }
				dynasty = scope:activity.activity_host.dynasty
			}
			save_scope_as = second
		}
		add_activity_log_entry = {
			key = apa_camp_party_tales_of_lands_lost
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:activity = { activity_special_type_progression_variable = { NUM = 5 } }
			custom_tooltip = camp_party_tt_positive_tiny
			
			scope:activity.activity_host = {
				dynasty = {
					add_dynasty_prestige = minor_dynasty_prestige_gain
				}
				if = {
					limit = {
						any_claim = {
							exists = holder
							tier >= tier_kingdom
							any_de_jure_county = {
								NOT = {
									any_claimant = {
										this = scope:activity.activity_host
									}
								}
							}
						}
					}
					random_claim = {
						limit = {
							exists = holder
							tier >= tier_kingdom
						}
						random_de_jure_county = {
							limit = {
								NOT = {
									any_claimant = {
										this = scope:activity.activity_host
									}
								}
							}
							scope:activity.activity_host = {
								add_unpressed_claim = prev
							}
							
						}
					}
				}
			}
		}
	}
}

apa_camp_party_blademaster_sparring = {
	#random char gets higher blademaster, another gets the trait
	icon = prowess

	is_valid = {
		is_current_phase_active = yes
		any_attending_character = {
			is_physically_able_ai_adult = yes
			has_trait = lifestyle_blademaster
			save_temporary_scope_as = attendee_1
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			NOT = { this = scope:attendee_1 }
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_camp_party_sparring
			}
			multiply = 0.4
		}
	}

	effect = {
		set_variable = {
			name = apa_camp_party_sparring
			value = yes
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				has_trait = lifestyle_blademaster
			}
			save_scope_as = first
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				NOT = { this = scope:first }
			}
			save_scope_as = second
		}
		add_activity_log_entry = {
			key = apa_camp_party_blademaster_sparring
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:activity = { activity_special_type_progression_variable = { NUM = 5 } }
			custom_tooltip = camp_party_tt_positive_tiny
			
			scope:second = {
				if = {
					limit = {
						has_trait = lifestyle_blademaster
					}
					add_trait_xp = {
						trait = lifestyle_blademaster
						value = {
							integer_range = {
								min = small_lifestyle_random_xp_low
								max = small_lifestyle_random_xp_high
							}
						}
					}
				}
				else = {
					add_trait = lifestyle_blademaster
				}
			}

			scope:first = {
				add_trait_xp = {
					trait = lifestyle_blademaster
					value = {
						integer_range = {
							min = small_lifestyle_random_xp_low
							max = small_lifestyle_random_xp_high
						}
					}
				}
			}
		}
	}
}

apa_camp_party_tales_of_piety = {
	#random char shares pilgrimage xp, another gets it
	icon = piety

	is_valid = {
		is_current_phase_active = yes
		any_attending_character = {
			is_physically_able_ai_adult = yes
			has_trait = pilgrim
			save_temporary_scope_as = attendee_1
		}
		any_attending_character = {
			is_physically_able_ai_adult = yes
			NOT = { this = scope:attendee_1 }
			faith = scope:attendee_1.faith
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				has_variable = apa_camp_party_piety
			}
			multiply = 0.4
		}
	}

	effect = {
		set_variable = {
			name = apa_camp_party_piety
			value = yes
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				has_trait = pilgrim
			}
			save_scope_as = first
		}
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				NOT = { this = scope:first }
				faith = scope:first.faith
			}
			save_scope_as = second
		}
		add_activity_log_entry = {
			key = apa_camp_party_tales_of_piety
			tags = { pulse_action }
			character = scope:first
			target = scope:second

			scope:activity = { activity_special_type_progression_variable = { NUM = 5 } }
			custom_tooltip = camp_party_tt_positive_tiny
			
			scope:second = {
				if = {
					limit = {
						has_trait = pilgrim
					}
					add_trait_xp = {
						trait = pilgrim
						value = {
							integer_range = {
							    min = small_lifestyle_random_xp_mid
							    max = small_lifestyle_random_xp_high
							}
						}
					}
				}
				else = {
					add_trait = pilgrim
				}
			}
			scope:first = {
				add_piety = minor_piety_gain
			}
		}
	}	
}
