# To call a dwarven ancestor event
dwarven_ancestor_events = {
	random_events = {
		#10 = dwarven.9901 # Thrór, King Under the Mountain
		#10 = dwarven.9902 # Thráin II, son of Thrór
		10 = dwarven.9903 # Thorin II Oakenshield
		10 = dwarven.9904 # Gorin I, Discoverer of Nordinbad
		10 = dwarven.9905 # Boic I Bravesoul
		10 = dwarven.9906 # Róa, the Raven Keeper
		10 = dwarven.9911 # Narvi of Moria
		10 = dwarven.9912 # Azaghâl of Belegost
		10 = dwarven.9913 # Telchar of Nogrod
		10 = dwarven.9914 # Naugladur
		10 = dwarven.9915 # Eldran I, the First Greybeard
		10 = dwarven.9916 # Uni I, the River-Seeker
		10 = dwarven.9917 # Vighar Roadwalker
		10 = dwarven.9918 # Lóni, the Turncoat
		10 = dwarven.9919 # Skorgrím Dourhand
		10 = dwarven.9920 # Regin, the Ram-Rider
		10 = dwarven.9921 # Durin I, the Deathless
		10 = dwarven.9922 # Durin II
		10 = dwarven.9923 # Durin III
		10 = dwarven.9924 # Durin IV
		10 = dwarven.9925 # Durin V
		10 = dwarven.9926 # Durin VI
		10 = dwarven.9931 # Úri I, the Scarred
		10 = dwarven.9932 # Úri II, son of Thrur
		10 = dwarven.9933 # Úri III
		10 = dwarven.9934 # Úri IV
		10 = dwarven.9935 # Úri V, the Reconciler
		10 = dwarven.9936 # Úri VI, the Generous
		10 = dwarven.9937 # Khathzâ, the Watcher
		10 = dwarven.9941 # Dwálin I, the Wise
		10 = dwarven.9942 # Dwálin II, the Broadbeard
		10 = dwarven.9943 # Dwálin III
		10 = dwarven.9944 # Dwálin IV, the Magnanimous
		10 = dwarven.9945 # Dwálin V
		10 = dwarven.9946 # Dwálin VI, Trollbane
		10 = dwarven.9947 # Bodruith
		10 = dwarven.9951 # Sindri I, the Rich
		10 = dwarven.9952 # Sindri II, the Gilded
		10 = dwarven.9953 # Sindri III
		10 = dwarven.9954 # Sindri IV, the Burned
		10 = dwarven.9955 # Sindri V, the Wanderer
		#10 = dwarven.9956 # Sindri VI, the Mercenary
		10 = dwarven.9957 # Ôrn, the Avaricious
		10 = dwarven.9958 # Thrîs, the Peacemaker
		10 = dwarven.9961 # Thúlin I, the Swift
		10 = dwarven.9962 # Thúlin II, the Prolific
		10 = dwarven.9963 # Thúlin III, the Steadfast
		10 = dwarven.9964 # Thúlin IV, the Charred
		10 = dwarven.9965 # Thúlin V, the Pragmatic
		10 = dwarven.9966 # Thúlin VI, the Forlorn
		10 = dwarven.9967 # Hevdrok, the Hero
		10 = dwarven.9971 # Thrár I, the Proud
		10 = dwarven.9972 # Thrár II, South-King
		10 = dwarven.9973 # Thrár III, the Bloodstained
		10 = dwarven.9974 # Thrár IV, the Three-Day King
		10 = dwarven.9975 # Thrár V, the Rebuilder
		10 = dwarven.9976 # Thrár VI, the Valiant
		10 = dwarven.9977 # Rôn, the Exile
		10 = dwarven.9978 # Gorovôd, the Goblinslayer
		10 = dwarven.9981 # Bavór I, the Cold
		10 = dwarven.9982 # Bavór II, North-King
		10 = dwarven.9983 # Bavór III, the Steward
		10 = dwarven.9984 # Bavór IV, Sole-King
		10 = dwarven.9985 # Bavór V
		10 = dwarven.9986 # Bavór VI
		10 = dwarven.9987 # Zabad, the Jewelwright
		10 = dwarven.9988 # Bhofôr, the Bridgemaster
	}
}

#Response events to beard care decision that lets you lose stress
stress_loss_dwarven_beard_care = {
	random_events = {
		70 = dwarven_racial.1001 # It's nice
		15 = dwarven_racial.1002 # You now have the best beard ever
		15 = dwarven_racial.1003 # You've gone and ruined your beard
	}
}

# Petition Liege On Action from Activity Rework
appeal_for_dwarven_aid_start = {
	effect = {
		add_character_flag = appeal_for_dwarven_aid_character_flag
		set_variable = {
			name = appeal_for_dwarven_aid_scope
			value = liege
		}
		switch = {
			trigger = has_trait 
			shy = { add_stress = medium_stress_impact_gain }
			arrogant = { add_stress = medium_stress_impact_gain }
		}
	}
}

appeal_for_dwarven_aid_travel_planner_exit = {
	effect = {
		send_interface_toast = {
			type = event_toast_effect_neutral
			title = appeal_for_dwarven_aid_costs_refunded
			left_icon = root
			remove_decision_cooldown = appeal_for_dwarven_aid_decision
			# refund prestige and influence cost
			if = {
				limit = { petition_liege_admin_valid_trigger = yes }
				change_influence_no_experience = standard_activity_cost
			}
			else = {
				add_prestige_no_experience = standard_activity_cost
			}
		}
		if = {
			limit = { has_variable = appeal_for_dwarven_aid_scope }
			remove_variable = appeal_for_dwarven_aid_scope
		}
		if = {
			limit = { has_variable = petition_type }
			remove_variable = petition_type
		}
		if = {
			limit = { has_character_flag = appeal_for_dwarven_aid_character_flag }
			remove_character_flag = appeal_for_dwarven_aid_character_flag
		}
	}
}

appeal_for_dwarven_aid_0101 = {
	effect = {
		if = {
			limit = {
				scope:appeal_for_dwarven_aid = {
					is_alive = yes 
					is_imprisoned = no
				}
				scope:petition_vassal = {
					is_alive = yes
					is_imprisoned = no
				}
			}
			trigger_event = appeal_for_dwarven_aid.0101
		}
		else = {
			trigger_event = appeal_for_dwarven_aid.0601
		}
	}
}

appeal_for_dwarven_aid_0201 = {
	effect = {
		if = {
			limit = {
				petition_liege_valid_trigger = yes
			}
			scope:petition_vassal = {
				trigger_event = {
					id = appeal_for_dwarven_aid.0201
				}
			}
		}
		else = {
			trigger_event = appeal_for_dwarven_aid.0601
		}
	}
}

appeal_for_dwarven_aid_0205 = { # Liege proposes a counter offer
	effect = {
		if = {
			limit = {
				petition_liege_valid_trigger = yes
			}
			trigger_event = {
				id = appeal_for_dwarven_aid.0205
			}
		}
		else = {
			trigger_event = appeal_for_dwarven_aid.0601
		}
	}
}

appeal_for_dwarven_aid_0401 = { # Vassal skill check event
	effect = {
		if = {
			limit = {
				petition_liege_valid_trigger = yes
			}
			trigger_event = appeal_for_dwarven_aid.0401
		}
		else = {
			trigger_event = appeal_for_dwarven_aid.0601
		}
	}
}


appeal_for_dwarven_aid_ghosted = {
	effect = {
		if = {
			limit = {
				has_variable = appeal_for_dwarven_aid_scope 
			}
			trigger_event = appeal_for_dwarven_aid.0009
		}
	}
}
