#To call a random forest wandering event
elven_forest_events = {
	random_events = {
		10 = elven_racial.1210 # A Dying Stag
		10 = elven_racial.1211 # Starlight from Above
		10 = elven_racial.1212 # A Young Sapling
		10 = elven_racial.1213 # A Glimpse of Rare Plumage
		10 = elven_racial.1214 # Drunken Revelry
		10 = elven_racial.1215 # Solace beneath the Stars
		10 = elven_racial.1216 # A Feast in the Forest
		10 = elven_racial.1219 # Accursed Enemies
		10 = elven_racial.1220 # A Hope Rekindled
		10 = elven_racial.1221 # An Undisturbed Moment
		10 = elven_racial.1222 # How to Fight in the Forest
		10 = elven_racial.1223 # A Whisper on the Wind
		10 = elven_racial.1224 # Ruins of a Bygone Age
	}
}

elven_hope_monthly_pulse = { # Change situation phases according to current hope value
	effect = {
		if = {
			limit = {
				situation:elven_hope = {
					this.var:elven_hope_value <= 20
				}
			}
			situation:elven_hope = {
				every_situation_sub_region = {
					limit = {
						any_situation_sub_region_participant = {
							this = root
						}
					}
					change_phase = { phase = situation_elven_fading }
				}
			}
		}
		else_if = {
			limit = {
				situation:elven_hope = {
					AND = {
						this.var:elven_hope_value <= 40
						this.var:elven_hope_value > 20
					}
				}
			}
			situation:elven_hope = {
				every_situation_sub_region = {
					limit = {
						any_situation_sub_region_participant = {
							this = root
						}
					}
					change_phase = { phase = situation_elven_waning }
				}
			}
		}
		else_if = {
			limit = {
				situation:elven_hope = {
					AND = {
						this.var:elven_hope_value <= 60
						this.var:elven_hope_value > 40
					}
				}
			}
			situation:elven_hope = {
				every_situation_sub_region = {
					limit = {
						any_situation_sub_region_participant = {
							this = root
						}
					}
					change_phase = { phase = situation_elven_enduring }
				}
			}
		}
		else_if = {
			limit = {
				situation:elven_hope = {
					AND = {
						this.var:elven_hope_value <= 80
						this.var:elven_hope_value > 60
					}
				}
			}
			situation:elven_hope = {
				every_situation_sub_region = {
					limit = {
						any_situation_sub_region_participant = {
							this = root
						}
					}
					change_phase = { phase = situation_elven_renewing }
				}
			}
		}
		else_if = {
			limit = {
				situation:elven_hope = {
					AND = {
						this.var:elven_hope_value <= 100
						this.var:elven_hope_value > 80
					}
				}
			}
			situation:elven_hope = {
				every_situation_sub_region = {
					limit = {
						any_situation_sub_region_participant = {
							this = root
						}
					}
					change_phase = { phase = situation_elven_thriving }
				}
			}
		}
	}
}