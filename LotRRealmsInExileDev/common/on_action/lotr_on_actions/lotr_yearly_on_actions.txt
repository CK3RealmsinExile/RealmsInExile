lotr_yearly_global_pulse = {
	effect =  {
		every_settlement_counties = {
			if = { 
				limit = { title_province ?= { has_building = spider_nest_cleared } }
				title_province ?= { remove_building = spider_nest_cleared }
			}
			if = { 
				limit = { title_province ?= { has_building = wolf_den_cleared } }
				title_province ?= { remove_building = wolf_den_cleared }
			}
			if = { 
				limit = { title_province ?= { has_building = bear_den_cleared } }
				title_province ?= { remove_building = bear_den_cleared }
			}
			if = { 
				limit = { title_province ?= { has_building = ghosts_cleared } }
				title_province ?= { remove_building = ghosts_cleared }
			}
			if = { 
				limit = { title_province ?= { has_building = troll_cave_cleared } }
				title_province ?= { remove_building = troll_cave_cleared }
			}
			if = { 
				limit = { title_province ?= { has_building = ghosts_eregion_cleared } }
				title_province ?= { remove_building = ghosts_eregion_cleared }
			}
			if = { 
				limit = { title_province ?= { has_building = dragon_attack_cleared } }
				title_province ?= { remove_building = dragon_attack_cleared }
			}
			if = { 
				limit = { title_province ?= { has_building = flooded_lands_cleared } }
				title_province ?= { remove_building = flooded_lands_cleared }
			}
			if = { 
				limit = { title_province ?= { has_building = bandits_cleared } }
				title_province ?= { remove_building = bandits_cleared }
			}
			if = { 
				limit = { title_province ?= { has_building = dead_marshes_cleared } }
				title_province ?= { remove_building = dead_marshes_cleared }
			}
			if = { 
				limit = { title_province ?= { has_building = collapsed_ceiling_cleared } }
				title_province ?= { remove_building = collapsed_ceiling_cleared }
			}
			if = { 
				limit = { title_province ?= { has_building = flooded_tunnels_cleared } }
				title_province ?= { remove_building = flooded_tunnels_cleared }
			}
			if = { 
				limit = { title_province ?= { has_building = flooded_tunnels_nogrod_cleared } }
				title_province ?= { remove_building = flooded_tunnels_nogrod_cleared }
			}
			if = { 
				limit = { title_province ?= { has_building = stale_air_cleared } }
				title_province ?= { remove_building = stale_air_cleared }
			}
			if = { 
				limit = { title_province ?= { has_building = strange_creatures_cleared } }
				title_province ?= { remove_building = strange_creatures_cleared }
			}
			if = { 
				limit = { title_province ?= { has_building = shadow_of_mordor_cleared } }
				title_province ?= { remove_building = shadow_of_mordor_cleared }
			}
		}
		every_unplayable_race = {
			trigger_event = {
				id = race.0001
				days = 1
			}
		}
		every_ai_settlement_counties = {
			limit = { holder = { is_ai = yes } }
			if = {
				limit = { 
					title_province ?= { has_building = settlement_03 }
					development_level >= 3
				}
				if = {
					limit = { title_province = { terrain = halls } }
					title_province = { set_holding_type = dwarven_holding }
				}
				if = {
					limit = { 
						OR = {
							holder = { government_has_flag = government_is_feudal }
							holder = { government_has_flag = government_is_clan }
						}
					}
					if = {
						limit = { title_province = { has_holding_type = settlement_holding } }
						title_province = { set_holding_type = castle_holding }
					}
				} else_if = {
					limit = { holder = { government_has_flag = government_is_tribal } }
					if = {
						limit = { title_province = { has_holding_type = settlement_holding } }
						title_province = { set_holding_type = tribal_holding }
					}
				} else_if = {
					limit = { holder = { government_has_flag = government_is_elven } }
					if = {
						limit = { title_province = { has_holding_type = settlement_holding } }
						title_province = { set_holding_type = elven_holding }
					}
				} else_if = {
					limit = { holder = { government_has_flag = government_is_hobbit } }
					if = {
						limit = { title_province = { has_holding_type = settlement_holding } }
						title_province = { set_holding_type = city_holding }
					}
				}
			}
		}
		every_valinor_elf_culture = {
			set_culture = culture:sindar
		}
		every_living_character = {
			limit = {
				is_from_ruler_designer = no
				culture = culture:nurnoth
				faith = faith:faith_nurn_slave
				NOT = {
					any_secret = { secret_type = secret_crypto_religionist }
					exists = secret_faith
					secret_faith = faith:faith_nurn_good
				}
			}
			trigger_event = {
				id = nurnoth.0001
				days = 1
			}
		}
		
		every_independent_ruler = {
			limit = {
				any_realm_county = {
					has_county_modifier = royal_road_rebuilt_province_modifier
				}
			}
			add_character_modifier = {
				modifier = royal_road_rebuilt_modifier
				years = 1
			}
		}
		every_independent_ruler = {
			limit = {
				any_realm_province = {
					has_province_modifier = rhun_road_province_modifier
				}
			}
			if = {
				limit = { 
					any_realm_province = {
						count = 53
						has_province_modifier = rhun_road_province_modifier
					}
				}
				add_character_modifier = {
					modifier = rhun_road_income_character_modifier_10
					years = 1
				}
			}
			else_if = {
				limit = { 
					any_realm_province = {
						count > 45
						has_province_modifier = rhun_road_province_modifier
					}
				}
				add_character_modifier = {
					modifier = rhun_road_income_character_modifier_9
					years = 1
				}
			}
			else_if = {
				limit = { 
					any_realm_province = {
						count > 40
						has_province_modifier = rhun_road_province_modifier
					}
				}
				add_character_modifier = {
					modifier = rhun_road_income_character_modifier_8
					years = 1
				}
			}
			else_if = {
				limit = { 
					any_realm_province = {
						count > 35
						has_province_modifier = rhun_road_province_modifier
					}
				}
				add_character_modifier = {
					modifier = rhun_road_income_character_modifier_7
					years = 1
				}
			}
			else_if = {
				limit = { 
					any_realm_province = {
						count > 30
						has_province_modifier = rhun_road_province_modifier
					}
				}
				add_character_modifier = {
					modifier = rhun_road_income_character_modifier_6
					years = 1
				}
			}
			else_if = {
				limit = { 
					any_realm_province = {
						count > 25
						has_province_modifier = rhun_road_province_modifier
					}
				}
				add_character_modifier = {
					modifier = rhun_road_income_character_modifier_5
					years = 1
				}
			}
			else_if = {
				limit = { 
					any_realm_province = {
						count > 20
						has_province_modifier = rhun_road_province_modifier
					}
				}
				add_character_modifier = {
					modifier = rhun_road_income_character_modifier_4
					years = 1
				}
			}
			else_if = {
				limit = { 
					any_realm_province = {
						count > 15
						has_province_modifier = rhun_road_province_modifier
					}
				}
				add_character_modifier = {
					modifier = rhun_road_income_character_modifier_3
					years = 1
				}
			}
			else_if = {
				limit = { 
					any_realm_province = {
						count > 10
						has_province_modifier = rhun_road_province_modifier
					}
				}
				add_character_modifier = {
					modifier = rhun_road_income_character_modifier_2
					years = 1
				}
			}
			else_if = {
				limit = { 
					any_realm_province = {
						count > 5
						has_province_modifier = rhun_road_province_modifier
					}
				}
				add_character_modifier = {
					modifier = rhun_road_income_character_modifier_1
					years = 1
				}
			}
		}
	}
}

lotr_yearly_playable_pulse = {
	effect = {
		### Thani-Hazad Struggle Catalysts ###
		if = { # Struggle Catalyst
			limit = {
				any_county_in_region = {
					region = middleearth_thani_hazad_struggle_region
					OR = {
						holder = { is_vassal_or_below_of = root }
						holder = root
					}
					OR = {
						holder = {
							any_character_struggle = {
								involvement = interloper
								phase_has_catalyst = catalyst_controls_too_large_area 
							}
						}
						holder = {
							any_character_struggle = {
								involvement = involved
								phase_has_catalyst = catalyst_controls_too_large_area 
							}
						}
					}
					percent >= 0.5
				}
			}
			every_character_struggle = {
				activate_struggle_catalyst = {
					catalyst = catalyst_controls_too_large_area
					character = root
				}
			}
		}
		if = { # Struggle Catalyst
			limit = {
				struggle:thani_hazad_struggle = {
					any_involved_ruler = {
						exists = dynasty
						dynasty ?= { has_dynasty_modifier = old_order_triumphant_th_struggle_modifier }
						is_landed = yes
					}
				}
			}
			struggle:thani_hazad_struggle = {
				every_involved_ruler = {
					limit = {
						exists = dynasty
						dynasty ?= { has_dynasty_modifier = old_order_triumphant_th_struggle_modifier }
						is_landed = yes
						NOT = { has_variable = catalyst_fired }
					}
					set_variable = {
						name = catalyst_fired
						months = 6
					}
					every_character_struggle = {
						activate_struggle_catalyst = {
							catalyst = catalyst_has_confederation_modifier
							character = prev
						}
					}
				}
			}
		}

		### If wastelands tracker is wrong, correct the count
		if = {
			limit = {
				any_held_title = { title_province ?= { has_holding_type = settlement_holding } }
			}
			if = {
				limit = { has_variable = correct_settlement_count }
				remove_variable = correct_settlement_count
			}
			every_held_title = {
				limit = { title_province ?= { has_holding_type = settlement_holding } }
				holder = {
					increase_variable = {
						NAME = correct_settlement_count
						AMOUNT = 1
					}
				}
			}
			set_variable = {
				name = correct_settlement_count
				value = var:correct_settlement_count.div2
			}
			if = {
				limit = { NOT = { var:num_settled_wilderness = var:correct_settlement_count } }
				set_variable = {
					name = num_settled_wilderness
					value = var:correct_settlement_count
				}
			}
			remove_variable = correct_settlement_count
			remove_upkeep_modifier = yes
			trigger_event = wastelands.0007
		}
		else_if = { # Remove the upkeep modifier in-case 
			limit = {
				has_variable = num_settled_wilderness
				NOT = {
					any_held_title = { title_province ?= { has_holding_type = settlement_holding } }
				}
			}
			remove_variable = num_settled_wilderness
			remove_upkeep_modifier = yes
		}
	}
}

lotr_three_year_playable_pulse = {
	effect = {
		if = {
			limit = { is_ai = yes }
			if = {
				limit = { 
					OR = {
						government_has_flag = government_is_feudal
						government_has_flag = government_is_clan
					}
				}
				every_held_county = {
					limit = { NOT = { title_province = { has_holding_type = settlement_holding } } any_county_province = { has_holding_type = ruined_holding } }
					every_county_province = { 
						limit = { has_holding_type = ruined_holding }
						random_list = {
							33 = { set_holding_type = city_holding }
							33 = { set_holding_type = church_holding }
							33 = { set_holding_type = castle_holding }
						}
					}
				}
			} else_if = {
				limit = { government_has_flag = government_is_tribal }
				every_held_county = {
					limit = { NOT = { title_province = { has_holding_type = settlement_holding } } any_county_province = { has_holding_type = ruined_holding } }
					every_county_province = { 
						limit = { has_holding_type = ruined_holding }
						set_holding_type = tribal_holding
					}
				}
			} else_if = {
				limit = { government_has_flag = government_is_elven }
				every_held_county = {
					limit = { NOT = { title_province = { has_holding_type = settlement_holding } } any_county_province = { has_holding_type = ruined_holding } }
					every_county_province = { 
						limit = { has_holding_type = ruined_holding }
						set_holding_type = elven_holding
					}
				}
			} else_if = {
				limit = { government_has_flag = government_is_hobbit }
				every_held_county = {
					limit = { NOT = { title_province = { has_holding_type = settlement_holding } } any_county_province = { has_holding_type = ruined_holding } }
					every_county_province = { 
						limit = { has_holding_type = ruined_holding }
						random_list = {
							50 = { set_holding_type = city_holding }
							50 = { set_holding_type = church_holding }
						}
					}
				}
			}
		}
	}
}

lotr_five_year_playable_pulse = {
	effect = {
		# LotR - Check for completed colonies and upgrade
		if = {
			limit = {
				is_ai = yes
				any_held_title = {
					tier = tier_county
					any_county_province = {
						has_holding_type = settlement_holding
					}
					development_level >= 3
				}
			}
			every_held_title = {
				limit = { 
					tier = tier_county
					development_level >= 3
				}
				every_county_province = {
					limit = { 
						has_holding_type = settlement_holding
						has_building = settlement_03
						has_building_with_flag = { 
							flag = obstacle 
							count = 0 
						}
					}
					if = {
						limit = { terrain = halls }
						set_holding_type = dwarven_holding
					}
					else_if = {
						limit = {
							root = { government_has_flag = government_is_elven }
						}
						set_holding_type = elven_holding
					}
					else_if = {
						limit = {
							root = { government_has_flag = government_is_tribal }
						}
						set_holding_type = tribal_holding
					}
					else = {
						set_holding_type = castle_holding
					}
					
				}
				if = { 
					limit = { root = { var:num_settled_wilderness > 0 } }
					root = {
						decrease_variable = {
							NAME = num_settled_wilderness
							AMOUNT = 1
						}
						remove_wastelands_tracker_variable = yes
						trigger_event = wastelands.0007
					}
				}
			}
		}
	}
}

lotr_quarterly_playable_pulse = {
	effect = {
		if = { # Gold Beyond Grief | Achievement
			limit = {
				NOT = { exists = global_var:lotr_achievement_38 }
				realms_achievements_enabled = yes
				is_ai = no
				is_dwarf = yes
				faith = { has_doctrine = tenet_gold_veneration }
				gold >= 10000
			}
			set_global_variable = lotr_achievement_38
		}
	}
}

lotr_random_yearly_playable_pulse = {
	# Only for AI, 50% of chance to considering colonisation once a year
	random_events = {
		chance_to_happen = 50
		1 = wastelands.0006
	}
}

lotr_random_yearly_everyone_pulse = {
	effect = {

	}
}

lotr_five_year_everyone_pulse = {
	effect = {
		root = {

			if = { # LotR Elf Barons should have a chance to have children
				limit = {
					is_ai = yes
					highest_held_title_tier = tier_barony
					is_married = yes
					is_elf = yes
					primary_spouse = { is_elf = yes }
					sex_opposite_of = primary_spouse
					primary_spouse = { is_ai = yes }
					NOR = { 
						has_character_flag = elf_childbirth_ongoing
						has_character_modifier = elf_child_limit_modifier
						primary_spouse = { has_character_modifier = elf_child_limit_modifier }
					}
				}
				random = {
					chance = 20
					trigger_event = elven_racial.0001
					add_character_flag = elf_childbirth_ongoing
					primary_spouse = { add_character_flag = elf_childbirth_ongoing }
				}
			}
			if = {
				limit = {
					is_ai = no
				}
				title:c_valinor_1.holder = { trigger_event = lotr_war_events.0004 }
			}
		}

		### Achievements ###

		if = {
			limit = {
				is_ai = no
				realms_achievements_enabled = yes
			}
			if = { # All’s Well that Ends Well. | Achievement
				limit = { 
					NOT = { exists = global_var:lotr_achievement_50 }
					NOT = { any_independent_ruler = { faith_is_evil = yes } }
				}
				set_global_variable = lotr_achievement_50
			}
			if = { # One Ringbearer to rule them all | Achievement
				limit = { 
					NOT = { exists = global_var:lotr_achievement_51 }
					dynasty = dynasty:dynasty_baggins
					any_held_title = { 
						tier = tier_empire
						count > 2
					}
				}
				set_global_variable = lotr_achievement_51
			}
			if = { # Dragonsickness | Achievement
				limit = { 
					NOT = { exists = global_var:lotr_achievement_39 }
					is_dwarf = yes
					has_title = title:e_iron_mountains
				}
				set_global_variable = lotr_achievement_39
			}
			if = { # As it was written | Achievement
				limit = { 
					NOT = { exists = global_var:lotr_achievement_28 }
					root = character:lineofezarkia18
					has_title = title:e_dune_sea
				}
				set_global_variable = lotr_achievement_28
			}
			if = { # Music of Nelornieth | Achievement
				limit = { 
					NOT = { exists = global_var:lotr_achievement_56 }
					root = character:lineoflanthir1
					any_neighboring_top_liege_realm = {
						count = all
						OR = {
							holder = { has_relation_friend = character:lineoflanthir1 }
							holder = { has_relation_best_friend = character:lineoflanthir1 }
						}
					}
				}
				set_global_variable = lotr_achievement_56
			}
			if = { # Pretenders Out! | Achievement
				limit = { 
					NOT = { exists = global_var:lotr_achievement_73 }
					game_start_date >= 7033
					NOT = { dynasty:dynasty_pharazon = { any_dynasty_member = { is_alive = yes } } }
				}
				set_global_variable = lotr_achievement_73
			}
			if = { # To the King! | Achievement
				limit = { 
					NOT = { exists = global_var:lotr_achievement_74 }
					game_start_date >= 7033
					root = character:lineofdurin90
					has_title = title:k_khazad_dum
					has_title = title:k_gundabad
					has_title = title:d_glittering_caves
				}
				set_global_variable = lotr_achievement_74
			}
			if = { # All shall love me and despair! | Achievement
				limit = { 
					NOT = { exists = global_var:lotr_achievement_06 }
					game_start_date >= 7033
					root = character:linefinwe36
					realm_size >= 200
					dread >= 100
				}
				set_global_variable = lotr_achievement_06
			}
			if = { # The Adunaim Strike Back | Achievement
				limit = { 
					NOT = { exists = global_var:lotr_achievement_22 }
					dynasty = dynasty:dynasty_pharazon
					dynasty:dynasty_pharazon = { any_dynasty_member = { is_alive = yes has_trait = blood_of_numenor_3 } }
				}
				set_global_variable = lotr_achievement_22
			}
			if = { # Lord of the Rings, Lord of the Earth! | Achievement
				limit = { 
					NOT = { exists = global_var:lotr_achievement_44 }
					root = character:lineofsauron
					NOT = {
						any_independent_ruler = {
							NOT = { this = character:lineofsauron }
							NOT = { this = title:k_wastelands.holder }
							is_in_valinor = no
							is_landed = yes
						}
					}
				}
				set_global_variable = lotr_achievement_44
			}
			if = { # The Finest Inn in the Land | Achievement
				limit = { 
					NOT = { exists = global_var:lotr_achievement_66 }
					culture = culture:breemen
					realm_size <= 10
					monthly_character_income > 50
				}
				set_global_variable = lotr_achievement_66
			}
			if = { # The First Shirereich | Achievement
				limit = { 
					NOT = { exists = global_var:lotr_achievement_36 }
					culture = culture:hobbit
					completely_controls = title:e_arnor
					NOT = {
						title:e_arnor = {
							any_in_de_jure_hierarchy = {
								tier = tier_county
								culture = culture:hobbit
							}
						}
					}
				}
				set_global_variable = lotr_achievement_36
			}
		}
	}
}

lotr_three_year_pool_pulse = {
	effect = {
		
	}
}

lotr_prison_maintenance_pulse = {
	effect = {
		
	}
}

lotr_ai_character_pulse = {
	effect = {
		
	}
}

lotr_culture_hybridization_emergence_events = {
	effect = {
		
	}
}

lotr_culture_divergence_emergence_events = {
	effect = {
		
	}
}

lotr_on_yearly_common_events = {
	effect = {
		
	}
	random_events = {
		chance_to_happen = 50

		#Rohan events 
		2000 = rohan.2100
	}
}

lotr_accolades_three_year_playable_pulse = {
	effect = {
		
	}
}

lotr_on_yearly_invisible_events = {
	effect = {
		
	}
}

lotr_on_yearly_events = {
	events = {
		orcs.0001 # Coming of Age
		orcs.1001 # Flesh Feast
		orcs.3001 # Rise of The Berserker
		#orc_challenge.0101 # Guest Challenge
		# gondor.2950
	}
	effect = {
		
	}
}