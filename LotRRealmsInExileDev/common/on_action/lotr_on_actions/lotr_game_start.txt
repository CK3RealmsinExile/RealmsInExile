# Called from code after history generation
# Empty scope
lotr_on_game_start = {
	on_actions = { ccu_startup }

	events = {
		lotr_historical_artifacts.0001		# LotR Historical Artifacts Generator
		dwarven.5000						# LotR Dwarven Fathers Reincarnation System #juke note: also known as the LotRRieDFRS(tm)
	}

	effect = {
		set_global_variable = {
			name = th_confederation_val
			value = 0
		}
		### GAME RULE: EXTRA ADMINS
		apply_historic_administrative_game_rule_effect = yes

		# Variables so the window can be made invisble
		#LotR
		religion:religion_wastelands_pagan = { set_variable = religion_invis }
		faith:faith_wastelands_pagan = { set_variable = faith_invis }
		culture:wastelands = { set_variable = culture_invis }

		### Initialise Durin's Bane Struggle
		start_struggle = { # Balrog flees after defeat in War of Wrath, settling in Moria
			struggle_type = balrog_struggle
			start_phase = struggle_balrog_phase_wandering
		}
		if = {
			limit = { # Moria destroyed, Balrog calms down somewhat
				game_start_date >= 6023.1.1
			}
			struggle:balrog_struggle = {
				change_struggle_phase = struggle_balrog_phase_wandering	
			}
		}
		else_if = { # Mithril miners under King Durin IV awaken the Balrog
			limit = {
				game_start_date >= 6013.1.1
			}
			struggle:balrog_struggle = {
				change_struggle_phase = struggle_balrog_phase_armageddon	
			}
		}
		
		### DW Code ###
		add_empires_to_global_list = yes
		add_kingdom_titles_to_list = yes
		canon_area_empires = yes
	
		### Define Elven Homeland Counties
		define_elven_homelands = yes

		### Dwarven Set Up
		character:lineofdurin1 ?= {
			change_age = 1985
		}
		character:lineofdwalin0 ?= {
			change_age = 200
		}
		character:lineofuri0 ?= {
			change_age = 250
		}
		character:lineofthrar53 ?= {
			add_trait_xp = {
				trait = lifestyle_artifact_crafting
				track = weapon_smith
				value = 100
			}
		}

		### Define Routes
		define_trade_routes = yes

		### Define Ore and Jewel Deposits
		define_existing_mining_resources = yes

		### Set Balan-Lai on list at game start
		set_balan_lai_game_start = yes

		###############################
		### Dynasty related effects ###
		###############################

		### Set Up Dorwinion Faction Alignments ###

		dorwinion_dynasty_alignment = yes
		
		### Set Up Dune Sea Witch Covens ###

		dune_sea_witch_covens = yes

		### Appoint Princely Houses of the Dúnedain ###
		
		princely_houses_of_dunedain = yes

		
		fire_intro_events = yes
		generate_sorcery_list_on_start = yes

		title:k_wastelands.holder = { create_story = story_artifact_crafting }

		title:e_mag_tumag.holder = { create_story = story_cycle_tamskangi }

		if = { # The Establishment of the Ithilien Rangers
			limit = { game_start_date > 2934.1.1 } # The year is after T.A. 2901, when Henneth Annun was built
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:establish_the_ithilien_rangers
			}
		}
		
		random_independent_ruler = {
			trigger_event = elven_racial.0100
		}
		
		every_county = {
			limit = {
				culture = culture:nurnoth
				faith = faith:faith_nurn_slave
			}
			make_county_crypto_religionists_effect = { FAITH = faith:faith_nurn_good }
		}
		
		every_living_character = {
			trigger_event = {
				id = elven_racial.0009 	#Elven racial maintenance event
				days = 1
			}
		}
		
		every_living_character = {
			trigger_event = {
				id = race.0002
				days = 1
			}
		}

		#########################
		# WILDERNESS total clear of courtiers, guests and downgrading the leader
		# Issue and solution: guests seems to constantly respawn unless you remove the leader, so we do it
		#########################
		empty_wastelands_inhabitants_effect = yes

		#########################
		# WILDERNESS The ruler will be respawned, we need to remove all traits from him/her
		# Issue and solution: ruler is still not a ruler and you can't use every_ruler, it seems to be appointed after, so I use a filtered every_living_character
		#########################
		remove_traits_wastelands_effect = yes	

		#########################
		# WILDERNESS: 
		# Setting the base number a count/duke/king/emporer can hold before increasing maintenance cosst
		#########################

		#Setup Global Variables
		set_global_variable = {
			name = tedjin_reactionaries_triggered
			value = no
		}
		set_global_variable = {
			name = tedjin_civil_war_over
			value = no
		}
		set_global_variable = {
			name = tedjin_civil_war_result
			value = 0 #Not yet occurred
		}
		set_global_variable = {
			name = sauron_destroyed
			value = no #He's still kicking!
		}
		set_global_variable = {
			name = bor_saint
			value = no	#bor isnt a saint yet
		}
		
		### Make dunlending white-hand faith inaccessible
		
		faith:faith_dunlending_white_hand = {
			set_variable = { name = block_conversion_till_decision_taken }
		}
		
		### Tweaking faith fervor so we dont have strange game-start heresies

		faith:faith_arysis = {
			change_fervor = { 
				value = 80
				desc = fervor_gain_ascetic_example
			}
		}

		#title:k_izindizanda_eruhinim.holder = {
		#	add_realm_law = male_only_law
		#}
		
		### Remove prescripted will not marry traits on timeout ###
		character:linesteward40 = {
			trigger_event = {
				id = shattered_earth.3
				years = 21
			}
		}
		character:lineisildur42 = {
			trigger_event = {
				id = shattered_earth.3
				years = 21
			}
		}
		character:dolamroth31 = {
			trigger_event = {
				id = shattered_earth.3
				years = 21
			}
		}
		character:6000018 = {
			trigger_event = {
				id = shattered_earth.3
				years = 21
			}
		}
		character:6000035 = {
			trigger_event = {
				id = shattered_earth.3
				years = 21
			}
		}
		
		title:c_minas_tirith.holder = { 
        	trigger_event = { ### LotR Shattered Earth Game Rule Initial Event ###
				id = shattered_earth.1
				days = 1
			}
			trigger_event = { # Initial culture acceptance
				id = culture_acceptance.1
			}
        }
		
		title:c_minas_ithil.holder = { 
        	trigger_event = { # LotR - Set up Morgul Corruption
				id = wraith.0001	
				days = 1
			}
        }					

		### Cap Dynasty Perks at 5 ###
		
		every_living_character = {
        	limit = {
				has_dynasty = yes
				dynasty = {
					dynasty_prestige > 6250
				}
			}
			dynasty = {
				add_dynasty_prestige = {
					value = dynasty_prestige
					multiply = -1
					add = 6250
				}
			}
		}
		
		### Set Historical Dynasty Level of Splendor ###
		dynasty:dynasty_elros = {
			add_dynasty_prestige_level = 10
		}
		dynasty:dynasty_anarion = {
			add_dynasty_prestige_level = 10
		}
		dynasty:dynasty_elendil = {
			add_dynasty_prestige_level = 10
		}

		### Gondor Border Realm Wars ###
		character:linevingintur6 = {
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = {
					id = warband.2001
					days = { 15 30 }
				}
			}
		}
		
		character:lineofcalmacil14 = {
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = {
					id = warband.2020
					days = { 15 30 }
				}
			}
		}
		
		title:k_umbar.holder = {
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = {
					id = umbar.0001
					days = { 15 30 }
				}
			}
		}

		######################################
		### LOTR PROVINCE BUILDING HISTORY ###
		######################################
		## ADDS EXTRA BUILDINGS THAT DON'T WORK IN HISTORY (ONLY TWO CAN BE ADDED VIA HISTORY FILES)

		add_buildings_to_historical_provinces = yes
		
		### GRANDEUR ###
		#Royal Court: Set starting Grandeur to be the same as Expected
		if = {
			limit = {
				has_dlc_feature = royal_court
			}
			every_character_with_royal_court = {
				set_current_court_grandeur = court_grandeur_minimum_expected
				apply_hold_court_grace_effect = yes
				# Stops Hold Court reminders at game start
				set_variable = {
					name = last_hold_court_date
					value = current_year
				}
			}
		}

		# Unity Set Up
		if = { # 3000 TA
			limit = { game_start_date = 7033.1.1 }
			## Haruzan has had a stable rule for some time but potential new ambition in family
			dynasty:dynasty_ayerikka.dynast.house ?= {
				add_unity_value = {
					value = 30
					# This is from historical circumstances, so we just do use the house head.
					character = house_head
					desc = clan_unity_historical_circumstances.desc
				}
			}
			## Chelkar stands strongly united with enemies on all sides
			dynasty:dynasty_khadnom.dynast.house ?= {
				add_unity_value = {
					value = 90
					# This is from historical circumstances, so we just do use the house head.
					character = house_head
					desc = clan_unity_historical_circumstances.desc
				}
			}
			## Pezarsan is in a state of internal strife and prey to opportunistic neighbours
			dynasty:dynasty_arzagarnom.dynast.house ?= {
				add_unity_value = {
					value = -55
					# This is from historical circumstances, so we just do use the house head.
					character = house_head
					desc = clan_unity_historical_circumstances.desc
				}
			}
			## Ray is strong and stable with little internal strife of the ruling family
			dynasty:dynasty_solarray.dynast.house ?= {
				add_unity_value = {
					value = 75
					# This is from historical circumstances, so we just do use the house head.
					character = house_head
					desc = clan_unity_historical_circumstances.desc
				}
			}
			## The Golden King is unshakable
			dynasty:dynasty_goldenking.dynast.house ?= {
				add_unity_value = {
					value = 100
					# This is from historical circumstances, so we just do use the house head.
					character = house_head
					desc = clan_unity_historical_circumstances.desc
				}
			}
			## Thorin's Tomb in Erebor
			title:c_throne_of_erebor = { add_county_modifier = thorins_tomb_modifier }
		}

		title:d_shire.holder ?= {
			if = {
				limit = {
					is_independent_ruler = no
				}
				vassal_contract_set_obligation_level = { type = title_revocation_rights level = 1 }
			}
		}
		
		############################
		# Special Locations Set-up #
		############################
		
		### GONDOR ###
		
		title:c_morannon = {
			set_important_location = {
				title = title:e_gondor
				enter_realm_event = gondor.6001
			}
			set_important_location = {
				title = title:e_gondor_steward
				enter_realm_event = gondor.6001
			}
			set_important_location = {
				title = title:e_castamir
				enter_realm_event = gondor.6001
			}
			set_important_location = {
				title = title:e_reunitedkingdom
				enter_realm_event = gondor.6001
			}
			set_important_location = {
				title = title:e_mordor
				enter_realm_event = sauron.5000
				leave_realm_event = sauron.5001
			}
		}
		
		title:c_minas_tirith = {
			set_important_location = {
				title = title:e_gondor
				enter_realm_event = gondor.6002
				leave_realm_event = gondor.6003
			}
			set_important_location = {
				title = title:e_gondor_steward
				enter_realm_event = gondor.6002
				leave_realm_event = gondor.6003
			}
			set_important_location = {
				title = title:e_reunitedkingdom
				enter_realm_event = gondor.6002
				leave_realm_event = gondor.6003
			}
			set_important_location = {
				title = title:e_mordor
				enter_realm_event = sauron.5002
			}
			set_important_location = {
				title = title:k_morgul
				enter_realm_event = sauron.5002
			}
		}
		
		title:c_umbar = {
			set_important_location = {
				title = title:e_gondor
				enter_realm_event = gondor.6004
			}
			set_important_location = {
				title = title:e_gondor_steward
				enter_realm_event = gondor.6004
			}
			set_important_location = {
				title = title:e_reunitedkingdom
				enter_realm_event = gondor.6004
			}
			set_important_location = {
				title = title:e_adunaim
				enter_realm_event = umbar.0111
			}
		}	
		
		title:c_minas_ithil = {
			set_important_location = {
				title = title:e_gondor
				enter_realm_event = gondor.2300
			}
			set_important_location = {
				title = title:e_gondor_steward
				enter_realm_event = gondor.2300
			}
			set_important_location = {
				title = title:e_castamir
				enter_realm_event = gondor.2300
			}
			set_important_location = {
				title = title:e_reunitedkingdom
				enter_realm_event = gondor.2300
			}
		}
		
		### ROHAN ###
		
		title:c_kingstead = {
			set_important_location = {
				title = title:k_rohan
				leave_realm_event = rohan.3000
				enter_realm_event = rohan.3001
			}
		}
		
		title:c_helmsdeep = {
			set_important_location = {
				title = title:k_rohan
				leave_realm_event = rohan.3002
				enter_realm_event = rohan.3003
			}
			set_important_location = {
				title = title:d_isengard
				enter_realm_event = saruman_event_chain.3002
			}
			set_important_location = {
				title = title:k_isengard
				enter_realm_event = saruman_event_chain.3002
			}
			set_important_location = {
				title = title:e_isengard_unleashed
				enter_realm_event = saruman_event_chain.3002
			}
		}
		
		title:c_isengard = {
			set_important_location = {
				title = title:k_rohan
				enter_realm_event = rohan.3004
			}
			set_important_location = {
				title = title:d_isengard
				leave_realm_event = saruman_event_chain.3000
				enter_realm_event = saruman_event_chain.3001
			}
			set_important_location = {
				title = title:k_isengard
				leave_realm_event = saruman_event_chain.3000
				enter_realm_event = saruman_event_chain.3001
			}
			set_important_location = {
				title = title:e_isengard_unleashed
				leave_realm_event = saruman_event_chain.3000
				enter_realm_event = saruman_event_chain.3001
			}
		}
	}
}


# Like on_game_start, except it is called once the host (or player, in single player) exits the lobby. Good for anything where you need to know who the players are, or what the game rules are
lotr_on_game_start_after_lobby = {
    on_actions = {
        delay = { months = 1 }
        lotr_on_monthly_tribute
		delay = { days = 1 }
		ccu_startup_debug 
    }	
	
	effect = {
		remove_kingdom_and_duchy_variables_from_empires = yes
		character:lineofzuberi7 = { create_story = story_death_of_ola_barasi }
		### Ruler designer elves get an event to age up
		every_player = {
			if = {
				limit = { 
					is_elf = yes
					is_from_ruler_designer = yes
					is_landed_or_landless_administrative = yes
				}
			trigger_event = elven_racial.0102
			}
			if = {
				limit = { 
					is_elf = yes
					is_from_ruler_designer = yes
					is_landed_or_landless_administrative = no
				}
			trigger_event = elven_racial.0103
			}
			
		}

		gil_galad_parentage_rule_effect = yes # Setting Gil-galad's parentage
		fire_warning_event = yes

		### Give characters with settlement holdings correct amount of upkeep
		add_settlement_upkeep_in_history = yes

        every_suzerain = {
            trigger_event = { id = tributary.0006 }
        }

		### GAME RULE: RANDOMIZE FAITH
		if = {
			limit = { has_game_rule = randomized_faiths_on }
			# game_rule_randomize_faith_effect = yes # Handled in vanilla on_game_start
			#LotR - Ensure Valinor stays unchanged
			title:c_tol_eressea = {
				set_county_faith = faith:faith_eldar
			}
			title:c_valinor_1 = {
				set_county_faith = faith:faith_eldar
			}
			title:c_valinor_2 = {
				set_county_faith = faith:faith_eldar
			}
			title:c_valinor_3 = {
				set_county_faith = faith:faith_eldar
			}
			character:k_wastelands_holder = {
				set_character_faith = faith:faith_wastelands_pagan
				every_held_title = {
					limit = { tier = tier_county }
					set_county_faith = faith:faith_wastelands_pagan
				}
			}
		}

		### Aesthetically pleasing Rhudaur game rule ###

		if = {
			limit = { 
				has_game_rule = aesthetic_rhudaur
				game_start_date = 7033.1.1
			}
			title:d_dyr_maenason = {
				set_de_jure_liege_title = title:k_rhudaur
			}
		}
		
		every_living_character = {
			limit = {
				is_from_ruler_designer = no
				OR = {
					not_valar = yes
					not_nazgul = yes
					not_istari = yes
					not_istari_evil = yes
					not_maiar = yes
					not_maiar_fallen = yes
				}
			}
			trigger_event = race.0001
		}
		# Conquerors
		character:vangarisofkhand ?= {
			if = {
				limit = {
					is_alive = yes
					NOT = { has_game_rule = no_conquerors_frequency }
				}
				create_story = story_conqueror
			}
		}
		every_ruler = {
			every_held_title = {
				update_dynamic_coa = yes
			}
		}

		# Set up camp members and types for LAAMPs
		## Saruman - 1000TA
		character:lineofsaruman ?= {
			if = {
				limit = { 
					is_alive = yes
					game_start_date >= 5033.1.1
					game_start_date <= 6790.1.1
					has_dlc_feature = roads_to_power
				}
				add_realm_law_skip_effects = camp_purpose_scholars
			}
		}
		## Gildor Inglorion - 3000TA
		character:lineofgildor ?= {
			if = {
				limit = { 
					is_alive = yes
					has_dlc_feature = roads_to_power
				}
				add_realm_law_skip_effects = camp_purpose_scholars
			}
		}
		## Rangers of Ithilien - 3000TA
		character:linearphenian24 ?= {
			if = {
				limit = { 
					is_alive = yes
					has_dlc_feature = roads_to_power
				}
				add_realm_law_skip_effects = camp_purpose_mercenaries
				if = {
					limit = {
						character:lineofanborn1 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:linearphenian24 }
						}
					}
					add_courtier = character:lineofanborn1
				}
				if = {
					limit = {
						character:linehathor17 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:linearphenian24 }
						}
					}
					add_courtier = character:linehathor17
				}
				if = {
					limit = {
						character:lineofmadril1 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:linearphenian24 }
						}
					}
					add_courtier = character:lineofmadril1
				}
			}
		}

		character:lineofvalathmir1 ?= {
			if = {
				limit = { 
					is_alive = yes
					has_dlc_feature = roads_to_power
				}
				add_realm_law_skip_effects = camp_purpose_mercenaries
				if = {
					limit = {
						character:lineofvalathmir2 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofvalathmir1 }
						}
					}
					add_courtier = character:lineofvalathmir2
				}
				if = {
					limit = {
						character:lineofvalathmir3 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofvalathmir1 }
						}
					}
					add_courtier = character:lineofvalathmir3
				}
				if = {
					limit = {
						character:lineofvalathmir4 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofvalathmir1 }
						}
					}
					add_courtier = character:lineofvalathmir4
				}
			}
		}
		## Arkhâd's Venture - Bellakarean Adventurers
		character:lineofsujanir_adventurer ?= { #LotR
			if = {
				limit = {
					is_alive = yes
					has_dlc_feature = roads_to_power
				}
				add_realm_law_skip_effects = camp_purpose_explorers
				if = {
					limit = {
						character:lininzilloniadventurer1 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofsujanir_adventurer }
						}
					}
					add_courtier = character:lininzilloniadventurer1
				}
				if = {
					limit = {
						character:lininzilloniadventurer2 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofsujanir_adventurer }
						}
					}
					add_courtier = character:lininzilloniadventurer2
				}
				if = {
					limit = {
						character:lineoftedkazir77brother ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofsujanir_adventurer }
						}
					}
					add_courtier = character:lineoftedkazir77brother
				}
			}
		}

		#Dusk-Breaker Horde - 3000TA
		character:lineofdriond35 ?= { #LotR
			if = {
				limit = {
					is_alive = yes
					has_dlc_feature = roads_to_power
				}
				add_realm_law_skip_effects = camp_purpose_mercenaries
				if = {
					limit = {
						character:lineofdriond37 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofdriond35 }
						}
					}
					add_courtier = character:lineofdriond37
				}
				if = {
					limit = {
						character:lineofdriond39 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofdriond35 }
						}
					}
					add_courtier = character:lineofdriond39
				}
				if = {
					limit = {
						character:lineofdriond42 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofdriond35 }
						}
					}
					add_courtier = character:lineofdriond42
				}
				if = {
					limit = {
						character:lineofdriond45 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofdriond35 }
						}
					}
					add_courtier = character:lineofdriond45
				}
				if = {
					limit = {
						character:lineazumenakhad97 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofdriond35 }
						}
					}
					add_courtier = character:lineazumenakhad97
				}
				if = {
					limit = {
						character:lineoftejhazor8 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofdriond35 }
						}
					}
					add_courtier = character:lineoftejhazor8
				}
			}
		}
		character:lineofdriond37 ?= { #LotR
			if = {
				limit = {
					is_alive = yes
					has_dlc_feature = roads_to_power
					game_start_date >= 7006.4.18
				}
				add_realm_law_skip_effects = camp_purpose_mercenaries
				house ?= {
					if = {
						limit = { NOT = { house_head = PREV } }
						set_house_head = prev
					}
				}
				if = {
					limit = {
						character:lineofdriond39 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofdriond37 }
						}
					}
					add_courtier = character:lineofdriond39
				}
				if = {
					limit = {
						character:lineofdriond42 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofdriond37 }
						}
					}
					add_courtier = character:lineofdriond42
				}
				if = {
					limit = {
						character:lineofdriond45 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofdriond37 }
						}
					}
					add_courtier = character:lineofdriond45
				}
				if = {
					limit = {
						character:lineazumenakhad97 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofdriond37 }
						}
					}
					add_courtier = character:lineazumenakhad97
				}
				if = {
					limit = {
						character:lineoftejhazor8 ?= {
							is_alive = yes
							is_landed = no
							NOT = { is_courtier_of = character:lineofdriond37 }
						}
					}
					add_courtier = character:lineoftejhazor8
				}
			}
		}
	}
}
