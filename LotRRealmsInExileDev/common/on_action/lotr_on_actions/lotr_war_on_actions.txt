lotr_on_join_war_as_secondary = {
	effect = {
		if = { # Haven’t we done this before? | Achievement
			limit = {
				NOT = { exists = global_var:lotr_achievement_12 }
				realms_achievements_enabled = yes
				OR = {
					is_ai = no
					scope:war = { primary_attacker = { is_ai = no } }
				}
				trigger_if = {
					limit = { is_human = yes }
					scope:war = {
						any_war_attacker = {
							is_elf = yes
						}
						any_war_attacker = {
							is_dwarf = yes
						}
					}
				}
				trigger_else_if = {
					limit = { is_elf = yes }
					scope:war = {
						any_war_attacker = {
							is_human = yes
						}
						any_war_attacker = {
							is_dwarf = yes
						}
					}
				}
				trigger_else_if = {
					limit = { is_dwarf = yes }
					scope:war = {
						any_war_attacker = {
							is_human = yes
						}
						any_war_attacker = {
							is_elf = yes
						}
					}
				}
				trigger_else = { 
					scope:war = {
						any_war_attacker = {
							is_human = yes
						}
						any_war_attacker = {
							is_elf = yes
						}
						any_war_attacker = {
							is_dwarf = yes
						}
					}
				}
			}
			set_global_variable = lotr_achievement_12
		}
	}
}
lotr_on_war_started = {
	events = {
		wastelands.0002 # Immediate truce if declaring war agains Wastelands
	}
	effect = {
		if = { # Baruk Khazâd! Khazâd ai-mênu! | Achievement
			limit = {
				scope:attacker = {
					is_ai = no
					is_dwarf = yes
				}
				NOT = { exists = global_var:lotr_achievement_04 }
				scope:attacker = { 
					any_character_war = {
						primary_defender = { is_dwarf = yes }
					}
					any_character_war = {
						primary_defender = { is_elf = yes }
					}
					any_character_war = {
						primary_defender = { is_orc = yes }
					}
					any_character_war = {
						primary_defender = { is_human = yes }
					}
				}
			}
			set_global_variable = lotr_achievement_04
		}
		if = { # Remove defensive alliance if attacker/defender are allied to each other
			limit = { scope:attacker = { is_defensive_allied_to = { RECIPIENT = scope:defender } } }
			if = {
				limit = { scope:attacker = { has_variable_list = defensive_allies } }
				scope:attacker = {
					every_in_list = {
						variable = defensive_allies
						save_scope_as = defensive_ally
					}
				}
				scope:attacker = { clear_variable_list = defensive_allies }
				scope:defensive_ally = { clear_variable_list = defensive_allies }
			}
		}
		if = { #Defender will call in his defensive allies
			limit = {
				scope:defender = {
					has_variable_list = defensive_allies
					variable_list_size = {
						name = defensive_allies
						value > 0
					}
				}
			}
			scope:defender = {
				random_in_list = {
					list = defensive_allies
					limit = { NOT = { scope:attacker = this } }
					save_scope_as = defensive_ally
				}
				random_character_war = {
					limit = {
						primary_defender = scope:defender
						primary_attacker = scope:attacker
					}
					set_called_to = scope:defensive_ally
				}
			}
		}
		# Struggle catalyst #LotR
		scope:attacker = {
			if = {
				limit = {
					any_character_struggle = {
						involvement = involved
						phase_has_catalyst = catalyst_declared_a_war
					}
				}
				every_character_struggle = {
					involvement = involved
					activate_struggle_catalyst = {
						catalyst = catalyst_declared_a_war
						character = root
					}
				}
			}
		}
		scope:defender = {
			if = { # LotR tributary system calls
				limit = { 
					is_tributary = yes
					is_permanent_tributary = {
						SUZERAIN = var:my_suzerain
						TRIBUTARY = scope:defender
					}
				}
				var:my_suzerain = { 
					trigger_event = {
						id = tributary.0001
						days = 1
					}
				}
			}
			if = { # LotR tributary system calls
				limit = { 
					has_non_permanent_tributaries = yes
				}
				trigger_event = {
					id = tributary.0008
					days = 1
				}
			}
			if = {
				limit = {
					any_character_struggle = {
						involvement = involved
						phase_has_catalyst = catalyst_declared_war_upon
					}
				}
				every_character_struggle = {
					involvement = involved
					activate_struggle_catalyst = {
						catalyst = catalyst_declared_war_upon
						character = root
					}
				}
			}
		}
		#LotR Involved rulers in TH Struggle will consider joining

		if = { # Defender and Attacker are involved
			limit = { lotr_TH_struggle_balan_lai_defend_other_balan_lai = yes }
			struggle:thani_hazad_struggle ?= {
				every_balan_lai_member  = {
					limit = { lotr_TH_struggle_not_at_war_with_scoped_balan_lai_member = yes }
					trigger_event = {
						id = lotr_war_events.0001
						days = { 1 10 }
					}
				}
			}
		}

		if = {
			limit = {
				scope:defender = { # Is the defender the Mispir ruler
					is_at_war = yes			
					NOT = { has_culture = culture:wastelands }
					is_in_valinor = no
					highest_held_title_tier = tier_county
					has_title = title:c_mispir
					is_independent_ruler = yes
					NOT = {
						any_held_title = {
							NOT = {
								any_this_title_or_de_jure_above = {
									this = title:e_thani_hazad
								}
							}
						}
					}
				} 
			}
			every_county_in_region = {
				region = middleearth_thani_hazad_struggle_region
				limit = { 
					holder = { has_trait = balan_lai_member }
					NOR = {
						holder = scope:attacker
						holder = { is_at_war_with = scope:defender }
					}
				}
				holder = { trigger_event = { days = { 1 3 } id = lotr_war_events.0003 } }
			}
		}

		# Defensive alliance #LotR
		if = {
			limit = { scope:defender = { has_variable_list = defensive_allies } }
			scope:defender = {
				random_in_list = {
					variable = defensive_allies
					save_scope_as = defensive_ally
				}
			}
			scope:defender = {
				random_character_war = {
					limit = {
						primary_attacker = scope:attacker
						primary_defender = scope:defender
					}
					save_scope_as = current_war
				}
			}
			if = {
				limit = {
					scope:defensive_ally = { is_ai = yes }
					scope:defender = { is_ai = yes }
				}
				scope:current_war = {
					add_defender = scope:defensive_ally
				}
			}
		}
	}
}

lotr_on_war_won_attacker = {
	effect = {
		if = {
			limit = {
				scope:attacker = { is_ai = no } 
				realms_achievements_enabled = yes
			}
			if = { # The Old, the True | Achievement
				limit = { 
					NOT = { exists = global_var:lotr_achievement_71 }
					scope:attacker = { dynasty = dynasty:dynasty_khadnom }
					scope:attacker = { is_tributary = yes }
					scope:defender = scope:attacker.var:my_suzerain
					has_title = title:e_harad
				}
				set_global_variable = lotr_achievement_71
			}
			if = { # Fatherly Ire achievement
				limit = {
					NOT = { exists = global_var:lotr_achievement_31 }
					scope:attacker = character:linefinwe27
					scope:defender = character:lineisildur42
				}
				set_global_variable = lotr_achievement_31
			}
		}
	}
}