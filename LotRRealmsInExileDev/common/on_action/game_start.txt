# Called from code after history generation
# Empty scope
on_game_start = {
	events = {
		fp1_scandinavian_adventurers.0004	# FP1 - Organise Norse adventurers.
		fp1_scandinavian_adventurers.0011	# FP1 - Corral famous Norse adventurers that haven't done much yet.
		fp1_scandinavian_adventurers.0021	# FP1 - Mark game-start prioritised adventurers.
	}

	effect = {
		generate_sorcery_list_on_start = yes
		### LotR Shattered Earth Game Rule Initial Event ###
		title:c_minas_tirith.holder = { #Shattered Earth game rule.
        		trigger_event = {
				id = shattered_earth.1
				days = 1
			}
        	}

		### WAR OF THE RING ###
		# Saruman looks into the palantír.
		character:6000053 = {
        		trigger_event = { #### starting race setup
				id = race.0002
				days = 2
			}
			# LotR: set Saruman to Istari culture on game start to remove random Istari characters in his court.
			set_global_variable = {
				name = saruman
				value = this
			}
			set_culture = culture:istari
			set_immortal_age = 60
#			add_character_flag = {
#				flag = had_nickname_event
#				flag = immune_to_disease
#				years = 3500
#			}
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = {
					id = saruman.0001
					days = { 2 200 }
				}
#				trigger_event = { #this event is triggered through event-decision chain already
#					id = saruman.0045
#					days = { 6205 6570 } # 17 to 18 years
#				}
			}
		}
		#6,205 ???
		### Sauron events
		character:lineofsauron = {
			set_global_variable = {
				name = sauron
				value = this
			}
			trigger_event = sauron.0501
			trigger_event = sauron.0510
			add_dread = 100 
		}
		# Eomund / Eomer and Eowyn events
		character:6000033 = {
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = {
					id = rohan.1200
					days = 730
				}
			}
		}
		# Denethor / Stewards of Gondor Introduction
		character:linesteward38 = { # Denethor II
			set_global_variable = {
				name = denethor
				value = this
			}
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = gondor.0100
			}
		}
		#Aragorn's Introduction Event
		character:lineisildur42 = {
			set_global_variable = {
				name = aragorn
				value = this
			}
			if = {
				limit = {
					is_alive = yes
				}
				trigger_event = rangers.0100
			}
		}
		#Death of Gilraen
		character:lineisildur42 = {
			set_global_variable = {
				name = aragorn
				value = this
			}
			if = {
				limit = {
					is_alive = yes
				}
				trigger_event = {
					id = rangers.0200
					days = { 2 518 }
				}
			}
		}
		# Aragorn's Return of the King event
		character:lineisildur42 = {
			set_global_variable = {
				name = aragorn
				value = this
			}
			if = {
				limit = {
					is_alive = yes
				}
				trigger_event = {
					id = gondor.0500
					days = 6935
				}
			}
		}
		# Harad/Umbar Introductions
		character:lineofkhadnom5 = { # Kalafar of Chelkar
				set_global_variable = {
				name = kalafar
				value = this
			}
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = harad.0100
			}
		}
		character:lineofafalku15 = { # Suladan of Haruzan
				set_global_variable = {
				name = suladan
				value = this
			}
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = harad.0200
			}
		}
		character:lineofafalku37 = { # Balkuthor, Claimant to Pezarsan
				set_global_variable = {
				name = balkuthor
				value = this
			}
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = harad.0201
			}
		}
		character:lineofarzagarnom7 = { # Dasin II, Reigning King in Pezarsan
				set_global_variable = {
				name = dasim
				value = this
			}
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = harad.0300
			}
		}
		character:linepharazon2  = { # Gimilkhad, Lord of the Ar-Adunaim
				set_global_variable = {
				name = gimilkhad
				value = this
			}
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = umbar.0100
			}
		}
		character:lineofcassimir22 = { # Kathuphazgan, heir to Castamir and Black Lord of Umbar
				set_global_variable = {
				name = kathuphazgan
				value = this
			}
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = umbar.0200
			}
		}
		# Gondor Border Realm Wars
		character:linevingintur6 = {
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = {
					id = warband.2001
					days = { 15 30 }
				}
			}
		}
		character:lineisilmonir10 = {
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = {
					id = warband.2010
					days = { 15 30 }
				}
			}
		}
		character:lineofcalmacil14 = {
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = {
					id = warband.2020
					days = { 15 30 }
				}
			}
		}
		title:k_umbar.holder = { 
            if = {
                limit = {
					is_alive = yes
					is_landed = yes

                    title:d_nan_i_feryn.holder = {
                        is_independent_ruler = yes
                    }
                }    
                trigger_event = {
                    id = umbar.0001
                    days = { 15 30 }
                }
            }
        }
	}
#	on_actions = {
#	}
}


# Like on_game_start, except it is called once the host (or player, in single player) exits the lobby. Good for anything where you need to know who the players are, or what the game rules are
on_game_start_after_lobby = {
	effect = {
		### GAME RULE: VIEW ON SAME-SEX RELATIONS
		if = {
			limit = { has_game_rule = accepted_same_sex_relations }
			game_rule_accepted_same_sex_relations_effect = yes
		}

		### GAME RULE: RANDOM RULER PLACEMENT
		if = {
			limit = { NOT = { has_game_rule = random_ruler_placement_off } }
			game_rule_random_ruler_placement_effect = yes
		}

		### GAME RULE: RANDOMIZE FAITH
		if = {
			limit = { has_game_rule = randomized_faiths_on }
			game_rule_randomize_faith_effect = yes
		}

		### GAME RULE: FAITH ACCEPTANCE
		if = {
			limit = { has_game_rule = full_faith_acceptance }
			game_rule_faith_acceptance_effect = yes
		}

		### GAME RULE: GENDER EQUALITY ###
		if = {
			limit = { has_game_rule = full_gender_equality }
			game_rule_full_gender_equality_effect = yes
		}
		else_if = {
			limit = { has_game_rule = inversed_gender_equality }
			game_rule_inversed_gender_equality_effect = yes #todo fix
		}

		### GAME RULE: SEXUALITY DISTRIBUTION ###
		if = {
			limit = { NOT = { has_game_rule = sexuality_distribution_default } }
			game_rule_sexuality_distribution_effect = yes
		}

		### ACHIEVEMENT: FROM RAGS TO RICHES
		every_player = {
			limit = { highest_held_title_tier = tier_county }
			add_achievement_global_variable = {
				VARIABLE = achievement_rags_to_riches_valid
				VALUE = yes
			}
		}
	}

	events = {
		game_rule.1000	#Autopopulate families.
		orcs.9999 #Asign traits to autopopulated orcs
	}
}
