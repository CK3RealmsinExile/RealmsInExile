#On actions directing prison-related events
#Note that prison stress events are handled through the Stress on-actions.
#LOTR: auto-execution of orcs added


# Code on-action: character being imprisoned in root scope
# imprisoning character set as scope:imprisoner
on_imprison = {
	effect = { #You no longer make such decisions over your life :(
		if = {
			limit = { has_character_modifier = gaining_weight_modifier }
			remove_character_modifier = gaining_weight_modifier
		}
		if = {
			limit = { has_character_modifier = losing_weight_modifier }
			remove_character_modifier = losing_weight_modifier
		}
		if = { # Learn Sorcery
			limit = {
				scope:imprisoner = {
					has_character_flag = abducting_sorcerer
				}
			}
			scope:imprisoner = {
				trigger_event = {
					id = evil.0113
					days = 1
				}
				remove_character_flag = {
					flag = abducting_sorcerer
				}
			}
		}
		if = { #Free Peoples execute orcs automatically
			limit = {
				is_orc = yes
				scope:imprisoner = {
					religion = { is_in_family = rf_eruhini }
					is_orc = no
				}
			}
			if = { #if war leader, war is lost before it's invalidated by game
				limit = {
					any_character_war = {
						is_war_leader = root
						is_defender = root
						any_war_attacker = {
							this = scope:imprisoner
						}
					}
				}
				every_character_war = {
					limit = {
						is_war_leader = root
						is_defender = root
						any_war_attacker = {
							this = scope:imprisoner
						}
					}
					end_war = attacker
				}
			}
			if = {
				limit = {
					any_character_war = {
						is_war_leader = root
						is_attacker = root
						any_war_defender = {
							this = scope:imprisoner
						}
					}
				}
				every_character_war = {
					limit = {
						is_war_leader = root
						is_attacker = root
						any_war_defender = {
							this = scope:imprisoner
						}
					}
					end_war = defender
				}
			}
			death = {
				death_reason = death_execution
				killer = scope:imprisoner
			}
		}
	}
	events = {
		prison_notification.0001
		stewardship_duty.1066  #You imprison your client and prevent them from working for you.
		bookmark.0003 	#King Aella gets imprisoned by one of Ragnarr Lodbrok's sons
		martial_authority.2052 # Right-Hand Person Imprisoned (by you)
		martial_authority.2053 # Right-Hand Person Imprisoned (by someone else)
	}
}

# Code on-action: character released from prison in root scope. Does not fire when "released" due to dying
# imprisoning character set as scope:imprisoner
on_release_from_prison = {
	effect = {
		# No prison, no problem.
		if = {
			limit = { has_character_modifier = gruesome_festivals_designated_sacrifice_fp1_modifier }
			remove_character_modifier = gruesome_festivals_designated_sacrifice_fp1_modifier
		}
	}

	events = {
		prison.0001					# Remove imprisoned_me modifier, consume imprisonment reasons the imprisoner had
		prison_notification.2001
		intrigue_dread.4010			# Interrupts this event chain for the imprisoner when their prisoner is freed.
		human_sacrifice.0003		# Is the character marked for human sacrifice?
		martial_authority.2054 		# Right-hand wo/man released 
	}
}



################
# MAINTENANCE
################
quarterly_prison_maintenance_pulse = {
	trigger = {
		any_prisoner = { count >= 1 }
	}
	effect = { #Fire the correct events for all prisoners
		every_prisoner = {
			limit = {
				is_in_prison_type = house_arrest
			}
			trigger_event = {
				days = 1 # Queued, so we can check the pulse in parallel
				on_action = house_arrest_ongoing
			}
		}
		every_prisoner = {
			limit = {
				is_in_prison_type = dungeon
			}
			trigger_event = {
				days = 1 # Queued, so we can check the pulse in parallel
				on_action = dungeon_ongoing
			}
		}
	}
}

########
#Dungeon on_actions
########
dungeon_ongoing = {
	trigger = {
		exists = imprisoner #Don't fire if we've been released since the on_action was called.
	}

	random_events = {
		chance_to_happen = 50
		500 = 0
		100 = dungeon_ongoing.0001 #Crazy neighbor bothers you
		200 = dungeon_ongoing.0002 #Wait patiently - or not
		100 = dungeon_ongoing.0003 #Guards threaten you with violence
		200 = dungeon_ongoing.0004 #A wound becomes infected
		50 = dungeon_ongoing.0005 #Infection passes
		200 = dungeon_ongoing.0006 #Prison has low standards - unless you are Content
		100 = dungeon_ongoing.0007 #It is terrible to be Ambitious and in prison
		100 = dungeon_ongoing.0008 #Impatient, and have stayed in the dungeon "forever"
		100 = dungeon_ongoing.0009 #You prison pet is there to comfort you

		#Long-term imprisonment events:
		500 = dungeon_ongoing.9001 #Become ill
		500 = dungeon_ongoing.9002 #Become pneumonic
		500 = dungeon_ongoing.9003 #Gain stress
		500 = dungeon_ongoing.9004 #Gain stress
		500 = dungeon_ongoing.9005 #Prison Pet Dies
	}
}



#######
# House Arrest on_actions
#######
house_arrest_ongoing = {
	trigger = {
		exists = imprisoner #Don't fire if we've been released since the on_action was called.
	}

	random_events = {
		100 = house_arrest_ongoing.0001 #To be ambitious is terrible
		100 = house_arrest_ongoing.0002 #To be arrogant is terrible
		100 = house_arrest_ongoing.0003 #Missing love ones
		100 = house_arrest_ongoing.0004 #Friend at court helps you
		100 = house_arrest_ongoing.0005 #Rival at court is a nuisance
	}
}

#########
# Escape from prison (attempt)
#########
escape_from_prison = {
	events = {
		prison.9000
	}
}

escape_from_prison_success = {
	random_events = {
		1 = prison.9001 #You escaped!
		100 = prison.9002 #You escaped thanks to your prison pet
		100 = prison.9003 #You escape with friend or close family member
	}
}

escape_from_prison_failure = {
	random_events = {
		10 = prison.9501 #You're still stuck, buttercup... :(
		100 = prison.9502 #You and your prison pet failed
		100 = prison.9503 #Your friend or close family member leave you behind
		200 = fp1_shieldmaiden.0011 #Your imprisoner's shieldmaiden stymies your escape.
		50 = prison.9504 #Rival sabotages escape
		5 = prison.9505 #Become wounded
	}
}