owl_uruk_test_effect = {
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		#trait = some_trait if needed to test some visual ones
		name = "Lurtz"
		trait = callous
		trait = wrathful
		trait = lifestyle_blademaster
		trait = diligent
		trait = education_martial_3
		faith = faith:lidless_eye
		gender = male
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = male
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = male
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = male
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = male
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = female
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = female
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = female
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = female
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = female
		random_traits = yes
	}
}
### START ###
event_saruman_rules_isengard_effect = {
	add_gold = medium_gold_value
	add_prestige = medium_prestige_gain
	# add random dunedain artefact effect
	# add artefact = orthanc_palantir
	custom_tooltip = saruman.0001.a.tt2
	custom_tooltip = saruman.0001.a.tt3
	# Matt: The orthanc_palantir artefact gives a decision for Saruman to look into the palantír.
	character:lineofsaruman = { # Saruman receives Palantír of Orthanc.
		create_artifact_palantir_orthanc_effect = { OWNER = this }
	}
	root.culture = { add_innovation = innovation_numenorean_architecture_01 }
	add_character_flag = saruman_palantir_introduction
	# root = {
	# 	save_scope_as = story_owner
	# 	create_story = story_isengard_unleashed
	# }
}
event_saruman_does_not_rule_isengard_effect = {
	add_prestige = medium_prestige_loss
	add_piety = minor_piety_gain
	create_title_and_vassal_change = {
		type = swear_fealty
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	root = {
		change_liege = {
			liege = scope:denethor
			change = scope:title_change
		}
	}
	root = { save_scope_as = recipient }
	scope:denethor = { save_scope_as = actor }
	scope:actor = { trigger_event = char_interaction.0001 }
	resolve_title_and_vassal_change = scope:title_change
	hidden_effect = { # A most advantagous vassalship.
		set_vassal_contract_modification_blocked = yes
		vassal_contract_set_obligation_level = { type = feudal_government_taxes level = 0 }
		vassal_contract_set_obligation_level = { type = feudal_government_levies level = 0 }
		vassal_contract_set_obligation_level = { type = religious_rights level = 1 }
		vassal_contract_set_obligation_level = { type = council_rights level = 1 }
		# vassal_contract_set_obligation_level = { type = war_declaration_rights level = 1 }
		vassal_contract_set_obligation_level = { type = title_revocation_rights level = 1 }
	}
	event_saruman_good_events_effect = yes
}
event_saruman_good_events_effect = {
	# A Wizard in the Hall of Kings.
	trigger_event = {
		id = saruman.0005
		days = { 900 3300 }
	}
	# Consolidation of Dunland.
	trigger_event = {
		id = saruman.0007
		days = { 900 3300 }
	}
}
decision_saruman_palantir_introduction_effect = {
	add_stress = medium_stress_impact_gain
	remove_character_flag = saruman_palantir_introduction
}
event_saruman_palantir_deceived_sauron_effect = {
	set_character_faith_with_conversion = faith:lidless_eye
	capital_county = { set_county_faith = faith:lidless_eye }
	add_character_flag = saruman_accepted_sauron
	add_stress = medium_stress_impact_gain
	scope:sauron = {
		add_opinion = {
			modifier = pleased_opinion
			target = root
			opinion = 40
		}
	}
	trigger_event = { # Build me an army.
		id = saruman.0040
		days = { 1200 1800 }
	}
	trigger_event = { # Cult of the White Hand.
		id = saruman.0006
		days = { 900 2100 }
	}
	# Thrydan of the Wildmen of Dunland.
	#	Isengarder rebellion.
	#	Thrydan gathers armies.
	# Wulfgar Brynjarsson of the Frecalings.
	#	Wulfgar gathers armies.
	#	Wulfdene Wulfdening of the Frecalings.
	#		Wulfdene gathers armies.
	#	The tribe of Morcad.
	#	The tribe of Galtrev.
	#	The tribe of Starkmoors.
	#	The tribe of Carreglyn (Bog Barrows).
	#	West Marches.
	#	Dunlending rejection.
	#		Burning of Dunland (Ravndal, Nen Gwathlo).
}
event_saruman_palantir_strove_against_sauron_effect = {
	add_dread = medium_dread_gain
	add_stress = massive_stress_impact_gain
	add_character_flag = saruman_rejected_sauron
}
event_saruman_palantir_watch_effect = {
	add_stress = major_stress_gain
	add_prestige = medium_prestige_loss
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = orthanc_guard_event_troops
		men_at_arms = {
			type = orthanc_guard
			stacks = 1
		}
		location = title:c_isengard.title_province
	}
}
event_saruman_palantir_lost_effect = {
	add_stress = major_stress_gain
	# Destroy palantír artefact.
	scope:palantir_orthanc = {
		add_durability = -999
	}
	remove_character_flag = saruman_palantir_introduction
	event_saruman_good_events_effect = yes
}
event_saruman_gondor_visit_character_effect = {
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = root
		template = new_warrior_character
		culture = culture:adornaen
		faith = faith:faith_edain
		trait = open_terrain_expert
		# trait = blood_of_numenor
		save_scope_as = anorien_knight_1
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = root
		template = new_warrior_character
		culture = culture:isengard_dunlending
		faith = faith:faith_edain
		trait = cavalry_leader
		# trait = blood_of_numenor
		save_scope_as = isengarder_knight_1
	}
}
event_saruman_gondor_importance_effect = {
	remove_short_term_gold = major_gold_loss
	add_piety = medium_piety_gain
	add_character_modifier = { modifier = lotr_influence_in_minas_tirith years = 10 }
	if = {
		limit = { NOT = { is_ai = yes } }
		scope:gondor_holder = { add_prestige = medium_prestige_loss }
	}
	scope:gondor_holder = {
		add_opinion = {
			target = scope:saruman
			modifier = respect_opinion
			opinion = 5
		}
		send_interface_message = {
			title = saruman.0005.a.gondor_holder
			add_courtier = scope:isengarder_knight_1
			spawn_army = {
				uses_supply = no
				inheritable = no
				name = isengarder_tower_guard_event_troops
				men_at_arms = {
					type = orthanc_guard
					stacks = 1
				}
				location = title:c_isengard.title_province
			}
			left_icon = scope:saruman
		}
	}
	hidden_effect = {
		scope:anorien_knight_1 = { death = { death_reason = death_disappearance } }
		random = {
			chance = 10
			lotr_generate_small_family = { CHARACTER = scope:isengarder_knight_1 }
		}
	}
}
event_saruman_gondor_friend_effect = {
	remove_short_term_gold = minor_gold_loss
	add_prestige = medium_prestige_loss
	scope:gondor_holder = {
		add_opinion = {
			target = scope:saruman
			modifier = friendliness_opinion
			opinion = 20
		}
		send_interface_message = {
			title = saruman.0005.b.gondor_holder
			spawn_army = {
				uses_supply = no
				inheritable = no
				name = anorien_tower_guard_event_troops
				men_at_arms = {
					type = guard_of_the_citadel
					stacks = 1
				}
				location = title:c_minas_tirith.title_province
			}
			add_courtier = scope:anorien_knight_1
			left_icon = scope:saruman
		}
	}
	hidden_effect = {
		scope:isengarder_knight_1 = { death = { death_reason = death_disappearance } }
		random = {
			chance = 20
			lotr_generate_small_family = { CHARACTER = scope:anorien_knight_1 }
		}
	}
}

event_saruman_cult_of_white_hand_convert_effect = {
	if = {
		limit = { NOT = { faith = faith:white_hand_cult } }
		set_character_faith_with_conversion = faith:white_hand_cult
		hidden_effect = {
			faith:white_hand_cult = {
				change_fervor = {
					value = 10
					desc = fervor_gain_holy_order_founded
				}
				set_religious_head_title = title:k_the_white_hand
			}
			title:k_the_white_hand = {
				change_title_holder = {
					holder = scope:saruman
					change = scope:change
				}
			}
		}
	}
	if = {
		limit = { NOT = { capital_county = { faith = faith:white_hand_cult } } }
		capital_county = { set_county_faith = faith:white_hand_cult }
	}
	hidden_effect = {
		if = {
			limit = {
				any_realm_province = {
					NOT = { faith = faith:white_hand_cult }
					geographical_region = special_isengard_unleashed_conquest_all_regions
				}
			}
			every_realm_province = {
				limit = {
					NOT = { faith = faith:white_hand_cult }
					geographical_region = special_isengard_unleashed_conquest_all_regions
				}
				county = { add_to_list = every_realm_county }
			}

			every_in_list = {
				list = every_realm_county
				random = {
					chance = 15
					hidden_effect = { set_county_faith = faith:white_hand_cult }
				}
			}
		}
		if = {
			limit = {
				any_vassal_or_below = {
					NOT = { faith = faith:white_hand_cult }
					is_ai = yes
					exists = capital_province
					capital_province = { geographical_region = special_isengard_unleashed_conquest_all_regions }
				}
			}
			every_vassal_or_below = {
				limit = {
					NOT = { faith = faith:white_hand_cult }
					is_ai = yes
					exists = capital_province
					capital_province = { geographical_region = special_isengard_unleashed_conquest_all_regions }
				}
				random = {
					chance = 25
					set_character_faith = faith:white_hand_cult
				}
			}
		}
	}
	
	# Creat Holy Order for Cult of the White Hand. Saruman's Manslayers!
	custom_tooltip = create_holy_order_decision_effect_message
	title:c_isengard = { save_scope_as = designated_county }
	# Select an appropriate barony. If there's an empty space in the capital, we create a castle.
	# Otherwise, grab an existing non-capital castle/city.
	if = {
		limit = { scope:designated_county = { any_county_province = { has_holding = no } } }
		scope:designated_county = {
			random_county_province = {
				limit = { has_holding = no }
				set_holding_type = castle_holding
				barony = { save_scope_as = leased_barony }
			}
		}
	}
	else = {
		scope:designated_county = {
			random_county_province = {
				limit = {
					is_county_capital = no
					OR = {
						has_holding_type = castle_holding
						has_holding_type = city_holding
					}
				}
				barony = { save_scope_as = leased_barony }
			}
		}
	}
	# Create a suitable leader for the Holy Order.
	if = {
		limit = { OR = { has_character_flag = saruman_invited_orcs has_character_flag = saruman_has_urukhai } }
		create_character = {
			template = orc_holy_order_character
			location = scope:leased_barony.title_province
			save_scope_as = leader
		}
	}
	else = {
		create_character = {
			template = dunlending_holy_order_character
			location = scope:leased_barony.title_province
			save_scope_as = leader
		}
	}
	# Create the actual Holy Order.
	create_holy_order = {
		leader = scope:leader
		capital = scope:leased_barony
		save_scope_as = new_holy_order
	}
	hidden_effect = {
		scope:leader = {
			add_trait = order_member
			add_piety_level = 2
			add_gold = holy_order_starting_gold
			every_courtier = {
				add_trait = order_member
				if = {
					limit = { OR = { has_character_flag = saruman_invited_orcs has_character_flag = saruman_has_urukhai } }
					set_culture = culture:isengard_urukhai
				}
				else = { set_culture = culture:isengard_dunlending }
				set_character_faith = faith:white_hand_cult
			}
		}
	}
	# Give it some buildings.
	hidden_effect = {
		scope:leased_barony.title_province = {
			if = {
				limit = { NOT = { has_building_or_higher = curtain_walls_01 } }
				if = {
					limit = { free_building_slots > 0 }
				}
				add_building = curtain_walls_01
			}
			if = {
				limit = { NOT = { has_building_or_higher = barracks_01 } }
				limit = { free_building_slots > 0 }
				add_building = barracks_01
			}
			if = {
				limit = { NOT = { has_building_or_higher = military_camps_01 } }
				limit = { free_building_slots > 0 }
				add_building = military_camps_01
			}
		}
	}
	# Some minor misc effects.
#	create_holy_order_effect = yes
	if = {
		limit = { OR = { has_character_flag = saruman_invited_orcs has_character_flag = saruman_has_urukhai } }
		scope:leader.primary_title = {
			set_coa = ho_white_hand_manslayers
			set_title_name = holy_order_white_hand_manslayers
		}
	}
	else = {
		scope:leader.primary_title = {
			set_coa = ho_white_hand_cult
			set_title_name = holy_order_white_hand_cult
		}
	}
	# Messages.
	send_interface_toast = {
		type = holy_order_founded_message
		desc = i_created_holy_order_message
		left_icon = scope:leader
		right_icon = scope:new_holy_order.title
	}
	save_scope_as = holy_order_creator
	every_ruler = {
		limit = {
			faith = scope:holy_order_creator.faith
			NOT = { this = scope:holy_order_creator }
		}
		send_interface_message = {
			type = holy_order_founded_message
			desc = someone_created_holy_order_message
			left_icon = scope:holy_order_creator
			right_icon = scope:new_holy_order.title
		}
	}
	every_neighboring_top_liege_realm_owner = {
		limit = { NOT = { faith = scope:holy_order_creator.faith } }
		send_interface_message = {
			type = enemy_holy_order_founded_message
			desc = other_faith_neighbor_created_holy_order_message
			left_icon = scope:holy_order_creator
			right_icon = scope:new_holy_order.title
		}
	}
	scope:sauron = {
		add_opinion = {
			modifier = disappointed_opinion
			target = root
			opinion = -40
		}
	}
}
event_saruman_cult_of_white_hand_stay_effect = {
	add_prestige = minor_prestige_loss
	add_stress = medium_stress_impact_gain
}
event_saruman_cult_of_white_hand_return_effect = {
	if = {
		limit = { NOT = { faith = faith:faith_ainur } }
		set_character_faith_with_conversion = faith:faith_ainur
	}
	add_piety = massive_piety_loss
	add_stress = massive_stress_impact_gain
}

event_saruman_dismissed_dunland_effect = {
	# capital_county = { add_county_modifier = county_dunlendings_dismissive_of_isengard_modifier }
	add_prestige = medium_prestige_gain
	dynasty = { add_dynasty_prestige = 100 }
}
event_saruman_gondor_consolidation_of_dunland_effect = {
	# capital_county = { add_county_modifier = county_dunlendings_of_isengard_modifier }
	add_unpressed_claim = title:k_dunland
	add_unpressed_claim = title:k_druwaith
	add_unpressed_claim = title:k_enedhwaith
	hidden_effect = {
		make_claim_strong = title:k_dunland
		make_claim_strong = title:k_druwaith
		make_claim_strong = title:k_enedhwaith
	}
	spawn_isengard_dunlending_troops_effect = yes
	root.culture = { add_innovation = innovation_dunlending_warriors }
#	add_character_flag = saruman_has_dunlendings
}




### WIZARDS'S NEW CLOTHES ###
decision_saruman_many_colours_effect = {
	add_prestige = major_prestige_gain
	add_learning_lifestyle_xp = minor_lifestyle_xp
	give_nickname = nick_of_many_colors
	add_character_flag = had_nickname_event
	# remove_character_flag = saruman_many_coloured
	capital_county = {
		add_county_modifier = { modifier = county_saruman_many_coloured_modifier years = 20 }
	}
	# ToDo: give positive effect to Isengard.
	# ToDo: give negative effect to the other Istari.
}
decision_saruman_the_radiant_effect = {
	add_piety = minor_piety_gain
	add_learning_lifestyle_xp = miniscule_lifestyle_xp
	give_nickname = nick_the_radiant
	add_character_flag = had_nickname_event
	capital_county = {
		add_county_modifier = { modifier = county_saruman_the_radiant_modifier years = 20 }
	}
	# ToDo: give positive effect to the other Istari.
}
decision_saruman_the_white_effect = {
	add_piety = minor_piety_gain
	add_learning_lifestyle_xp = miniscule_lifestyle_xp
	give_nickname = nick_the_white_istari
	add_character_flag = had_nickname_event
	capital_county = {
		add_county_modifier = { modifier = county_saruman_the_white_modifier years = 1 }
	}
	# ToDo: give positive effect to the other Istari.
}

decision_saruman_invite_orcs_effect = {
	# capital_county = { add_county_modifier = county_uruks_of_isengard_modifier }
	add_stress = medium_stress_impact_gain
	#spawn_sarumans_uruk_court_effect = yes
	#spawn_uruk_lurtz_character_effect = yes
	# ToDo: add named Uruk characters to Saruman's court.
	# ToDo: add claim to Misty Mountain orc tribes south of Moria.
#	add_unpressed_claim = title:d_southmistymountains
	spawn_isengard_orc_troops_effect = yes
	remove_character_flag = saruman_invited_orcs
	add_character_flag = saruman_has_urukhai
	set_culture = culture:istari_evil
	trigger_event = { # Gardens of Isengard
		id = saruman.0041
		days = { 900 1800 }
	}
}
decision_saruman_innovation_orc_pits_effect = {
	root.culture = { add_innovation = innovation_orc_pits }
	spawn_isengard_orc_troops_hired_effect = yes
}
# decision_saruman_innovation_urukhai_siegeworks_effect = {
# 	root.culture = { add_innovation = innovation_urukhai_siegeworks }
# 	spawn_isengard_uruk_troops_hired_effect = yes
# }
# decision_saruman_invite_dunlendings_effect = {
# 	# ToDo: add negative/positive effect to capital county and to Dunlending culture.
# 	capital_county = { add_county_modifier = county_dunlendings_of_isengard_modifier }
# 	add_unpressed_claim = title:k_dunland
# 	add_unpressed_claim = title:k_druwaith
# 	add_unpressed_claim = title:k_enedhwaith
# 	hidden_effect = {
# 		make_claim_strong = title:k_dunland
# 		make_claim_strong = title:k_druwaith
# 		make_claim_strong = title:k_enedhwaith
# 	}
# 	spawn_isengard_dunlending_troops_effect = yes
# 	root.culture = { add_innovation = innovation_dunlending_warriors }
# 	remove_character_flag = saruman_invited_dunlendings
# 	add_character_flag = saruman_has_dunlendings
# 	trigger_event = {
# 		id = saruman.0046
# 		days = { 1200 1800 }
# 	}
# 	trigger_event = saruman.0060
# }
decision_saruman_incite_dunlendings_effect = {
	spawn_isengard_dunlending_troops_effect = yes
	# spawn_dunlending_raiding_troops_effect = yes
}
decision_saruman_isengard_industry_01_effect = {
	add_gold = medium_gold_value
	capital_county = {
		change_development_level = 4
		# county_opinion_add = 10 # Todo: Replace with a county modifier, because this is not a valid effect.
	}
	trigger_event = { # Industry of Isengard
		id = saruman.0042
		days = { 900 1800 }
	}
	remove_character_flag = saruman_isengard_industry_01
}
decision_saruman_isengard_industry_02_effect = {
	add_gold = medium_gold_value
	add_stress = minor_stress_gain
	capital_county = {
		change_development_level = 2
		# county_opinion_add = -10 # Todo: Replace with a county modifier, because this is not a valid effect.
	}
	# ToDo: devastate nearby Fangorn county and c_westemnet with events.
	trigger_event = {
		id = saruman.0045
		days = { 1200 1800 }
	}
	remove_character_flag = saruman_isengard_industry_02
}


### SETUP ISENGARD UNLEASHED CHARACTERS ###
# Setup Saruman.
# Populating Isengard's Uruk characters and Saruman's court. Add named Uruks.
# Gríma Wormtongue should travel to Saruman's court.
#spawn_sarumans_uruk_court_effect = {
#}


spawn_saruman_orc_court_effect = {
	spawn_uruk_lurtz_character_effect = yes
	# Create knights and engineers.
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = root
		template = orc_champion_character
		culture = culture:isengard_urukhai
		faith = faith:white_hand_cult
		trait = banner_orc
		trait = open_terrain_expert
		save_scope_as = urukhai_knight_1
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = root
		template = orc_champion_character
		culture = culture:isengard_urukhai
		faith = faith:white_hand_cult
		trait = reckless
		trait = rough_terrain_expert
		save_scope_as = urukhai_knight_2
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = root
		template = orc_champion_character
		culture = culture:isengard_urukhai
		faith = faith:white_hand_cult
		trait = reaver
		trait = urukhai_berserker
		save_scope_as = urukhai_knight_3
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = root
		template = orc_champion_character
		culture = culture:isengard_urukhai
		faith = faith:white_hand_cult
		trait = explosive_engineer
		trait = military_engineer
		save_scope_as = urukhai_engineer_1
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = root
		template = orc_champion_character
		culture = culture:isengard_urukhai
		faith = faith:white_hand_cult
		trait = explosive_engineer
		trait = urukhai_berserker
		save_scope_as = urukhai_engineer_2
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = root
		template = orc_champion_character
		culture = culture:isengard_urukhai
		faith = faith:white_hand_cult
		trait = whip_master
		trait = weak
		save_scope_as = isengard_orc_overseer
	}
}
saruman_orc_court_effect = {
	add_character_flag = saruman_invited_orcs
	add_courtier = scope:uruk_lurtz
	add_courtier = scope:urukhai_knight_1
	add_courtier = scope:urukhai_knight_2
	add_courtier = scope:urukhai_knight_3
	add_courtier = scope:urukhai_engineer_1
	add_courtier = scope:urukhai_engineer_2
	add_courtier = scope:isengard_orc_overseer
	# Remove invited Dunlendings
	hidden_effect = {
		scope:alfric = { death = { death_reason = death_disappearance } }
		scope:garnoc = { death = { death_reason = death_disappearance } }
		scope:dianach = { death = { death_reason = death_disappearance } }
		scope:bocaern = { death = { death_reason = death_disappearance } }
		scope:melmidoc = { death = { death_reason = death_disappearance } }
		scope:geth = { death = { death_reason = death_disappearance } }
		scope:isengarder_knight_1 = { death = { death_reason = death_disappearance } }
		scope:isengarder_knight_2 = { death = { death_reason = death_disappearance } }
		scope:isengarder_knight_3 = { death = { death_reason = death_disappearance } }
		scope:isengarder_knight_4 = { death = { death_reason = death_disappearance } }
		scope:isengarder_engineer_1 = { death = { death_reason = death_disappearance } }
	}
}

spawn_saruman_dunlending_court_effect = {
	# Spawn Isengard Dunlending/Gondorian court and knights.
	# ToDo: Add gender-bent variations of named characters for game rule.
	# Alfric, Guard of Isengard.
	create_character = {
		name = "Alfric"
		gender = male
		employer = root
		template = isengard_alfric_character_template
		save_scope_as = alfric
	}
	# Garnoc, Chieftain of the Men of the Isen.
	create_character = {
		name = "Garnoc"
		gender = male
		employer = root
		template = isengard_garnoc_character_template
		save_scope_as = garnoc
	}
	# Dianach, Doorwarden of Orthanc.
	create_character = {
		name = "Dianach"
		gender = female
		employer = root
		template = isengard_dianach_character_template
		save_scope_as = dianach
	}
	# Bocaern, Keeper of the Scriptorium.
	create_character = {
		name = "Bocaern"
		gender = male
		employer = root
		template = isengard_bocaern_character_template
		save_scope_as = bocaern
	}
	# Melmidoc, Apprentice to Bocaern.
	create_character = {
		name = "Melmidoc"
		gender = male
		employer = root
		template = isengard_melmidoc_character_template
		save_scope_as = melmidoc
	}
	# Geth, Bird Master of Saruman.
	create_character = {
		name = "Geth"
		gender = male
		employer = root
		template = isengard_geth_character_template
		save_scope_as = geth
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = root
		template = new_warrior_character
		culture = culture:isengard_dunlending
		faith = faith:faith_edain
		# trait = blood_of_numenor
		trait = forder
		save_scope_as = isengarder_knight_1
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = root
		template = new_warrior_character
		culture = culture:dunlending
		faith = faith:faith_dunlending_turthalis
		trait = reaver
		trait = open_terrain_expert
		save_scope_as = isengarder_knight_2
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = root
		template = new_warrior_character
		culture = culture:adornaen
		faith = faith:faith_dunlending_turthalis
		trait = cavalry_leader
		save_scope_as = isengarder_knight_3
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = root
		template = new_warrior_character
		culture = culture:rohirrim
		faith = faith:faith_rohirric
		trait = cavalry_leader
		save_scope_as = isengarder_knight_4
	}
	# Spawn Isengard Dunlending/Gondorian engineer
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = root
		template = new_siege_engineer
		culture = culture:isengard_dunlending
		faith = faith:faith_dunlending_turthalis
		# trait = blood_of_numenor
		trait = military_engineer
		save_scope_as = isengarder_engineer_1
	}
	hidden_effect = {
		scope:alfric = {
			add_character_flag = {
				flag = immune_to_disease
				years = 10
			}
			# set_relation_friend = scope:saruman
		}
		scope:garnoc = {
			add_character_flag = {
				flag = immune_to_disease
				years = 10
			}
		}
		scope:dianach = {
			add_character_flag = {
				flag = immune_to_disease
				years = 10
			}
			# set_relation_friend = scope:saruman
		}
		scope:bocaern = {
			add_character_flag = {
				flag = immune_to_disease
				years = 10
			}
		}
		scope:melmidoc = {
			add_character_flag = {
				flag = immune_to_disease
				years = 10
			}
		}
		scope:geth = {
			add_character_flag = {
				flag = immune_to_disease
				years = 10
			}
		}
	}
}
saruman_dunlending_court_effect = {
	add_character_flag = saruman_invited_dunlendings
	add_courtier = scope:alfric
	add_courtier = scope:garnoc
	add_courtier = scope:dianach
	add_courtier = scope:bocaern
	add_courtier = scope:melmidoc
	add_courtier = scope:geth
	add_courtier = scope:isengarder_knight_1
	add_courtier = scope:isengarder_knight_2
	add_courtier = scope:isengarder_knight_3
	add_courtier = scope:isengarder_knight_4
	add_courtier = scope:isengarder_engineer_1
	# Remove invited Orcs
	hidden_effect = {
		scope:uruk_lurtz = { death = { death_reason = death_disappearance } }
		scope:urukhai_knight_1 = { death = { death_reason = death_disappearance } }
		scope:urukhai_knight_2 = { death = { death_reason = death_disappearance } }
		scope:urukhai_knight_3 = { death = { death_reason = death_disappearance } }
		scope:urukhai_engineer_1 = { death = { death_reason = death_disappearance } }
		scope:urukhai_engineer_2 = { death = { death_reason = death_disappearance } }
		scope:isengard_orc_overseer = { death = { death_reason = death_disappearance } }
	}
}




# "Lurtz 'as arrived, he'll know what to do!"
give_lurtz_land_effect = {
	save_scope_as = urukhai_chieftain

#	create_title_and_vassal_change = {
#		type = conquest
#		save_scope_as = title_change
#		add_claim_on_loss = no
#	}
#	title:c_AAAA = { # County north of Isengard in the Misty Mountains.
#		change_title_holder = {
#			holder = scope:urukhai_chieftain
#			change = scope:title_change
#		}
#	}
#	resolve_title_and_vassal_change = scope:title_change
}
spawn_uruk_lurtz_character_effect = {
#	title:c_AAAA.title_province = { # County north of Isengard in the Misty Mountains.
#		save_scope_as = lurtz_holding
#	}
	create_character = { # ToDo create female Lurtz-like character for gender equality.
		name = "Lurtz"
		employer = root
		gender = male
		template = uruk_lurtz_character_template
		save_scope_as = uruk_lurtz
	}
	hidden_effect = {
		scope:uruk_lurtz = {
			add_character_flag = {
				flag = immune_to_disease
				years = 5
			}
	#		give_lurtz_land_effect = yes
			add_gold = 1000
			add_dread = high_dread
			# Spawn Ugluk or Female Ugluk as heir. No, they're not Lurtz' children.
			add_prestige = 2500
			dynasty = {
				add_dynasty_prestige_level = 5
				add_dynasty_prestige = 10000
				add_dynasty_perk = warfare_legacy_1
				add_dynasty_perk = warfare_legacy_2
				add_dynasty_perk = warfare_legacy_3
				add_dynasty_perk = warfare_legacy_4
			}
		}
	}
}



### FORM ISENGARD UNLEASHED ###
form_isengard_unleashed_effect = {
	save_scope_as = isengard_unleashed_founder

	# Create the title and laws
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_isengard_unleashed = {
		change_title_holder = {
			holder = scope:isengard_unleashed_founder
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	add_realm_law_skip_effects = high_partition_succession_law
	assert_if = {
		limit = { NOT = { exists = title:e_isengard_unleashed } }
		text = "Isengard Unleashed title was not created!"
	}
	hidden_effect = { set_primary_title_to = title:e_isengard_unleashed }
	every_held_title = {
		limit = {
			tier = tier_empire
			NOT = { this = title:e_isengard_unleashed }
		}
		scope:isengard_unleashed_founder = {
			destroy_title = prev
		}
	}

	# Effects for Saruman and Isengard Unleashed
	spawn_isengard_uruk_troops_effect = yes

	add_character_modifier = {
		modifier = isengard_unleashed_saruman_modifier
	}

	# Global variable
	set_global_variable = {
		name = isengard_unleashed_has_spawned
		value = yes
	}
}
form_isengard_unleashed_dunlending_effect = {
	save_scope_as = isengard_unleashed_founder

	# Create the title and laws
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_isengard_unleashed = {
		change_title_holder = {
			holder = scope:isengard_unleashed_founder
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	add_realm_law_skip_effects = high_partition_succession_law
	assert_if = {
		limit = { NOT = { exists = title:e_isengard_unleashed } }
		text = "Isengard Unleashed title was not created!"
	}
	hidden_effect = { set_primary_title_to = title:e_isengard_unleashed }
	every_held_title = {
		limit = {
			tier = tier_empire
			NOT = { this = title:e_isengard_unleashed }
		}
		scope:isengard_unleashed_founder = {
			destroy_title = prev
		}
	}

	# Effects for Saruman and Isengard Unleashed
	spawn_isengard_unleashed_dunlending_troops_effect = yes

	add_character_modifier = {
		modifier = isengard_unleashed_saruman_modifier
	}

	# Global variable
	set_global_variable = {
		name = isengard_unleashed_has_spawned
		value = yes
	}
}

# mongol_realm_invasion_war = isengard_unleashed_realm_invasion_war
# mongol_conqueror = isengard_unleashed_conqueror
### START WAR OF CONQUEST FOR S. DUNLAND ###
start_wars_for_south_dunland_effect = {
	save_temporary_scope_as = isengard_unleashed_conqueror
	# Build a list of potential targets.
	every_neighboring_top_liege_realm_owner = {
		limit = {
			any_sub_realm_county = {
				title_province = { geographical_region = special_isengard_unleashed_conquest_region_prio_1 }
			}
		}
		if = {
			limit = { NOT = { is_in_list = top_liege_targets } }
			add_to_temporary_list = top_liege_targets
		}
	}
	every_in_list = {
		list = top_liege_targets
		save_temporary_scope_as = new_war_target
		primary_title.empire = { save_temporary_scope_as = war_target_title }
		# Declare the war
		# scope:isengard_unleashed_conqueror = {
		# 	start_war = {
		# 		cb = mongol_realm_invasion_war
		# 		target = scope:new_war_target.top_liege
		# 		target_title = scope:war_target_title.empire
		# 	}
		# }
	}
}


### ISENGARD UNLEASHED TROOPS ###
spawn_isengard_uruk_troops_effect = {
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = isengard_uruk_event_troops
		levies = 800
		men_at_arms = {
			type = urukhai_fighting
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_crossbowmen
			stacks = 7
		}
		men_at_arms = {
			type = urukhai_pikemen
			stacks = 7
		}
		men_at_arms = {
			type = urukhai_berserker
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_sappers
			stacks = 2
		}
		# men_at_arms = {
		# 	type = urukhai_ballista
		# 	stacks = 10
		# }
		location = capital_province
	}
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = isengard_uruk_event_troops
		levies = 700
		men_at_arms = {
			type = urukhai_fighting
			stacks = 8
		}
		men_at_arms = {
			type = urukhai_crossbowmen
			stacks = 8
		}
		men_at_arms = {
			type = urukhai_pikemen
			stacks = 7
		}
		men_at_arms = {
			type = urukhai_berserker
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_sappers
			stacks = 2
		}
		# men_at_arms = {
		# 	type = urukhai_ballista
		# 	stacks = 10
		# }
		location = capital_province
	}
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = isengard_uruk_event_troops
		levies = 700
		men_at_arms = {
			type = urukhai_fighting
			stacks = 9
		}
		men_at_arms = {
			type = urukhai_fighting
			stacks = 5
		}
		men_at_arms = {
			type = urukhai_crossbowmen
			stacks = 7
		}
		men_at_arms = {
			type = urukhai_crossbowmen
			stacks = 5
		}
		men_at_arms = {
			type = urukhai_pikemen
			stacks = 7
		}
		men_at_arms = {
			type = urukhai_pikemen
			stacks = 7
		}
		location = capital_province
	}
}
spawn_isengard_unleashed_dunlending_troops_effect = {
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = decision_dunlending_troops
		men_at_arms = {
			type = dunlending_huscarl
			stacks = 5
		}
		men_at_arms = {
			type = dunlending_longbowmen
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_outriders
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_axe_hunters
			stacks = 2
		}
		men_at_arms = {
			type = onager
			stacks = 2
		}
		men_at_arms = {
			type = trebuchet
			stacks = 1
		}
		location = capital_province
	}
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = decision_dunlending_troops
		men_at_arms = {
			type = dunlending_huscarl
			stacks = 5
		}
		men_at_arms = {
			type = dunlending_longbowmen
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_outriders
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_axe_hunters
			stacks = 2
		}
		men_at_arms = {
			type = onager
			stacks = 2
		}
		men_at_arms = {
			type = trebuchet
			stacks = 1
		}
		location = capital_province
	}
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = decision_dunlending_raiders_troops
		men_at_arms = {
			type = dunlending_outriders
			stacks = 5
		}
		men_at_arms = {
			type = dunlending_outriders
			stacks = 5
		}
		location = capital_province
	}
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = decision_mountainmen_warband_troops
		men_at_arms = {
			type = dunlending_longbowmen
			stacks = 5
		}
		men_at_arms = {
			type = clan_swordsmen
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_axe_hunters
			stacks = 2
		}
		location = capital_province
	}
}
# Orcs from the Misty Mountains
spawn_isengard_orc_troops_effect = {
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = isengard_orc_event_troops
		men_at_arms = {
			type = orc_warriors
			stacks = 1
		}
		men_at_arms = {
			type = orc_archers
			stacks = 1
		}
		men_at_arms = {
			type = mountainorc_warriors
			stacks = 1
		}
		location = capital_province
	}
}
spawn_isengard_orc_troops_hired_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = isengard_orc_event_troops
		men_at_arms = {
			type = orc_warriors
			stacks = 1
		}
		men_at_arms = {
			type = orc_archers
			stacks = 1
		}
		men_at_arms = {
			type = mountainorc_warriors
			stacks = 1
		}
		location = capital_province
	}
}
spawn_isengard_uruk_troops_hired_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = decision_isengard_uruk_siege_troops
		men_at_arms = {
			type = urukhai_fighting
			stacks = 1
		}
		# men_at_arms = {
		# 	type = urukhai_ballista
		# 	stacks = 1
		# }
		location = capital_province
	}
}
# Dunlendings in service to Saruman
spawn_isengard_dunlending_troops_effect = {
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = isengard_dunlending_event_troops
		men_at_arms = {
			type = dunlending_huscarl
			stacks = 1
		}
		men_at_arms = {
			type = dunlending_longbowmen
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_axe_hunters
			stacks = 2
		}
		men_at_arms = {
			type = light_footmen
			stacks = 2
		}
		location = capital_province
	}
}
# Uruk-hai of Isengard
spawn_decision_isengard_uruk_troops_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = decision_isengard_uruk_troops
		men_at_arms = {
			type = urukhai_fighting
			stacks = 2
		}
		men_at_arms = {
			type = urukhai_crossbowmen
			stacks = 1
		}
		men_at_arms = {
			type = urukhai_pikemen
			stacks = 1
		}
		location = capital_province
	}
}
spawn_decision_isengard_siege_troops_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = decision_isengard_siege_troops
		men_at_arms = {
			type = urukhai_berserker
			stacks = 2
		}
		men_at_arms = {
			type = urukhai_sappers
			stacks = 1
		}
		# men_at_arms = {
		# 	type = urukhai_ballista
		# 	stacks = 2
		# }
		location = capital_province
	}
}
spawn_decision_dunlending_troops_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = decision_dunlending_troops
		men_at_arms = {
			type = dunlending_huscarl
			stacks = 1
		}
		men_at_arms = {
			type = dunlending_longbowmen
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_outriders
			stacks = 2
		}
		location = capital_province
	}
}
spawn_decision_wildmen_troops_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = decision_wildmen_dunland_troops
		levies = {
			value = decision_wildmen_troops_value
		}
		men_at_arms = {
			type = light_footmen
			stacks = 2
		}
		location = capital_province
	}
}

## Dunlending White-Hand by Juke
# After saruman is defeated, white hand cult and lidless eye dunlendings should convert to a new faith
# White-Hand Mysticism is an organized Gwathuirim faith influenced by the legacy of Sarumans rule

# juke note: deconverts white hand and lidless eye characters under saruman once he dies
saruman_destroyed_effect = {
	faith:faith_dunlending_white_hand = {
			# Remove the restrictions on converting.
			remove_variable = block_conversion_till_decision_taken
			remove_doctrine = unreformed_faith_doctrine
	}
	#Convert sarumans dunlendings to their new faith
	every_living_character = {
		limit = {
			OR = {
				faith = faith:lidless_eye
				faith = faith:white_hand_cult
			}
			OR = {
				culture = { has_cultural_pillar = heritage_daen_lintis }
				culture = { has_cultural_pillar = heritage_daen_coentis }
				culture = { has_cultural_pillar = heritage_danan_lin }
			}
			root.location = {
				OR = {
					geographical_region = middleearth_west_enedhwaith
					geographical_region = middleearth_west_isengard
					geographical_region = middleearth_west_rohan
				}
			}
			NOR = {
				any_liege_or_above = {
					is_nazgul = yes
				}
				any_liege_or_above = {
					is_sauron = yes
				}
			#	any_liege_or_above = {
			#		is_ai = no
			#	}
				is_sauron = yes
				is_nazgul = yes
			#	is_ai = no
			}
		}
		random_list = {
			70 = {
				modifier = {
					OR = {
						has_trait = witch
						has_trait = lifestyle_mystic
					}
					add = 120
				}
				modifier = {
					OR = {
						has_trait = education_learning_1
						has_trait = education_learning_2
						has_trait = education_learning_3
						has_trait = education_learning_4
					}
					add = 60
				}
				faith:faith_dunlending_white_hand= {
					save_scope_as = new_faith
				}
			}
			100 = {
				faith:faith_dunlending_turthalis= {
					save_scope_as = new_faith
				}
			}
			50 = {
				modifier = {
					has_trait = vengeful
					add = 40
				}
				modifier = {
					has_trait = callous
					add = 40
				}
				faith:faith_dunlending_khrabnazerh= {
					save_scope_as = new_faith
				}
			}
		}
		set_character_faith_with_conversion = scope:new_faith
		every_held_title = {
			limit = {
				tier = tier_county
				OR = {
					faith = faith:lidless_eye
					faith = faith:white_hand_cult
				}				
			}
			set_county_faith = scope:new_faith
		}
	}
	#deconvert rohirrim under saruman
	every_living_character = {
		limit = {
			OR = {
				faith = faith:lidless_eye
				faith = faith:white_hand_cult
			}
			culture = { has_cultural_pillar = heritage_northron}
			root.location = {
				OR = {
					geographical_region = middleearth_west_enedhwaith
					geographical_region = middleearth_west_isengard
					geographical_region = middleearth_west_rohan
				}
			}
			NOR = {
				any_liege_or_above = {
					is_nazgul = yes
				}
				any_liege_or_above = {
					is_sauron = yes
				}
				any_liege_or_above = {
					is_ai = no
				}
				is_sauron = yes
				is_nazgul = yes
				is_ai = no
			}
		}
		set_character_faith_with_conversion = faith:faith_rohirric
		every_held_title = {
			limit = {
				tier = tier_county
				OR = {
					faith = faith:lidless_eye
					faith = faith:white_hand_cult
				}				
			}
			set_county_faith = faith:faith_rohirric
		}
	}
	#convert white hand orcs to lidless eye
	if = {
		limit = {
			sauron_is_alive = yes
		}
		every_living_character = {
			limit = {
				faith = faith:white_hand_cult
				is_orc = yes
			}
			set_character_faith_with_conversion = faith:lidless_eye
			every_held_title = {
				limit = {
					tier = tier_county
					OR = {
						faith = faith:white_hand_cult
					}				
				}
				set_county_faith = faith:lidless_eye
			}
		}
	}
	#if sauron destroyed, convert to way of strength instead
	else = {
		every_living_character = {
			limit = {
				faith = faith:white_hand_cult
				is_orc = yes
			}
			set_character_faith_with_conversion = faith:way_of_strength
			every_held_title = {
				limit = {
					tier = tier_county
					OR = {
						faith = faith:white_hand_cult
					}				
				}
				set_county_faith = faith:way_of_strength
			}
		}
	
	}
}