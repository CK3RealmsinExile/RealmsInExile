###CHILD CONVERSION EFFECTS###

child_witch_conversion_success_effect = {
	scope:guardian = {
		send_interface_toast = {
			title = child_witch_conversion_success_effect.desc
			left_icon = scope:child
		}
		scope:child = {
			give_witch_secret_or_trait_effect = yes
			random_secret = {
				limit = { secret_type = secret_witch }
				reveal_to = scope:guardian
			}
			add_opinion = {
				target = scope:guardian
				modifier = impressed_opinion
				opinion = 30
			}
		}
		scope:guardian = {
			random_secret = {
				limit = {
					NOT = { is_known_by = scope:child }
					secret_type = secret_witch
				}
				reveal_to = scope:child
			}
			if = {
				limit = { this = root }
				hidden_effect = {
					add_opinion = {
						target = scope:child
						modifier = pleased_opinion
						opinion = 20
					}
				}
			}
			else = {
				add_opinion = {
					target = scope:child
					modifier = pleased_opinion
					opinion = 20
				}
			}
		}
	}
}

child_witch_conversion_failure_effect = {
	scope:guardian = {
		send_interface_toast = {
			title = child_witch_conversion_failure_effect.desc
			left_icon = scope:child
		}
		scope:child = {
		 	add_opinion = {
				target = scope:guardian
				modifier = suspicion_opinion
				opinion = -15
			}
		}
		scope:guardian = {
			if = {
				limit = { this = root }
				hidden_effect = {
					add_opinion = {
						target = scope:child
						modifier = disappointed_opinion
						opinion = -15
					}
				}
			}
			else = {
				add_opinion = {
					target = scope:child
					modifier = disappointed_opinion
					opinion = -15
				}
			}
		}
	}
}

child_witch_conversion_critical_failure_effect = {
	scope:guardian = {
		send_interface_toast = {
			title = child_witch_conversion_critical_failure_effect.desc
			left_icon = scope:child

			scope:child = {
			 	add_opinion = {
					target = scope:guardian
					modifier = hate_opinion
					opinion = -30
				}
			}
		}
		scope:child = {
			scope:guardian = {
				random_secret = {
					limit = {
						secret_type = secret_witch
					}
					save_scope_as = guardian_witch_secret
					if = {
						limit = { NOT = { is_known_by = scope:child } }
						reveal_to = scope:child
					}
					if = {
						limit = {
							exists = scope:child.liege
							NOR = {
								is_known_by = scope:child.liege
								scope:child = { is_ruler = yes }
							}
						}
						scope:child.liege = {
							send_interface_message = {
								title = child_witch_conversion_critical_failure_effect.liege.desc
								left_icon = scope:guardian
								right_icon = scope:child
								scope:guardian_witch_secret = { reveal_to = scope:child.liege }
							}
						}
					}
				}
			}
		}
		scope:guardian = {
			if = {
				limit = { this = root }
				hidden_effect = {
					add_opinion = {
						target = scope:child
						modifier = hate_opinion
						opinion = -30
					}
				}
			}
			else = {
				add_opinion = {
					target = scope:child
					modifier = hate_opinion
					opinion = -30
				}
			}
		}
	}
}

#Creates a witch and saves it as created_witch
#WHO is character who will interact with the witch and TEMPLATE is the character whose culture should be used
create_witch_effect = {
	#Gender
	random_list = {
		50 = { #Female
			modifier = {
				$WHO$ = { is_attracted_to_women = yes }
				add = 30
			}
			dummy_female = { save_temporary_scope_as = witch_gender }
		}
		50 = { #Male
			modifier = {
				$WHO$ = { is_attracted_to_men = yes }
				add = 30
			}
			dummy_male = { save_temporary_scope_as = witch_gender }
		}
	}

	#Create them
	create_character = {
		save_temporary_scope_as = created_witch
		location = $WHO$.capital_province
#		culture = $WHO$.culture
		faith = $WHO$.faith
		gender = scope:witch_gender
		template = witchy_template
		random_traits = no
	}

	scope:created_witch = {
		give_witch_secret_or_trait_effect = yes
	}

	#Sometimes adjust sexuality to create compatibility with WHO
	if = {
		limit = {
			$WHO$ = { is_attracted_to_gender_of = scope:created_witch }
			NOT = { scope:created_witch = { is_attracted_to_gender_of = $WHO$ } }
		}
		random = {
			chance = 65
			scope:created_witch = {
				set_sexuality = bisexual
			}
		}
	}
}

