owl_uruk_test_effect = {
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		#trait = some_trait if needed to test some visual ones
		name = "Lurtz"
		trait = callous
		trait = wrathful
		trait = blademaster_3
		trait = diligent
		trait = education_martial_3
		faith = faith:lidless_eye
		gender = male
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = male
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = male
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = male
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = male
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = female
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = female
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = female
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = female
		random_traits = yes
	}
	create_character = {
		employer = this
		culture = culture:isengard_urukhai
		faith = faith:lidless_eye
		gender = female
		random_traits = yes
	}
}
### START ###
event_saruman_rules_isengard_effect = {
	add_gold = medium_gold_value
	add_prestige = medium_prestige_gain
#	add random dunedain artifact effect
#	add artifact = orthanc_palantir
	custom_tooltip = saruman.0001.a.tt2
	custom_tooltip = saruman.0001.a.tt3
	# Matt: The orthanc_palantir artefact gives a decision for Saruman to look into the palantír.
	root.culture = { add_innovation = innovation_numenorean_architecture_01 }
	add_character_flag = saruman_palantir_introduction
}
event_saruman_does_not_rule_isengard_effect = {
	add_gold = minor_gold_value
	add_piety = minor_piety_gain
	trigger_event = {
		id = saruman.0001
		days = { 1200 5400 }
	}
}
decision_saruman_palantir_introduction_effect = {
	add_stress = medium_stress_impact_gain
	remove_character_flag = saruman_palantir_introduction
}
event_saruman_palantir_deceived_sauron_effect = {
	set_character_faith = faith:lidless_eye
	capital_county = {
		set_county_faith = faith:lidless_eye
	}
	add_character_flag = saruman_accepted_sauron
	add_stress = medium_stress_impact_gain
#	character:sauron = {
#		add_opinion = {
#			modifier = pleased_opinion
#			target = root
#			opinion = 40
#		}
#	}
	trigger_event = { # Build me an army.
		id = saruman.0040
		days = { 1200 1800 }
	}
}
event_saruman_palantir_strove_against_sauron_effect = {
	add_dread = medium_dread_gain
	add_stress = massive_stress_impact_gain
	add_character_flag = saruman_rejected_sauron
}
### WIZARDS'S NEW CLOTHES ###
decision_saruman_many_colours_effect = {
	add_prestige = major_prestige_gain
	add_learning_lifestyle_xp = minor_lifestyle_xp
	give_nickname = nick_of_many_colors
	add_character_flag = had_nickname_event
	remove_character_flag = saruman_many_coloured
	capital_county = {
		county_opinion_add = 20
	}
	# ToDo: give positive effect to Isengard.
	# ToDo: give negative effect to the other Istari.
}
decision_saruman_the_radiant_effect = {
	add_piety = minor_piety_gain
	add_learning_lifestyle_xp = miniscule_lifestyle_xp
	give_nickname = nick_the_radiant
	add_character_flag = had_nickname_event
	capital_county = {
		county_opinion_add = 10
	}
	# ToDo: give positive effect to the other Istari.
}
decision_saruman_the_white_effect = {
	add_piety = minor_piety_gain
	add_learning_lifestyle_xp = miniscule_lifestyle_xp
	give_nickname = nick_the_white
	add_character_flag = had_nickname_event
	capital_county = {
		county_opinion_add = 10
	}
	# ToDo: give positive effect to the other Istari.
}

decision_saruman_invite_orcs_effect = {
	capital_county = {
		change_development_level = 1
	}
	add_stress = medium_stress_impact_gain
	#spawn_sarumans_uruk_court_effect = yes
	#spawn_uruk_lurtz_character_effect = yes
	# ToDo: add named Uruk characters to Saruman's court.
	# ToDo: add claim to Misty Mountain orc tribes south of Moria.
#	add_unpressed_claim = d_southmistymountains
	spawn_isengard_orc_troops_effect = yes
	remove_character_flag = saruman_invited_orcs
	add_character_flag = saruman_has_urukhai
	set_culture = culture:istari_evil
	root.culture = {
		get_all_innovations_from = culture:istari
		add_innovation = innovation_urukhai_pits
	}
	trigger_event = { # Gardens of Isengard
		id = saruman.0041
		days = { 1200 1800 }
	}
}
decision_saruman_innovation_orc_pits_effect = {
	root.culture = { add_innovation = innovation_orc_pits }
	spawn_isengard_orc_troops_hired_effect = yes
}
decision_saruman_innovation_urukhai_siegeworks_effect = {
	root.culture = { add_innovation = innovation_urukhai_siegeworks }
	spawn_isengard_uruk_troops_hired_effect = yes
}
decision_saruman_invite_dunlendings_effect = {
	# ToDo: add negative/positive effect to capital county and to Dunlending culture.
#	capital_county = {
#	}
#	spawn_saruman_dunlending_court_effect = yes
	add_unpressed_claim = d_westmarches
	add_unpressed_claim = d_dathabha
	spawn_isengard_dunlending_troops_effect = yes
	root.culture = { add_innovation = innovation_dunlending_warriors }
	remove_character_flag = saruman_invited_dunlendings
	add_character_flag = saruman_has_dunlendings
	trigger_event = {
		id = saruman.0046
		days = { 1200 1800 }
	}
	trigger_event = saruman.0060
}
decision_saruman_incite_dunlendings_effect = {
	spawn_isengard_dunlending_troops_effect = yes
	spawn_herdfolk_dunlending_raiding_troops_effect = yes
}
decision_saruman_isengard_industry_01_effect = {
	add_gold = medium_gold_value
	capital_county = {
		change_development_level = 4
		county_opinion_add = 10
	}
	trigger_event = { # Industry of Isengard
		id = saruman.0042
		days = { 1200 1800 }
	}
	remove_character_flag = saruman_isengard_industry_01
}
decision_saruman_isengard_industry_02_effect = {
	add_gold = medium_gold_value
	add_stress = minor_stress_gain
	capital_county = {
		change_development_level = 2
		county_opinion_add = -10
	}
	# ToDo: devastate nearby Fangorn county and c_westemnet with events.
	trigger_event = {
		id = saruman.0045
		days = { 1200 1800 }
	}
	remove_character_flag = saruman_isengard_industry_02
}


### SETUP ISENGARD UNLEASHED CHARACTERS ###
# Setup Saruman.
# Populating Isengard's Uruk characters and Saruman's court. Add named Uruks.
# Gríma Wormtongue should travel to Saruman's court.
#spawn_sarumans_uruk_court_effect = {
#}



spawn_saruman_dunlending_court_effect = {
	title:c_isengard = {
		save_scope_as = isengard
	}
	# Spawn Isengard Dunlending/Gondorian court and knights
	create_character = { # Alfric, Guard of Isengard
		name = "Alfric"
		employer = global_var:saruman
		template = isengard_alfric_character_template
		save_scope_as = alfric
	}
	scope:alfric = {
		add_character_flag = {
			flag = immune_to_disease
			years = 10
		}
#		set_relation_friend = scope:saruman
	}
	create_character = { # Garnoc, Chieftain of the Men of the Isen
		name = "Garnoc"
		employer = global_var:saruman
		template = isengard_garnoc_character_template
		save_scope_as = garnoc
	}
	scope:garnoc = {
		add_character_flag = {
			flag = immune_to_disease
			years = 10
		}
	}
	create_character = { # Dianach, Doorwarden of Orthanc
		name = "Dianach"
		gender = female
		employer = global_var:saruman
		template = isengard_dianach_character_template
		save_scope_as = dianach
	}
	scope:dianach = {
		add_character_flag = {
			flag = immune_to_disease
			years = 10
		}
#		set_relation_friend = scope:saruman
	}
	create_character = { # Bocaern, Keeper of the Scriptorium
		name = "Bocaern"
		employer = global_var:saruman
		template = isengard_bocaern_character_template
		save_scope_as = bocaern
	}
	scope:bocaern = {
		add_character_flag = {
			flag = immune_to_disease
			years = 10
		}
	}
	create_character = { # Melmidoc, Apprentice to Bocaern
		name = "Melmidoc"
		employer = global_var:saruman
		template = isengard_melmidoc_character_template
		save_scope_as = melmidoc
	}
	scope:melmidoc = {
		add_character_flag = {
			flag = immune_to_disease
			years = 10
		}
	}
	create_character = { # Geth, Bird Master of Saruman
		name = "Geth"
		employer = global_var:saruman
		template = isengard_geth_character_template
		save_scope_as = geth
	}
	scope:geth = {
		add_character_flag = {
			flag = immune_to_disease
			years = 10
		}
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = global_var:saruman
		template = new_warrior_character
		faith = global_var:saruman.faith
		culture = culture:isengard_dunlending
		trait = blood_of_numenor_1
		trait = forder
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = global_var:saruman
		template = new_warrior_character
		faith = global_var:saruman.faith
		culture = culture:herdfolk_dunlending
		trait = reaver
		trait = open_terrain_expert
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = global_var:saruman
		template = new_warrior_character
		faith = global_var:saruman.faith
		culture = culture:hill_dunlending
		trait = outrider_leader
		trait = cavalry_leader
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = global_var:saruman
		template = new_warrior_character
		faith = global_var:saruman.faith
		culture = culture:rohirrim
		trait = horse_master
		trait = cavalry_leader
	}
	# Spawn Isengard Dunlending/Gondorian engineer
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = global_var:saruman
		template = new_siege_engineer
		faith = global_var:saruman.faith
		culture = culture:isengard_dunlending
		trait = blood_of_numenor_1
		trait = military_engineer
	}
}

# "Lurtz 'as arrived, he'll know what to do!"
give_lurtz_land_effect = {
	save_scope_as = urukhai_chieftain

	create_title_and_vassal_change = {
		type = conquest
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:c_AAAA = { # County north of Isengard in the Misty Mountains.
		change_title_holder = {
			holder = scope:urukhai_chieftain
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
}
spawn_uruk_lurtz_character_effect = {
	title:c_AAAA.title_province = { # County north of Isengard in the Misty Mountains.
		save_scope_as = lurtz_holding
	}
	create_character = { # ToDo create female Lurtz-like character for gender equality.
		name = "Lurtz"
		employer = global_var:saruman
		template = uruk_lurtz_character_template
		save_scope_as = uruk_lurtz
	}
	scope:uruk_lurtz = {
		add_character_flag = {
			flag = immune_to_disease
			years = 5
		}
		add_trait = firstborn_of_the_urukhai
		give_lurtz_land_effect = yes
		add_gold = 1000
		add_dread = high_dread
		# Spawn Ugluk as heir. No, he's not Lurtz son.
		form_the_mongol_empire_effect = yes
		add_prestige = 25000
		dynasty = {
			add_dynasty_prestige_level = 5
			add_dynasty_prestige = 10000
			add_dynasty_perk = warfare_legacy_1
			add_dynasty_perk = warfare_legacy_2
			add_dynasty_perk = warfare_legacy_3
			add_dynasty_perk = warfare_legacy_4
		}
	}
}



### FORM ISENGARD UNLEASHED ###
form_isengard_unleashed_effect = {
	save_scope_as = isengard_unleashed_founder

	# Create the title and laws
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_isengard_unleashed = {
		change_title_holder = {
			holder = scope:isengard_unleashed_founder
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	add_realm_law_skip_effects = high_partition_succession_law
	assert_if = {
		limit = { NOT = { exists = title:e_isengard_unleashed } }
		text = "Isengard Unleashed title was not created!"
	}
	hidden_effect = { set_primary_title_to = title:e_isengard_unleashed }
	every_held_title = {
		limit = {
			tier = tier_empire
			NOT = { this = title:e_isengard_unleashed }
		}
		scope:isengard_unleashed_founder = {
			destroy_title = prev
		}
	}

	# Effects for Saruman and Isengard Unleashed
	spawn_isengard_uruk_troops_effect = yes

	add_character_modifier = {
		modifier = isengard_unleashed_saruman_modifier
	}

	# Global variable
	set_global_variable = {
		name = isengard_unleashed_has_spawned
		value = yes
	}
}
form_isengard_unleashed_dunlending_effect = {
	save_scope_as = isengard_unleashed_founder

	# Create the title and laws
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_isengard_unleashed = {
		change_title_holder = {
			holder = scope:isengard_unleashed_founder
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	add_realm_law_skip_effects = high_partition_succession_law
	assert_if = {
		limit = { NOT = { exists = title:e_isengard_unleashed } }
		text = "Isengard Unleashed title was not created!"
	}
	hidden_effect = { set_primary_title_to = title:e_isengard_unleashed }
	every_held_title = {
		limit = {
			tier = tier_empire
			NOT = { this = title:e_isengard_unleashed }
		}
		scope:isengard_unleashed_founder = {
			destroy_title = prev
		}
	}

	# Effects for Saruman and Isengard Unleashed
	spawn_isengard_unleashed_dunlending_troops_effect = yes

	add_character_modifier = {
		modifier = isengard_unleashed_saruman_modifier
	}

	# Global variable
	set_global_variable = {
		name = isengard_unleashed_has_spawned
		value = yes
	}
}

# mongol_realm_invasion_war = isengard_unleashed_realm_invasion_war
# mongol_conqueror = isengard_unleashed_conqueror
### START WAR OF CONQUEST FOR S. DUNLAND ###
start_wars_for_south_dunland_effect = {
	save_temporary_scope_as = isengard_unleashed_conqueror
	# Build a list of potential targets.
	every_neighboring_top_liege_realm_owner = {
		limit = {
			any_sub_realm_county = {
				title_province = { geographical_region = special_isengard_unleashed_conquest_region_prio_1 }
			}
		}
		if = {
			limit = { NOT = { is_in_list = top_liege_targets } }
			add_to_temporary_list = top_liege_targets
		}
	}
	every_in_list = {
		list = top_liege_targets
		save_temporary_scope_as = new_war_target
		primary_title.empire = { save_temporary_scope_as = war_target_title }
		# Declare the war
		scope:isengard_unleashed_conqueror = {
			start_war = {
				cb = mongol_realm_invasion_war
				target = scope:new_war_target.top_liege
				target_title = scope:war_target_title.empire
			}
		}
	}
}


### ISENGARD UNLEASHED TROOPS ###
spawn_isengard_uruk_troops_effect = {
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = isengard_uruk_event_troops
		men_at_arms = {
			type = urukhai_fighting
			stacks = 15
		}
		men_at_arms = {
			type = urukhai_crossbowmen
			stacks = 7
		}
		men_at_arms = {
			type = urukhai_pikemen
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_berserker
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_sappers
			stacks = 2
		}
		men_at_arms = {
			type = urukhai_ballista
			stacks = 10
		}
		location = capital_province
	}
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = isengard_uruk_event_troops
		men_at_arms = {
			type = urukhai_fighting
			stacks = 15
		}
		men_at_arms = {
			type = urukhai_crossbowmen
			stacks = 8
		}
		men_at_arms = {
			type = urukhai_pikemen
			stacks = 7
		}
		men_at_arms = {
			type = urukhai_berserker
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_sappers
			stacks = 2
		}
		men_at_arms = {
			type = urukhai_ballista
			stacks = 10
		}
		location = capital_province
	}
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = isengard_uruk_event_troops
		men_at_arms = {
			type = urukhai_fighting
			stacks = 14
		}
		men_at_arms = {
			type = urukhai_fighting
			stacks = 5
		}
		men_at_arms = {
			type = urukhai_crossbowmen
			stacks = 7
		}
		men_at_arms = {
			type = urukhai_crossbowmen
			stacks = 5
		}
		men_at_arms = {
			type = urukhai_pikemen
			stacks = 9
		}
		men_at_arms = {
			type = urukhai_pikemen
			stacks = 7
		}
		location = capital_province
	}
}
spawn_isengard_unleashed_dunlending_troops_effect = {
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = decision_dunlending_troops
		men_at_arms = {
			type = dunlending_huscarl
			stacks = 5
		}
		men_at_arms = {
			type = dunlending_longbowmen
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_outriders
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_axe_hunters
			stacks = 2
		}
		men_at_arms = {
			type = onager
			stacks = 2
		}
		men_at_arms = {
			type = trebuchet
			stacks = 1
		}
		location = capital_province
	}
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = decision_dunlending_troops
		men_at_arms = {
			type = dunlending_huscarl
			stacks = 5
		}
		men_at_arms = {
			type = dunlending_longbowmen
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_outriders
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_axe_hunters
			stacks = 2
		}
		men_at_arms = {
			type = onager
			stacks = 2
		}
		men_at_arms = {
			type = trebuchet
			stacks = 1
		}
		location = capital_province
	}
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = decision_dunlending_raiders_troops
		men_at_arms = {
			type = dunlending_outriders
			stacks = 5
		}
		men_at_arms = {
			type = dunlending_outriders
			stacks = 5
		}
		location = capital_province
	}
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = decision_mountainmen_warband_troops
		men_at_arms = {
			type = dunlending_longbowmen
			stacks = 5
		}
		men_at_arms = {
			type = clan_swordsmen
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_axe_hunters
			stacks = 2
		}
		location = capital_province
	}
}
# Orcs from the Misty Mountains
spawn_isengard_orc_troops_effect = {
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = isengard_orc_event_troops
		men_at_arms = {
			type = orc_warriors
			stacks = 1
		}
		men_at_arms = {
			type = orc_archers
			stacks = 1
		}
		men_at_arms = {
			type = mountainorc_warriors
			stacks = 1
		}
		location = capital_province
	}
}
spawn_isengard_orc_troops_hired_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = isengard_orc_event_troops
		men_at_arms = {
			type = orc_warriors
			stacks = 1
		}
		men_at_arms = {
			type = orc_archers
			stacks = 1
		}
		men_at_arms = {
			type = mountainorc_warriors
			stacks = 1
		}
		location = capital_province
	}
}
spawn_isengard_uruk_troops_hired_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = decision_isengard_uruk_siege_troops
		men_at_arms = {
			type = urukhai_fighting
			stacks = 1
		}
		men_at_arms = {
			type = urukhai_ballista
			stacks = 1
		}
		location = capital_province
	}
}
# Dunlendings in service to Saruman
spawn_isengard_dunlending_troops_effect = {
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = isengard_dunlending_event_troops
		men_at_arms = {
			type = dunlending_huscarl
			stacks = 1
		}
		men_at_arms = {
			type = dunlending_longbowmen
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_axe_hunters
			stacks = 2
		}
		men_at_arms = {
			type = light_footmen
			stacks = 2
		}
		location = capital_province
	}
}
# Uruk-hai of Isengard
spawn_decision_isengard_uruk_troops_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = decision_isengard_uruk_troops
		men_at_arms = {
			type = urukhai_fighting
			stacks = 2
		}
		men_at_arms = {
			type = urukhai_crossbowmen
			stacks = 1
		}
		men_at_arms = {
			type = urukhai_pikemen
			stacks = 1
		}
		location = capital_province
	}
}
spawn_decision_isengard_siege_troops_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = decision_isengard_siege_troops
		men_at_arms = {
			type = urukhai_berserker
			stacks = 2
		}
		men_at_arms = {
			type = urukhai_sappers
			stacks = 1
		}
		men_at_arms = {
			type = urukhai_ballista
			stacks = 2
		}
		location = capital_province
	}
}
spawn_decision_dunlending_troops_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = decision_dunlending_troops
		men_at_arms = {
			type = dunlending_huscarl
			stacks = 1
		}
		men_at_arms = {
			type = dunlending_longbowmen
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_outriders
			stacks = 2
		}
		location = capital_province
	}
}
spawn_decision_wildmen_troops_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = decision_wildmen_troops
		levies = {
			value = decision_wildmen_troops_value
		}
		men_at_arms = {
			type = light_footmen
			stacks = 2
		}
		location = capital_province
	}
}


