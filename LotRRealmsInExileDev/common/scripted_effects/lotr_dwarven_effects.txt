### DWARVEN EFFECTS ###

### Reincarnation Effects

# Turn a newborn into a reincarnation.
# Will only be revealed upon turning 16, so if they die prematurely we can pretend they never existed
create_possible_dorfdad_effect = {
	# Save first incarnation for event scopes
	dynasty.var:dorfdad ?= { save_scope_as = my_dorfdad }
	# Save self for event scopes
	save_scope_as = new_dorfdad
	# Copy DNA
	copy_inheritable_appearance_from = scope:my_dorfdad
	# Save the kid as our newest potential reincarnation - Will be confirmed upon adulthood
	dynasty = {
		set_variable = {
			name = current_reincarnation
			value = root
		}
	}
	# Dont want him to die as a baby
	if = {
		limit = {
			has_trait = sickly
		}
		remove_trait = sickly
	}
	# Gain "resemblance of dwarf father" modifier in a few years (life expectancy)
	trigger_event = {
		id = dwarven.5002
		years = { 5 12 }
	}
}

become_dorfdad_effect = {
	# Save first incarnation for event scopes
	dynasty.var:dorfdad ?= { save_scope_as = my_dorfdad }
	# Save self for event scopes
	save_scope_as = new_dorfdad
	# Confirm as Reincarnation
	dynasty = {
		set_variable = {
			name = current_reincarnation
			value = root
		}
	}
	# Reincarnation Counter
	dynasty = {
		change_variable = {
			name = dorfdad_incarnations
			add = 1
		}
	}
	# Get the Name
	change_first_name = { template_character = scope:my_dorfdad }
	# Get the trait
	add_trait = dwarf_father
	# Education upgrade
	if = { # Education Upgrade
		limit = {
			OR = {
				has_level_1_education_trait_trigger = yes
				has_level_2_education_trait_trigger = yes
			}
		}
		if = {
			limit = { has_trait = education_diplomacy }
			buff_dorfdad_education_effect = { TYPE = diplomacy }
		}
		else_if = {
			limit = { has_trait = education_martial }
			buff_dorfdad_education_effect = { TYPE = martial }
		}
		else_if = {
			limit = { has_trait = education_stewardship }
			buff_dorfdad_education_effect = { TYPE = stewardship }
		}
		else_if = {
			limit = { has_trait = education_intrigue }
			buff_dorfdad_education_effect = { TYPE = intrigue }
		}
		else_if = {
			limit = { has_trait = education_learning }
			buff_dorfdad_education_effect = { TYPE = learning }
		}
	}
	# Remove old personality traits
	lotr_remove_personality_effect = yes
	# Add personality traits (Based on scope:my_dorfdad)
	dorfdad_personality_effect = yes
	# Add scripted hairstyle + beard!
	if = {
		limit = {
			dynasty = dynasty:dynasty_durin
		}
		add_character_flag = scripted_appearance_durin
	}
	else_if = {
		limit = {
			dynasty = dynasty:dynasty_bavor
		}
		add_character_flag = scripted_appearance_bavor
	}
	else_if = {
		limit = {
			dynasty = dynasty:dynasty_dwalin
		}
		add_character_flag = scripted_appearance_dwalin
	}
	else_if = {
		limit = {
			dynasty = dynasty:dynasty_sindri
		}
		add_character_flag = scripted_appearance_sindri
	}
	else_if = {
		limit = {
			dynasty = dynasty:dynasty_thrar
		}
		add_character_flag = scripted_appearance_thrar
	}
	else_if = {
		limit = {
			dynasty = dynasty:dynasty_thulin
		}
		add_character_flag = scripted_appearance_thulin
	}
	else_if = {
		limit = {
			dynasty = dynasty:dynasty_uri
		}
		add_character_flag = scripted_appearance_uri
	}
}

buff_dorfdad_education_effect = {
	hidden_effect = {
		remove_trait = education_$TYPE$_1
		remove_trait = education_$TYPE$_2
	}
	add_trait_force_tooltip = education_$TYPE$_3
}

lotr_remove_personality_effect = {
	# Personality traits
	remove_trait = brave
	remove_trait = craven
	remove_trait = calm
	remove_trait = wrathful
	remove_trait = chaste
	remove_trait = lustful
	remove_trait = content
	remove_trait = ambitious
	remove_trait = diligent
	remove_trait = lazy
	remove_trait = forgiving
	remove_trait = vengeful
	remove_trait = generous
	remove_trait = greedy
	remove_trait = gregarious
	remove_trait = shy
	remove_trait = honest
	remove_trait = deceitful
	remove_trait = humble
	remove_trait = arrogant
	remove_trait = just
	remove_trait = arbitrary
	remove_trait = patient
	remove_trait = impatient
	remove_trait = temperate
	remove_trait = gluttonous
	remove_trait = trusting
	remove_trait = paranoid
	remove_trait = zealous
	remove_trait = cynical
	remove_trait = compassionate
	remove_trait = callous
	remove_trait = sadistic
	remove_trait = fickle
	remove_trait = stubborn
	remove_trait = eccentric
	# Childhood traits
	remove_trait = bossy
	remove_trait = charming
	remove_trait = curious
	remove_trait = pensive
	remove_trait = rowdy
}

dorfdad_personality_effect = { # Add personality traits (based on scope:my_dorfdad)
	if = {
		limit = { scope:my_dorfdad = { has_trait = brave } }
		add_trait = brave
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = craven } }
		add_trait = craven
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = calm } }
		add_trait = calm
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = wrathful } }
		add_trait = wrathful
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = chaste } }
		add_trait = chaste
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = lustful } }
		add_trait = lustful
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = content } }
		add_trait = content
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = ambitious } }
		add_trait = ambitious
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = diligent } }
		add_trait = diligent
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = lazy } }
		add_trait = lazy
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = forgiving } }
		add_trait = forgiving
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = vengeful } }
		add_trait = vengeful
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = generous } }
		add_trait = generous
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = greedy } }
		add_trait = greedy
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = gregarious } }
		add_trait = gregarious
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = shy } }
		add_trait = shy
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = honest } }
		add_trait = honest
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = deceitful } }
		add_trait = deceitful
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = humble } }
		add_trait = humble
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = arrogant } }
		add_trait = arrogant
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = just } }
		add_trait = just
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = arbitrary } }
		add_trait = arbitrary
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = patient } }
		add_trait = patient
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = impatient } }
		add_trait = impatient
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = temperate } }
		add_trait = temperate
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = gluttonous } }
		add_trait = gluttonous
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = trusting } }
		add_trait = trusting
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = paranoid } }
		add_trait = paranoid
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = zealous } }
		add_trait = zealous
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = cynical } }
		add_trait = cynical
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = compassionate } }
		add_trait = compassionate
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = callous } }
		add_trait = callous
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = sadistic } }
		add_trait = sadistic
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = fickle } }
		add_trait = fickle
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = stubborn } }
		add_trait = stubborn
	}
	else_if = {
		limit = { scope:my_dorfdad = { has_trait = eccentric } }
		add_trait = eccentric
	}
}
