##################
# Admin Factions #
##################

# Determines which faction has the most power - Scope: situation
determine_dominant_factions_effect = {
	
	# Initialize highest and second highest tracking variables
	set_variable = { name = highest_faction_power value = 0 }
	set_variable = { name = second_highest_faction_power value = 0 }

	# Check Militarists vs Absolutists
	if = {
		limit = {
			has_variable = militarists_faction_power
			has_variable = absolutists_faction_power
			var:militarists_faction_power > var:absolutists_faction_power
		}
		set_variable = { name = highest_faction_power value = var:militarists_faction_power }
		set_variable = { name = second_highest_faction_power value = var:absolutists_faction_power }
		random_participant_group = {
			limit = { participant_group_type = militarists }
			save_scope_as = strongest_faction
		}
		random_participant_group = {
			limit = { participant_group_type = absolutists }
			save_scope_as = second_strongest_faction
		}
	}
	else_if = {
		limit = { 
			has_variable = militarists_faction_power
			has_variable = absolutists_faction_power
		}
		set_variable = { name = highest_faction_power value = var:absolutists_faction_power }
		set_variable = { name = second_highest_faction_power value = var:militarists_faction_power }
		random_participant_group = {
			limit = { participant_group_type = absolutists }
			save_scope_as = strongest_faction
		}
		random_participant_group = {
			limit = { participant_group_type = militarists }
			save_scope_as = second_strongest_faction
		}
	}

	## Check each remaining faction and update tracking variables
	# Uniformists
	if = {
		limit = { 
			has_variable = uniformists_faction_power
			has_variable = highest_faction_power
			var:uniformists_faction_power > var:highest_faction_power
		}
		set_variable = { name = second_highest_faction_power value = var:highest_faction_power }
		scope:strongest_faction = {
			save_scope_as = second_strongest_faction
		}
		set_variable = { name = highest_faction_power value = var:uniformists_faction_power }
		random_participant_group = {
			limit = { participant_group_type = uniformists }
			save_scope_as = strongest_faction
		}
	}
	else_if = {
		limit = { 
			has_variable = uniformists_faction_power
			has_variable = second_highest_faction_power
			var:uniformists_faction_power > var:second_highest_faction_power
		}
		set_variable = { name = second_highest_faction_power value = var:uniformists_faction_power }
		random_participant_group = {
			limit = { participant_group_type = uniformists }
			save_scope_as = second_strongest_faction
		}
	}
	# Pacifists
	if = {
		limit = { 
			has_variable = pacifists_faction_power
			has_variable = highest_faction_power
			var:pacifists_faction_power > var:highest_faction_power
		}
		set_variable = { name = second_highest_faction_power value = var:highest_faction_power }
		scope:strongest_faction = {
			save_scope_as = second_strongest_faction
		}
		set_variable = { name = highest_faction_power value = var:pacifists_faction_power }
		random_participant_group = {
			limit = { participant_group_type = pacifists }
			save_scope_as = strongest_faction
		}
	}
	else_if = {
		limit = {
			has_variable = pacifists_faction_power
			has_variable = second_highest_faction_power
			var:pacifists_faction_power > var:second_highest_faction_power
		}
		set_variable = { name = second_highest_faction_power value = var:pacifists_faction_power }
		random_participant_group = {
			limit = { participant_group_type = pacifists }
			save_scope_as = second_strongest_faction
		}
	}
	# Provincialists
	if = {
		limit = { 
			has_variable = provincialists_faction_power
			has_variable = highest_faction_power
			var:provincialists_faction_power > var:highest_faction_power
		}
		set_variable = { name = second_highest_faction_power value = var:highest_faction_power }
		scope:strongest_faction = {
			save_scope_as = second_strongest_faction
		}
		set_variable = { name = highest_faction_power value = var:provincialists_faction_power }
		random_participant_group = {
			limit = { participant_group_type = provincialists }
			save_scope_as = strongest_faction
		}
	}
	else_if = {
		limit = { 
			has_variable = provincialists_faction_power
			has_variable = second_highest_faction_power
			var:provincialists_faction_power > var:second_highest_faction_power
		}
		set_variable = { name = second_highest_faction_power value = var:provincialists_faction_power }
		random_participant_group = {
			limit = { participant_group_type = provincialists }
			save_scope_as = second_strongest_faction
		}
	}
	# Pluralists
	if = {
		limit = { 
			has_variable = pluralists_faction_power
			has_variable = highest_faction_power
			var:pluralists_faction_power > var:highest_faction_power
		}
		set_variable = { name = second_highest_faction_power value = var:highest_faction_power }
		scope:strongest_faction = {
			save_scope_as = second_strongest_faction
		}
		set_variable = { name = highest_faction_power value = var:pluralists_faction_power }
		random_participant_group = {
			limit = { participant_group_type = pluralists }
			save_scope_as = strongest_faction
		}
	}
	else_if = {
		limit = { 
			has_variable = pluralists_faction_power
			has_variable = second_highest_faction_power
			var:pluralists_faction_power > var:second_highest_faction_power
		}
		set_variable = { name = second_highest_faction_power value = var:pluralists_faction_power }
		random_participant_group = {
			limit = { participant_group_type = pluralists }
			save_scope_as = second_strongest_faction
		}
	}
	# Dissolutionists
	if = {
		limit = { 
			has_variable = dissolutionists_faction_power
			has_variable = highest_faction_power
			var:dissolutionists_faction_power > var:highest_faction_power
		}
		set_variable = { name = second_highest_faction_power value = var:highest_faction_power }
		scope:strongest_faction = {
			save_scope_as = second_strongest_faction
		}
		set_variable = { name = highest_faction_power value = var:dissolutionists_faction_power }
		random_participant_group = {
			limit = { participant_group_type = dissolutionists }
			save_scope_as = strongest_faction
		}
	}
	else_if = {
		limit = { 
			has_variable = dissolutionists_faction_power
			has_variable = second_highest_faction_power
			var:dissolutionists_faction_power > var:second_highest_faction_power
		}
		set_variable = { name = second_highest_faction_power value = var:dissolutionists_faction_power }
		random_participant_group = {
			limit = { participant_group_type = dissolutionists }
			save_scope_as = second_strongest_faction
		}
	}
	# Centrists
	if = {
		limit = { 
			has_variable = centrists_faction_power
			has_variable = highest_faction_power
			var:centrists_faction_power > var:highest_faction_power
		}
		set_variable = { name = second_highest_faction_power value = var:highest_faction_power }
		scope:strongest_faction = {
			save_scope_as = second_strongest_faction
		}
		set_variable = { name = highest_faction_power value = var:centrists_faction_power }
		random_participant_group = {
			limit = { participant_group_type = centrists }
			save_scope_as = strongest_faction
		}
	}
	else_if = {
		limit = { 
			has_variable = centrists_faction_power
			has_variable = second_highest_faction_power
			var:centrists_faction_power > var:second_highest_faction_power
		}
		set_variable = { name = second_highest_faction_power value = var:centrists_faction_power }
		random_participant_group = {
			limit = { participant_group_type = centrists }
			save_scope_as = second_strongest_faction
		}
	}

	# Save the two dominant factions as variables on the situation
	if = {
		limit = { exists = scope:strongest_faction }
		set_variable = {
			name = strongest_faction
			value = scope:strongest_faction
		}
	}
	if = {
		limit = { exists = scope:second_strongest_faction }
		set_variable = {
			name = second_strongest_faction
			value = scope:second_strongest_faction
		}
	}
	
	# Clear the tracking variables (though these might be useful in gui perhaps, so might want to keep them)
	if = {
		limit = { has_variable = highest_faction_power }
		remove_variable	= highest_faction_power
	}
	if = {
		limit = { has_variable = second_highest_faction_power }
		remove_variable	= second_highest_faction_power
	}
}

# Update phase if dominant factions change - Scope: situation
update_admin_factions_situation_phase_effect = { # NEED TO UPDATE TO CONSIDER CENTRALISTS
	if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = absolutists }
				var:second_strongest_faction ?= { participant_group_type = absolutists }
			}
			OR = {
				var:strongest_faction ?= { participant_group_type = uniformists }
				var:second_strongest_faction ?= { participant_group_type = uniformists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = absolutist_uniformist }
		}
	}
	else_if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = absolutists }
				var:second_strongest_faction ?= { participant_group_type = absolutists }
			}
			OR = {
				var:strongest_faction ?= { participant_group_type = militarists }
				var:second_strongest_faction ?= { participant_group_type = militarists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = absolutist_militarist }
		}
	}
	else_if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = absolutists }
				var:second_strongest_faction ?= { participant_group_type = absolutists }
			}
			OR = {
				var:strongest_faction ?= { participant_group_type = pacifists }
				var:second_strongest_faction ?= { participant_group_type = pacifists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = absolutist_pacifist }
		}
	}
	else_if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = absolutists }
				var:second_strongest_faction ?= { participant_group_type = absolutists }
			}
			OR = {
				var:strongest_faction ?= { participant_group_type = provincialists }
				var:second_strongest_faction ?= { participant_group_type = provincialists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = absolutist_provincialist }
		}
	}
	else_if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = absolutists }
				var:second_strongest_faction ?= { participant_group_type = absolutists }
			}
			OR = {
				var:strongest_faction ?= { participant_group_type = pluralists }
				var:second_strongest_faction ?= { participant_group_type = pluralists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = absolutist_pluralist }
		}
	}
	else_if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = uniformists }
				var:second_strongest_faction ?= { participant_group_type = uniformists }
			}
			OR = {
				var:strongest_faction ?= { participant_group_type = militarists }
				var:second_strongest_faction ?= { participant_group_type = militarists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = uniformist_militarist }
		}
	}
	else_if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = uniformists }
				var:second_strongest_faction ?= { participant_group_type = uniformists }
			}
			OR = {
				var:strongest_faction ?= { participant_group_type = pacifists }
				var:second_strongest_faction ?= { participant_group_type = pacifists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = uniformist_pacifist }
		}
	}
	else_if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = uniformists }
				var:second_strongest_faction ?= { participant_group_type = uniformists }
			}
			OR = {
				var:strongest_faction ?= { participant_group_type = provincialists }
				var:second_strongest_faction ?= { participant_group_type = provincialists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = uniformist_provincialist }
		}
	}
	else_if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = uniformists }
				var:second_strongest_faction ?= { participant_group_type = uniformists }
			}
			OR = {
				var:strongest_faction ?= { participant_group_type = pluralists }
				var:second_strongest_faction ?= { participant_group_type = pluralists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = uniformist_pluralist }
		}
	}
	else_if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = militarists }
				var:second_strongest_faction ?= { participant_group_type = militarists }
			}
			OR = {
				var:strongest_faction ?= { participant_group_type = pacifists }
				var:second_strongest_faction ?= { participant_group_type = pacifists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = militarist_pacifist }
		}
	}
	else_if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = militarists }
				var:second_strongest_faction ?= { participant_group_type = militarists }
			}
			OR = {
				var:strongest_faction ?= { participant_group_type = provincialists }
				var:second_strongest_faction ?= { participant_group_type = provincialists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = militarist_provincialist }
		}
	}
	else_if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = militarists }
				var:second_strongest_faction ?= { participant_group_type = militarists }
			}
			OR = {
				var:strongest_faction ?= { participant_group_type = pluralists }
				var:second_strongest_faction ?= { participant_group_type = pluralists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = militarist_pluralist }
		}
	}
	else_if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = pacifists }
				var:second_strongest_faction ?= { participant_group_type = pacifists }
			}
			OR = {
				var:strongest_faction ?= { participant_group_type = provincialists }
				var:second_strongest_faction ?= { participant_group_type = provincialists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = pacifist_provincialist }
		}
	}
	else_if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = pacifists }
				var:second_strongest_faction ?= { participant_group_type = pacifists }
			}
			OR = {
				var:strongest_faction ?= { participant_group_type = pluralists }
				var:second_strongest_faction ?= { participant_group_type = pluralists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = pacifist_pluralist }
		}
	}
	else_if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = provincialists }
				var:second_strongest_faction ?= { participant_group_type = provincialists }
			}
			OR = {
				var:strongest_faction ?= { participant_group_type = pluralists }
				var:second_strongest_faction ?= { participant_group_type = pluralists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = provincialist_pluralist }
		}
	}
	else_if = {
		limit = {
			OR = {
				var:strongest_faction ?= { participant_group_type = dissolutionists }
				var:second_strongest_faction ?= { participant_group_type = dissolutionists }
			}
		}
		every_situation_sub_region = {
			change_phase = { phase = dissolutionist }
		}
	}
}

# Determines who should be the faction leader - Scope: situation_participant_group
set_faction_leader_effect = {
	ordered_situation_group_participant = {
		order_by = admin_factions_character_power_value
		scope:situation_participant_group = {
			set_variable = {
				name = faction_leader
				value = prev
			}
		}
	}
}

# Updates the Total Faction Power saved on a given Faction - Scope: situation_participant_group
update_faction_power_effect = {
	scope:situation = {
		set_variable = {
			name = faction_power
			value = participant_group_faction_power_value
		}
	}
}

# Updates Individual Faction Power - Scope: situation_participant_group
update_character_faction_power_individual_effect = {
	set_variable = {
		name = faction_power_individual
		value = admin_factions_character_power_value
	}
}

# Updates the saved character faction power - Scope: situation_participant_group
update_character_faction_power_effect = {
	update_character_faction_power_individual_effect = yes
	set_variable = {
		name = faction_power
		value = {
			add = {
				value = var:faction_power_individual
			}
		}
	}
}

# Updates Faction Power and Leader - Scope: character (requires saved situation_participant_group)
set_faction_leader_and_power_effect = {
	save_scope_as = char
	scope:situation = {
		#Grab the most powerful member to be faction leader
		ordered_in_list = { 
			variable = $PARTICIPANT_GROUP_NAME$_top_four
			max = 1
			order_by = {
				value = 0
				add = var:faction_power_individual
			}
			save_scope_as = faction_leader
		}
		set_variable = {
			name = $PARTICIPANT_GROUP_NAME$_faction_leader
			value = scope:faction_leader
		}

		#Set variable on situation of specific factions total power
		set_variable = {
			name = $PARTICIPANT_GROUP_NAME$_faction_power
			value = participant_group_faction_power_value
		}
	}
}

# Updates Faction Power and Leader - Scope: character (requires saved situation_participant_group)
set_top_four_faction_members_effect = {
	save_scope_as = char
	# Clear variable list on situation keeping track of the faction groups 
	scope:situation = { clear_variable_list = $PARTICIPANT_GROUP_NAME$_top_four }

	scope:situation_participant_group = {
		ordered_situation_group_participant = {
			limit = { #Block faction leader from getting added twice
				trigger_if = {
					limit = { scope:situation = { has_variable = $PARTICIPANT_GROUP_NAME$_faction_leader } }
					NOT = { this = scope:situation.var:$PARTICIPANT_GROUP_NAME$_faction_leader }
				}
			} 
			order_by = {
				value = 0
				add = admin_factions_character_power_value
			}
			max = 3
			check_range_bounds = no
			save_scope_as = char
			if = {
				limit = {
					scope:situation = { 
						trigger_if = {
							limit = { 
								any_in_list = {
									variable = $PARTICIPANT_GROUP_NAME$_top_four
									exists = this
								}
							}
							variable_list_size = { name = $PARTICIPANT_GROUP_NAME$_top_four value < 5 }
						}
					}
				}
				if = { #Check if faction leader needs to get added to the list
					limit = { 
						scope:situation = { 
							has_variable = $PARTICIPANT_GROUP_NAME$_faction_leader
							trigger_if = {
								limit = { 
									any_in_list = {
										variable = $PARTICIPANT_GROUP_NAME$_top_four
										exists = this
									}
								}
								NOT = {
									any_in_list = {
										variable = $PARTICIPANT_GROUP_NAME$_top_four
										exists = var:$PARTICIPANT_GROUP_NAME$_faction_leader
									}
								}
							}
						}
					}
					scope:situation = {
						add_to_variable_list = {
							name = $PARTICIPANT_GROUP_NAME$_top_four
							target = var:$PARTICIPANT_GROUP_NAME$_faction_leader
						}
					}
				}

				scope:situation = { #Add top 3 members that are _NOT_ faction leader
					add_to_variable_list = {
						name = $PARTICIPANT_GROUP_NAME$_top_four
						target = scope:char
					}
				}
			}
		}
	}
	lotr_sort_faction_members_effect = { PARTICIPANT_GROUP_NAME = $PARTICIPANT_GROUP_NAME$ }
}

# Sorts the top four members according to their individual power
lotr_sort_faction_members_effect = {
	scope:situation = {
		if = {
			limit = { 
				trigger_if = {
					limit = { 
						any_in_list = {
							variable = $PARTICIPANT_GROUP_NAME$_top_four
							exists = this
						}
					}
					variable_list_size = { name = $PARTICIPANT_GROUP_NAME$_top_four value > 0 }
				}
			}
			ordered_in_list = {
				variable = $PARTICIPANT_GROUP_NAME$_top_four
				max = 1
				order_by = {
					value = 0
					add = var:faction_power_individual
				}
				save_scope_as = char_1
			}
			if = {
				limit = { exists = scope:char_1 }
				remove_list_variable = {
					name = $PARTICIPANT_GROUP_NAME$_top_four
					target = scope:char_1
				}
			}
		}
		if = {
			limit = { 
				trigger_if = {
					limit = { 
						any_in_list = {
							variable = $PARTICIPANT_GROUP_NAME$_top_four
							exists = this
						}
					}
					variable_list_size = { name = $PARTICIPANT_GROUP_NAME$_top_four value > 0 }
				}
			}
			ordered_in_list = {
				variable = $PARTICIPANT_GROUP_NAME$_top_four
				max = 1
				order_by = {
					value = 0
					add = var:faction_power_individual
				}
				save_scope_as = char_2
			}
			if = {
				limit = { exists = scope:char_2 }
				remove_list_variable = {
					name = $PARTICIPANT_GROUP_NAME$_top_four
					target = scope:char_2
				}
			}
		}
		if = {
			limit = { 
				trigger_if = {
					limit = { 
						any_in_list = {
							variable = $PARTICIPANT_GROUP_NAME$_top_four
							exists = this
						}
					}
					variable_list_size = { name = $PARTICIPANT_GROUP_NAME$_top_four value > 0 }
				}
			}
			ordered_in_list = {
				variable = $PARTICIPANT_GROUP_NAME$_top_four
				max = 1
				order_by = {
					value = 0
					add = var:faction_power_individual
				}
				save_scope_as = char_3
			}
			if = {
				limit = { exists = scope:char_3 }
				remove_list_variable = {
					name = $PARTICIPANT_GROUP_NAME$_top_four
					target = scope:char_3
				}
			}
		}
		if = {
			limit = { 
				trigger_if = {
					limit = { 
						any_in_list = {
							variable = $PARTICIPANT_GROUP_NAME$_top_four
							exists = this
						}
					}
					variable_list_size = { name = $PARTICIPANT_GROUP_NAME$_top_four value > 0 }
				}
			}
			ordered_in_list = {
				variable = $PARTICIPANT_GROUP_NAME$_top_four
				max = 1
				order_by = {
					value = 0
					add = var:faction_power_individual
				}
				save_scope_as = char_4
			}
			if = {
				limit = { exists = scope:char_4 }
				remove_list_variable = {
					name = $PARTICIPANT_GROUP_NAME$_top_four
					target = scope:char_4
				}
			}
		}

		if = {
			limit = { exists = scope:char_1 }
			add_to_variable_list = {
				name = $PARTICIPANT_GROUP_NAME$_top_four
				target = scope:char_1
			}
		}
		if = {
			limit = { exists = scope:char_2 }
			add_to_variable_list = {
				name = $PARTICIPANT_GROUP_NAME$_top_four
				target = scope:char_2
			}
		}
		if = {
			limit = { exists = scope:char_3 }
			add_to_variable_list = {
				name = $PARTICIPANT_GROUP_NAME$_top_four
				target = scope:char_3
			}
		}
		if = {
			limit = { exists = scope:char_4 }
			add_to_variable_list = {
				name = $PARTICIPANT_GROUP_NAME$_top_four
				target = scope:char_4
			}
		}
	}
}

update_total_member_count_effect = {
	save_scope_as = char
	if = {
		limit = { $CHANGE$ = flag:positive }
		increase_variable = {
			NAME = $PARTICIPANT_GROUP_NAME$_member_count
			AMOUNT = 1
		}
	} else_if = {
		limit = { $CHANGE$ = flag:negative }
		decrease_variable = {
			NAME = $PARTICIPANT_GROUP_NAME$_member_count
			AMOUNT = 1
		}
	}
}

remove_admin_faction_trait_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_trait = faction_militarist
			}
			remove_trait = faction_militarist
		}
		else_if = {
			limit = {
				has_trait = faction_absolutist
			}
			remove_trait = faction_absolutist
		}
		else_if = {
			limit = {
				has_trait = faction_uniformist
			}
			remove_trait = faction_uniformist
		}
		else_if = {
			limit = {
				has_trait = faction_pacifist
			}
			remove_trait = faction_pacifist
		}
		else_if = {
			limit = {
				has_trait = faction_provincialist
			}
			remove_trait = faction_provincialist
		}
		else_if = {
			limit = {
				has_trait = faction_pluralist
			}
			remove_trait = faction_pluralist
		}
		else_if = {
			limit = {
				has_trait = faction_dissolutionist
			}
			remove_trait = faction_dissolutionist
		}
		else_if = {
			limit = {
				has_trait = faction_centrist
			}
			remove_trait = faction_centrist
		}
	}
}

@base_chance = 1
@aligned_culture_ethos = 5
@unaligned_culture_ethos = -5
@aligned_trait = 5
@unaligned_trait = -5
@dbl_aligned_trait = 10
@dbl_unaligned_trait = -10
@tpl_aligned_trait = 15
@tpl_unaligned_trait = -15

randomly_choose_admin_faction_effect = {
	random_list = {
		@base_chance = { # Militarists
			add_trait = faction_militarist
			modifier = {
				culture = { has_cultural_pillar = ethos_bellicose }
				add = @aligned_culture_ethos
			}
			modifier = {
				culture = { has_cultural_pillar = ethos_stoic }
				add = @unaligned_culture_ethos
			}
			modifier = {
				has_trait = diplomat
				add = @unaligned_trait
			}
			modifier = {
				has_trait = architect
				add = @unaligned_trait
			}
			modifier = {
				has_trait = administrator
				add = @unaligned_trait
			}
			modifier = {
				has_trait = avaricious
				add = @unaligned_trait
			}
			modifier = {
				has_trait = strategist
				add = @aligned_trait
			}
			modifier = {
				has_trait = overseer
				add = @aligned_trait
			}
			modifier = {
				has_trait = gallant
				add = @aligned_trait
			}
			modifier = {
				has_trait = wrathful
				add = @aligned_trait
			}
			modifier = {
				has_trait = calm
				add = @unaligned_trait
			}
			modifier = {
				has_trait = brave
				add = @aligned_trait
			}
			modifier = {
				has_trait = craven
				add = @unaligned_trait
			}
			modifier = {
				has_trait = ambitious
				add = @aligned_trait
			}
			modifier = {
				has_trait = content
				add = @unaligned_trait
			}
			modifier = {
				has_trait = sadistic
				add = @aligned_trait
			}
			modifier = {
				has_trait = compassionate
				add = @unaligned_trait
			}
			modifier = {
				has_trait = vengeful
				add = @aligned_trait
			}
			modifier = {
				has_trait = forgiving
				add = @unaligned_trait
			}
			modifier = {
				has_trait = berserker
				add = @aligned_trait
			}
			modifier = {
				has_trait = shieldmaiden
				add = @aligned_trait
			}
			modifier = {
				has_trait = varangian
				add = @aligned_trait
			}
			modifier = {
				has_trait = conqueror
				add = @dbl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_vassal_stance = glory_hound
				add = @dbl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = friend
					has_trait = faction_militarist
				}
				any_relation = { 
					type = lover
					has_trait = faction_militarist
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = best_friend
					has_trait = faction_militarist
				}
				any_relation = { 
					type = soulmate
					has_trait = faction_militarist
				}
				add = @tpl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = rival
					has_trait = faction_militarist
				}
				any_relation = { 
					type = nemesis
					has_trait = faction_militarist
				}
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_militarist }
				add = @tpl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_pacifist }
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_pacifist }
				add = @tpl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_militarist }
				add = @tpl_unaligned_trait
			}
		}
		@base_chance = { # Absolutists
			add_trait = faction_absolutist
			modifier = {
				culture = { has_cultural_pillar = ethos_ceremonious }
				add = @aligned_culture_ethos
			}
			modifier = {
				culture = { has_cultural_pillar = ethos_communal }
				add = @unaligned_culture_ethos
			}
			modifier = {
				has_trait = august
				add = @aligned_trait
			}
			modifier = {
				has_trait = arrogant
				add = @aligned_trait
			}
			modifier = {
				has_trait = humble
				add = @unaligned_trait
			}
			modifier = {
				has_trait = ambitious
				add = @unaligned_trait
			}
			modifier = {
				has_trait = content
				add = @aligned_trait
			}
			modifier = {
				has_trait = peasant_leader
				add = @dbl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_vassal_stance = belligerent
				add = @tpl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_vassal_stance = parochial
				add = @tpl_unaligned_trait
			}
			modifier = {
				any_relation = { 
					type = friend
					has_trait = faction_absolutist
				}
				any_relation = { 
					type = lover
					has_trait = faction_absolutist
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = best_friend
					has_trait = faction_absolutist
				}
				any_relation = { 
					type = soulmate
					has_trait = faction_absolutist
				}
				add = @tpl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = rival
					has_trait = faction_absolutist
				}
				any_relation = { 
					type = nemesis
					has_trait = faction_absolutist
				}
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_absolutist }
				add = @tpl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_provincialist }
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_provincialist }
				add = @tpl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_absolutist }
				add = @tpl_unaligned_trait
			}
			modifier = {
				highest_held_title_tier = tier_empire
				add = @tpl_aligned_trait
			}
			modifier = {
				highest_held_title_tier = tier_kingdom
				add = @aligned_trait
			}
			modifier = {
				highest_held_title_tier = tier_duchy
				add = @unaligned_trait
			}
			modifier = {
				highest_held_title_tier = tier_county
				add = @tpl_unaligned_trait
			}
		}
		@base_chance = { # Uniformists
			add_trait = faction_uniformist
			modifier = {
				culture = { has_cultural_pillar = ethos_spiritual }
				top_liege = {
					any_held_title = {
						state_faith ?= {
							this = root.faith
						}
					}
				}
				add = @aligned_culture_ethos
			}
			modifier = {
				culture = { has_cultural_pillar = ethos_spiritual }
				top_liege = {
					any_held_title = {
						state_faith ?= {
							NOT = { this = root.faith }
						}
					}
				}
				add = @unaligned_culture_ethos
			}
			modifier = {
				culture = { has_cultural_pillar = ethos_egalitarian }
				add = @unaligned_culture_ethos
			}
			modifier = {
				has_trait = scholar
				add = @unaligned_trait
			}
			modifier = {
				has_trait = theologian
				top_liege = {
					any_held_title = {
						state_faith ?= {
							this = root.faith
						}
					}
				}
				add = @aligned_trait
			}
			modifier = {
				has_trait = theologian
				top_liege = {
					any_held_title = {
						state_faith ?= {
							NOT = { this = root.faith }
						}
					}
				}
				add = @unaligned_trait
			}
			modifier = {
				has_trait = lifestyle_mystic
				add = @unaligned_trait
			}
			modifier = {
				has_trait = zealous
				top_liege = {
					any_held_title = {
						state_faith ?= {
							this = root.faith
						}
					}
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				has_trait = zealous
				top_liege = {
					any_held_title = {
						state_faith ?= {
							NOT = { this = root.faith }
						}
					}
				}
				add = @dbl_unaligned_trait
			}
			modifier = {
				has_trait = cynical
				add = @dbl_unaligned_trait
			}
			modifier = {
				has_trait = callous
				add = @aligned_trait
			}
			modifier = {
				has_trait = compassionate
				add = @unaligned_trait
			}
			modifier = {
				has_trait = pilgrim
				top_liege = {
					any_held_title = {
						state_faith ?= {
							this = root.faith
						}
					}
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				has_trait = pilgrim
				top_liege = {
					any_held_title = {
						state_faith ?= {
							NOT = { this = root.faith }
						}
					}
				}
				add = @dbl_unaligned_trait
			}
			modifier = {
				has_trait = excommunicated
				add = @dbl_unaligned_trait
			}
			modifier = {
				has_trait = devoted
				top_liege = {
					any_held_title = {
						state_faith ?= {
							this = root.faith
						}
					}
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				has_trait = devoted
				top_liege = {
					any_held_title = {
						state_faith ?= {
							NOT = { this = root.faith }
						}
					}
				}
				add = @dbl_unaligned_trait
			}
			modifier = {
				has_trait = faith_warrior
				top_liege = {
					any_held_title = {
						state_faith ?= {
							this = root.faith
						}
					}
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				has_trait = faith_warrior
				top_liege = {
					any_held_title = {
						state_faith ?= {
							NOT = { this = root.faith }
						}
					}
				}
				add = @dbl_unaligned_trait
			}
			modifier = {
				has_trait = witch
				add = @dbl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_vassal_stance = minority
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_vassal_stance = zealot
				add = @tpl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = friend
					has_trait = faction_uniformist
				}
				any_relation = { 
					type = lover
					has_trait = faction_uniformist
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = best_friend
					has_trait = faction_uniformist
				}
				any_relation = { 
					type = soulmate
					has_trait = faction_uniformist
				}
				add = @tpl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = rival
					has_trait = faction_uniformist
				}
				any_relation = { 
					type = nemesis
					has_trait = faction_uniformist
				}
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_uniformist }
				add = @tpl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_pluralist }
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_pluralist }
				add = @tpl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_uniformist }
				add = @tpl_unaligned_trait
			}
			modifier = {
				top_liege = {
					any_held_title = {
						state_faith ?= {
							this = root.faith
						}
					}
				}
				top_liege.culture = root.culture
				add = @tpl_aligned_trait
			}
			modifier = {
				NAND = {
					top_liege = {
						any_held_title = {
							state_faith ?= {
								this = root.faith
							}
						}
					}
					top_liege.culture = root.culture
				}
				add = @tpl_unaligned_trait
			}
		}
		@base_chance = { # Pacifists
			add_trait = faction_pacifist
			modifier = {
				culture = { has_cultural_pillar = ethos_stoic }
				add = @aligned_culture_ethos
			}
			modifier = {
				culture = { has_cultural_pillar = ethos_bellicose }
				add = @unaligned_culture_ethos
			}
			modifier = {
				has_trait = diplomat
				add = @aligned_trait
			}
			modifier = {
				has_trait = architect
				add = @aligned_trait
			}
			modifier = {
				has_trait = administrator
				add = @aligned_trait
			}
			modifier = {
				has_trait = avaricious
				add = @aligned_trait
			}
			modifier = {
				has_trait = strategist
				add = @unaligned_trait
			}
			modifier = {
				has_trait = overseer
				add = @unaligned_trait
			}
			modifier = {
				has_trait = gallant
				add = @unaligned_trait
			}
			modifier = {
				has_trait = wrathful
				add = @unaligned_trait
			}
			modifier = {
				has_trait = calm
				add = @aligned_trait
			}
			modifier = {
				has_trait = brave
				add = @unaligned_trait
			}
			modifier = {
				has_trait = craven
				add = @aligned_trait
			}
			modifier = {
				has_trait = ambitious
				add = @unaligned_trait
			}
			modifier = {
				has_trait = content
				add = @aligned_trait
			}
			modifier = {
				has_trait = sadistic
				add = @unaligned_trait
			}
			modifier = {
				has_trait = compassionate
				add = @aligned_trait
			}
			modifier = {
				has_trait = vengeful
				add = @unaligned_trait
			}
			modifier = {
				has_trait = forgiving
				add = @aligned_trait
			}
			modifier = {
				has_trait = berserker
				add = @unaligned_trait
			}
			modifier = {
				has_trait = shieldmaiden
				add = @unaligned_trait
			}
			modifier = {
				has_trait = varangian
				add = @unaligned_trait
			}
			modifier = {
				has_trait = conqueror
				add = @dbl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_vassal_stance = glory_hound
				add = @dbl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_vassal_stance = parochial
				add = @aligned_trait
			}
			modifier = {
				any_relation = { 
					type = friend
					has_trait = faction_pacifist
				}
				any_relation = { 
					type = lover
					has_trait = faction_pacifist
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = best_friend
					has_trait = faction_pacifist
				}
				any_relation = { 
					type = soulmate
					has_trait = faction_pacifist
				}
				add = @tpl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = rival
					has_trait = faction_pacifist
				}
				any_relation = { 
					type = nemesis
					has_trait = faction_pacifist
				}
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_militarist }
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_pacifist }
				add = @tpl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_pacifist }
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_militarist }
				add = @tpl_aligned_trait
			}
		}
		@base_chance = { # Provincialists
			add_trait = faction_provincialist
			modifier = {
				culture = { has_cultural_pillar = ethos_communal }
				add = @aligned_culture_ethos
			}
			modifier = {
				culture = { has_cultural_pillar = ethos_ceremonious }
				add = @unaligned_culture_ethos
			}
			modifier = {
				has_trait = august
				add = @unaligned_trait
			}
			modifier = {
				has_trait = arrogant
				add = @unaligned_trait
			}
			modifier = {
				has_trait = humble
				add = @aligned_trait
			}
			modifier = {
				has_trait = ambitious
				add = @aligned_trait
			}
			modifier = {
				has_trait = content
				add = @unaligned_trait
			}
			modifier = {
				has_trait = peasant_leader
				add = @dbl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_vassal_stance = belligerent
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_vassal_stance = parochial
				add = @tpl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = friend
					has_trait = faction_provincialist
				}
				any_relation = { 
					type = lover
					has_trait = faction_provincialist
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = best_friend
					has_trait = faction_provincialist
				}
				any_relation = { 
					type = soulmate
					has_trait = faction_provincialist
				}
				add = @tpl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = rival
					has_trait = faction_provincialist
				}
				any_relation = { 
					type = nemesis
					has_trait = faction_provincialist
				}
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_absolutist }
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_provincialist }
				add = @tpl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_provincialist }
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_absolutist }
				add = @tpl_aligned_trait
			}
			modifier = {
				highest_held_title_tier = tier_empire
				add = @tpl_unaligned_trait
			}
			modifier = {
				highest_held_title_tier = tier_kingdom
				add = @unaligned_trait
			}
			modifier = {
				highest_held_title_tier = tier_duchy
				add = @aligned_trait
			}
			modifier = {
				highest_held_title_tier = tier_county
				add = @tpl_aligned_trait
			}
		}
		@base_chance = { # Pluralists
			add_trait = faction_pluralist
			modifier = {
				culture = { has_cultural_pillar = ethos_egalitarian }
				add = @aligned_culture_ethos
			}
			modifier = {
				culture = { has_cultural_pillar = ethos_spiritual }
				top_liege = {
					any_held_title = {
						state_faith ?= {
							this = root.faith
						}
					}
				}
				add = @unaligned_culture_ethos
			}
			modifier = {
				culture = { has_cultural_pillar = ethos_spiritual }
				top_liege = {
					any_held_title = {
						state_faith ?= {
							NOT = { this = root.faith }
						}
					}
				}
				add = @aligned_culture_ethos
			}
			modifier = {
				has_trait = scholar
				add = @aligned_trait
			}
			modifier = {
				has_trait = theologian
				top_liege = {
					any_held_title = {
						state_faith ?= {
							this = root.faith
						}
					}
				}
				add = @unaligned_trait
			}
			modifier = {
				has_trait = theologian
				top_liege = {
					any_held_title = {
						state_faith ?= {
							NOT = { this = root.faith }
						}
					}
				}
				add = @aligned_trait
			}
			modifier = {
				has_trait = lifestyle_mystic
				add = @aligned_trait
			}
			modifier = {
				has_trait = zealous
				top_liege = {
					any_held_title = {
						state_faith ?= {
							this = root.faith
						}
					}
				}
				add = @dbl_unaligned_trait
			}
			modifier = {
				has_trait = zealous
				top_liege = {
					any_held_title = {
						state_faith ?= {
							NOT = { this = root.faith }
						}
					}
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				has_trait = cynical
				add = @dbl_aligned_trait
			}
			modifier = {
				has_trait = callous
				add = @unaligned_trait
			}
			modifier = {
				has_trait = compassionate
				add = @aligned_trait
			}
			modifier = {
				has_trait = pilgrim
				top_liege = {
					any_held_title = {
						state_faith ?= {
							this = root.faith
						}
					}
				}
				add = @dbl_unaligned_trait
			}
			modifier = {
				has_trait = pilgrim
				top_liege = {
					any_held_title = {
						state_faith ?= {
							NOT = { this = root.faith }
						}
					}
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				has_trait = excommunicated
				add = @dbl_aligned_trait
			}
			modifier = {
				has_trait = devoted
				top_liege = {
					any_held_title = {
						state_faith ?= {
							this = root.faith
						}
					}
				}
				add = @dbl_unaligned_trait
			}
			modifier = {
				has_trait = devoted
				top_liege = {
					any_held_title = {
						state_faith ?= {
							NOT = { this = root.faith }
						}
					}
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				has_trait = faith_warrior
				top_liege = {
					any_held_title = {
						state_faith ?= {
							this = root.faith
						}
					}
				}
				add = @dbl_unaligned_trait
			}
			modifier = {
				has_trait = faith_warrior
				top_liege = {
					any_held_title = {
						state_faith ?= {
							NOT = { this = root.faith }
						}
					}
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				has_trait = witch
				add = @dbl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_vassal_stance = minority
				add = @tpl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_vassal_stance = zealot
				add = @tpl_unaligned_trait
			}
			modifier = {
				any_relation = { 
					type = friend
					has_trait = faction_pluralist
				}
				any_relation = { 
					type = lover
					has_trait = faction_pluralist
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = best_friend
					has_trait = faction_pluralist
				}
				any_relation = { 
					type = soulmate
					has_trait = faction_pluralist
				}
				add = @tpl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = rival
					has_trait = faction_pluralist
				}
				any_relation = { 
					type = nemesis
					has_trait = faction_pluralist
				}
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_uniformist }
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_pluralist }
				add = @tpl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_pluralist }
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_uniformist }
				add = @tpl_aligned_trait
			}
			modifier = {
				NAND = {
					top_liege = {
						any_held_title = {
							state_faith ?= {
								this = root.faith
							}
						}
					}
					top_liege.culture = root.culture
				}
				add = @tpl_aligned_trait
			}
			modifier = {
				top_liege = {
					any_held_title = {
						state_faith ?= {
							this = root.faith
						}
					}
				}
				top_liege.culture = root.culture
				add = @tpl_unaligned_trait
			}
		}
		@base_chance = { # Dissolutionists
			add_trait = faction_dissolutionist
			modifier = {
				has_trait = schemer
				add = @aligned_trait
			}
			modifier = {
				has_trait = seducer
				add = @aligned_trait
			}
			modifier = {
				has_trait = torturer
				add = @aligned_trait
			}
			modifier = {
				has_trait = deceitful
				add = @aligned_trait
			}
			modifier = {
				has_trait = honest
				add = @unaligned_trait
			}
			modifier = {
				has_trait = ambitious
				add = @aligned_trait
			}
			modifier = {
				has_trait = content
				add = @unaligned_trait
			}
			modifier = {
				has_trait = arbitrary
				add = @aligned_trait
			}
			modifier = {
				has_trait = just
				add = @unaligned_trait
			}
			modifier = {
				has_trait = loyal
				add = @dbl_unaligned_trait
			}
			modifier = {
				has_trait = disloyal
				add = @dbl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_vassal_stance = courtly
				add = @tpl_unaligned_trait
			}
			modifier = {
				any_relation = { 
					type = friend
					has_trait = faction_dissolutionist
				}
				any_relation = { 
					type = lover
					has_trait = faction_dissolutionist
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = best_friend
					has_trait = faction_dissolutionist
				}
				any_relation = { 
					type = soulmate
					has_trait = faction_dissolutionist
				}
				add = @tpl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = rival
					has_trait = faction_dissolutionist
				}
				any_relation = { 
					type = nemesis
					has_trait = faction_dissolutionist
				}
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_dissolutionist }
				add = @tpl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_centrist }
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_centrist }
				add = @tpl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_dissolutionist }
				add = @tpl_unaligned_trait
			}
		}
		@base_chance = { # Centrists
			add_trait = faction_centrist
			modifier = {
				culture = { has_cultural_pillar = ethos_bureaucratic }
				add = @aligned_culture_ethos
			}
			modifier = {
				has_trait = schemer
				add = @unaligned_trait
			}
			modifier = {
				has_trait = seducer
				add = @unaligned_trait
			}
			modifier = {
				has_trait = torturer
				add = @unaligned_trait
			}
			modifier = {
				has_trait = deceitful
				add = @unaligned_trait
			}
			modifier = {
				has_trait = honest
				add = @aligned_trait
			}
			modifier = {
				has_trait = ambitious
				add = @unaligned_trait
			}
			modifier = {
				has_trait = content
				add = @aligned_trait
			}
			modifier = {
				has_trait = arbitrary
				add = @unaligned_trait
			}
			modifier = {
				has_trait = just
				add = @aligned_trait
			}
			modifier = {
				has_trait = loyal
				add = @dbl_aligned_trait
			}
			modifier = {
				has_trait = disloyal
				add = @dbl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_vassal_stance = courtly
				add = @tpl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = friend
					has_trait = faction_centrist
				}
				any_relation = { 
					type = lover
					has_trait = faction_centrist
				}
				add = @dbl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = best_friend
					has_trait = faction_centrist
				}
				any_relation = { 
					type = soulmate
					has_trait = faction_centrist
				}
				add = @tpl_aligned_trait
			}
			modifier = {
				any_relation = { 
					type = rival
					has_trait = faction_centrist
				}
				any_relation = { 
					type = nemesis
					has_trait = faction_centrist
				}
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_dissolutionist }
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = loyal
				liege = { has_trait = faction_centrist }
				add = @tpl_aligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_centrist }
				add = @tpl_unaligned_trait
			}
			modifier = {
				is_independent_ruler = no
				has_trait = disloyal
				liege = { has_trait = faction_dissolutionist }
				add = @tpl_aligned_trait
			}
		}
	}
}