end_investments_minor_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_spend_money.dds"
	}
	sort_order = 1

	is_shown = {
		has_character_modifier = church_investment_cost_modifier
	}

	effect = {
		remove_character_modifier = church_investment_modifier
		remove_character_modifier = church_investment_cost_modifier
	}

	ai_potential = {
		always = no
	}

	ai_check_interval = 0
}

choose_designated_terrain_decision = {
	ai_check_interval = 120

	picture = { reference = "gfx/interface/illustrations/decisions/ep3_decision_laamp_neutral_mountain.dds" }

	sort_order = 10
	decision_group_type = major

	is_shown = {
		is_landed = no
		has_perk = mustering_the_troops_perk
		NOR = {
			landless_inspector_terrain_master_trigger = { TERRAIN = woodlands }
			landless_inspector_terrain_master_trigger = { TERRAIN = highlands }
			landless_inspector_terrain_master_trigger = { TERRAIN = lowlands }
			landless_inspector_terrain_master_trigger = { TERRAIN = drylands }
		}
	}

	widget = {
		gui = "decision_view_widget_option_list_generic"
		controller = decision_option_list_controller
		decision_to_second_step_button = "CHOOSE_DESIGNATED_TERRAIN_DECISION_NEXT_STEP_BUTTON"
		show_from_start = yes

		item = { # Woodlands
			value = master_forest_terrain
			current_description = designated_terrain_forest_decision
			localization = designated_terrain_forest_decision
			icon = "gfx/interface/icons/terrain_types/forest.dds"
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = {
							OR = {
								terrain = forest
								terrain = jungle
								terrain = taiga
								terrain = wetlands
							}
						}
					}
					add = 100
				}
			}
		}
		item = { # Highlands
			value = master_mountain_terrain
			current_description = designated_terrain_mountain_decision
			localization = designated_terrain_mountain_decision
			icon = "gfx/interface/icons/terrain_types/mountains.dds"
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = {
							OR = {
								terrain = mountains
								terrain = hills
								terrain = desert_mountains
							}
						}
					}
					add = 100
				}
			}
		}
		item = { # Lowlands
			value = master_plains_terrain
			current_description = designated_terrain_plains_decision
			localization = designated_terrain_plains_decision
			icon = "gfx/interface/icons/terrain_types/plains.dds"
			ai_chance = { 
				value = 5
				if = {
					limit = {
						location = {
							OR = {
								terrain = plains
								terrain = steppe
								terrain = farmlands
								terrain = floodplains
							}
						}
					}
					add = 100
				}
			}
		}
		item = { # Drylands
			value = master_drylands_terrain
			current_description = designated_terrain_drylands_decision
			localization = designated_terrain_drylands_decision
			icon = "gfx/interface/icons/terrain_types/drylands.dds"
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = {
							OR = {
								terrain = drylands
								terrain = desert
								terrain = oasis
							}
						}
					}
					add = 100
				}
			}
		}
	}

	effect = {
		switch = {
			trigger = yes
			scope:master_forest_terrain = {
				custom_tooltip = master_forest_terrain_effect_tooltip
				landless_inspector_assign_terrain_effect = { TERRAIN = woodlands }
			}
			scope:master_mountain_terrain = {
				custom_tooltip = master_mountain_terrain_effect_tooltip
				landless_inspector_assign_terrain_effect = { TERRAIN = highlands }
			}
			scope:master_plains_terrain = {
				custom_tooltip = master_plains_terrain_effect_tooltip
				landless_inspector_assign_terrain_effect = { TERRAIN = lowlands }
			}
			scope:master_drylands_terrain = {
				custom_tooltip = master_drylands_terrain_effect_tooltip
				landless_inspector_assign_terrain_effect = { TERRAIN = drylands }
			}
		}
	}

	ai_potential = {
		location = {
			NOR = {
				terrain = sea
				terrain = coastal_sea
			}
		}
	}

	ai_will_do = { base = 10 }
}

choose_master_terrain_decision = {
	ai_check_interval = 120

	picture = { reference = "gfx/interface/illustrations/decisions/ep3_decision_laamp_neutral_mountain.dds" }

	sort_order = 10
	decision_group_type = major

	is_shown = {
		is_landed = no
		has_perk = personal_touch_perk
		NOR = {
			# Woodlands
			has_character_modifier = master_terrain_forest_modifier
			has_character_modifier = master_terrain_jungle_modifier
			has_character_modifier = master_terrain_taiga_modifier
			has_character_modifier = master_terrain_wetlands_modifier
			# Highlands
			has_character_modifier = master_terrain_mountains_modifier
			has_character_modifier = master_terrain_hills_modifier
			has_character_modifier = master_terrain_desert_mountains_modifier
			# Lowlands
			has_character_modifier = master_terrain_plains_modifier
			has_character_modifier = master_terrain_steppe_modifier
			has_character_modifier = master_terrain_farmlands_modifier
			has_character_modifier = master_terrain_floodplains_modifier
			# Drylands
			has_character_modifier = master_terrain_drylands_modifier
			has_character_modifier = master_terrain_desert_modifier
			has_character_modifier = master_terrain_oasis_modifier
		}
		OR = {
			landless_inspector_terrain_master_trigger = { TERRAIN = woodlands }
			landless_inspector_terrain_master_trigger = { TERRAIN = highlands }
			landless_inspector_terrain_master_trigger = { TERRAIN = lowlands }
			landless_inspector_terrain_master_trigger = { TERRAIN = drylands }
		}
	}

	widget = {
		gui = "decision_view_widget_option_list_generic"
		controller = decision_option_list_controller
		decision_to_second_step_button = "CHOOSE_MASTER_TERRAIN_DECISION_NEXT_STEP_BUTTON"
		show_from_start = yes

		### Woodlands 
		item = { # Forest
			value = master_terrain_forest_terrain
			current_description = master_terrain_forest_decision
			localization = master_terrain_forest_decision
			icon = "gfx/interface/icons/terrain_types/forest.dds"
			is_shown = { 
				landless_inspector_terrain_master_trigger = { TERRAIN = woodlands } 
			}
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = { terrain = forest }
					}
					add = 100
				}
			}
		}
		item = { # Jungle
			value = master_terrain_jungle_terrain
			current_description = master_terrain_jungle_decision
			localization = master_terrain_jungle_decision
			icon = "gfx/interface/icons/terrain_types/jungle.dds"
			is_shown = { 
				landless_inspector_terrain_master_trigger = { TERRAIN = woodlands } 
			}
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = { terrain = jungle }
					}
					add = 100
				}
			}
		}
		item = { # Taiga
			value = master_terrain_taiga_terrain
			current_description = master_terrain_taiga_decision
			localization = master_terrain_taiga_decision
			icon = "gfx/interface/icons/terrain_types/taiga.dds"
			is_shown = { 
				landless_inspector_terrain_master_trigger = { TERRAIN = woodlands } 
			}
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = { terrain = taiga }
					}
					add = 100
				}
			}
		}
		item = { # Wetlands
			value = master_terrain_wetlands_terrain
			current_description = master_terrain_wetlands_decision
			localization = master_terrain_wetlands_decision
			icon = "gfx/interface/icons/terrain_types/wetlands.dds"
			is_shown = { 
				landless_inspector_terrain_master_trigger = { TERRAIN = woodlands } 
			}
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = { terrain = wetlands }
					}
					add = 100
				}
			}
		}

		### Highlands
		item = { # Mountains
			value = master_terrain_mountains_terrain
			current_description = master_terrain_mountains_decision
			localization = master_terrain_mountains_decision
			icon = "gfx/interface/icons/terrain_types/mountains.dds"
			is_shown = { 
				landless_inspector_terrain_master_trigger = { TERRAIN = highlands } 
			}
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = { terrain = mountains }
					}
					add = 100
				}
			}
		}
		item = { # Hills
			value = master_terrain_hills_terrain
			current_description = master_terrain_hills_decision
			localization = master_terrain_hills_decision
			icon = "gfx/interface/icons/terrain_types/hills.dds"
			is_shown = { 
				landless_inspector_terrain_master_trigger = { TERRAIN = highlands } 
			}
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = { terrain = hills }
					}
					add = 100
				}
			}
		}
		item = { # Desert Mountains
			value = master_terrain_desert_mountains_terrain
			current_description = master_terrain_desert_mountains_decision
			localization = master_terrain_desert_mountains_decision
			icon = "gfx/interface/icons/terrain_types/desert_mountains.dds"
			is_shown = { 
				landless_inspector_terrain_master_trigger = { TERRAIN = highlands } 
			}
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = { terrain = desert_mountains }
					}
					add = 100
				}
			}
		}

		### Lowlands
		item = { # Plains
			value = master_terrain_plains_terrain
			current_description = master_terrain_plains_decision
			localization = master_terrain_plains_decision
			icon = "gfx/interface/icons/terrain_types/plains.dds"
			is_shown = { 
				landless_inspector_terrain_master_trigger = { TERRAIN = lowlands } 
			}
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = { terrain = plains }
					}
					add = 100
				}
			}
		}
		item = { # Steppe
			value = master_terrain_steppe_terrain
			current_description = master_terrain_steppe_decision
			localization = master_terrain_steppe_decision
			icon = "gfx/interface/icons/terrain_types/steppe.dds"
			is_shown = { 
				landless_inspector_terrain_master_trigger = { TERRAIN = lowlands } 
			}
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = { terrain = steppe }
					}
					add = 100
				}
			}
		}
		item = { # Farmlands
			value = master_terrain_farmlands_terrain
			current_description = master_terrain_farmlands_decision
			localization = master_terrain_farmlands_decision
			icon = "gfx/interface/icons/terrain_types/farmlands.dds"
			is_shown = { 
				landless_inspector_terrain_master_trigger = { TERRAIN = lowlands } 
			}
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = { terrain = farmlands }
					}
					add = 100
				}
			}
		}
		item = { # Floodplains
			value = master_terrain_floodplains_terrain
			current_description = master_terrain_floodplains_decision
			localization = master_terrain_floodplains_decision
			icon = "gfx/interface/icons/terrain_types/floodplains.dds"
			is_shown = { 
				landless_inspector_terrain_master_trigger = { TERRAIN = lowlands } 
			}
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = { terrain = floodplains }
					}
					add = 100
				}
			}
		}


		### Drylands
		item = { # Drylands
			value = master_terrain_drylands_terrain
			current_description = master_terrain_drylands_decision
			localization = master_terrain_drylands_decision
			icon = "gfx/interface/icons/terrain_types/drylands.dds"
			is_shown = { 
				landless_inspector_terrain_master_trigger = { TERRAIN = drylands } 
			}
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = { terrain = drylands }
					}
					add = 100
				}
			}
		}
		item = { # Desert
			value = master_terrain_desert_terrain
			current_description = master_terrain_desert_decision
			localization = master_terrain_desert_decision
			icon = "gfx/interface/icons/terrain_types/desert.dds"
			is_shown = { 
				landless_inspector_terrain_master_trigger = { TERRAIN = drylands } 
			}
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = { terrain = desert }
					}
					add = 100
				}
			}
		}
		item = { # Oasis
			value = master_terrain_oasis_terrain
			current_description = master_terrain_oasis_decision
			localization = master_terrain_oasis_decision
			icon = "gfx/interface/icons/terrain_types/oasis.dds"
			is_shown = { 
				landless_inspector_terrain_master_trigger = { TERRAIN = drylands } 
			}
			ai_chance = { 
				value = 0
				if = {
					limit = {
						location = { terrain = oasis }
					}
					add = 100
				}
			}
		}
	}

	effect = {
		if = {
			limit = {
				landless_inspector_terrain_master_trigger = { TERRAIN = woodlands }
			}
			switch = {
				trigger = yes
				scope:master_terrain_forest_terrain = {
					landless_inspector_master_terrain_effect = { TERRAIN = forest }
				}
				scope:master_terrain_jungle_terrain = {
					landless_inspector_master_terrain_effect = { TERRAIN = jungle }
				}
				scope:master_terrain_taiga_terrain = {
					landless_inspector_master_terrain_effect = { TERRAIN = taiga }
				}
				scope:master_terrain_wetlands_terrain = {
					landless_inspector_master_terrain_effect = { TERRAIN = wetlands }
				}
			}
		}
		else_if = {
			limit = {
				landless_inspector_terrain_master_trigger = { TERRAIN = highlands }
			}
			switch = {
				trigger = yes 
				scope:master_terrain_mountains_terrain = {
					landless_inspector_master_terrain_effect = { TERRAIN = mountains }
				}
				scope:master_terrain_hills_terrain = {
					landless_inspector_master_terrain_effect = { TERRAIN = hills }
				}
				scope:master_terrain_desert_mountains_terrain = {
					landless_inspector_master_terrain_effect = { TERRAIN = desert_mountains }
				}
			}
		}
		else_if = {
			limit = {
				landless_inspector_terrain_master_trigger = { TERRAIN = lowlands }
			}
			switch = {
				trigger = yes
				scope:master_terrain_plains_terrain = {
					landless_inspector_master_terrain_effect = { TERRAIN = plains }
				}
				scope:master_terrain_steppe_terrain = {
					landless_inspector_master_terrain_effect = { TERRAIN = steppe }
				}
				scope:master_terrain_farmlands_terrain = {
					landless_inspector_master_terrain_effect = { TERRAIN = farmlands }
				}
				scope:master_terrain_floodplains_terrain = {
					landless_inspector_master_terrain_effect = { TERRAIN = floodplains }
				}
			}
		}
		else_if = {
			limit = {
				landless_inspector_terrain_master_trigger = { TERRAIN = drylands }
			}
			switch = {
				trigger = yes
				scope:master_terrain_drylands_terrain = {
					landless_inspector_master_terrain_effect = { TERRAIN = drylands }
				}
				scope:master_terrain_desert_terrain = {
					landless_inspector_master_terrain_effect = { TERRAIN = desert }
				}
				scope:master_terrain_oasis_terrain = {
					landless_inspector_master_terrain_effect = { TERRAIN = oasis }
				}
			}
		}
	}

	ai_potential = {
		location = {
			NOR = {
				terrain = sea
				terrain = coastal_sea
			}
		}
	}

	ai_will_do = { base = 10 }
}

# # Form Bosporan Kingdom 
# form_bosporan_kingdom_decision = {
# 	picture = {
# 		reference = "gfx/interface/illustrations/event_scenes/ep3_medi_estate.dds"
# 	}
# 	decision_group_type = major
# 	sort_order = 50

# 	is_shown = {
# 		NOT = {
# 			is_target_in_global_variable_list = {
# 				name = unavailable_unique_decisions
# 				target = flag:flag_bosporan_kingdom
# 			}
# 		}
# 		culture = {
# 			OR = {
# 				has_cultural_pillar = heritage_central_germanic
# 				has_cultural_pillar = heritage_byzantine
# 			}
# 		}
# 		highest_held_title_tier <= tier_kingdom
# 		any_held_title = {
# 			OR = {
# 				de_jure_liege = title:d_crimea
# 				de_jure_liege = title:d_azov
# 				this = title:d_crimea
# 				this = title:d_azov
# 			}
# 		}
# 	}

# 	is_valid = {
# 		completely_controls = title:d_crimea
# 		completely_controls = title:d_azov
# 		is_independent_ruler = yes
# 		prestige_level >= 3
# 	}
	
# 	is_valid_showing_failures_only = {
# 		is_landed = yes
# 	}

# 	effect = {
# 		add_to_global_variable_list = {
# 			name = unavailable_unique_decisions
# 			target = flag:flag_bosporan_kingdom
# 		}

# 		house = {
# 			add_house_modifier = {
# 				modifier = bp3_bosporan_kingdom_modifier
# 				years = 100
# 			}
# 		}

# 		custom_tooltip = unlocks_black_sea_naval_conquest

# 		hidden_effect = {
# 			title:k_bosporan_kingdom = { set_de_jure_liege_title = title:d_crimea.empire }
# 		}

# 		create_title_and_vassal_change = {
# 			type = created
# 			save_scope_as = title_change
# 			add_claim_on_loss = yes
# 		}
# 		title:k_bosporan_kingdom = {
# 			change_title_holder = {
# 				holder = root
# 				change = scope:title_change
# 			}
# 		}
# 		resolve_title_and_vassal_change = scope:title_change

# 		add_character_modifier = bp3_conqueror_black_sea_modifier
		
# 		title:d_crimea = { set_de_jure_liege_title = title:k_bosporan_kingdom }
# 		title:d_azov = { set_de_jure_liege_title = title:k_bosporan_kingdom }
# 		# Additional DeJures
# 		adjust_de_jure_effect = {
# 			TITLE = title:d_bugeac
# 			DE_JURE = title:k_bosporan_kingdom
# 		}
# 		adjust_de_jure_effect = {
# 			TITLE = title:d_yedisan
# 			DE_JURE = title:k_bosporan_kingdom
# 		}
# 		adjust_de_jure_effect = {
# 			TITLE = title:d_levedia
# 			DE_JURE = title:k_bosporan_kingdom
# 		}
# 		adjust_de_jure_effect = {
# 			TITLE = title:d_don_valley
# 			DE_JURE = title:k_bosporan_kingdom
# 		}
		
# 		if = {
# 			limit = {
# 				province:5330 = {
# 					has_holding_type = castle_holding
# 				}
# 				province:5277 = {
# 					has_holding = no
# 				}
# 			}
# 			province:5277 = {
# 				begin_create_holding = castle_holding
# 			}
# 		}		
# 	}

# 	cost = {
# 		gold = {
# 			value = 250
# 		}
# 		prestige = {
# 			value = 2000
# 		}
# 	}

# 	ai_check_interval = 1000

# 	ai_potential = {
# 		is_ruler = yes
# 		short_term_gold >= {
# 			value = major_gold_value
# 			multiply = 1.5
# 			round = yes
# 		}
# 		prestige >= {
# 			value = major_prestige_gain
# 			multiply = 3
# 			round = yes
# 		}
# 	}

# 	ai_will_do = {
# 		base = 80
# 	}
# }

# # Merging France and Aquitaine
# merge_aquitaine_decision = {
# 	picture = {
# 		reference = "gfx/interface/illustrations/decisions/decision_found_kingdom.dds"
# 	}
# 	title = {
# 		first_valid = {
# 			triggered_desc = {
# 				trigger = {
# 					primary_title = title:k_aquitaine
# 				}
# 				desc = merge_aquitaine_decision_alt
# 			}
# 			desc = merge_aquitaine_decision
# 		}
# 	}
# 	desc = {
# 		first_valid = {
# 			triggered_desc = {
# 				trigger = {
# 					primary_title = title:k_aquitaine
# 				}
# 				desc = merge_aquitaine_decision_desc_aquitaine
# 			}
# 			desc = merge_aquitaine_decision_desc
# 		}
# 		desc = merge_aquitaine_decision_desc_outro
# 	}
# 	decision_group_type = major
# 	sort_order = 50

# 	is_shown = {
# 		NOT = {
# 			is_target_in_global_variable_list = {
# 				name = unavailable_unique_decisions
# 				target = flag:merged_aquitaine
# 			}
# 		}
# 		culture = { has_cultural_pillar = heritage_frankish }
# 		any_held_title = { this = title:k_aquitaine }
# 		any_held_title = { this = title:k_france }
# 	}

# 	is_valid = {
# 		has_title = title:k_aquitaine
# 		has_title = title:k_france
# 		is_independent_ruler = yes
# 		prestige_level >= 3
# 	}

# 	effect = {
# 		add_to_global_variable_list = {
# 			name = unavailable_unique_decisions
# 			target = flag:merged_aquitaine
# 		}

# 		save_scope_as = rightful_liege

# 		add_legitimacy_effect = { LEGITIMACY = massive_legitimacy_gain }
# 		dynasty = { add_dynasty_prestige = massive_dynasty_prestige_value }

# 		if = {
# 			limit = {
# 				primary_title = { this = title:k_aquitaine}
# 			}
# 			merge_aquitaine_effect = {
# 				PRIMARY = k_aquitaine
# 				SECONDARY = k_france
# 				TEXT = alt
# 			}
# 		}
# 		else = {
# 			merge_aquitaine_effect = {
# 				PRIMARY = k_france
# 				SECONDARY = k_aquitaine
# 				TEXT = original
# 			}
# 		}

# 		trigger_event = major_decisions.3200
# 		every_vassal_or_below = {
# 			trigger_event = major_decisions.3200
# 		}
# 	}

# 	cost = {
# 		prestige = {
# 			if = {
# 				limit = {
# 					is_ai = no
# 				}
# 				value = 1000
# 			}
# 			else = {
# 				value = 0
# 			}
# 		}
# 	}

# 	ai_check_interval = 60

# 	ai_potential = {
# 		is_ruler = yes
# 	}

# 	ai_will_do = {
# 		base = 100
# 	}
# }
