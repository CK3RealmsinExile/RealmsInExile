###################################
# Defend Caliphate Ending
###################################

# Make it a Pious playthrough that encourage the Caliph to get support from the Muslim world
#struggle_persia_ending_assertion_decision = { #LotR
#	is_shown = { always = no } # LotR
#	ai_check_interval = 0
#}


###################################
# Humiliate Caliphate Ending
###################################

# struggle_persia_ending_foundation_decision = { #LotR
# 	is_shown = { always = no } # LotR
# 	ai_check_interval = 0
# }

###################################
#Resurgent Persia Ending
###################################

# struggle_persia_ending_rekindle_iran_decision = { #LotR
# 	is_shown = { always = no } # LotR
# 	ai_check_interval = 0
# }

###################################
# Favour Skilled Outsiders
# By Ewan Cowhig Croft
###################################

# Bring in skilled characters that like you at the cost of offending your other vassals.
favour_skilled_outsiders_decision = {
	desc = favour_skilled_outsiders_decision_desc
	confirm_text = favour_skilled_outsiders_decision_confirm
	selection_tooltip = favour_skilled_outsiders_decision_tooltip
	picture = "gfx/interface/illustrations/decisions/fp3_decision_tax_collector.dds"
	sort_order = 180
	
	is_shown = {
		has_fp3_dlc_trigger = yes
		is_landed = yes
		favour_skilled_outsiders_decision_valid_character_to_take_trigger = yes
	}

	is_valid = {
		any_sub_realm_county = { favour_skilled_outsiders_decision_valid_county_to_generate_trigger = yes }
		favour_skilled_outsiders_decision_valid_character_to_take_trigger = yes
		realm_size >= medium_realm_size
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
		is_at_war = no
	}

	widget = {
		gui = "decision_view_widget_option_list_generic"
		controller = decision_option_list_controller
		decision_to_second_step_button = "favour_skilled_outsiders_decision.second_step"

		# Diplomacy-Martial: Eloquent Captains
		item = {
			value = outsider_diplomacy_martial
			current_description = favour_skilled_outsiders_decision.tt.diplomacy_martial
			localization = favour_skilled_outsiders_decision.tt.diplomacy_martial
			icon = "gfx/interface/icons/message_feed/a_catch_all_councillor_icon.dds"
			is_valid = {
				custom_tooltip = {
					text = COUNCILLOR_MISSING_CHANCELLOR
					exists = cp:councillor_chancellor
				}
				trigger_if = {
					limit = { exists = cp:councillor_chancellor }
					cp:councillor_chancellor = { diplomacy < favour_skilled_outsiders_decision_skill_threshold_value }
					# And an extra tooltip for narrative clarity.
					custom_tooltip = {
						text = favour_skilled_outsiders_decision.tt.skilled_councillor_keeps_clean_house
						cp:councillor_chancellor = { diplomacy < favour_skilled_outsiders_decision_skill_threshold_value }
					}
				}
			}
			ai_chance = {
				# The AI wants to recruit characters that compensate for their skills.
				## So we set a high base.
				value = 100
				## Then we subtract root's relevant skills.
				subtract = diplomacy
				subtract = martial
			}
		}
		# Martial-Prowess: Career Soldiers
		item = {
			value = outsider_martial_prowess
			current_description = favour_skilled_outsiders_decision.tt.martial_prowess
			localization = favour_skilled_outsiders_decision.tt.martial_prowess
			icon = "gfx/interface/icons/message_feed/mercenary.dds"
			is_valid = {
				custom_tooltip = {
					text = COUNCILLOR_MISSING_MARSHAL
					exists = cp:councillor_marshal
				}
				trigger_if = {
					limit = { exists = cp:councillor_marshal }
					cp:councillor_marshal = { martial < favour_skilled_outsiders_decision_skill_threshold_value }
					# And an extra tooltip for narrative clarity.
					custom_tooltip = {
						text = favour_skilled_outsiders_decision.tt.skilled_councillor_keeps_clean_house
						cp:councillor_marshal = { martial < favour_skilled_outsiders_decision_skill_threshold_value }
					}
				}
			}
			ai_chance = {
				# The AI wants to recruit characters that compensate for their skills.
				## So we set a high base.
				value = 100
				## Then we subtract root's relevant skills.
				subtract = martial
				subtract = prowess
			}
		}
		# Prowess-Learning: Fringe Nobility
		item = {
			value = outsider_prowess_learning
			current_description = favour_skilled_outsiders_decision.tt.prowess_learning
			localization = favour_skilled_outsiders_decision.tt.prowess_learning
			icon = "gfx/interface/icons/message_feed/tier_down.dds"
			# Always valid.
			ai_chance = {
				# The AI wants to recruit characters that compensate for their skills.
				## So we set a high base.
				value = 100
				## Then we subtract root's relevant skills.
				subtract = prowess
				subtract = learning
			}
		}
		# Learning-Intrigue: Dedicated Functionaries
		item = {
			value = outsider_learning_intrigue
			current_description = favour_skilled_outsiders_decision.tt.learning_intrigue
			localization = favour_skilled_outsiders_decision.tt.learning_intrigue
			icon = "gfx/interface/icons/message_feed/secret.dds"
			is_valid = {
				custom_tooltip = {
					text = COUNCILLOR_MISSING_COURT_CHAPLAIN
					exists = cp:councillor_court_chaplain
				}
				trigger_if = {
					limit = { exists = cp:councillor_court_chaplain }
					cp:councillor_court_chaplain = { learning < favour_skilled_outsiders_decision_skill_threshold_value }
					# And an extra tooltip for narrative clarity.
					custom_tooltip = {
						text = favour_skilled_outsiders_decision.tt.skilled_councillor_keeps_clean_house
						cp:councillor_court_chaplain = { learning < favour_skilled_outsiders_decision_skill_threshold_value }
					}
				}
			}
			ai_chance = {
				# The AI wants to recruit characters that compensate for their skills.
				## So we set a high base.
				value = 100
				## Then we subtract root's relevant skills.
				subtract = learning
				subtract = intrigue
			}
		}
		# Intrigue-Stewardship: Cunning Officials
		item = {
			value = outsider_intrigue_stewardship
			current_description = favour_skilled_outsiders_decision.tt.intrigue_stewardship
			localization = favour_skilled_outsiders_decision.tt.intrigue_stewardship
			icon = "gfx/interface/icons/message_feed/spy_master.dds"
			is_valid = {
				custom_tooltip = {
					text = COUNCILLOR_MISSING_SPYMASTER
					exists = cp:councillor_spymaster
				}
				trigger_if = {
					limit = { exists = cp:councillor_spymaster }
					cp:councillor_spymaster = { intrigue < favour_skilled_outsiders_decision_skill_threshold_value }
					# And an extra tooltip for narrative clarity.
					custom_tooltip = {
						text = favour_skilled_outsiders_decision.tt.skilled_councillor_keeps_clean_house
						cp:councillor_spymaster = { intrigue < favour_skilled_outsiders_decision_skill_threshold_value }
					}
				}
			}
			ai_chance = {
				# The AI wants to recruit characters that compensate for their skills.
				## So we set a high base.
				value = 100
				## Then we subtract root's relevant skills.
				subtract = intrigue
				subtract = stewardship
			}
		}
		# Stewardship-Diplomacy: Skilled Administrators
		item = {
			value = outsider_stewardship_diplomacy
			current_description = favour_skilled_outsiders_decision.tt.stewardship_diplomacy
			localization = favour_skilled_outsiders_decision.tt.stewardship_diplomacy
			icon = "gfx/interface/icons/message_feed/money.dds"
			is_valid = {
				custom_tooltip = {
					text = COUNCILLOR_MISSING_STEWARD
					exists = cp:councillor_steward
				}
				trigger_if = {
					limit = { exists = cp:councillor_steward }
					cp:councillor_steward = { stewardship < favour_skilled_outsiders_decision_skill_threshold_value }
					# And an extra tooltip for narrative clarity.
					custom_tooltip = {
						text = favour_skilled_outsiders_decision.tt.skilled_councillor_keeps_clean_house
						cp:councillor_steward = { stewardship < favour_skilled_outsiders_decision_skill_threshold_value }
					}
				}
			}
			ai_chance = {
				# The AI wants to recruit characters that compensate for their skills.
				## So we set a high base.
				value = 100
				## Then we subtract root's relevant skills.
				subtract = stewardship
				subtract = diplomacy
			}
		}
	}

	effect = {
		# So here's what'll happen.
		custom_tooltip = favour_skilled_outsiders_decision.tt.promote_minorities_from_within_realm
		custom_tooltip = favour_skilled_outsiders_decision.tt.two_batches_to_choose_from
		# And how people will react.
		show_as_tooltip = { favour_skilled_outsiders_decision_apply_opinions_effect = yes }
		# Save how much prestige we paid in case we back out.
		save_scope_value_as = {
			name = prestige_cost
			value = favour_skilled_outsiders_decision_prestige_cost_value
		}
		# Now fire the actual event.
		trigger_event = fp3_misc_decisions.0032
	}

	cooldown = { years = 25 }
	
	cost = { prestige = favour_skilled_outsiders_decision_prestige_cost_value }

	ai_check_interval = 24

	ai_potential = {
		# Check this stuff early, else we'll go through a bunch of county checks unnecessarily.
		favour_skilled_outsiders_decision_valid_character_to_take_trigger = yes
		# Plus simple validity checks.
		is_adult = yes
		is_at_war = no
	}

	ai_will_do = {
		# We don't want to use this too much - the AI is gonna have trouble utilising such characters correctly.
		base = -50

		# Missing councillors.
		## Chancellor
		modifier = {
			add = 50
			NOT = { exists = cp:councillor_chancellor }
		}
		## Steward
		modifier = {
			add = 50
			NOT = { exists = cp:councillor_steward }
		}
		## Marshal
		modifier = {
			add = 50
			NOT = { exists = cp:councillor_marshal }
		}
		## Spymaster
		modifier = {
			add = 50
			NOT = { exists = cp:councillor_spymaster }
		}
		## Court_chaplain
		modifier = {
			add = 50
			NOT = { exists = cp:councillor_court_chaplain }
		}
		# Government.
		## Teensy upweight for clans, as the model for the decision.
		modifier = {
			add = 20
			government_has_flag = government_is_clan
		}
		# Traits.
		## Calm
		modifier = {
			add = 15
			has_trait = calm
		}
		## Humble
		modifier = {
			add = 15
			has_trait = humble
		}
		## Ambitious
		modifier = {
			add = 15
			has_trait = ambitious
		}
	}
}

###################################
# Sunder Caliphate Ending
###################################
# fp3_sunder_the_caliphate_decision = {
# 	major = yes
# 	title = fp3_sunder_the_caliphate_decision
# 	picture = "gfx/interface/illustrations/decisions/fp3/fp3_decision_strength.dds"
# 	extra_picture = "gfx/interface/illustrations/struggle_decisions_buttons/fp3_decision_assertion.dds" # Does this need to be updated?
# 	desc = fp3_sunder_the_caliphate_decision_desc
# 	selection_tooltip = fp3_sunder_the_caliphate_decision_tooltip
# 	sort_order = 80

# 	is_shown = {
# 		exists = title:d_sunni.holder
# 		NOR = {
# 			this = title:d_sunni.holder
# 			house = title:d_sunni.holder.house
# 		}
# 		OR = {
# 			any_character_struggle = {
# 				involvement = involved
# 				is_struggle_type = persian_struggle
# 			}
# 		}
# 	}

# 	is_valid = {
# 		highest_held_title_tier >= tier_kingdom
# 		custom_tooltip = {
# 			text = struggle_persia_ending_foundation_decision_option_succession_tt
# 			NOT = {
# 				faith = { has_doctrine = muhammad_succession_sunni_doctrine }
# 			}
# 		}
# 		custom_tooltip = {
# 			text = fp3_caliph_is_imprisoned_by_you
# 			any_prisoner = {
# 				any_held_title = {
# 					this = title:d_sunni
# 				}
# 			}
# 		}
# 		custom_tooltip = {
# 			text = fp3_caliph_faith_is_hostile_or_higher
# 			faith = {
# 			faith_hostility_level = {
# 					target = title:d_sunni.holder.faith
# 					value >= religious_cb_enabled_hostility_level
# 				}
# 			}
# 		}


# 		piety_level >= high_piety_level

# 		completely_controls = title:d_samarra
# 	}

# 	is_valid_showing_failures_only = {
# 		is_available_adult = yes
# 	}

# 	effect = {
# 		title:d_sunni.holder = {
# 			save_scope_as = the_caliph
# 		}
# 		show_as_tooltip = {
# 			fp3_sundered_caliphate_effects = yes
# 		}
# 		trigger_event = fp3_struggle.0191

# 		title:d_sunni = { remove_variable = struggle_block_dissolution_faction }
# 		title:e_arabia = { remove_variable = struggle_block_dissolution_faction }
# 	}

# 	cost = {
# 		piety = massive_piety_value
# 	}
# 	ai_check_interval = 120
# 	ai_potential = { always = yes }
# 	ai_will_do = { base = 100 }
# }

###################################
# Become a Clan Government
###################################
fp3_become_clan_government_decision = {
	picture = "gfx/interface/illustrations/decisions/fp3/friendly.dds"

	desc = fp3_become_clan_government_decision_desc
	selection_tooltip = fp3_become_clan_government_decision_tooltip

	ai_check_interval = 64

	cost = { prestige = major_prestige_value }

	is_shown = {
		has_fp3_dlc_trigger = yes
		# You are Feudal
		government_has_flag = government_is_feudal
		# Has a House and is not House Head
		exists = house
		NOT = { house.house_head = root }
		# Religion is Islam (Clan)
		# religion = religion:islam_religion #LotR
		# House head is Clan
		house.house_head = { government_has_flag = government_is_clan }
		culture = { #LotR
			NOR = {
				has_cultural_pillar = heritage_dunedain
				has_cultural_pillar = heritage_northern_adunaic
				has_cultural_pillar = heritage_southern_adunaic
			}
		}
	}

	is_valid = {
		# You are Feudal
		government_has_flag = government_is_feudal
		# Religion is Islam (Clan)
		# religion = religion:islam_religion #LotR
		# House head is Clan
		custom_tooltip = {
			text = fp3_become_clan_government_decision_house_head_tt
			house.house_head = { government_has_flag = government_is_clan }
		}
		culture = { #LotR
			NOR = {
				has_cultural_pillar = heritage_dunedain
				has_cultural_pillar = heritage_northern_adunaic
				has_cultural_pillar = heritage_southern_adunaic
			}
		}
	}

	effect = {
		legend_seed_struggle_ending_effect = {
			ENDER = root
			STRUGGLE = persian_struggle
		}
		show_as_tooltip ={
			change_government = clan_government
			# Increase unity, uses this effect since both chars are not clan when script is evaluated
			house.house_head = {
				apply_clan_unity_interaction_effect = {
					CHARACTER = root
					TARGET = root.house.house_head
					DESC = clan_unity_adopt_clan.desc
					VALUE = medium_unity_gain
					VALUE_REVERSED = no
				}
			}
		}
		trigger_event = fp3_misc_decisions.0051
	}

	ai_will_do = {
		base = -25
		# More likely if Clan preferred culture
		modifier = {
			add = 10
			culture = {
				OR = {
					# has_cultural_pillar = heritage_arabic #LotR
					# has_cultural_pillar = heritage_iranian #LotR
					# has_cultural_pillar = heritage_turkic #LotR
					has_cultural_pillar = heritage_ioriag #LotR
					has_cultural_pillar = heritage_igath
					has_cultural_pillar = heritage_northern_apysaic
					has_cultural_pillar = heritage_middle_apysaic
					has_cultural_pillar = heritage_southern_apysaic
				}
			}
		}
		# More likely if a fan of House Head
		opinion_modifier = {
			opinion_target = house.house_head
			multiplier = 0.5
		}
	}
}
