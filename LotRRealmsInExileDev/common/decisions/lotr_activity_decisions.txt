## Moved to the new activity system
# explore_history_decision = {
	# picture = "gfx/interface/illustrations/decisions/decision_misc.dds"
	# ai_check_interval = 60

	# cost = {
		# gold = {
			# value = feast_activity_cost
			# if = {
				# limit = {
					# NOT = {
						# has_trait = scholar
					# }
				# }
				# multiply = 1.5
			# }
		# }
	# }
	# cooldown = { days = 3650 }

	# desc = explore_history_decision_desc
	# selection_tooltip = explore_history_decision_tooltip

	# is_shown = {
		# is_landed = yes
		# highest_held_title_tier > tier_barony
		# religion = { is_in_family = rf_eruhini }
		# OR = {
			# lotr_has_numenorean_culture_trigger = yes
			# is_eldar = yes
		# }
		# is_in_valinor = no
	# }

	# is_valid_showing_failures_only = {
		# is_available_adult = yes
	# }

	# effect = {
		# custom_tooltip = explore_history_decision_desc_activity
		# custom_tooltip = explore_history_decision_desc_benefits
		# hidden_effect = { #LotR - TODO - Commented out for ToTo compatching
		# 	capital_province = {
		# 		spawn_activity = {
		# 			type = activity_explore_history
		# 			owner = root
		# 		}
		# 	}
		# }
	# }

	# ai_potential = {
		# short_term_gold > standard_activity_cost
		# NOT = {
			# has_trait = lazy
		# }
	# }

	# ai_will_do = {
		# base = 35

		# ai_value_modifier = {
			# ai_rationality = 1
			# ai_zeal = 0.5
		# }
	# }

# }

## Moved to the new activity system
# propaganda_decision = {
	# picture = "gfx/interface/illustrations/decisions/decision_misc.dds"
	# ai_check_interval = 60

	# cost = {
		# gold = {
			# value = feast_activity_cost
			# if = {
				# limit = {
					# NOT = {
						# has_trait = august
					# }
				# }
				# multiply = 1.5
			# }
		# }
	# }
	# cooldown = { days = 3650 }

	# desc = propaganda_decision_desc
	# selection_tooltip = propaganda_decision_tooltip

	# is_shown = {
		# is_landed = yes
		# highest_held_title_tier > tier_barony
		# faith = {
			# has_doctrine = tenet_adunaic_birthright
		# }
		# is_in_valinor = no
	# }

	# is_valid_showing_failures_only = {
		# is_available_adult = yes
	# }

	# effect = {
		# custom_tooltip = propaganda_decision_desc_activity
		# custom_tooltip = propaganda_decision_desc_benefits
		# custom_tooltip = propaganda_decision_desc_warnings
		# hidden_effect = { #LotR - TODO - Commented out for ToTo compatching
		# 	capital_province = {
		# 		spawn_activity = {
		# 			type = activity_propaganda
		# 			owner = root
		# 		}
		# 	}
		# }
	# }

	# ai_potential = {
		# short_term_gold > standard_activity_cost
		# NOT = {
			# has_trait = lazy
		# }
	# }

	# ai_will_do = {
		# base = 35

		# ai_value_modifier = {
			# ai_rationality = 1
			# ai_zeal = 0.5
		# }
	# }

# }

beorning_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_beorning.dds"
	ai_check_interval = 60

	cost = {
		prestige = skinchange_prestige_cost
	}

	cooldown = { days = standard_skinchange_cooldown_time }

	desc = beorning_decision_desc
	selection_tooltip = beorning_decision_tooltip

	is_shown = {
		is_landed = yes
		lotr_beorning_trigger = yes
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
	}

	effect = {
		custom_tooltip = beorning_decision_desc_activity
		custom_tooltip = beorning_decision_desc_benefits
		hidden_effect = { #LotR - TODO - Commented out for ToTo compatching
			root = {
				if = {
					limit = {
						any_courtier_or_guest = {
							is_available_healthy_ai_adult = yes
						}
					}
					random_courtier = { #To make it more likely that the list EXISTS so that no errors are generated when checking for the size
						limit = {
							is_available_healthy_ai_adult = yes
						}
						root = {
							add_to_variable_list = {
								name = potential_beorning_participants
								target = prev
							}
						}
					}
					every_courtier_or_guest = {
						limit = {
							is_available_healthy_ai_adult = yes
							OR = {
								is_heir_of = root
								has_relation_rival = root
								has_relation_lover = root
								has_relation_friend = root
							}
							root = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_beorning_participants
										target = prev
									}
								}
							}
						}
						root = {
							add_to_variable_list = {
								name = potential_beorning_participants
								target = prev
							}
						}
					}
				}
				if = {
					limit = {
						any_vassal = {
							is_available_healthy_ai_adult = yes
							is_of_major_interest_trigger = {
								CHARACTER = root
							}
							root = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_beorning_participants
										target = prev
									}
								}
							}
						}
					}
					every_vassal = {
						limit = {
							is_available_healthy_ai_adult = yes
							is_of_major_interest_trigger = {
								CHARACTER = root
							}
							root = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_beorning_participants
										target = prev
									}
								}
							}
						}
						root = {
							add_to_variable_list = {
								name = potential_beorning_participants
								target = prev
							}
						}
					}
				}
				if = {
					limit = {
						root = {
							OR = {
								NOT = {
									any_in_list = {
										variable = potential_beorning_participants
										exists = this
									}
								}
								variable_list_size = {
									name = potential_beorning_participants
									value <= beorning_participants
								}
							}
						}
						any_vassal = {
							is_available_healthy_ai_adult = yes
							root = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_beorning_participants
										target = prev
									}
								}
							}
						}
					}
					every_vassal = {
						limit = {
							is_available_healthy_ai_adult = yes
							is_of_minor_interest_trigger = {
								CHARACTER = root
							}
							root = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_beorning_participants
										target = prev
									}
								}
							}
						}
						alternative_limit = {
							is_available_healthy_ai_adult = yes
							root = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_beorning_participants
										target = prev
									}
								}
							}
						}
						root = {
							add_to_variable_list = {
								name = potential_beorning_participants
								target = prev
							}
						}
					}
				}
				if = {
					limit = {
						root = {
							OR = {
								NOT = {
									any_in_list = {
										variable = potential_beorning_participants
										exists = this
									}
								}
								variable_list_size = {
									name = potential_beorning_participants
									value <= beorning_participants
								}
							}
						}
						any_courtier = {
							is_available_healthy_ai_adult = yes
							root = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_beorning_participants
										target = prev
									}
								}
							}
						}
					}
					while = {
						limit = {
							root = {
								variable_list_size = {
									name = potential_beorning_participants
									value <= beorning_participants
								}
							}
							any_courtier = {
								is_available_healthy_ai_adult = yes
								root = {
									NOT = {
										is_target_in_variable_list = {
											name = potential_beorning_participants
											target = prev
										}
									}
								}
							}
						}
						random_courtier = {
							limit = {
								is_available_healthy_ai_adult = yes
								root = {
									NOT = {
										is_target_in_variable_list = {
											name = potential_beorning_participants
											target = prev
										}
									}
								}
							}
							root = {
								add_to_variable_list = {
									name = potential_beorning_participants
									target = prev
								}
							}
						}
					}
				}
			}
			trigger_event = {
				on_action = beorning_starting_events
			}
		}
	}

	ai_potential = {		
		lotr_beorning_trigger = yes
		NOT = {
			has_trait = lazy
		}
	}

	ai_will_do = {
		base = 35

		ai_value_modifier = {
			ai_boldness = 1
			ai_greed = 0.5
			ai_energy = 0.25
		}
	}
}

set_sail_decision = {
	desc = set_sail_decision_desc
	selection_tooltip = set_sail_decision_tooltip
	picture = "gfx/interface/illustrations/decisions/decision_set_sail.dds"
	ai_check_interval = 60

	cooldown = { days = standard_sailing_cooldown_time }

	is_shown = {
		is_landed = yes
		highest_held_title_tier > tier_barony
		NOR = { 
			is_undead = yes 
			is_maiar_fallen = yes
			is_orc = yes # Orcs hate water
			is_dwarf = yes # What will we do with the Dwarven sailor ? Early in the morning !
		}
		any_realm_county = {
			title_province = { 
				is_coastal = yes
				NOT = { geographical_region = middleearth_rhun } # Inland sea
			}
		}
		is_in_valinor = no
	}

	is_valid = {
		OR = {
			owns_a_boat = yes
			can_afford_a_boat = yes
		}
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes	
	}

	effect = {
		custom_tooltip = set_sail_decision_desc_activity
		custom_tooltip = set_sail_decision_desc_benefits
		
		#Stress loss
		if = {
			limit = {
				has_trait = lazy
			}
			custom_tooltip = start_hunt_decision_stress_lazy #You won't lose stress because you're lazy...
		}
		else_if = {
			limit = {
				owns_a_boat = yes
			}
			stress_impact = {
				base = hunt_stress_loss_value #-30
				brave = activity_stress_loss_impact
				craven = activity_stress_gain_impact
				ambitious = activity_stress_loss_impact
				athletic = activity_stress_loss_impact
#				mariner_1 = activity_stress_loss_impact
#				mariner_2 = activity_stress_loss_impact
#				mariner_3 = activity_stress_loss_impact
				lifestyle_mariner = activity_stress_loss_impact
			}
		}
		
		hidden_effect = {
			random_realm_county = {
				limit = {
					title_province = { is_coastal = yes } #Prefer trade port?
				}
				title_province = { #LotR - TODO - Commented out for ToTo compatching
					save_scope_as = sailing_province
				}
			}
			root = {
				if = {
					limit = {
						any_courtier_or_guest = {
							is_available_healthy_ai_adult = yes
						}
					}
					random_courtier = { #To make it more likely that the list EXISTS so that no errors are generated when checking for the size
						limit = {
							is_available_healthy_ai_adult = yes
						}
						root = {
							add_to_variable_list = {
								name = potential_sailing_participants
								target = prev
							}
						}
					}
					every_courtier_or_guest = {
						limit = {
							is_available_healthy_ai_adult = yes
							OR = {
								is_heir_of = root
								has_relation_rival = root
								has_relation_lover = root
								has_relation_friend = root
							}
							root = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_sailing_participants
										target = prev
									}
								}
							}
						}
						root = {
							add_to_variable_list = {
								name = potential_sailing_participants
								target = prev
							}
						}
					}
				}
				if = {
					limit = {
						any_vassal = {
							is_available_healthy_ai_adult = yes
							is_of_major_interest_trigger = {
								CHARACTER = root
							}
							root = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_sailing_participants
										target = prev
									}
								}
							}
						}
					}
					every_vassal = {
						limit = {
							is_available_healthy_ai_adult = yes
							is_of_major_interest_trigger = {
								CHARACTER = root
							}
							root = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_sailing_participants
										target = prev
									}
								}
							}
						}
						root = {
							add_to_variable_list = {
								name = potential_sailing_participants
								target = prev
							}
						}
					}
				}
				if = {
					limit = {
						root = {
							OR = {
								NOT = {
									any_in_list = {
										variable = potential_sailing_participants
										exists = this
									}
								}
								variable_list_size = {
									name = potential_sailing_participants
									value <= sailing_participants
								}
							}
						}
						any_vassal = {
							is_available_healthy_ai_adult = yes
							root = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_sailing_participants
										target = prev
									}
								}
							}
						}
					}
					every_vassal = {
						limit = {
							is_available_healthy_ai_adult = yes
							is_of_minor_interest_trigger = {
								CHARACTER = root
							}
							root = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_sailing_participants
										target = prev
									}
								}
							}
						}
						alternative_limit = {
							is_available_healthy_ai_adult = yes
							root = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_sailing_participants
										target = prev
									}
								}
							}
						}
						root = {
							add_to_variable_list = {
								name = potential_sailing_participants
								target = prev
							}
						}
					}
				}
				if = {
					limit = {
						root = {
							OR = {
								NOT = {
									any_in_list = {
										variable = potential_sailing_participants
										exists = this
									}
								}
								variable_list_size = {
									name = potential_sailing_participants
									value <= sailing_participants
								}
							}
						}
						any_courtier = {
							is_available_healthy_ai_adult = yes
							root = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_sailing_participants
										target = prev
									}
								}
							}
						}
					}
					while = {
						limit = {
							root = {
								variable_list_size = {
									name = potential_sailing_participants
									value <= sailing_participants
								}
							}
							any_courtier = {
								is_available_healthy_ai_adult = yes
								root = {
									NOT = {
										is_target_in_variable_list = {
											name = potential_sailing_participants
											target = prev
										}
									}
								}
							}
						}
						random_courtier = {
							limit = {
								is_available_healthy_ai_adult = yes
								root = {
									NOT = {
										is_target_in_variable_list = {
											name = potential_sailing_participants
											target = prev
										}
									}
								}
							}
							root = {
								add_to_variable_list = {
									name = potential_sailing_participants
									target = prev
								}
							}
						}
					}
				}
			}
			if = {
				limit = { owns_a_boat = no }
				trigger_event = sailing.1001
			}
			else_if = {
				limit = { owns_a_damaged_boat = yes }
				trigger_event = sailing.1004
			}
			else = {
				trigger_event = {
					on_action = sailing_dockyard_events
				}
			}
		}
	}

	ai_potential = {
		short_term_gold > small_boat_hire_cost
	}

	ai_will_do = {
		base = 35

		ai_value_modifier = {
			ai_energy = 1
			ai_greed = 0.5
			ai_sociability = 0.5
		}

		modifier = {
			add = 10
			has_trait_rank = {
				trait = education_martial
				rank > 0
			}
		}
		
		modifier = {
			add = 10
			has_trait_rank = {
				trait = education_martial
				rank > 2
			}
		}

		modifier = {
			add = 10
			has_trait = mariner_1
		}

		modifier = {
			add = 20
			has_trait = mariner_2
		}
		
		modifier = {
			add = 30
			has_trait = mariner_3
		}

		modifier = {
			add = 35
			stress > low_stress
		}
		
	}

}

decision_palantir = {
	title = decision_palantir
	picture = "gfx/interface/illustrations/decisions/decision_palantir_amon_sul.dds"
	major = yes
	ai_goal = yes
	ai_potential = {
		always = yes
	}
	ai_will_do = {
		base = 100
	}
	
	cooldown = { days = 1825 }
	
	selection_tooltip = decision_palantir_tooltip
	desc = decision_palantir_desc
	confirm_text = decision_palantir_confirm
	
	is_shown = {
		any_character_artifact = {
			has_variable = palantir
		}
		is_maiar_fallen = no
		OR = {
			NOT = { 
				this = character:lineofsaruman
			}
			years_from_game_start > 0
		}
		is_in_valinor = no
	}
	
	is_valid = {
		is_imprisoned = no
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
	}
	
	effect = {
		trigger_event = {
			id = palantir.0001
			days = 3
		}
	}
}
