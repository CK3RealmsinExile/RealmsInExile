# LotR: removed real world references.

take_vow_of_poverty_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

	desc = take_vow_of_poverty_decision_desc
	selection_tooltip = take_vow_of_poverty_decision_tooltip

	is_shown = {
		is_ruler = yes
		faith = {
			has_doctrine_parameter = vows_of_poverty_active
		}
		NOT = { has_character_modifier = vow_of_poverty_modifier }
	}

	effect = {
		add_character_modifier = {
			modifier = vow_of_poverty_modifier
		}

		stress_impact = {
			greedy = major_stress_impact_gain
			cynical = medium_stress_impact_gain
			ambitious = minor_stress_impact_gain
		}
	}
	
	ai_check_interval = 120

	ai_potential = {
		faith = {
			has_doctrine_parameter = vows_of_poverty_active
		}
		# AI considers taking if their income exceeds their expenses * 1.4 (decision will reduce it by 20%).
		monthly_character_income > monthly_character_expenses_plus_fourty_percent
	}

	ai_will_do = {
		base = 0

		# If ai_zeal is 20 points higher than ai_greed, becomes 100% chance.
		ai_value_modifier = {
			ai_zeal = 5
			ai_greed = -5
		}
	}
}

renounce_vow_of_poverty_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_spend_money.dds"

	desc = renounce_vow_of_poverty_decision_desc
	selection_tooltip = renounce_vow_of_poverty_decision_tooltip

	is_shown = {
		is_ruler = yes
		faith = {
			has_doctrine_parameter = vows_of_poverty_active
		}
		has_character_modifier = vow_of_poverty_modifier
	}

	effect = {
		add_piety = medium_piety_loss
		remove_character_modifier = vow_of_poverty_modifier

		stress_impact = {
			generous = major_stress_impact_gain
			zealous = medium_stress_impact_gain
			humble = minor_stress_impact_gain
		}
	}
	
	ai_check_interval = 60

	ai_potential = {
		has_character_modifier = vow_of_poverty_modifier
		# AI will consider if we're spending more money than we're making, and their treasury is low.
		monthly_character_expenses > monthly_character_income
		short_term_gold < minor_gold_value
		long_term_gold < minor_gold_value
	}

	ai_will_do = {
		base = 0

		# If ai_rationality + ai_greed exceeds ai_zeal by 20 points or more, becomes 100% chance.
		ai_value_modifier = {
			ai_rationality = 5
			ai_zeal = -5
			ai_greed = 5
		}
	}
}

initiate_consolamentum_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	selection_tooltip = initiate_consolamentum_decision_tooltip
	
	
 	title = {
 		first_valid = {
 			triggered_desc = {
 				trigger = {
 					faith = {
 						has_doctrine = tenet_gift_of_men
 					}
 				}
 				desc = lotr_lay_down_life_decision
 			}
 			desc = initiate_consolamentum_decision
 		}
 	}
 	desc = {
 		first_valid = {
 			triggered_desc = {
 				trigger = {
 					faith = {
 						has_doctrine = tenet_gift_of_men
 					}
 				}
 				desc = lotr_lay_down_life_decision_desc
 			}
 			desc = initiate_consolamentum_decision_desc
 		}
 	}

	is_shown = {
		faith = {
			has_doctrine_parameter = consolamentum_active
		}
	}

	is_valid = {
		OR = {
			custom_tooltip = {
				text = age_equivalent_advanced_eighty
				health_age_equivalent >= 80
			}
			has_trait = incapable
		}
	}
	
	is_valid_showing_failures_only = {
		# LotR - Immortal limits
		custom_tooltip = {
			text = immortals_cannot_commit_suicide
			cannot_be_killed = no
		}
		# LotR - Elven limits
		custom_tooltip = {
			text = elves_cannot_commit_suicide
			is_elf = no
		}
	}

	effect = {
		hidden_effect = {
			add_piety_level = 1
		}
		death = { death_reason = death_suicide }
		show_as_tooltip = {
			add_piety_level = 1
		}
	}

	ai_check_interval = 60
	
	ai_potential = {		
		exists = primary_heir
		primary_heir = {
			dynasty = root.dynasty
		}
		is_at_war = no
	}

	ai_will_do = {
		base = 0

		# 100% chance at 50 zeal
		ai_value_modifier = {
			ai_zeal = 2
		}

		modifier = {
			add = 40
			is_close_family_of = primary_heir
		}
	}
}

seek_aid_of_the_spirits_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

	desc = seek_aid_of_the_spirits_decision_desc
	selection_tooltip = seek_aid_of_the_spirits_decision_tooltip

	is_shown = {
		faith = {
			has_doctrine_parameter = spirit_possession_active
		}
	}

	is_valid = {
		custom_description = {
			text = decision_has_court_chaplain
			exists = cp:councillor_court_chaplain
			cp:councillor_court_chaplain = {
				is_available_adult = yes
			}
		}
		NOT = { has_trait = possessed }
		custom_description = {
			text = decision_sought_aid_of_spirits
			NOT = { has_character_flag = flag_sought_aid_of_spirits }
		}
	}

	is_valid_showing_failures_only = {
	}

	effect = {
		custom_tooltip = seek_aid_of_the_spirits_decision_effect.tt
		trigger_event = religious_decision.0001
		add_character_flag = {
			flag = flag_sought_aid_of_spirits
			days = 1825
			}
	}

	ai_check_interval = 60
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 50

		# 100% chance at 50 zeal, 0% chance at -50 zeal.
		ai_value_modifier = {
			ai_zeal = 1
		}		
	}
}

#select_personal_deity_hinduism_decision = {
#	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

#	desc = select_personal_deity_hinduism_decision_desc
#	selection_tooltip = select_personal_deity_hinduism_decision_tooltip

#	is_shown = {
#		#religion = religion:hinduism_religion
#		faith = {
#			has_doctrine_parameter = select_personal_god_active
#		}
#	}

#	is_valid = {
#	}

#	is_valid_showing_failures_only = {
#		# Have to at _least_ not be in piety debt.
#		piety >= 0
#	}

#	cooldown = { years = 2 }

#	effect = {
#		custom_tooltip = select_personal_deity_hinduism_decision_tt
#		trigger_event = religious_decision.0101
#	}

#	ai_check_interval = 96
#	
#	ai_potential = {
#		piety >= minor_piety_value
#		NOR = {
#			has_character_modifier = bhakti_hinduism_ganga
#			has_character_modifier = bhakti_hinduism_saraswati
#			has_character_modifier = bhakti_hinduism_kali
#			has_character_modifier = bhakti_hinduism_kubera
#			has_character_modifier = bhakti_vaishnavism_lakishmi
#			has_character_modifier = bhakti_vaishnavism_jagganath
#			has_character_modifier = bhakti_vaishnavism_hayagriva
#			has_character_modifier = bhakti_shaivism_parvati
#			has_character_modifier = bhakti_shaivism_virabhadra
#			has_character_modifier = bhakti_shaivism_munishwarar
#			has_character_modifier = bhakti_shaivism_dakshinamoorthy
#			has_character_modifier = bhakti_smartism_ganesha
#			has_character_modifier = bhakti_smartism_vishnu
#			has_character_modifier = bhakti_smartism_shiva
#		}
#	}

#	ai_will_do = {
#		base = 100
#	}
#}

#select_personal_deity_germanic_decision = {
#	picture = "gfx/interface/illustrations/decisions/fp1_decisons_hold_bolt.dds"
#
#	desc = select_personal_deity_germanic_decision_desc
#	selection_tooltip = select_personal_deity_germanic_decision_tooltip
#
#	is_shown = {
#		# DLC check.
#		has_fp1_dlc_trigger = yes
#		# Following a valid religion & faith.
#		religion = religion:germanic_religion
#		faith = { has_doctrine_parameter = select_personal_god_active }
#	}
#
#	is_valid = {
#	}
#
#	is_valid_showing_failures_only = {
#		# Have to at _least_ not be in piety debt.
#		piety >= 0
#	}
#
#	cooldown = { years = 2 }
#
#	effect = {
#		# Show the possible options.
#		show_as_tooltip = {
#			random_list = {
#				desc = select_personal_deity_germanic_decision_tt
#				100 = {
#					show_chance = no
#					desc = select_personal_deity_germanic_decision.select_odin
#					add_character_modifier = bhakti_germanic_generic_odin
#				}
#				100 = {
#					trigger = { is_vaguely_danish_bhakti_trigger = no }
#					show_chance = no
#					desc = select_personal_deity_germanic_decision.select_ullr
#					add_character_modifier = bhakti_germanic_not_danish_ullr
#				}
#				100 = {
#					trigger = { is_vaguely_danish_bhakti_trigger = yes }
#					show_chance = no
#					desc = select_personal_deity_germanic_decision.select_tyr
#					add_character_modifier = bhakti_germanic_danish_tyr
#				}
#				100 = {
#					show_chance = no
#					desc = select_personal_deity_germanic_decision.select_thor
#					add_character_modifier = bhakti_germanic_generic_thor
#				}
#				100 = {
#					show_chance = no
#					desc = select_personal_deity_germanic_decision.select_freyr
#					add_character_modifier = bhakti_germanic_generic_freyr
#				}
#			}
#		}
#		# And the actual effect.
#		trigger_event = religious_decision.0102
#	}
#
#	ai_check_interval = 96
#	
#	ai_potential = {
#		piety >= minor_piety_value
#		NOR = {
#			has_character_modifier = bhakti_germanic_generic_odin
#			has_character_modifier = bhakti_germanic_not_danish_ullr
#			has_character_modifier = bhakti_germanic_danish_tyr
#			has_character_modifier = bhakti_germanic_generic_thor
#			has_character_modifier = bhakti_germanic_generic_freyr
#		}
#	}
#
#	ai_will_do = {
#		base = 100
#	}
#}

select_personal_deity_saints_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_golden_age.dds"

	desc = select_personal_deity_saints_decision_desc
	selection_tooltip = select_personal_deity_saints_decision_tooltip

	is_shown = {
		faith = { has_doctrine_parameter = select_personal_god_active }
	}

	is_valid = {
	}

	is_valid_showing_failures_only = {
		# Have to at _least_ not be in piety debt.
		piety >= 0
	}

	cooldown = { years = 2 }

	effect = {
		# Show the possible options.
		custom_tooltip = select_personal_deity_saints_decision_tt
		custom_tooltip = select_personal_deity_saints_decision_tt2
		# And the actual effect.
		trigger_event = religious_decision.0103
	}

	ai_check_interval = 96
	
	ai_potential = {
		piety >= minor_piety_value
		NOR = {
			has_character_modifier = patron_saint_prophet_modifier
			has_character_modifier = patron_saint_militant_modifier
			has_character_modifier = patron_saint_wise_modifier
			has_character_modifier = patron_saint_pilgrim_modifier
			has_character_modifier = patron_saint_anointed_modifier
			has_character_modifier = patron_saint_chaste_modifier
			has_character_modifier = patron_saint_reformer
		}
	}

	ai_will_do = {
		base = 100
	}
}

meditate_in_seclusion_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

	desc = meditate_in_seclusion_decision_desc
	selection_tooltip = meditate_in_seclusion_decision_tooltip

	is_shown = {
		OR = {
			faith = {
				has_doctrine_parameter = meditation_mechanics_active
			}
			has_character_modifier = fp3_sufi_initiate_modifier #FP3 addition
			has_trait = calm 
		}
		holds_landed_title = yes
	}

	is_valid = {

	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
		location = capital_province
	}

	effect = {
		custom_tooltip = meditate_in_seclusion_tooltip
		trigger_event = religious_decision.0201
	}

	ai_check_interval = 60
	cooldown = { months = 36 }	

	ai_potential = {
		is_at_war = no
		stress >= 75
	}

	ai_will_do = {
		base = 100
	}
}

give_sky_burial_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	
	sort_order = 75

	desc = give_sky_burial_decision_desc
	selection_tooltip = give_sky_burial_decision_tooltip

	is_shown = {
		NOT = {
			has_dlc_feature = legends_of_the_dead
		}
		faith = {
			has_doctrine_parameter = sky_burials_active
		}
		has_variable = ancestor_to_bury
		var:ancestor_to_bury = {
			OR = {
				NOT = { exists = var:body_has_been_disposed }
				AND = {
					exists = var:body_has_been_disposed
					var:body_has_been_disposed = no
				}
			}
		}
	}

	is_valid = {
	}

	is_valid_showing_failures_only = {

	}

	effect = {
		show_as_tooltip = {
			add_piety = major_piety_value
			if = {
				limit = {
					any_vassal = {
						faith = {
							has_doctrine_parameter = sky_burials_active
						}
					}
				}
				every_vassal = {
					limit = {
						faith = {
							has_doctrine_parameter = sky_burials_active
						}
					}
					custom = give_sky_burial_vassals
					add_opinion = {
						modifier = pleased_opinion
						target = root
						opinion = 20
					}
				}
			}
		}
		hidden_effect = {
			var:ancestor_to_bury = {
				set_dead_character_variable = {
					name = body_has_been_disposed
					value = yes
					years = 5
				}
			}
		}
		trigger_event = religious_decision.0302
	}

	ai_check_interval = 36
	cooldown = { months = 12 }
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

raise_runestone_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

	desc = raise_runestone_decision_desc
	selection_tooltip = raise_runestone_decision_tooltip

	is_shown = {
		# Has access to a valid method of raising runestones.
		fp1_can_raise_stele_trigger = yes
		# Has a suitable ancestor available to bury.
		has_variable = ancestor_to_bury
		var:ancestor_to_bury = { dynasty = root.dynasty }
		# Use expanded version if we have FP1.
		has_fp1_dlc_trigger = no
	}

	is_valid = {
	}

	is_valid_showing_failures_only = {

	}

	effect = {
		#The modifier will only be active if a character of your dynasty holds it
		capital_province = {
			county = {
				set_variable = {
					name = ancestor_to_bury
					value = root.var:ancestor_to_bury
				}
				root = {
					send_interface_toast = {
						title = raise_runestone_decision_toast
						left_icon = root

						prev = {
							add_county_modifier = {
								modifier = county_raised_runestone_modifier
							}
						}
					}
				}
			}
		}
		remove_variable = ancestor_to_bury
		add_piety = medium_piety_value
		every_vassal = {
			limit = { fp1_can_raise_stele_trigger = yes }
			custom = raise_runestone_vassals
			add_opinion = {
				modifier = pleased_opinion
				target = root
				opinion = 10
			}
		}
		#Show a warning about it being destroyed if someone outside of your dynasty takes over the county it's built in
		custom_description_no_bullet = {
			text = raise_runestone_decision_warning
		}

#		# Saga in Stone achievement tracking.
#		if = {
#			limit = {
#				# Grab the player and any dynasty members of theirs.
#				any_player = { dynasty = root.dynasty }
#			}
#			dynasty = {
#				# Start a count if we don't have one.
#				if = {
#					limit = {
#						NOT = { exists = var:saga_in_stone_achievement_tally }
#					}
#					set_variable = {
#						name = saga_in_stone_achievement_tally
#						value = 1
#					}
#				}
#				# Otherwise, increment it.
#				else = {
#					change_variable = {
#						name = saga_in_stone_achievement_tally
#						add = 1
#					}
#				}
#			}
#		}
	}

	ai_check_interval = 36
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

divine_the_stars_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

	desc = divine_the_stars_decision_desc
	selection_tooltip = divine_the_stars_decision_tooltip

	is_shown = {
		faith = {
			has_doctrine_parameter = divine_the_stars_active
		}
	}

	is_valid_showing_failures_only = {
		custom_description = {
			text = divine_the_stars_trigger
			NOT = { has_character_flag = divining_the_stars }
		}
		NOR = {
			has_character_modifier = astrology_great_battle
			has_character_modifier = astrology_new_friends
			has_character_modifier = astrology_hard_work
			has_character_modifier = astrology_betrayal
			has_character_modifier = astrology_new_beginnings
		}
	}

	effect = {
		add_character_flag = divining_the_stars
		trigger_event = {
			id = religious_decision.0401
			days = { 14 28 }
		}
		custom_tooltip = divine_the_starts_effect
	}

	ai_check_interval = 60
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

revoke_false_conversion_decision = {	#Reveal yourself as a crypto-religionist.
	ai_check_interval = 60
	picture = "gfx/interface/illustrations/decisions/fp3/fp3_decision_secret_faith.dds"

	desc = revoke_false_conversion_decision.desc
	selection_tooltip = revoke_false_conversion_decision.tt

	is_shown = {
		any_secret = {
			secret_type = secret_crypto_religionist
		}
		NOT = { this = faith.religious_head }
	}

	is_valid = {
		is_adult = yes
	}

	is_valid_showing_failures_only = {
		custom_description = {
			text = cannot_be_atoned_krstjani_leader_flag
			NOT = { has_character_flag = atoned_krstjani_leader_flag }
		}
	}

	cost = {
		piety = {
			value = major_piety_value
			# Free if secret faith has sanctioned false conversions tenet
			if = {
				limit = { secret_faith ?= { has_doctrine_parameter = sanctioned_false_conversion } }
				multiply = 0
			}
		}
	}

	cooldown = { years = 20 }

	effect = {
		save_scope_value_as = {
			name = decision_piety_cost
			value = {
				add = major_piety_value
				if = { # Free if secret faith has sanctioned false conversions tenet
					limit = {
						secret_faith ?= {
							has_doctrine_parameter = sanctioned_false_conversion
						}
					}
					multiply = 0
				}
			}
		}
		trigger_event = false_conversion.0020
		custom_tooltip = revoke_false_conversion_decision.desc.tt
		custom_tooltip = revoke_false_conversion_decision.desc.tt_own_faith_counties
	}

	ai_potential = {
		exists = secret_faith
		any_secret = { secret_type = secret_crypto_religionist }
		liege.faith = { faith_hostility_level_comparison = { root.secret_faith <= root.faith } }
	}

	ai_will_do = {
		base = 25

		modifier = {	# Having a tolerant liege helps.
			add = 25
			liege.faith = { has_doctrine = doctrine_pluralism_pluralistic }
		}
		modifier = {	# If no one is fussed, and your old faith waxes while your current one wanes, then that seems like a good reason to jump ship.
			add = 35
			NOT = { liege.faith = { has_doctrine = doctrine_pluralism_fundamentalist } }
			secret_faith ?= { fervor >= medium_fervor_value }
			faith = { fervor <= medium_fervor_value }
		}
	}
}

encourage_confession_of_false_conversions_decision = {	# Ask that crypto-religionists in your realm start practicing in the open.
	ai_check_interval = 120
	picture = "gfx/interface/illustrations/decisions/fp3/fp3_decision_secret_faith.dds"

	desc = encourage_confession_of_false_conversions_decision.desc
	selection_tooltip = encourage_confession_of_false_conversions_decision.tt

	cooldown = { days = 3650 }

	is_shown = {
		OR = {
			AND = {	# Pluralists will encourage anyone to convert.
				OR = {
					any_vassal = {	#... Be they person...
						any_secret = {
							secret_type = secret_crypto_religionist
							is_known_by = root
							}
						liege.faith = {
							faith_hostility_level_comparison = { prev.secret_faith <= root.faith }
						}
					}
					any_sub_realm_county = {	#... Or county.
						has_variable = false_convert
						save_temporary_scope_as = current_county
						root.faith = {
							faith_hostility_level_comparison = {
								scope:current_county.var:false_convert <= scope:current_county.faith
							}
						}
					}
				}
				faith = { has_doctrine = doctrine_pluralism_pluralistic }
			}
			any_vassal = {	#Otherwise, you can have a vassal who practices your faith in secret.
				any_secret = {
					secret_type = secret_crypto_religionist
					is_known_by = root
				}
				secret_faith = root.secret_faith
			}
			any_sub_realm_county = {	#... Or a county!
				has_variable = false_convert
				var:false_convert = root.secret_faith
			}
		}
	}

	is_valid = {
		is_adult = yes
		NOR = {
			has_trait = zealous
			dread > low_dread
			tyranny >= 1
		}
	}

	cost = {
		piety = major_piety_value
	}

	effect = {
		trigger_event = false_conversion.0030
		if = {
			limit = {
				faith = { has_doctrine = doctrine_pluralism_pluralistic }
			}
			custom_tooltip = encourage_confession_of_false_conversions_decision.desc.tt_pluralist
			custom_tooltip = encourage_confession_of_false_conversions_decision.desc.tt_paranoia
			custom_tooltip = encourage_confession_of_false_conversions_decision.desc.tt_pluralist_counties
		}
		else = {
			custom_tooltip = encourage_confession_of_false_conversions_decision.desc.tt_coreligionist
			custom_tooltip = revoke_false_conversion_decision.desc.tt_own_faith_counties
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 25

		modifier = {	#A tolerant liege, including yourself, makes this more likely.
			add = 5
			liege.faith = { has_doctrine = doctrine_pluralism_pluralistic }
		}
		modifier = {	#A tolerant top-liege, including yourself, *also* makes this more likely.
			add = 5
			top_liege.faith = { has_doctrine = doctrine_pluralism_pluralistic }
		}
		modifier = {	#Planning for the future helps too.
			add = 5
			primary_heir.faith = { has_doctrine = doctrine_pluralism_pluralistic }
		}
		modifier = {	#If the faith isn't feeling militant, why should you?
			add = 10
			faith = { fervor <= medium_fervor_value }
		}
		modifier = {
			add = 10
			OR = {
				has_trait = compassionate
				has_trait = forgiving
				has_trait = honest
			}
		}
	}
}

abandon_crypto_faith_decision = {	#Abandon your secret faith.
	ai_check_interval = 60
	picture = "gfx/interface/illustrations/decisions/fp3/fp3_decision_secret_faith.dds"

	desc = abandon_crypto_faith_decision.desc
	selection_tooltip = abandon_crypto_faith_decision.tt

	is_shown = {
		any_secret = { secret_type = secret_crypto_religionist }
	}

	is_valid = {
		is_adult = yes
		NOT = { has_trait = zealous }
	}


	cost = {
		#It shouldn't _cost_ piety to abandon your crypto faith in favor of your actual faith
	}

	cooldown = { years = 20 }

	effect = {
		custom_tooltip = abandon_crypto_faith_decision.tt
		random_secret = {
			limit = { secret_type = secret_crypto_religionist }
			remove_secret = yes
		}
		#Something to remember it by
		create_character_memory = {
			type = abandoned_crypto_faith_memory
		}
		scope:new_memory = {
			set_variable = {
				name = old_faith_to_reminisce
				value = prev.secret_faith #The one taking the decision
			}
		}
		if = {
			limit = { exists = var:old_faith_to_reminisce }
			#To prevent 'unused except in loc' errors :catto:
		}
		hidden_effect = { remove_character_secret_faith = yes }
	}

	ai_potential = {
		exists = secret_faith
		any_secret = {
			secret_type = secret_crypto_religionist
		}
		liege.faith = {
			faith_hostility_level_comparison = { root.secret_faith <= root.faith }
		}
	}

	ai_will_do = {
		base = 0
		ai_value_modifier = {
			ai_zeal = -0.5
		}
	}
}

# Deprecated
#go_on_pilgrimage_decision = {
#	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
#	ai_check_interval = 60
#	
#	sort_order = 64
#
#	desc = go_on_pilgrimage_decision_desc
#	selection_tooltip = go_on_pilgrimage_decision_tooltip
#
#	cooldown = { years = pilgrimage_cooldown_year_amount }
#
#	is_shown = {
#		is_landed = yes
#
#		# Also we must have an actual holy site we can visit and must believe in pilgrimages
#		faith = {	
#			has_doctrine_parameter = can_go_on_pilgrimage
#			any_holy_site = {
#				exists = this
#			}
#		}
#		always = no
#	}
#
#	is_valid_showing_failures_only = {
#		is_available_adult = yes
#		is_at_war = no
#	}
#
#	effect = {
#		custom_tooltip = pilgrimage_effect_1
#		custom_tooltip = pilgrimage_effect_2
#		if = { #What is the minimum you will have to pay?
#			limit = {
#				faith = {
#					any_holy_site = {
#						squared_distance = {
#							target = root.capital_province
#							value <= short_pilgrimage_max_length
#						}
#					}
#				}
#			}
#			custom_tooltip = pilgrimage_effect_3
#		}
#		else_if = {
#			limit = {
#				faith = {
#					any_holy_site = {
#						squared_distance = {
#							target = root.capital_province
#							value <= medium_pilgrimage_max_length
#						}
#					}
#				}
#			}
#			custom_tooltip = pilgrimage_effect_4
#		}
#		else_if = {
#			limit = {
#				faith = {
#					any_holy_site = {
#						squared_distance = {
#							target = root.capital_province
#							value <= long_pilgrimage_max_length
#						}
#					}
#				}
#			}
#			custom_tooltip = pilgrimage_effect_5
#		}
#		else = {
#			custom_tooltip = pilgrimage_effect_6
#		}
#		if = {
#			limit = { has_trait = ill }
#			custom_tooltip = line_break
#			custom_tooltip = pilgrimage_illness_warning
#		}
#		if = {
#			limit = { is_ai = yes }
#			trigger_event = pilgrimage.0999
#		}
#		else = {
#			trigger_event = pilgrimage.0001
#		}
#	}
#
#	ai_potential = {
#		is_landed = yes
#		is_available_adult = yes
#		short_term_gold > pilgrimage_minimum_cost
#	}
#
#	ai_will_do = {
#		base = 20
#		modifier = {
#			add = -100
#			NOT = { short_term_gold >= pilgrimage_medium_extra_cost }
#		}
#		modifier = {
#			add = 30
#			short_term_gold >= pilgrimage_long_extra_cost
#		}
#		modifier = {
#			add = 20
#			piety_level <= 2
#		}
#		modifier = {
#			add = 20
#			has_trait = zealous
#		}
#		modifier = {
#			add = 20
#			has_trait = zealous
#			NOT = { has_trait = pilgrim }
#		}
#		modifier = {
#			add = -30
#			has_trait = cynical
#		}
#		modifier = {
#			add = -30
#			has_trait = pilgrim
#		}
#	}
#}

#return_rome_decision = {
#	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
#
#	desc = return_rome_decision_desc
#	selection_tooltip = return_rome_decision_tooltip
#
#	is_shown = {
#		is_independent_ruler = yes
#		faith = faith:catholic
#		exists = faith.religious_head
#		faith.religious_head = {
#			OR = {
#				is_independent_ruler = yes
#				NOT = {
#					any_liege_or_above = {
#						this = root
#					}
#				}
#			}
#		}
#		any_sub_realm_county = {
#			this = title:c_roma
#		}
#		NAND = {
#			is_ai = no
#			NOT = {
#				any_sub_realm_county = {
#					NOT = {
#						this = title:c_roma
#					}
#				}
#			}
#		}
#		NOT = {
#			root = root.faith.religious_head
#		}
#	}
#
#	effect = {
#		create_title_and_vassal_change = {
#			type = returned
#			save_scope_as = change
#			add_claim_on_loss = no
#		}
#		title:c_roma = {
#			change_title_holder = {
#				holder = root.faith.religious_head
#				change = scope:change
#			}
#		}
#		resolve_title_and_vassal_change = scope:change
#		
#		add_piety = major_piety_value
#		
#		faith.religious_head = {
#			add_opinion = {
#				target = root
#				modifier = grateful_opinion
#				opinion = 20
#			}
#		}
#
#		stress_impact = {
#			cynical = medium_stress_impact_gain
#			ambitious = minor_stress_impact_gain
#		}
#	}
#	
#	ai_check_interval = 12
#
#	ai_potential = {
#		is_at_war = no
#		is_independent_ruler = yes
#		faith = faith:catholic
#		ai_zeal > very_high_negative_ai_value
#		title:c_roma = {
#			holder = {
#				is_ai = yes
#			}
#		}
#	}
#
#	ai_will_do = {
#		base = 100
#
#		modifier = { # If you fought the pope to get rome, don't immediately hand it back
#			factor = 0
#			faith.religious_head = {
#				has_opinion_modifier = {
#					target = root
#					modifier = declared_war
#				}
#			}
#		}
#	}
#}
ai_create_head_of_faith_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	major = yes

	# Never shown, so it doesn't matter what we write here
	title = placeholder
	desc = placeholder
	confirm_text = placeholder
	selection_tooltip = placeholder

	is_shown = {
		is_ai = yes
		can_create_head_of_faith_title_trigger = { FAITH = root.faith }
		OR = {
			is_independent_ruler = yes
			AND = {
				is_independent_ruler = no
				NOT = {
					any_liege_or_above = {
						faith = root.faith
					}
				}
			}
		}
		OR = {
			government_has_flag = government_is_tribal
			government_has_flag = government_is_feudal
			government_has_flag = government_is_clan
		}
	}

	effect = {
		faith = { save_scope_as = faith }
		create_head_of_faith_title_effect = yes
	}
	
	ai_check_interval = 12

	ai_potential = {
		is_adult = yes
		NOR = {
			faith = {
				has_doctrine_parameter = no_head_of_faith
			}
			exists = faith.religious_head
		}
	}

	ai_will_do = {
		base = 100
	}
}
