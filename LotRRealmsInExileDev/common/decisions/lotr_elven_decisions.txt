#################################################
################ Elven Decisions ################
#################################################


##################################################
# Claim the High-Kingship of the Noldor
# by VectorMaximus
##################################################

decision_claim_high_kingship = {
	title = decision_claim_high_kingship
	desc = decision_claim_high_kingship_desc
	confirm_text = decision_claim_high_kingship_confirm
	selection_tooltip = decision_claim_high_kingship_tooltip
	picture = "gfx/interface/illustrations/decisions/decision_council_of_elrond_02.dds"
	major = yes

	# AI
	ai_goal = yes
	ai_potential = { # AI WILL NEVER DO THIS
		always = no
	}
	ai_will_do = { 
		base = 0
	}
	
	# IS SHOWN
	is_shown = {
		root = character:linefinwe27 # Elrond is the strongest claimant left to the High-Kingship (Get outta here Galadriel!)
		game_start_date > 4033.7.12 # After the death of Gil-galad
		NOT = { exists = title:e_noldor.holder }
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_claim_high_kingship
			}
		}
	}
	
	# IS VALID
	is_valid = {
		prestige_level >= 5
		piety_level >= 5
		trigger_if = {
			limit = { exists = title:e_lindon.holder }
			has_relation_friend = title:e_lindon.holder
		}
	}

	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}

	# EFFECT
	effect = {
		get_title = title:e_noldor

		custom_tooltip = {
			text = decision_claim_high_kingship_effect_tooltip
			if = { # If Lindon exists
				limit = { exists = title:e_lindon.holder }
				title:e_lindon.holder = {
					every_vassal = { add_to_list = vassals_in_lindon }
					save_scope_as = ruler_of_lindon
				}
				every_in_list = {
					list = vassals_in_lindon

					create_title_and_vassal_change = {
						type = swear_fealty
						save_scope_as = change
						add_claim_on_loss = no
					}
					change_liege = {
						liege = root
						change = scope:change
					}
					resolve_title_and_vassal_change = scope:change
				}
		
				title:e_lindon = { holder = { destroy_title = prev } }

				scope:ruler_of_lindon = {
					create_title_and_vassal_change = {
						type = swear_fealty
						save_scope_as = change
						add_claim_on_loss = no
					}
					change_liege = {
						liege = root
						change = scope:change
					}
					resolve_title_and_vassal_change = scope:change
				}
			} 
			else = { # If Lindon does NOT exists
				title:e_lindon = {
					every_de_jure_county_holder = {
						limit = {
							NOT = {
								any_in_list = {
									list = vassals_in_lindon
									this = prev
								}
								OR = {
									this = character:k_wastelands_holder
									this = character:linefinwe11
								}
							}
							is_independent_ruler = yes
						}
						add_to_list = vassals_in_lindon
					}
					every_de_jure_county_holder = {
						limit = {
							NOT = {
								any_in_list = {
									list = vassals_in_lindon
									this = prev
								}
								this = character:k_wastelands_holder
							}
							highest_held_title_tier = tier_duchy
						}
						add_to_list = vassals_in_lindon
					}
					every_de_jure_county_holder = {
						limit = {
							NOT = {
								any_in_list = {
									list = vassals_in_lindon
									this = prev
								}
								this = character:k_wastelands_holder
							}
							highest_held_title_tier = tier_kingdom
						}
						add_to_list = vassals_in_lindon
					}
				}
				every_in_list = {
					list = vassals_in_lindon

					create_title_and_vassal_change = {
						type = swear_fealty
						save_scope_as = change
						add_claim_on_loss = no
					}
					change_liege = {
						liege = root
						change = scope:change
					}
					resolve_title_and_vassal_change = scope:change
				}
			}
			get_title = title:e_lindon
		}

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_claim_high_kingship
		}

		trigger_event = {
			id = elven.0802	# A New High-King
		}
	}	
}

##################################################
# Nelornieth Diplomacy Expedition
# by Brice
##################################################

decision_nelornieth_diplo = {
    title = decision_nelornieth_diplo
    picture = "gfx/interface/illustrations/decisions/decision_nelornieth_embassy.dds"

    major = yes
    ai_goal = yes
    ai_will_do = {
        base = 100
    }

    cooldown = { days = 3650 }

    selection_tooltip = decision_nelornieth_diplo_tooltip
    desc = decision_nelornieth_diplo_desc

    is_shown = {
        is_elf = yes
        has_title = title:k_nelornieth
        religion = {
			NOT = {
				is_in_family = rf_forcesofevil
			}
		}
	}

	is_valid = {
		is_adult = yes
		completely_controls = title:k_nelornieth
		prestige_level >= high_prestige_level
		gold >= 700
        prestige >= 1000 
	}

	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}

	should_create_alert = { #This means that if the player is tracking the decision, it won't make an alert unless these additional conditions are fulfilled
		gold >= 700
        	prestige >= 1000 
	}

	effect = {
		trigger_event = {
		    id = nelornieth.0001
		}
	}
}

##################################################
# Elven Healer Decision
# by Brice
##################################################

request_elven_healer_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_recruitment.dds"
	title = request_elven_healer_decision_title
	
	sort_order = 82

	desc = request_elven_healer_decision_desc
	selection_tooltip = request_elven_healer_decision_tooltip

	ai_check_interval = 60

	is_shown = {
		is_ruler = yes
		faith_is_good = yes
		OR = {
			has_serious_disease_trigger = yes
			any_spouse = { has_serious_disease_trigger = yes }
			any_child = { has_serious_disease_trigger = yes }
		}
		is_in_valinor = no
	}

	cooldown = { years = 50 }

	is_valid = {
		is_imprisoned = no
		custom_tooltip = {
			text = LOTR_FRIENDS_WITH_ELVEN_KING_TRIGGER
			lotr_friends_with_elven_king_trigger = yes
		}	
	}

	effect = {
		trigger_event = {
			id = health.3021
			days = 14
		}
		custom_tooltip = request_elven_healer_decision_effect_tooltip
	}
	
	ai_potential = {
		highest_held_title_tier > tier_barony
		is_landed = yes
		gold > 500
		is_at_war = no
	}

	ai_will_do = {
		base = 100
	}
}

##################################################
# Establish the high kingdom of Eryn Lasgalen
# by Fredsch
##################################################

decision_establish_high_kingdom_of_eryn_lasgalen = {
	picture = "gfx/interface/illustrations/decisions/decision_eryn_lasgalen.dds"
	title = decision_establish_high_kingdom_of_eryn_lasgalen
	desc = decision_establish_high_kingdom_of_eryn_lasgalen_desc	
	selection_tooltip = decision_establish_high_kingdom_of_eryn_lasgalen_tooltip
	confirm_text = decision_establish_high_kingdom_of_eryn_lasgalen_confirm
	major = yes

	# Shown checks
	is_shown = {
		is_elf = yes
		culture = culture:lasgalendrim

		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_establish_high_kingdom_of_eryn_lasgalen
			}
		}
		current_year >= 4026 # Greenwood must have fallen
	}

	# Valid checks
	is_valid = {
		is_at_war = no
		is_independent_ruler = yes
		prestige_level >= max_prestige_level
		completely_controls_region = middleearth_west_rhovanion_mirkwood
		has_title = title:k_lasgalen
		custom_tooltip = {
			text = decision_establish_high_kingdom_of_eryn_lasgalen.amon_lanc_is_lasgalendrim
			title:c_amon_lanc.culture = culture:lasgalendrim
		}
		title:c_amon_lanc = { 
			title_province = {
				has_building = wonder_amon_lanc_03
			}
		}
	}

	# Effect
	effect = {
		get_title = title:e_greenwood
		custom_tooltip = decision_establish_high_kingdom_of_eryn_lasgalen.greenwood_renamed_eryn_lasgalen
		title:e_greenwood = { set_title_name = e_eryn_lasgalen }
		dynasty_legacy_of_oropher_effects = yes

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_establish_high_kingdom_of_eryn_lasgalen
		}

		if = {
			limit = { # Major News
				NOT = { has_game_rule = no_news }
			}
			every_player = { #Global News Announcement
				trigger_event = news_event.0017
			}
		}
	}

	# Cost
	cost = {
		prestige = 5000
	}

	# AI values
	ai_check_interval = 12

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

decision_destroy_dol_guldur = {
	title = decision_destroy_dol_guldur
	picture = "gfx/interface/illustrations/decisions/decision_dol_guldur_dominion_of_the_sorcerer.dds"
	major = yes
	ai_goal = yes
	selection_tooltip = decision_destroy_dol_guldur_tooltip
	desc = decision_destroy_dol_guldur_desc
	confirm_text = decision_destroy_dol_guldur_confirm

	is_shown = {
		has_title = title:k_lothlorien
		character:nazgul2 = {
			has_title = title:k_amon_lanc
		}
		is_elf = yes
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_destroy_dol_guldur
			}
		}
	}

	is_valid = {
		is_independent_ruler = yes
		character_is_realm_neighbor = character:nazgul2
		NOT = { has_truce = character:nazgul2 }
	}

	effect = {
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_destroy_dol_guldur
		}
		start_war = {
			casus_belli = destroy_dol_guldur_cb
			target = character:nazgul2
			target_title = title:d_amon_lanc
		}
		custom_tooltip = decision_destroy_dol_guldur_effect_1
	}
	
	ai_potential = {
		character:nazgul2 = {
			is_tributary = no
		}
	}

	ai_will_do = {
		base = 80
	}
}

##################################################
# Claim Amon Lanc for Laurelindorenan
# by Fredsch
##################################################
claim_amon_lanc_for_laurelindorenan = {
	picture = "gfx/interface/illustrations/decisions/decision_eryn_lasgalen.dds"
	title = claim_amon_lanc_for_laurelindorenan
	desc = claim_amon_lanc_for_laurelindorenan_desc	
	selection_tooltip = claim_amon_lanc_for_laurelindorenan_tooltip
	confirm_text = claim_amon_lanc_for_laurelindorenan_confirm
	major = yes

	# Shown checks
	is_shown = {
		is_elf = yes
		culture = culture:galadhrim
		any_held_title = {
			de_jure_liege = title:k_lothlorien
		}
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:claim_amon_lanc_for_laurelindorenan
			}
		}
	}

	# Valid checks
	is_valid = {
		is_at_war = no
		is_independent_ruler = yes
		prestige_level >= max_prestige_level
		has_title = title:k_lothlorien
		completely_controls = title:d_amon_lanc
		completely_controls = title:d_gwath_anglennol
		completely_controls = title:d_taur_e_ndaedlos
		completely_controls = title:d_drownholt
		custom_tooltip = {
			text = claim_amon_lanc_for_laurelindorenan.amon_lanc_is_galadhrim
			title:c_amon_lanc.culture = culture:galadhrim
		}
		title:c_amon_lanc = { 
			title_province = {
				has_building = wonder_amon_lanc_03
			}
		}
	}

	# Effect
	effect = {
		trigger_event = elven.0700
	}

	# Cost
	cost = {
		prestige = 5000
	}

	# AI values
	ai_check_interval = 12

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

##################################################
# Elevate Edhellond into Kingdom
# by Jaco_Daan
##################################################
decision_make_edhellond_kingdom = {
	picture = "gfx/interface/illustrations/event_scenes/armenelos.dds"
	title = decision_make_edhellond_kingdom
	selection_tooltip = decision_make_edhellond_kingdom_tooltip
	desc = decision_make_edhellond_kingdom_desc
	confirm_text = decision_make_edhellond_kingdom_confirm
	major = yes

	# SHOWN
	is_shown = {
		is_landed = yes
		is_elf = yes
		
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:elves_edhellond_kingdom
			}
		}
		is_target_in_global_variable_list = {  
			name = unavailable_unique_decisions
			target = flag:invite_elves_edhellond
		}
		has_title = title:c_edhellond
	}

	# IS VALID
	is_valid = {
		prestige_level >= 4
		AND = {
			has_title = title:c_edhellond
		}
	}

	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}

	#COST
	cost = {
		prestige = 1500
		gold = 500
		piety = 750
	}

	#EFFECT
	effect = {
		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:k_edhellond = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:elves_edhellond_kingdom
		}
		
		if = {
			limit = { 
				has_title = title:c_dol_amroth
			}
			title:c_dol_amroth = {
				set_de_jure_liege_title = title:d_edhellond
			}
			title:k_belfalas = {
				set_capital_county = title:c_methrast
			}
		}
		resolve_title_and_vassal_change = scope:change

		if = {
			limit = {
				OR = {
					NOT = { exists = title:k_edhellond.holder.liege }
					AND = {
						root.top_liege.primary_title = title:e_reunitedkingdom
						NOT = {
							is_target_in_global_variable_list = {
								name = unavailable_unique_decisions
								target = flag:decision_solidify_reunited_kingdom
							}
						}
					}
				}	
			}
			title:k_edhellond = { set_de_jure_liege_title = title:e_gondor }
		} else = {
			title:k_edhellond = { set_de_jure_liege_title = root.top_liege.primary_title }
		}
		
		title:d_edhellond = {
			set_de_jure_liege_title = title:k_edhellond
		}
		hidden_effect = {
			title:c_edhellond = {
				set_de_jure_liege_title = title:d_edhellond
			}
		}
	}

	# AI
	ai_goal = yes
	ai_potential = {
		always = yes
	}
	ai_will_do = {
		base = 100
	}
}

##################################################
# Reclaim Sîrgala Kingdom
# by Jaco_Daan
##################################################

decision_reclaim_sirgala = {
	title = decision_reclaim_sirgala
	desc = decision_reclaim_sirgala_desc
	confirm_text = decision_reclaim_sirgala_confirm
	selection_tooltip = decision_reclaim_sirgala_tooltip
	picture = "gfx/interface/illustrations/decisions/decision_elves_dwarves_02.dds"
	major = yes

	# AI
	ai_goal = yes
	ai_potential = {
		always = yes
	}
	ai_will_do = {
		base = 100
	}
	
	# IS SHOWN
	is_shown = {
		OR = {
			has_culture = culture:sirrandrai
			AND = {
				is_elf = yes
				has_title = title:e_lindon
			}
		}
		
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_reclaim_sirgala
			}		
		}
	}
	
	# IS VALID
	is_valid = {
		prestige_level >= high_prestige_level
		completely_controls = title:d_siragale # Completely controls the old heartland of the Kingdom
		#completely_controls = title:d_sarn_athrad # Completely controls the old heartland of the Kingdom
		# Vector note - Sarn Athrad had slipped out of Sirgala's control by the mid-late Second Age. More fitting to make this an optional objective.
		completely_controls = title:d_hyarromenya # Completely controls the old heartland of the Kingdom
	}

	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}

	# EFFECT
	effect = {
		add_prestige = 1000
		title:d_siragale = {
			set_de_jure_liege_title = title:k_sirgala
		}
		title:d_hyarromenya = {
			set_de_jure_liege_title = title:k_sirgala
		}
		#title:d_sarn_athrad = { # Vector Note - see above comment
		#	set_de_jure_liege_title = title:k_sirgala
		#}
		hidden_effect = { # If Sirrandrai, set this as your realm capital
			if = {
				limit = { root.culture = culture:sirrandrai }
				set_realm_capital = title:c_edhelas
			}
		}
		culture:sirrandrai = {
			remove_culture_tradition = tradition_sirgalan_exiles
			add_culture_tradition = tradition_sirgala_renewed
		}
		if = {
			limit = { completely_controls = title:d_sarn_athrad }
			title:d_sarn_athrad = { set_de_jure_liege_title = title:k_sirgala }
		}
		if = {
			limit = { highest_held_title_tier < tier_empire }
			set_primary_title_to = title:k_sirgala
		}
		title:k_sirgala = {
			set_de_jure_liege_title = title:e_lindon
		}
		title:k_sirgala = {
			set_capital_county = title:c_edhelas
		}
		get_title = title:k_sirgala
		
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_reclaim_sirgala
		}

		trigger_event = {
			id = elven.0801	# Reclaim Sîrgala Kingdom
		}
	}
}

##################################################
# Rebuild Ost-in-Edhil
# by VectorMaximus
##################################################

decision_rebuild_ost_in_edhil= {
	title = decision_rebuild_ost_in_edhil
	desc = decision_rebuild_ost_in_edhil_desc
	confirm_text = decision_rebuild_ost_in_edhil_confirm
	selection_tooltip = decision_rebuild_ost_in_edhil_tooltip
	picture = "gfx/interface/illustrations/decisions/decision_elves_dwarves_02.dds"
	major = yes

	# AI
	ai_goal = yes
	ai_potential = {
		always = yes
	}
	ai_will_do = {
		base = 100
	}
	
	# IS SHOWN
	is_shown = {
		OR = {
			has_title = title:c_ost_in_edhil
			any_vassal = {
				has_title = title:c_ost_in_edhil
				is_elf = yes
			}
		}
		is_elf = yes
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_rebuilding_ost_in_edhil
			}		
		}
	}
	
	# IS VALID
	is_valid = {
		prestige_level >= high_prestige_level
		OR = {
			has_title = title:c_ost_in_edhil
			any_vassal = {
				has_title = title:c_ost_in_edhil
				is_elf = yes
			}
		}
		title:c_ost_in_edhil = {
			title_province = {
				NOR = {
					has_holding_type = settlement_holding
					has_holding_type = wastelands_holding
				}
			}
		}
	}

	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}

	cost = {
		gold = 3000
	}

	# EFFECT
	effect = {
		if = {
			limit = { 
				province:4351 = {
					has_special_building_slot = no
				}
		 	}
			province:4351 = { add_special_building_slot = wonder_mirdairond }
		}
		title:c_ost_in_edhil = {
			change_development_level = 5
		}

		custom_tooltip = {
			text = ost_in_edhil_upgrade_holding
			title:c_ost_in_edhil = { 
				title_province = {
					if = {
						limit = { has_building = elven_settlement_01 }
						add_building = elven_settlement_03
					}
					else_if = {
						limit = { has_building = elven_settlement_02 }
						add_building = elven_settlement_04
					}
					else_if = {
						limit = { has_building = elven_settlement_03 }
						add_building = elven_settlement_05
					}
					else_if = {
						limit = { has_building = elven_settlement_04 }
						add_building = elven_settlement_06
					}
					else_if = {
						limit = { has_building = elven_settlement_05 }
						add_building = elven_settlement_07
					}
					else_if = {
						limit = { has_building = elven_settlement_06 }
						add_building = elven_settlement_07
						county = { change_development_level = 10 }
					}
					else_if = {
						limit = { has_building = elven_settlement_07 }
						county = { change_development_level = 20 }
					}
				}
			}
		}
			
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_rebuilding_ost_in_edhil
		}

		trigger_event = {
			id = elven.0800	# Ost in Edhil Reborn
		}
	}	
}

##################################################
# Restore Elven Suza Sumar
# by Commander Sol
##################################################

decision_restore_suza_sumar_elven = {
	title = decision_restore_suza_sumar_elven
	desc = decision_restore_suza_sumar_elven_desc
	confirm_text = decision_restore_suza_sumar_elven_confirm
	selection_tooltip = decision_restore_suza_sumar_elven_tooltip
	picture = "gfx/interface/illustrations/decisions/decision_elves_dwarves_02.dds"
	major = yes

	# AI
	ai_goal = yes
	ai_potential = {
		always = yes
	}
	ai_will_do = {
		base = 100
	}
	
	# IS SHOWN
	is_shown = {
		culture = { has_cultural_pillar = heritage_moriquendi }
		has_title = title:d_suza_sumar
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_restore_suza_sumar_elven
			}		
		}
	}
	
	# IS VALID
	is_valid = {
		prestige_level >= high_prestige_level
		completely_controls = title:d_suza_sumar
		completely_controls = title:d_sarwa
		has_title = title:c_sanma
		has_title = title:c_simza
		highest_held_title_tier < tier_kingdom
	}

	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}

	# EFFECT
	effect = {
		add_prestige = 1000

		hidden_effect = {
			title:d_suza_sumar = {
				set_de_jure_liege_title = title:k_sumarieth
			}
			title:d_sarwa = {
				set_de_jure_liege_title = title:k_sumarieth
			}
			title:c_simza = {
				set_de_jure_liege_title = title:d_suza_sumar
			}
			title:c_sanma = {
				set_de_jure_liege_title = title:d_suza_sumar
			}
			set_realm_capital = title:c_pred
		}
		title:k_sumarieth = {
			set_de_jure_liege_title = title:e_bozisha_miraz
		}
		title:k_sumarieth = {
			set_capital_county = title:c_pred
		}
		get_title = title:k_sumarieth
		set_primary_title_to = title:k_sumarieth

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_restore_suza_sumar_elven
		}
	}
}

##################################################
# Restore Return Cuind
# by Commander Sol
##################################################

decision_return_cuind = {
	# TEXT
	title = decision_return_cuind
	picture = "gfx/interface/illustrations/decisions/decision_fornost_02.dds"
	selection_tooltip = decision_return_cuind_tooltip
	desc = decision_return_cuind_desc
	confirm_text = decision_return_cuind_confirm
	major = yes

	# IS_SHOWN
	is_shown = {
		has_title = title:k_sumarieth
		
		is_target_in_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_restore_suza_sumar_elven
		}
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_return_cuind
			}
		}
	}
	
	# IS_VALID
	is_valid = {
		prestige_level >= 4
		piety_level >= 5
		prestige >= 1000
		gold >= 200
	}
	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}
	
	# EFFECT 
	effect = {
		set_culture = culture:cuind
		
		if = {
			limit = { 
				any_spouse = { 
					is_landed = no 
					OR = {
						culture = { has_cultural_pillar = heritage_moriquendi }
					}
				} 
			}
			every_spouse = {
				limit = {
					is_landed = no
					OR = {
						culture = { has_cultural_pillar = heritage_moriquendi }
					}
				}
				if = {
					limit = { is_ai = yes }
					set_culture = culture:cuind
				}
			}
		}
		if = {
			limit = {
				any_close_family_member = {
					is_landed = no
					NOT = { is_spouse_of = root }
					OR = {
						culture = { has_cultural_pillar = heritage_moriquendi }
					}
				}
			}
			every_close_family_member = {
				limit = {
					is_landed = no
					NOT = { is_spouse_of = root }
					OR = {
						culture = { has_cultural_pillar = heritage_moriquendi }
					}
				}
				custom = all_unlanded_family_members
				if = {
					limit = { is_ai = yes }
					set_culture = culture:cuind
				}
			}
		}
		if = {
			limit = {
				any_child = {
					OR = {
						culture = { has_cultural_pillar = heritage_moriquendi }
					}
				}
			}
			every_child = {
				limit = {
					NOT = { 
						OR = {
							culture = { has_cultural_pillar = heritage_moriquendi }
						}
					}
				}
				custom = all_children_custom
				if = {
					limit = { is_ai = yes }
					set_culture = culture:cuind
				}
			}
		}

		#Convert appropriate vassals, and their family
		if = {
			limit = {
				any_vassal_or_below = {
					OR = {
						culture = { has_cultural_pillar = heritage_moriquendi }
					}
				}
			}
			every_vassal_or_below = {
				custom = decision_return_cuind_vassals_custom
				limit = {
					OR = {
						culture = { has_cultural_pillar = heritage_moriquendi }
					}
				}
				if = {
					limit = { is_ai = yes }
					set_culture = culture:cuind
				}
				hidden_effect = {
					if = {
						limit = { 
							any_spouse = { 
								is_landed = no
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							} 
						}
						every_spouse = {
							limit = {
								is_landed = no
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							}
							if = {
								limit = { is_ai = yes }
								set_culture = culture:cuind
							}
						}
					}
					if = {
						limit = {
							any_close_family_member = {
								is_landed = no
								NOT = { is_spouse_of = prev }
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							}
						}
						every_close_family_member = {
							limit = {
								is_landed = no
								NOT = { is_spouse_of = prev }
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							}
							custom = all_unlanded_family_members
							if = {
								limit = { is_ai = yes }
								set_culture = culture:cuind
							}
						}
					}
					if = {
						limit = {
							any_child = {
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							}
						}
						every_child = {
							limit = {
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							}
							custom = all_children_custom
							if = {
								limit = { is_ai = yes }
								set_culture = culture:cuind
							}
						}
					}
					if = {
						limit = {
							any_vassal_or_below = {
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							}
						}
						every_vassal_or_below = {
							custom = decision_return_cuind_vassals_custom
							limit = {
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							}
							if = {
								limit = { is_ai = yes }
								set_culture = culture:cuind
							}
							hidden_effect = {
								if = {
									limit = { 
										any_spouse = { 
											is_landed = no 
											OR = {
												culture = { has_cultural_pillar = heritage_moriquendi }
											}
										} 
									}
									every_spouse = {
										limit = {
											is_landed = no
											OR = {
												culture = { has_cultural_pillar = heritage_moriquendi }
											}
										}
										if = {
											limit = { is_ai = yes }
											set_culture = culture:cuind
										}
									}
								}
								if = {
									limit = {
										any_close_family_member = {
											is_landed = no
											NOT = { is_spouse_of = prev }
											OR = {
												culture = { has_cultural_pillar = heritage_moriquendi }
											}
										}
									}
									every_close_family_member = {
										limit = {
											is_landed = no
											NOT = { is_spouse_of = prev }
											OR = {
												culture = { has_cultural_pillar = heritage_moriquendi }
											}
										}
										custom = all_unlanded_family_members
										if = {
											limit = { is_ai = yes }
											set_culture = culture:cuind
										}
									}
								}
								if = {
									limit = {
										any_child = {
											OR = {
												culture = { has_cultural_pillar = heritage_moriquendi }
											}
										}
									}
									every_child = {
										limit = {
											OR = {
												culture = { has_cultural_pillar = heritage_moriquendi }
											}
										}
										custom = all_children_custom
										if = {
											limit = { is_ai = yes }
											set_culture = culture:cuind
										}
									}
								}
							}
						}
					}
				}
			}
		}

		#Flip Counties
		every_county = {
			custom = decision_return_cuind_counties_custom
			limit = {
				OR = {
					holder = root
					holder.top_liege = root
				}
				culture = { has_cultural_pillar = heritage_moriquendi }
			}
			set_county_culture = culture:cuind
		}
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_return_cuind
		}
	}

	# AI
	ai_goal = yes
	ai_potential = { always = yes }
	ai_will_do = { base = 100 }
}

##################################################
# Annihilate the Abhorred
# Coding by Jaco_Daan
# Localization by VectorMaximus
##################################################

decision_annihilate_abhorred = { # Starts war against Sauron
	# TEXT
	title = decision_annihilate_abhorred
	picture = "gfx/interface/illustrations/decisions/decision_barad_dur_01.dds"
	selection_tooltip = decision_annihilate_abhorred_tooltip
	desc = decision_annihilate_abhorred_desc
	confirm_text = decision_annihilate_abhorred_confirm
	major = yes

	# IS_SHOWN
	is_shown = {
		root = character:linefinwe11
		OR = {
			has_variable = maglor_aggresive
			has_variable = maglor_defensive
		}
		character:lineofsauron = { 
			is_alive = yes
			is_ruler = yes
		}
		faith_is_good = yes
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_annihilate_abhorred
			}
		}
	}
	
	# IS_VALID
	is_valid = {
		trigger_if = {
			limit = { has_variable = maglor_defensive }
			custom_tooltip = {
				text = "decision_annihilate_abhorred_defensive_azaghal"
				is_target_in_global_variable_list = {
					name = unavailable_unique_decisions
					target = flag:decision_reclamation_of_moria
				}
			}
			custom_tooltip = {
				text = "decision_annihilate_abhorred_defensive_mirkwood"
				OR = {
					NOT = { title:k_amon_lanc.holder = character:nazgul2 }
					is_target_in_global_variable_list = {
						name = unavailable_unique_decisions
						target = flag:decision_annihilate_dol_guldur
					}
				}
			}
		}
	}
	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}

	# COOLDOWN
	cooldown = { years = 5 }
	
	# EFFECT 
	effect = {
		if = {
			limit = { exists = title:e_gondor_steward.holder }
			title:e_gondor_steward.holder = { save_temporary_scope_as = gondor_ruler }
		}
		else_if = {
			limit = { exists = title:e_gondor.holder }
			title:e_gondor.holder = { save_temporary_scope_as = gondor_ruler }
		}
		else_if = {
			limit = { exists = title:e_reunitedkingdom.holder }
			title:e_reunitedkingdom.holder = { save_temporary_scope_as = gondor_ruler }
		}

		custom_tooltip = {
			text = decision_annihilate_abhorred_aggresive_tt_2
			start_war = {
				casus_belli = final_battle_maglor_cb
				target = title:e_mordor.holder
				target_title = title:e_mordor
			}
		}

		if = {
			limit = { has_variable = maglor_defensive }
			custom_tooltip = decision_annihilate_abhorred_aggresive_tt_3
			if = {
				limit = { has_variable = kept_amon_lanc }# Letter event to Galadriel/Thranduil
				title:k_lothlorien.holder = {
					trigger_event = {
						id = elven.1843
						days = 3
					}
				}
				title:k_lasgalen.holder = {
					trigger_event = {
						id = elven.1843
						days = 3
					}
				}
				title:k_khazad_dum.holder = {
					character:linefinwe11 = {
						random_character_war = {
							limit = { using_cb = final_battle_maglor_cb }
							add_attacker = root
						}
					}
				}
			}
			else = { trigger_event = elven.1840 } # Call them in automatically
		}
		else = {
			trigger_event = elven.1841 # Letter event to Gondor
			custom_tooltip = decision_annihilate_abhorred_aggresive_tt
		}
	}

	# AI
	ai_goal = yes
	ai_potential = { always = yes }
	ai_will_do = { base = 100 }
}

##################################################
# Umbar Burns
# Coding by Jaco_Daan
# Localization by VectorMaximus
##################################################

decision_umbar_burns = { # Starts war against Umbar
	# TEXT
	title = decision_umbar_burns
	picture = "gfx/interface/illustrations/event_scenes/kinslaying.dds"
	selection_tooltip = decision_umbar_burns_tooltip
	desc = decision_umbar_burns_desc
	confirm_text = decision_umbar_burns_confirm
	major = yes

	# IS_SHOWN
	is_shown = {
		root = character:linefinwe11
		has_variable = maglor_aggresive
		character:lineofsauron = { 
			is_alive = yes
			is_ruler = yes
		}
		faith_is_good = yes
		OR = {
			title:k_umbar.holder ?= { faith_is_evil = yes }
			title:e_umbar.holder ?= { faith_is_evil = yes }
		}
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_umbar_burns
			}
		}
	}
	
	# IS_VALID
	is_valid = { }
	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}
	
	# COST 
	cost = {
		gold = 100
		prestige = 250
	}
	
	# EFFECT 
	effect = {
		custom_tooltip = decision_umbar_burns_effect_tt
		if = {
			limit = { exists = title:e_gondor.holder }
			title:e_gondor.holder = { save_scope_as = gondor_ruler }
		}
		else = {
			title:e_gondor_steward.holder = { save_scope_as = gondor_ruler }
		}

		if = {
			limit = {
				scope:gondor_ruler = { faith_is_good = yes }
			}
			scope:gondor_ruler = {
				every_vassal_or_below = {
					limit = {
						highest_held_title_tier >= tier_county
						any_held_title = {
							tier = tier_county
							is_coastal_county = yes 
						}
					}
					trigger_event = {
						id = elven.1700
						days = { 15 30 }
					}
				}
			}
		}

		character:linefinwe11 = {
			trigger_event = {
				id = elven.1710
				months = 1
			}
		}
		
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_umbar_burns
		}
	}

	# AI
	ai_goal = yes
	ai_potential = { always = yes }
	ai_will_do = { base = 100 }
}

##################################################
# Annihilate Dol Guldur
# Coding by Jaco_Daan
# Localization by VectorMaximus
##################################################

decision_annihilate_dol_guldur = { # Starts war against Dol Guldur
	# TEXT
	title = decision_annihilate_dol_guldur
	picture = "gfx/interface/illustrations/decisions/decision_dol_guldur_dominion_of_the_sorcerer.dds"
	selection_tooltip = decision_annihilate_dol_guldur_tooltip
	desc = decision_annihilate_dol_guldur_desc
	confirm_text = decision_annihilate_dol_guldur_confirm
	major = yes

	# IS_SHOWN
	is_shown = {
		root = character:linefinwe11
		has_variable = maglor_defensive
		title:k_amon_lanc.holder ?= { faith_is_evil = yes }
		# character:nazgul2 = { has_title = title:k_amon_lanc }
		faith_is_good = yes

		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_annihilate_dol_guldur
			}
		}
	}
	
	# IS_VALID
	is_valid = {
		custom_tooltip = {
			text = "decision_annihilate_dol_guldur_is_valid_tt"
			OR = {
				is_target_in_global_variable_list = {
					name = unavailable_unique_decisions
					target = flag:decision_reclamation_of_moria
				}
				AND = {
					is_target_in_global_variable_list = {
						name = unavailable_unique_decisions
						target = flag:decision_reclamation_of_moria
					}
					is_target_in_global_variable_list = {
						name = unavailable_unique_decisions
						target = flag:decision_cleanse_the_high_pass
					}
				}
			}
		}
	}
	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}

	# COST 
	cost = {
		gold = 50
		piety = 250
	}
	
	# EFFECT 
	effect = {
		custom_tooltip = {
			text = decision_annihilate_dol_guldur_effect_tt
			start_war = {
				casus_belli = destroy_dol_guldur_cb
				target = title:k_amon_lanc.holder
				target_title = title:k_amon_lanc
			}
		}
		set_variable = war_against_DG
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_annihilate_dol_guldur
		}
	}

	# AI
	ai_goal = yes
	ai_potential = { always = yes }
	ai_will_do = { base = 100 }
}

##################################################
# Fourth Kin-Slaying
# Coding by Jaco_Daan
# Localization by VectorMaximus
##################################################

decision_fourth_kinslaying = {
	# TEXT
	title = decision_fourth_kinslaying
	picture = "gfx/interface/illustrations/decisions/decision_fornost_02.dds"
	selection_tooltip = decision_fourth_kinslaying_tooltip
	desc = decision_fourth_kinslaying_desc
	confirm_text = decision_fourth_kinslaying_confirm
	major = yes

	# IS_SHOWN
	is_shown = {
		root = character:linefinwe11
		has_variable = fourth_kin_slaying
		exists = title:e_lindon.holder

		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_fourth_kinslaying
			}
		}
	}
	
	# IS_VALID
	is_valid = {
		#custom_tooltip = { text = "Completed: Stronghold at Edhellond" }
	}
	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}
	
	# EFFECT 
	effect = {
		title:e_lindon.holder = {
			every_vassal_or_below = {
				limit = { 
					culture = culture:noldor
					NOR = {
						dynasty = dynasty:dynasty_nacilion
						dynasty = dynasty:dynasty_penlod
					}
				}
				trigger_event = elven.1555
			}
		}

		remove_variable = fourth_kin_slaying
		
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_fourth_kinslaying
		}

		trigger_event = {
			id = elven.1556
			days = 30
		}
	}

	# AI
	ai_goal = yes
	ai_potential = { always = yes }
	ai_will_do = { base = 100 }
}

##################################################
# Rally the Army of the Willing/Righteous
# Coding by Jaco_Daan
# Localization by VectorMaximus
##################################################

decision_rally_army_righteous = { 
	# TEXT
	title = decision_rally_army_righteous
	picture = "gfx/interface/illustrations/decisions/decision_elvenhost.dds"
	selection_tooltip = decision_rally_army_righteous_tooltip
	desc = decision_rally_army_righteous_desc
	confirm_text = decision_rally_army_righteous_confirm
	major = yes

	# IS_SHOWN
	is_shown = {
		root = character:linefinwe11
		has_variable = crusade_against_darkness
		faith_is_good = yes

		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_rally_army_righteous
			}
		}
	}
	
	# IS_VALID
	is_valid = { always = yes }
	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}

	widget = {
		gui = "decision_view_widget_option_list_generic"
		controller = decision_option_list_controller
		decision_to_second_step_button = "decision_rally_army_righteous_confirm"

		item = { # Northern Route
			value = maglor_defensive_route
			current_description = decision_rally_army_righteous_defensive_desc
			localization = decision_rally_army_righteous_defensive
			icon = "gfx/interface/icons/message_feed/a_catch_all_councillor_icon.dds"
		}
		item = { # Southern Route
			value = maglor_aggresive_route
			current_description = decision_rally_army_righteous_aggresive_desc
			localization = decision_rally_army_righteous_aggresive
			icon = "gfx/interface/icons/message_feed/mercenary.dds"
		}
	}
	
	# EFFECT 
	effect = {
		custom_tooltip = decision_rally_army_righteous_effect_tt
		title:e_lindon.holder = {
			set_variable = volunteers_sent
			trigger_event = {
				id = elven.1606
				days = { 5 10 }
			}
			every_vassal_or_below = {
				limit = { is_elf = yes }
				set_variable = volunteers_sent
				trigger_event = {
					id = elven.1606
					days = { 5 10 }
				}
			}
		}

		# if = {
		# 	limit = { scope:maglor_defensive_route = yes }
		# 	custom_tooltip = decision_rally_army_righteous_defensive.tt
		# }
		# else_if = {
		# 	limit = { scope:maglor_aggresive_route = yes } 
		# 	custom_tooltip = decision_rally_army_righteous_aggresive.tt
		# }

		if = {
			limit = { scope:maglor_defensive_route = yes }
			character:linefinwe11 = { 
				set_variable = maglor_defensive
	
				trigger_event = {
					id = elven.1607
					days = { 25 30 }
				}
				trigger_event = {
					id = elven.1601
					months = 1
				}
			}
		}
		else = {
			character:linefinwe11 = { 
				set_variable = maglor_aggresive
				
				trigger_event = {
					id = elven.1607
					days = { 25 30 }
				}
				trigger_event = {
					id = elven.1602
					months = 1
				}
			}
		}

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_rally_army_righteous
		}
	}

	# AI
	ai_goal = yes
	ai_potential = { always = yes }
	ai_will_do = { base = 100 }
}

##################################################
# Bring Harad to Heel
# Coding by Jaco_Daan
# Localization by VectorMaximus
##################################################

decision_bring_harad_down = {
	# TEXT
	title = decision_bring_harad_down
	picture = "gfx/interface/illustrations/decisions/decision_harad_02.dds"
	selection_tooltip = decision_bring_harad_down_tooltip
	desc = decision_bring_harad_down_desc
	confirm_text = decision_bring_harad_down_confirm
	major = yes

	# IS_SHOWN
	is_shown = {
		root = character:linefinwe11
		has_variable = maglor_aggresive
		faith_is_good = yes
		
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_bring_harad_down
			}
		}
	}
	
	# IS_VALID
	is_valid = {
		custom_tooltip = {
			text = "decision_bring_harad_down_custom_tt"
			has_variable = won_against_umbar
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_umbar_burns
			}
		}
	}
	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}
	
	# EFFECT 
	effect = {
		custom_tooltip = maglor_shatter_realm_cb_effect_tt.3
		if = {
			limit = { exists = title:e_gondor.holder }
			title:e_gondor.holder = { save_scope_as = gondor_ruler }
		}
		else = {
			title:e_gondor_steward.holder = { save_scope_as = gondor_ruler }
		}

		if = {
			limit = {
				scope:gondor_ruler = { faith_is_good = yes }
			}
			scope:gondor_ruler = {
				every_vassal_or_below = {
					limit = {
						highest_held_title_tier >= tier_county
						any_held_title = { 
							title_province ?= {
								geographical_region = special_eastern_gondorian_fiefdoms
							}
						}
					}
					trigger_event = {
						id = elven.1730
						days = { 15 30 }
					}
				}
			}
		}

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_bring_harad_down
		}
	}

	# AI
	ai_goal = yes
	ai_potential = { always = yes }
	ai_will_do = { base = 100 }
}

##################################################
# The X Dynasty rises
# Coding by Jaco_Daan
# Localization by VectorMaximus
##################################################

decision_help_good_dynasty_rise = { 
	# TEXT
	title = decision_help_good_dynasty_rise
	picture = "gfx/interface/illustrations/decisions/decision_fornost_02.dds"
	selection_tooltip = decision_help_good_dynasty_rise_tooltip
	desc = decision_help_good_dynasty_rise_desc
	confirm_text = decision_help_good_dynasty_rise_confirm
	major = yes

	# IS_SHOWN
	is_shown = {
		root = character:linefinwe11
		has_variable = maglor_aggresive
		faith_is_good = yes

		is_target_in_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_bring_harad_down
		}
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_help_good_dynasty_rise
			}
		}
	}
	
	# IS_VALID
	is_valid = {
		custom_tooltip = {
			text = decision_help_good_dynasty_rise_custom_tt.3

			trigger_if = {
				limit = {
					title:e_haradwaith = {
						any_de_jure_county = {
							OR = {
								AND = {
									exists = empire.holder
									empire.holder = {
										faith_is_evil = yes
										culture = { any_parent_culture_or_above = { this = culture:apysaic } }
									}
								}
								AND = {
									exists = kingdom.holder
									kingdom.holder = {
										faith_is_evil = yes
										culture = { any_parent_culture_or_above = { this = culture:apysaic } }
									}
								}
							}
						}
					}
				}
				always = no
			}
		}
	
		OR = {
			### Amrun Holder is Evil
			trigger_if = {
				limit = { exists = title:c_amrun.holder.liege }
				title:c_amrun.holder.liege ?= { faith_is_evil = yes }
			}
			trigger_else = { title:c_amrun.holder ?= { faith_is_good = yes } }
			### Amrun Holder is Good
			trigger_if = {
				limit = { exists = title:c_amrun.holder.liege }
				title:c_amrun.holder.liege ?= { faith_is_good = yes }
			}
			trigger_else = { title:c_amrun.holder ?= { faith_is_good = yes } }
		}
	}
	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}
	
	# EFFECT 
	effect = {
		if = {
			limit = { title:c_amrun.holder = { faith_is_good = yes } }
			title:c_amrun.holder = { save_scope_as = nadi_manye_leader }
			set_variable = already_good_haruzan
			trigger_event = elven.1745
		}
		else = {
			title:c_amrun.holder = {
				trigger_event = {
					id = elven.1735
					days = { 10 15 }
				}
			}
		}
		custom_tooltip = decision_help_good_dynasty_rise_custom_tt.1
		custom_tooltip = decision_help_good_dynasty_rise_custom_tt.2
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_help_good_dynasty_rise
		}
	}

	# AI
	ai_goal = yes
	ai_potential = { always = yes }
	ai_will_do = { base = 100 }
}

##################################################
# Reclamation of Khazad-dum
# Coding by Jaco_Daan
# Localization by VectorMaximus
##################################################

decision_reclamation_of_moria = { 
	# TEXT
	title = decision_reclamation_of_moria
	picture = "gfx/interface/illustrations/decisions/decision_dwarves_02.dds"
	selection_tooltip = decision_reclamation_of_moria_tooltip
	desc = decision_reclamation_of_moria_desc
	confirm_text = decision_reclamation_of_moria_confirm
	major = yes

	# IS_SHOWN
	is_shown = {
		root = character:linefinwe11
		has_variable = unlock_underground_cb
		faith_is_good = yes

		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_reclamation_of_moria
			}
		}
	}
	
	# IS_VALID
	is_valid = {
		custom_tooltip = {
			text = "decision_reclamation_of_moria_valid_tt"
			NOT = {
				title:k_khazad_dum = {
					any_in_de_jure_hierarchy = {
						tier = tier_county
						culture = { is_orc_culture = yes }
					}	
				}
			}
		}
	}
	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}
	
	# EFFECT 
	effect = { # Give Dwarf back the titles 
		if = { # Check for Durin dwarf in Moria
			limit = { 
				title:k_khazad_dum = {
					any_in_de_jure_hierarchy = {
						tier = tier_county
						holder = { culture = { is_dwarf_culture = yes } }
						holder = { dynasty = dynasty:dynasty_durin }
						holder = { save_temporary_scope_as = dwarf_in_moria }
					}	
				}
			}
			custom_tooltip = "decision_reclamation_of_moria_troops_tt"
			custom_tooltip = { # Works
				text = "decision_reclamation_of_moria_tt.2"
				transfer_central_moria_effect = yes
			}
		}
		else_if = { # Check for random dwarf in Moria
			limit = {
				title:k_khazad_dum = {
					any_in_de_jure_hierarchy = {
						tier = tier_county
						holder = { culture = { is_dwarf_culture = yes } }
						holder = { save_temporary_scope_as = dwarf_in_moria }
					}	
				}
			}
			custom_tooltip = "decision_reclamation_of_moria_troops_tt"
			custom_tooltip = { # Works
				text = "decision_reclamation_of_moria_tt.1"
				transfer_central_moria_effect = yes
			}
		}
		else_if = { # Check for landless Durin dwarf in Erebor/Iron Hills
			limit = {
				OR = {
					title:e_iron_mountains = {
						any_in_de_jure_hierarchy = {
							tier = tier_county
							holder = { culture = { is_dwarf_culture = yes } }
							holder = { dynasty = dynasty:dynasty_durin }	
							holder.primary_heir = { save_temporary_scope_as = dwarf_in_moria }
						}	
					}
				}
			}
			custom_tooltip = "decision_reclamation_of_moria_troops_tt"
			custom_tooltip = { # Works
				text = "decision_reclamation_of_moria_tt.2"
				transfer_central_moria_effect = yes
			}
		}
		else_if = { # Check for landed Durin dwarf in Erebor/Iron Hills
			limit = {
				OR = {
					title:e_iron_mountains = {
						any_in_de_jure_hierarchy = {
							tier = tier_county
							holder = { culture = { is_dwarf_culture = yes } }
							holder = { dynasty = dynasty:dynasty_durin }	
							holder = { save_temporary_scope_as = dwarf_in_moria }
						}	
					}
				}
			}
			custom_tooltip = "decision_reclamation_of_moria_troops_tt"
			custom_tooltip = { # Works
				text = "decision_reclamation_of_moria_tt.2"
				transfer_central_moria_effect = yes
			}
		}
		else_if = { # Check for Broadbeam dwarf in BM
			limit = {
				title:e_blue_mountains = {
					any_in_de_jure_hierarchy = {
						holder = {
							culture = { is_dwarf_culture = yes }
							dynasty = dynasty:dynasty_dwalin
						}
						holder = { save_temporary_scope_as = dwarf_in_moria }
					}	
				}
			}
			custom_tooltip = "decision_reclamation_of_moria_troops_tt"
			custom_tooltip = { # Works
				text = "decision_reclamation_of_moria_tt.4"
				transfer_central_moria_effect = yes
			}
		}
		else_if = { # Check for noble dwarf in Iron Hills
			limit = {
				OR = {
					title:e_iron_mountains = {
						any_in_de_jure_hierarchy = {
							tier = tier_duchy
							holder = { culture = { is_dwarf_culture = yes } }
							holder = { save_temporary_scope_as = dwarf_in_moria }
						}	
					}
				}
			}
			custom_tooltip = "decision_reclamation_of_moria_troops_tt"
			custom_tooltip = { # Works
				text = "decision_reclamation_of_moria_tt.3"
				transfer_central_moria_effect = yes
			}
		}
		else_if = { # Check for noble dwarf in BM
			limit = {
				title:e_blue_mountains = {
					any_in_de_jure_hierarchy = {
						tier = tier_duchy
						holder = { culture = { is_dwarf_culture = yes } }
						holder = { save_temporary_scope_as = dwarf_in_moria }
					}	
				}
			}
			custom_tooltip = "decision_reclamation_of_moria_troops_tt"
			custom_tooltip = {
				text = "decision_reclamation_of_moria_tt.4"
				transfer_central_moria_effect = yes
			}
		}
		else = { # Create a random dwarven character
			hidden_effect = {
				create_character = {
					age = { 70 250 }
					culture = culture:longbeards
					faith = faith:faith_khazad
					dynasty = none
					gender_female_chance = 50
					# Traits.
					## Education.
					random_traits_list = {
						count = 1
						education_diplomacy_1 = {}
						education_martial_1 = {}
						education_stewardship_1 = {}
						education_intrigue_1 = {}
						education_learning_1 = {}
					}
					## Plus a little bit of variety is nice.
					random_traits_list = {
						count = 1
						stubborn = {}
						impatient = {}
						humble = {}
						wrathful = {}
					}
					# Skills.
					martial = {
						min_template_decent_skill
						max_template_decent_skill
					}
					prowess = {
						min_template_decent_skill
						max_template_decent_skill
					}
					employer = root
					save_scope_as = dwarf_in_moria
				}
			}
			custom_tooltip = "decision_reclamation_of_moria_troops_tt"
			custom_tooltip = {
				text = "decision_reclamation_of_moria_tt.4"
				transfer_central_moria_effect = yes
			}
		}

		trigger_event = {
			id = elven.1816
			days = { 30 45 }
		}

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_reclamation_of_moria
		}
	}

	# AI
	ai_goal = yes
	ai_potential = { always = yes }
	ai_will_do = { base = 100 }
}

##################################################
# Reclamation of Khazad-dum
# Coding by Jaco_Daan
# Localization by VectorMaximus
##################################################

decision_cleanse_the_high_pass = {
	# TEXT
	title = decision_cleanse_the_high_pass
	picture = "gfx/interface/illustrations/decisions/decision_dol_guldur_subjugate_mount_gundabad.dds"
	selection_tooltip = decision_cleanse_the_high_pass_tooltip
	desc = decision_cleanse_the_high_pass_desc
	confirm_text = decision_cleanse_the_high_pass_confirm
	major = yes

	# IS_SHOWN
	is_shown = {
		root = character:linefinwe11
		has_variable = unlock_underground_cb
		faith_is_good = yes

		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_cleanse_the_high_pass
			}
		}
	}
	
	# IS_VALID
	is_valid = {
		custom_tooltip = {
			text = "decision_cleanse_the_high_pass_valid_tt"
			NOT = {
				title:k_high_pass = {
					any_in_de_jure_hierarchy = {
						tier = tier_county
						culture = { is_orc_culture = yes }
					}	
				}
			}
		}
	}
	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}
	
	# EFFECT 
	effect = { # Give
		custom_tooltip = decision_cleanse_the_high_pass_effect

		trigger_event = elven.1850

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_cleanse_the_high_pass
		}
	}

	# AI
	ai_goal = yes
	ai_potential = { always = yes }
	ai_will_do = { base = 100 }
}

##################################################
# Retire to Himring (minor decision)
# Coding by Jaco_Daan
# Localization by VectorMaximus
##################################################

decision_retire_to_himring = {
	# TEXT
	title = decision_retire_to_himring
	picture = "gfx/interface/illustrations/decisions/decision_fornost_02.dds"
	selection_tooltip = decision_retire_to_himring_tooltip
	desc = decision_retire_to_himring_desc
	confirm_text = decision_retire_to_himring_confirm
	major = no

	# IS_SHOWN
	is_shown = {
		has_variable = unlock_retire_to_himring_decision
		faith_is_good = yes

		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_retire_to_himring
			}
		}
	}
	
	# IS_VALID
	is_valid = { always = yes }
	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}
	
	# EFFECT 
	effect = {
		trigger_event = elven.2021
		
		remove_variable = unlock_retire_to_himring_decision

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_retire_to_himring
		}
	}

	# AI
	ai_goal = yes
	ai_potential = { always = yes }
	ai_will_do = { base = 100 }
}