# Standard colonization costs
@count_colonize_cost = 75
@duke_colonize_cost = 100
@king_colonize_cost = 125
@emporer_colonize_cost = 150

count_colonize_cost = @count_colonize_cost
duke_colonize_cost = @duke_colonize_cost
king_colonize_cost = @king_colonize_cost
emporer_colonize_cost = @emporer_colonize_cost

count_base_limit = 1
duke_base_limit = 2
king_base_limit = 3
emporer_base_limit = 4

base_colony_upkeep = 1



### COLONIZATION VALUE MODIFIERS ###

mult3 = {
	value = this
	multiply = 3
}

### RACIAL VALUES ###

is_elf_bool = { #Used for fertility filter in marriage gui
  if = {
    limit = {is_elf = no}
    value = 1
  }
}

### Elf CB AI values

elf_target_ai_score_value = {
	value = 1
		if = {
		limit = {
			scope:defender = { is_elf = yes }
		}
		if = { # Good-aligned faiths shouldn't really be seeking many wars with elves
			limit = { scope:attacker = { faith_is_good = yes } }
			multiply = 0.25
		}
		if = { # Neutral-aligned faiths should be slightly discouraged be seeking many wars with elves
			limit = { scope:attacker = { faith_is_neutral = yes } }
			multiply = 0.75
		}
		if = { # AI feel uncomfortable against elves if they only slightly outnumber them
			limit = { scope:attacker.total_strength < scope:defender.total_strength_times_two }
			multiply = 0.25
		}
		else_if = { # AI feel more comfortable against elves if they outnumber them more
			limit = { scope:attacker.total_strength < scope:defender.total_strength_times_three }
			multiply = 0.75
		}
		else = { # AI should feel fine against elves if they outnumber them three to one or greater
			multiply = 1
		}
		if = { # AI should not be declaring war against elves if they're weaker - they'll be crushed
			limit = { scope:attacker.total_strength < scope:defender.total_strength }
			multiply = 0
		}
	}
}

### Underground CB AI Values

underground_target_ai_score_value = {
	value = 1
	if = {
		limit = { 
			scope:defender = { 
				OR = {
					is_dwarf = yes 
					is_orc = yes
					is_nazgul = yes
				}
			} 
		}
		if = { # Good-aligned faiths shouldn't really be seeking many wars with dwarves
			limit = { scope:attacker = { faith_is_good = yes } }
			multiply = 0.25
		}
		if = { # Neutral-aligned faiths should be slightly discouraged be seeking many wars with dwarves
			limit = { scope:attacker = { faith_is_neutral = yes } }
			multiply = 0.75
		}
		if = { # AI feel slightly uncomfortable against dwarves if they only slightly outnumber them
			limit = { scope:attacker.total_strength < scope:defender.total_strength_times_two }
			multiply = 0.60
		}
		else_if = { # AI feel more comfortable against dwarves if they outnumber them more
			limit = { scope:attacker.total_strength < scope:defender.total_strength_times_three }
			multiply = 0.80
		}
		else = { # AI should feel fine against dwarves if they outnumber them three to one or greater
			multiply = 1
		}
		if = { # AI should not be declaring war against dwarves if they're weaker - they'll be crushed
			limit = { scope:attacker.total_strength < scope:defender.total_strength }
			multiply = 0
		}
	}
}

### Elven holding building limits

counties_in_subrealm = {
	value = 0
	every_sub_realm_county = {
		add = 1
	}
}

elven_holdings_in_realm = {
	value = 0
	every_realm_province = {
		limit = {
			has_building_or_higher = elven_settlement_01
		}
		add = 1
	}
}

elven_strongholds_in_realm = {
	value = 0
	every_realm_province = {
		limit = {
			OR = {
				has_building = elven_settlement_03
				has_building = elven_settlement_04
				has_building = elven_settlement_05
			}
		}
		add = 1
	}
}

elven_cities_in_realm = {
	value = 0
	every_realm_province = {
		limit = {
			OR = {
				has_building = elven_settlement_06
				has_building = elven_settlement_07
			}
		}
		add = 1
	}
}

elven_stronghold_limit = {
	value = elven_holdings_in_realm
	divide = 5
	floor = yes
}

elven_stronghold_additional_required = {
	value = elven_holdings_in_realm
	modulo = 5
	multiply = -1
	add = 5
}

elven_city_limit = {
	value = elven_holdings_in_realm
	divide = 10
	floor = yes
}

elven_city_additional_required = {
	value = elven_holdings_in_realm
	modulo = 10
	multiply = -1
	add = 10
}

### WILDERNESS SCRIPT VALUES ###
# Used to display colonisation cost in sGUI.
colonise_cost = { 
	value = 0

	add = colonise_cost_val
	add = colonise_island_cost_val
}

# Determines cost for colonisation for provinces on mainland.
colonise_cost_val = { 
	value = 0

	if = { # Adding cost for count
		limit = { highest_held_title_tier = tier_county }
		if = {
			limit = { dynasty = { has_dynasty_modifier = easy_arnor_settle } }
			add = {
				value = count_colonize_cost.bitshift
				desc = "colonisation_cost_lord_tier"
				format = "BASE_VALUE_FORMAT"
			}
		} 
		else = {
			add = { # Adding base cost for count
				value = count_colonize_cost
				desc = "colonisation_cost_lord_tier"
				format = "BASE_VALUE_FORMAT"
			}
		}
	}
	else_if = { # Adding cost for duke
		limit = { highest_held_title_tier = tier_duchy }
		if = {
			limit = { dynasty = { has_dynasty_modifier = easy_arnor_settle } }
			add = {
				value = duke_colonize_cost.bitshift
				desc = "colonisation_cost_lord_tier"
				format = "BASE_VALUE_FORMAT"
			}
		} 
		else = {
			add = {
				value = duke_colonize_cost
				desc = "colonisation_cost_lord_tier"
				format = "BASE_VALUE_FORMAT"
			}
		}
	}
	else_if = {# Adding cost for king
		limit = { highest_held_title_tier = tier_kingdom }	
		if = {
			limit = { dynasty = { has_dynasty_modifier = easy_arnor_settle } }
			add = {
				value = king_colonize_cost.bitshift
				desc = "colonisation_cost_lord_tier"
				format = "BASE_VALUE_FORMAT"
			}
		} 
		else = {
			add = {
				value = king_colonize_cost
				desc = "colonisation_cost_lord_tier"
				format = "BASE_VALUE_FORMAT"
			}
		}
	}
	else_if = { # Adding cost for emporer if has special modifier
		limit = { 
			highest_held_title_tier = tier_empire 
			dynasty = { has_dynasty_modifier = easy_arnor_settle }
		}
		add = {
			value = emporer_colonize_cost.bitshift
			desc = "colonisation_cost_lord_tier"
			format = "BASE_VALUE_FORMAT"
		}
	}
	else = { # Adding base cost for emporer
		add = {
			value = emporer_colonize_cost
			desc = "colonisation_cost_lord_tier"
			format = "BASE_VALUE_FORMAT"
		}
	}

	if = {
		limit = {
			exists = scope:wastelands.county
			OR = {
				title:d_andunaloni = {
					any_in_de_jure_hierarchy = {
						this = scope:wastelands.county
					}
				}
				title:d_tolfalas = {
					any_in_de_jure_hierarchy = {
						this = scope:wastelands.county
					}
				}
			}
			not_has_county_on_island_region = yes # Checks for county on island | If county present, whether fully upgraded
		}
		if = {
			limit = { highest_held_title_tier = tier_county }
			add = {
				value = count_colonize_cost.mult3
				desc = "colonisation_cost_over_water"
				format = "BASE_VALUE_FORMAT"
			}
		} 
		else_if = {
			limit = { highest_held_title_tier = tier_duchy }
			add = {
				value = duke_colonize_cost.mult3
				desc = "colonisation_cost_over_water"
				format = "BASE_VALUE_FORMAT"
			}
		}
		else_if = {
			limit = { highest_held_title_tier = tier_kingdom }
			add = {
				value = king_colonize_cost.mult3
				desc = "colonisation_cost_over_water"
				format = "BASE_VALUE_FORMAT"
			}
		}
		else = {
			add = {
				value = emporer_colonize_cost.mult3
				desc = "colonisation_cost_over_water"
				format = "BASE_VALUE_FORMAT"
			}
		}
	}
}

# Adds additional cost for colonisation for provinces located on islands.
colonise_island_cost_val = { 
	value = 0

	if = {
		limit = { 
			highest_held_title_tier = tier_county 
			not_has_county_on_island_region = yes
		}
		add = {
			value = count_colonize_cost.mult3
			desc = "colonisation_cost_over_water"
			format = "BASE_VALUE_FORMAT"
		}
	} 
	else_if = {
		limit = { 
			highest_held_title_tier = tier_duchy
			not_has_county_on_island_region = yes
		}
		add = {
			value = duke_colonize_cost.mult3
			desc = "colonisation_cost_over_water"
			format = "BASE_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { 
			highest_held_title_tier = tier_kingdom
			not_has_county_on_island_region = yes
		}
		add = {
			value = king_colonize_cost.mult3
			desc = "colonisation_cost_over_water"
			format = "BASE_VALUE_FORMAT"
		}
	}
	else = {
		if = {
			limit = { 
				highest_held_title_tier = tier_empire 
				not_has_county_on_island_region = yes
			}
			add = {
				value = emporer_colonize_cost.mult3
				desc = "colonisation_cost_over_water"
				format = "BASE_VALUE_FORMAT"
			}
		}
	}
}

### COUNCILLOR ACTION VALUES ###
half_county_development_reduction = { 
	value = development_level
	multiply = -0.5
	ceiling = yes
}

### DECISION VALUES ###
decision_wildmen_troops_value = { # Scale summoned levies with dread level.
	value = { 50 200 }
	add = this.dread
	multiply = { 2 5 }
}

antisaruman_value = {
	value = this.learning
	multiply = 2
	add = this.diplomacy
}

total_strength = {
	value = 0
    add = max_military_strength
	every_ally = {
		add = max_military_strength
	}
	if = { # Add strength of non-permanent tributaries that could be called in
		limit = {
			exists = this
			exists = root
			any_independent_ruler = {
				exists = var:my_suzerain
				var:my_suzerain = root
				root = {
					is_target_in_variable_list = { name = non_permanent_tributaries target = prev }
				}
			}
		}
		every_independent_ruler = {
			limit = {
				exists = this
				exists = var:my_suzerain
				var:my_suzerain = root
				root = {
					is_target_in_variable_list = { name = non_permanent_tributaries target = prev }
				}
			}
			add = max_military_strength
		}
	}
}

total_strength_times_two = {
	value = 0
    add = max_military_strength
	every_ally = {
		add = max_military_strength
	}
	if = { # Add strength of non-permanent tributaries that could be called in
		limit = {
			exists = root
			exists = this
			any_independent_ruler = {
				exists = var:my_suzerain
				var:my_suzerain = root
				root = {
					is_target_in_variable_list = { name = non_permanent_tributaries target = prev }
				}
			}
		}
		every_independent_ruler = {
			limit = {
				exists = this
				exists = var:my_suzerain
				var:my_suzerain = root
				root = {
					is_target_in_variable_list = { name = non_permanent_tributaries target = prev }
				}
			}
			add = max_military_strength
		}
	}
	multiply = 2
}

total_strength_times_three = {
	value = 0
    add = max_military_strength
	every_ally = {
		add = max_military_strength
	}
	if = { # Add strength of non-permanent tributaries that could be called in
		limit = {
			any_independent_ruler = {
				exists = var:my_suzerain
				exists = root
				root = var:my_suzerain
				root = {
					is_target_in_variable_list = { name = non_permanent_tributaries target = prev }
				}
			}
		}
		every_independent_ruler = {
			limit = {
				exists = var:my_suzerain
				var:my_suzerain = root
				root = {
					is_target_in_variable_list = { name = non_permanent_tributaries target = prev }
				}
			}
			add = max_military_strength
		}
	}
	multiply = 3
}

total_ally_strength = {
    value = 0
    add = root.max_military_strength
    every_war_ally = {
        add = max_military_strength
    }
}

total_enemy_strength = {
    value = 0
    every_war_enemy = {
        add = max_military_strength
    }
}

chelkar_military_strength_times_two = {
    value = 0
	title:k_chelkar.holder = {
		add = max_military_strength
		multiply = 2
	}
}

### NÚMENÓREAN BLOOD VALUES ###
get_numenorean_blood_tier = {
	value = 0
	if = {
		limit = {
			has_trait_rank = {
				trait = blood_of_numenor
				rank = 1
			}
		}
		add = 1
	}
	else_if = {
		limit = {
			has_trait_rank = {
				trait = blood_of_numenor
				rank = 2
			}
		}
		add = 2
	}
	else_if = {
		limit = {
			has_trait_rank = {
				trait = blood_of_numenor
				rank = 3
			}
		}
		add = 3
	}
	else_if = {
		limit = {
			has_trait_rank = {
				trait = blood_of_numenor
				rank = 4
			}
		}
		add = 4
	}
}

numenorean_blood_tier = { value = get_numenorean_blood_tier }

## MEN-AT-ARMS VALUES ###
culture_ai_weight_monsters = {
	value = -10
	
	if = { # Cultures that favours monsters
		limit = {
			OR = {
				culture = { has_cultural_pillar = heritage_ainur }
				culture = { has_cultural_pillar = heritage_orc }
				culture = { has_cultural_pillar = heritage_goblin }
				culture = { has_cultural_pillar = heritage_nafarati }
				culture = { has_cultural_pillar = heritage_undead }
			}
		}
		add = 20
	}
	if = { # Cultures that dislike monsters
		limit = {
			OR = {
				culture = { has_cultural_pillar = heritage_atanatari }
				culture = { has_cultural_pillar = heritage_druedain }
				culture = { has_cultural_pillar = heritage_dunedain }
				culture = { has_cultural_pillar = heritage_quendi }
				culture = { has_cultural_pillar = heritage_calaquendi }
				culture = { has_cultural_pillar = heritage_lomiquendi }
				culture = { has_cultural_pillar = heritage_moriquendi }
			}
		}
		add = -100
	}
}

settle_settlement_holding_interaction_cost = {
	value = 150
}

settlement_title_tier_limit = {
	value = 0 

	if = {
		limit = { highest_held_title_tier = tier_county }
		value = 1
	}
	if = {
		limit = { highest_held_title_tier = tier_duchy }
		value = 2
	}
	if = {
		limit = { highest_held_title_tier = tier_kingdom }
		value = 3
	}
	if = {
		limit = { highest_held_title_tier = tier_empire }
		value = 4
	}
}

number_of_held_colonies = {
	value = 0
	every_held_title = {
		limit = { 
			tier = tier_county
			title_province = { has_holding_type = settlement_holding }
		}
		add = 1
	}
}

## Easterling invasion values
request_easterling_invasion_troop_value_estimate = {
	value = scope:recipient.max_military_strength
	subtract = scope:secondary_recipient.max_military_strength
	divide = 10
	round = yes
}

tributary_gold_being_recieved = {
	value = 0

	if = {
		limit = {
			exists = root
			any_in_list = {
				variable = non_permanent_tributaries
				exists = this
			}
		} 
		every_in_list = {
			variable = non_permanent_tributaries
			add = var:tribute_gold_amount
		}
	}
	if = {
		limit = {
			exists = root
			any_in_list = {
				variable = permanent_tributaries
				exists = this
			}
		}
		every_in_list = {
			variable = permanent_tributaries
			add = var:tribute_gold_amount
		}
	}
}

tributary_gold_being_paid = {
	value = 0

	if = {
		limit = { is_tributary = yes } 
		add = var:tribute_gold_amount
	}
}