lotr_willingness_to_duel_in_orc_succession = {
	value = 0
	add = lotr_orc_succession_martial_weighting
	add = lotr_orc_succession_intrigue_weighting
	add = lotr_orc_succession_learning_weighting
	add = lotr_orc_succession_prowess_weighting
	add = lotr_orc_succession_troops_weighting
	add = lotr_orc_succession_relationship_weighting
	max = 100
	min = 0
}

lotr_orc_succession_martial_weighting = {
	value = 0
	
	add = {
		value = martial
		ceiling = yes
		max = 25
		desc = martial_modifier
	}
}

lotr_orc_succession_intrigue_weighting = {
	value = 0
	
	add = {
		value = intrigue
		ceiling = yes
		max = 25
		desc = intrigue_modifier
	}
}

lotr_orc_succession_learning_weighting = {
	value = 0
	
	add = {
		value = learning
		divide = 2
		ceiling = yes
		max = 25
		desc = learning_modifier
	}
}

lotr_orc_succession_prowess_weighting = {
	value = 0
	add = {
		value = prowess
		# divide = 2
		ceiling = yes
		max = 25
		desc = prowess_modifier
	}
}

lotr_orc_succession_troops_weighting = {
	value = 0
	#Grab the liege
	if = {
		limit = {
			exists = liege
			liege = { save_temporary_scope_as = root_liege }
		}
	}
	else_if = {
		limit = {
			is_courtier = yes
			root.host = { save_temporary_scope_as = root_liege }
		}
	}

	if = {
		limit = { exists = scope:root_liege is_landed = yes }
		if = { #Challenger has MORE troops than current ruler
			limit = { scope:root_liege.twice_current_military_strength < root.script_current_military_strength }
			add = {
				value = 25
				desc = "twice_more_troops_than_current_leader"
			}
		}
		else_if = {
			limit = { scope:root_liege.one_and_a_half_times_current_military_strength < root.script_current_military_strength }
			add = {
				value = 10
				desc = "one_and_a_half_times_more_troops_than_current_leader"
			}
		}
		else_if = {
			limit = { scope:root_liege.script_current_military_strength < root.script_current_military_strength }
			add = {
				value = 5
				desc = "more_troops_than_current_leader"
			}
		}
		else_if = { #Challenger has LESS troops than current ruler
			limit = { scope:root_liege.script_current_military_strength > root.twice_current_military_strength }
			add = {
				value = -25
				desc = "twice_less_troops_than_current_leader"
			}
		}
		else_if = {
			limit = { scope:root_liege.script_current_military_strength > root.one_and_a_half_times_current_military_strength }
			add = {
				value = -10
				desc = "one_and_a_half_times_less_troops_than_current_leader"
			}
		}
		else_if = {
			limit = { scope:root_liege.script_current_military_strength > root.script_current_military_strength }
			add = {
				value = -5
				desc = "less_troops_than_current_leader"
			}
		}
	}

}

lotr_orc_succession_relationship_weighting = {
	value = 0
	#Grab the liege and second-in-command (if they exist)
	if = {
		limit = {
			exists = liege
			liege = { save_temporary_scope_as = root_liege }
			scope:root_liege = {
				exists = diarch
				has_diarchy_type = lotr_orc_second_in_command
			}
			diarch ?= { save_temporary_scope_as = second_in_command }
		}
	}
	else_if = {
		limit = {
			is_courtier = yes
			root.host = { save_temporary_scope_as = root_liege }
			scope:root_liege = {
				exists = diarch
				has_diarchy_type = lotr_orc_second_in_command
			}
			diarch ?= { save_temporary_scope_as = second_in_command }
		}
	}
	if = {
		limit = { exists = scope:second_in_command }
		#Friend modifier.
		if = {
			limit = {
				has_relation_friend = scope:second_in_command
				NOT = { has_relation_best_friend = scope:second_in_command }
			}
			add = {
				desc = "friends_with_second_in_command"
				value = -5
			}
		}
		#Best Friend modifier.
		if = {
			limit = { has_relation_best_friend = scope:second_in_command }
			add = -8
		}
		#Lover modifier.
		if = {
			limit = {
				has_relation_lover = scope:second_in_command
				NOT = { has_relation_soulmate = scope:second_in_command }
			}
			add = -10
		}
		#Soulmate modifier.
		if = {
			limit = { has_relation_soulmate = scope:second_in_command }
			add = -20
		}
		#Rivalry modifier.
		if = {
			limit = {
				has_relation_rival = scope:second_in_command
				NOT = { has_relation_nemesis = scope:second_in_command }
			}
			add = 5
		}
		#Nemesis modifier.
		if = {
			limit = { has_relation_nemesis = scope:second_in_command }
			add = 15
		}
	}
	else_if = {
		limit = { exists = scope:root_liege.primary_heir }
		#Friend modifier.
		if = {
			limit = {
				has_relation_friend = scope:root_liege.primary_heir
				NOT = { has_relation_best_friend = scope:root_liege.primary_heir }
			}
			add = {
				desc = "friends_with_second_in_command_or_primary_heir"
				value = -5
			}
		}
		#Best Friend modifier.
		if = {
			limit = { has_relation_best_friend = scope:root_liege.primary_heir }
			add = {
				desc = "best_friend_with_second_in_command_or_primary_heir"
				value = -8
			}
		}
		#Lover modifier.
		if = {
			limit = {
				has_relation_lover = scope:root_liege.primary_heir
				NOT = { has_relation_soulmate = scope:root_liege.primary_heir }
			}
			add = {
				desc = "lover_with_second_in_command_or_primary_heir"
				value = -10
			}
		}
		#Soulmate modifier.
		if = {
			limit = { has_relation_soulmate = scope:root_liege.primary_heir }
			add = {
				desc = "soulmates_with_second_in_command_or_primary_heir"
				value = -20
			}
		}
		#Rivalry modifier.
		if = {
			limit = {
				has_relation_rival = scope:root_liege.primary_heir
				NOT = { has_relation_nemesis = scope:root_liege.primary_heir }
			}
			add = {
				desc = "rival_with_second_in_command_or_primary_heir"
				value = 5
			}
		}
		#Nemesis modifier.
		if = {
			limit = { has_relation_nemesis = scope:root_liege.primary_heir }
			add = {
				desc = "rival_with_second_in_command_or_primary_heir"
				value = 15
			}
		}
	}
}