feudalize_into_delving_holding_interaction = {
	category = interaction_category_uncategorized
	hidden = yes
	# special_interaction = feudalize_into_delving_holding

	desc = feudalize_into_delving_holding_interaction_desc

	target_type = title
	target_filter = actor_domain_titles
	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			this = scope:recipient
			NOR = {
				#government_has_flag = government_is_tribal
				government_has_flag = government_is_elven
				government_has_flag = government_is_hobbit
			}

		}
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:actor
			is_capital_barony = no # we'll use the county in that case
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					terrain = halls
					OR = {
						#has_holding_type = tribal_holding
						has_holding_type = elven_holding
						has_holding_type = settlement_holding
					}
				}
			}
			trigger_else = {
				custom_description = {
					text = "feudalize_tribal_holding_interaction_title_not_county_or_below"
					always = no
				}
			}
			#trigger_if = {
			#	limit = {
			#		title_province = { terrain = halls }
			#	}
			#	is_dwarf = no
			#}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = {
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					barony_controller = scope:actor
					has_ongoing_construction = no
				}
			}
		}
		scope:target = {
			trigger_if = {
				limit = {
					title_province = {
						has_holding_type = settlement_holding
					}
				}
				custom_tooltip = {
					text = blockers_remain_in_settlement
					title_province = { 
						has_building_with_flag = { 
							flag = obstacle 
							count = 0 
						} 
					}
				}
				development_level >= 3
				custom_tooltip = {
					text = has_fully_upgraded_settlement_holding
					title_province = { has_building = settlement_03 }
				}
			}
		}
		# scope:target = {
		# 	trigger_if = {
		# 		limit = { 
		# 			title_province = { has_holding_type = elven_holding }
		# 		}
		# 		custom_tooltip = {
		# 			text = county_must_not_be_elven_culture_to_feudalize_to_castle
		# 			title_province = {
		# 				is_elf = no
		# 			}
		# 		}
		# 	}
		# }
	}

	cost = {
		gold = {
			value = feudalize_tribal_holding_interaction_cost
		}
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = feudalize_into_castle_holding_interaction_notification

				right_icon = scope:actor					

				if = {
					limit = { exists = scope:target.title_province }
					scope:target.title_province = {
						set_holding_type = dwarven_holding
					}
					scope:target = { set_color_from_title = scope:target.de_jure_liege }
				}
			}
			if = { 
				limit = { 
					has_variable = num_settled_wilderness 
					var:num_settled_wilderness > 0
				}
				decrease_variable = {
					NAME = num_settled_wilderness
					AMOUNT = 1
				}
				remove_wastelands_tracker_variable = yes
				trigger_event = wastelands.0007
			}
		}
	}

	ai_will_do = {
		base = 150
	}
}

settle_elven_holding_interaction = {
	category = interaction_category_uncategorized
	hidden = yes
	# special_interaction = settle_elven_holding

	desc = settle_elven_holding_interaction_desc

	target_type = title
	target_filter = actor_domain_titles
	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			this = scope:recipient
			government_has_flag = government_is_elven
		}
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:actor
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					NOT = {
						has_holding_type = elven_holding
					}
					culture = {
						is_elf_culture = yes
					}
				}
			}
			trigger_else = {
				custom_tooltip = {
					text = settle_elven_holding_interaction_title_not_county_or_below
					always = no
				}
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = {
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					barony_controller = scope:actor
					has_ongoing_construction = no
				}
			}
		}
		scope:target = {
			trigger_if = {
				limit = {
					title_province = {
						has_holding_type = settlement_holding
					}
				}
				custom_tooltip = {
					text = blockers_remain_in_settlement
					title_province = { 
						has_building_with_flag = { 
							flag = obstacle 
							count = 0 
						} 
					}
				}
				development_level >= 3
				custom_tooltip = {
					text = has_fully_upgraded_settlement_holding
					title_province = { has_building = settlement_03 }
				}
			}
		}
		# scope:target = {
		# 	trigger_if = {
		# 		limit = { 
		# 			title_province = { NOT = { has_holding_type = elven_holding } }
		# 		}
		# 		custom_tooltip = {
		# 			text = county_must_be_elven_culture_to_convert_to_elven_refuge
		# 			title_province = {
		# 				is_elf = yes
		# 			}
		# 		}
		# 	}
		# }
	}

	cost = { 
		gold = settle_settlement_holding_interaction_cost 
		piety = settle_settlement_holding_interaction_cost
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = settle_elven_holding_interaction_notification

				right_icon = scope:actor					

				if = {
					limit = { exists = scope:target.title_province }
					scope:target.title_province = {
						set_holding_type = elven_holding
					}
					scope:target = { set_color_from_title = scope:target.de_jure_liege }
				}
			}
		}
		scope:actor = {
			if = { 
				limit = {
					has_variable = num_settled_wilderness
					var:num_settled_wilderness > 0
				}
				decrease_variable = {
					NAME = num_settled_wilderness
					AMOUNT = 1
				}
				remove_wastelands_tracker_variable = yes
				trigger_event = wastelands.0007
			}
		}
	}

	ai_will_do = {
		base = 150
	}
}

feudalize_into_castle_holding_interaction = {
	category = interaction_category_uncategorized
	hidden = yes
	# special_interaction = feudalize_into_castle_holding

	desc = feudalize_into_castle_holding_interaction_desc

	target_type = title
	target_filter = actor_domain_titles
	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			this = scope:recipient
			NOR = {
				government_has_flag = government_is_tribal
				government_has_flag = government_is_elven
				government_has_flag = government_is_hobbit
			}

		}
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:actor
			is_capital_barony = no # we'll use the county in that case
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					NOR = { terrain = halls }
					#terrain = halls
					OR = {
						has_holding_type = tribal_holding
						has_holding_type = elven_holding
						has_holding_type = settlement_holding
					}
				}
			}
			trigger_else = {
				custom_description = {
					text = "feudalize_tribal_holding_interaction_title_not_county_or_below"
					always = no
				}
			}
			#trigger_if = {
			#	limit = {
			#		title_province = { terrain = halls }
			#	}
			#	is_dwarf = no
			#}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = {
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					barony_controller = scope:actor
					has_ongoing_construction = no
				}
			}
		}
		scope:target = {
			trigger_if = {
				limit = {
					title_province = {
						has_holding_type = settlement_holding
					}
				}
				custom_tooltip = {
					text = blockers_remain_in_settlement
					title_province = { 
						has_building_with_flag = { 
							flag = obstacle 
							count = 0 
						} 
					}
				}
				development_level >= 3
				custom_tooltip = {
					text = has_fully_upgraded_settlement_holding
					title_province = { has_building = settlement_03 }
				}
			}
		}
		# scope:target = {
		# 	trigger_if = {
		# 		limit = { 
		# 			title_province = { has_holding_type = elven_holding }
		# 		}
		# 		custom_tooltip = {
		# 			text = county_must_not_be_elven_culture_to_feudalize_to_castle
		# 			title_province = {
		# 				is_elf = no
		# 			}
		# 		}
		# 	}
		# }
	}

	cost = {
		gold = {
			value = feudalize_tribal_holding_interaction_cost
		}
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = feudalize_into_castle_holding_interaction_notification

				right_icon = scope:actor					

				if = {
					limit = { exists = scope:target.title_province }
					scope:target.title_province = {
						set_holding_type = castle_holding
					}
					scope:target = { set_color_from_title = scope:target.de_jure_liege }
				}
			}
			if = { 
				limit = { 
					has_variable = num_settled_wilderness 
					var:num_settled_wilderness > 0
				}
				decrease_variable = {
					NAME = num_settled_wilderness
					AMOUNT = 1
				}
				remove_wastelands_tracker_variable = yes
				trigger_event = wastelands.0007
			}
		}
	}

	ai_will_do = {
		base = 150
	}
}

feudalize_into_city_holding_interaction = {
	category = interaction_category_uncategorized
	hidden = yes
	# special_interaction = feudalize_into_city_holding

	desc = feudalize_into_city_holding_interaction_desc

	target_type = title
	target_filter = actor_domain_titles
	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			this = scope:recipient
			NOR = {
				government_has_flag = government_is_tribal
				government_has_flag = government_is_elven
			}
		}
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:actor
			is_elf = no
			#is_capital_barony = no # we'll use the county in that case
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					NOR = { terrain = halls }
					OR = {
						has_holding_type = tribal_holding
						has_holding_type = elven_holding
						has_holding_type = settlement_holding
					}
				}
			}
			trigger_else = {
				custom_description = {
					text = "feudalize_tribal_holding_interaction_title_not_county_or_below"
					always = no
				}
			}
			
			trigger_if = {
				limit = {
					title_province = { terrain = halls }
				}
				is_dwarf = no
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = {
			#title_province = {
				#is_county_capital = no
			#}
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					barony_controller = scope:actor
					has_ongoing_construction = no
				}
			}
		}
		scope:target = {
			trigger_if = {
				limit = {
					title_province = {
						has_holding_type = settlement_holding
					}
				}
				custom_tooltip = {
					text = blockers_remain_in_settlement
					title_province = { 
						has_building_with_flag = { 
							flag = obstacle 
							count = 0 
						} 
					}
				}
				development_level >= 3
				custom_tooltip = {
					text = has_fully_upgraded_settlement_holding
					title_province = { has_building = settlement_03 }
				}
			}
		}
	}
	
	cost = {
		gold = {
			value = feudalize_tribal_holding_interaction_cost
		}
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = feudalize_tribal_holding_interaction_notification

				right_icon = scope:actor					

				if = {
					limit = { exists = scope:target.title_province }
					scope:target.title_province = {
						set_holding_type = city_holding
					}
					scope:target = { set_color_from_title = scope:target.de_jure_liege }
				}
			}
			if = { 
				limit = { 
					has_variable = num_settled_wilderness 
					var:num_settled_wilderness > 0
				}
				decrease_variable = {
					NAME = num_settled_wilderness
					AMOUNT = 1
				}
				remove_wastelands_tracker_variable = yes
				trigger_event = wastelands.0007
			}
		}
	}

	ai_will_do = {
		base = 150
	}
}

feudalize_into_temple_holding_interaction = {
	category = interaction_category_uncategorized
	hidden = yes
	# special_interaction = feudalize_into_temple_holding

	desc = feudalize_into_temple_holding_interaction_desc

	target_type = title
	target_filter = actor_domain_titles
	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			this = scope:recipient
			NOR = {
				government_has_flag = government_is_tribal
				government_has_flag = government_is_elven
			}
		}
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:actor
			is_elf = no
			is_capital_barony = no # we'll use the county in that case
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					NOR = { terrain = halls }
					OR = {
						has_holding_type = tribal_holding
						has_holding_type = elven_holding
						has_holding_type = settlement_holding
					}
				}
			}
			trigger_else = {
				custom_description = {
					text = "feudalize_tribal_holding_interaction_title_not_county_or_below"
					always = no
				}
			}

			trigger_if = {
				limit = {
					title_province = { terrain = halls }
				}
				is_dwarf = no
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = {
			title_province = {
				is_county_capital = no
			}
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					barony_controller = scope:actor
					has_ongoing_construction = no
				}
			}
		}
		scope:target = {
			trigger_if = {
				limit = {
					title_province = {
						has_holding_type = settlement_holding
					}
				}
				custom_tooltip = {
					text = blockers_remain_in_settlement
					title_province = { 
						has_building_with_flag = { 
							flag = obstacle 
							count = 0 
						} 
					}
				}
				development_level >= 3
				custom_tooltip = {
					text = has_fully_upgraded_settlement_holding
					title_province = { has_building = settlement_03 }
				}
			}
		}
	}

	cost = {
		gold = {
			value = feudalize_tribal_holding_interaction_cost
		}
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = feudalize_into_temple_holding_interaction_notification

				right_icon = scope:actor					

				if = {
					limit = { exists = scope:target.title_province }
					scope:target.title_province = {
						set_holding_type = church_holding
					}
					scope:target = { set_color_from_title = scope:target.de_jure_liege }
				}
			}
			if = { 
				limit = { 
					has_variable = num_settled_wilderness 
					var:num_settled_wilderness > 0
				}
				decrease_variable = {
					NAME = num_settled_wilderness
					AMOUNT = 1
				}
				remove_wastelands_tracker_variable = yes
				trigger_event = wastelands.0007
			}
		}
	}

	ai_will_do = {
		base = 150
	}
}

tribalize_elven_holding_interaction = {
	category = interaction_category_uncategorized
	hidden = yes
	# special_interaction = tribalize_elven_holding

	desc = tribalize_elven_holding_interaction_desc

	target_type = title
	target_filter = actor_domain_titles
	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			this = scope:recipient
			government_has_flag = government_is_tribal
		}
	}

	cost = {
		gold = settle_settlement_holding_interaction_cost.bitshift
		prestige = settle_settlement_holding_interaction_cost.mult2
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:actor
			NOT = { title_province ?= { terrain = halls } } # We shouldn't be converting delvings
			is_elf = no
			is_capital_barony = no # we'll use the county in that case
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					NOT = {
						has_holding_type = tribal_holding
					}
				}
			}
			trigger_else = {
				custom_tooltip = {
					text = settle_elven_holding_interaction_title_not_county_or_below
					always = no
				}
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = {
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					barony_controller = scope:actor
					has_ongoing_construction = no
				}
			}
		}
		scope:target = {
			trigger_if = {
				limit = {
					title_province = {
						has_holding_type = settlement_holding
					}
				}
				custom_tooltip = {
					text = blockers_remain_in_settlement
					title_province = { 
						has_building_with_flag = { 
							flag = obstacle 
							count = 0 
						} 
					}
				}
				development_level >= 3
				custom_tooltip = {
					text = has_fully_upgraded_settlement_holding
					title_province = { has_building = settlement_03 }
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			# add_gold = 250
			send_interface_toast = {
				title = tribalize_elven_holding_interaction_notification

				right_icon = scope:actor					

				if = {
					limit = { 
						exists = scope:target.title_province
						scope:target.title_province = { has_holding_type = settlement_holding }
					}
					scope:target = { set_color_from_title = scope:target.de_jure_liege }
				}

				if = {
					limit = { exists = scope:target.title_province }
					scope:target.title_province = {
						set_holding_type = tribal_holding
					}
				}
			}
		}
		scope:actor = {
			if = { 
				limit = {
					has_variable = num_settled_wilderness
					var:num_settled_wilderness > 0
				}
				decrease_variable = {
					NAME = num_settled_wilderness
					AMOUNT = 1
				}
				remove_wastelands_tracker_variable = yes
				trigger_event = wastelands.0007
			}
		}
	}

	ai_will_do = {
		base = 150
	}
}

destroy_holding_interaction = {
	category = interaction_category_uncategorized
	hidden = yes
	# special_interaction = destroy_holding

	desc = destroy_holding_interaction_desc

	target_type = title
	target_filter = actor_domain_titles
	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			this = scope:recipient
			government_has_flag = government_is_elven
		}
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:actor
			NOT = { title_province ?= { terrain = halls } } # We shouldn't be destroying delvings
			is_capital_barony = no # we'll use the county in that case
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					NOT = {
						has_holding_type = elven_holding
					}
				}
			}
			trigger_else = {
				custom_tooltip = {
					text = settle_elven_holding_interaction_title_not_county_or_below
					always = no
				}
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = {
			title_province = {
				is_county_capital = no
			}
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					barony_controller = scope:actor
					has_ongoing_construction = no
				}
			}
		}
	}

	cost = {
		gold = {
			value = 0
		}
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = destroy_holding_interaction_notification

				right_icon = scope:actor					

				if = {
					limit = { exists = scope:target.title_province }
					scope:target.title_province = { remove_holding = yes }
				}
			}
		}
	}

	ai_will_do = {
		base = -100
		modifier = {
			add = 1000
			scope:actor = {
				is_elf = yes
			}
		}
	}
}