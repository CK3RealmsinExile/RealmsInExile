settle_wilderness_immediately_interaction = {
	category = interaction_debug_realms
	use_diplomatic_range = no
	common_interaction = no
	ignores_pending_interaction_block = yes
	icon = realms_debug
	is_shown = {
		debug_only = yes
		scope:recipient = scope:actor
		scope:recipient = { is_landed = yes }
		scope:actor = {
			any_held_county = {
				title_province = { has_holding_type = settlement_holding }
			}
		}
	}
	
	on_accept = {
		scope:actor = {
			every_held_county = {
				limit = { title_province = { has_holding_type = settlement_holding } title_province = { terrain = halls }}
				title_province = { set_holding_type = dwarven_holding }
				change_development_level = 3
			}
			if = {
				limit = { 
					OR = {
						government_has_flag = government_is_feudal
						government_has_flag = government_is_clan
						government_has_flag = government_is_administrative
					}
				}
				every_held_county = {
					limit = { title_province = { has_holding_type = settlement_holding } }
					title_province = { set_holding_type = castle_holding }
					change_development_level = 3
				}
			} else_if = {
				limit = { government_has_flag = government_is_tribal }
				every_held_county = {
					limit = { title_province = { has_holding_type = settlement_holding } }
					title_province = { set_holding_type = tribal_holding }
					change_development_level = 3
				}
			} else_if = {
				limit = { government_has_flag = government_is_elven }
				every_held_county = {
					limit = { title_province = { has_holding_type = settlement_holding } }
					title_province = { set_holding_type = elven_holding }
					change_development_level = 3
				}
			} else_if = {
				limit = { government_has_flag = government_is_hobbit }
				every_held_county = {
					limit = { title_province = { has_holding_type = settlement_holding } }
					title_province = { set_holding_type = city_holding }
					change_development_level = 3
				}
			}
			
			correct_wastelands_tracker = yes
			remove_upkeep_modifier = yes
			trigger_event = {
				id = wastelands.0007
				days = 1
			}
		}
	}
	
	auto_accept = yes
}

make_tributary_immediately_interaction = {
	category = interaction_debug_realms
	use_diplomatic_range = no
	common_interaction = yes
	ignores_pending_interaction_block = yes
	icon = realms_debug

	is_shown = {
		debug_only = yes
		scope:recipient != scope:actor
		scope:recipient = { is_landed = yes highest_held_title_tier > tier_barony }
		scope:actor = { is_landed = yes highest_held_title_tier > tier_barony }
	}
	
	can_send = {
		always = yes
	}

	# Release vassal as client state
	send_option = {
		flag = client_state
		localization = client_state
		starts_enabled = { always = yes	}
	}

	# Release vassal as tributary state
	send_option = {		
		flag = tributary_state
		localization = tributary_state
	}

	# Release vassal as protectorate
	send_option = {		
		flag = protectorate_state
		localization = protectorate_state
	}

	auto_accept = yes

	on_accept = {
		if = {
			limit = { scope:recipient = { has_variable = my_suzerain } }
			scope:recipient = { free_tributary = yes }
		}

		
		# The options (in-game) show up really weird if "else if" is used, so using multiple "if" statements is better in this situation
		if = { # Client state
			limit = { scope:client_state = yes }
			custom_tooltip = {
				text = lotr_release_as_client_state_effect_tt
				make_tributary = {
					TYPE = tributary_non_permanent
					SUZERAIN = scope:actor
					TRIBUTARY = scope:recipient
				}
			}
		}
		if = { # Tributary state
			limit = { scope:tributary_state = yes }
			custom_tooltip = {
				text = lotr_release_as_tributary_state_effect_tt
				make_tributary = {
					TYPE = tributary_permanent
					SUZERAIN = scope:actor
					TRIBUTARY = scope:recipient
				}
			}
		}
		if = { # Protectorate state
			limit = { scope:protectorate_state = yes }
			custom_tooltip = {
				text = lotr_release_as_protectorate_state_effect_tt
				make_tributary = {
					TYPE = tributary_protectorate
					SUZERAIN = scope:actor
					TRIBUTARY = scope:recipient
				}
			}
		}
	}
	
	auto_accept = yes
}

#####################################
### Debug Fellowship Interactions ###
#####################################

set_character_as_fellowship_member = {
	category = interaction_debug_realms
	use_diplomatic_range = no
	common_interaction = yes
	ignores_pending_interaction_block = yes
	icon = realms_debug

	is_shown = {
		debug_only = yes
	}
	
	can_send = {
		always = yes
	}

	send_option = {		
		flag = add_fellowship_member
		localization = add_fellowship_member
		starts_enabled = { always = yes	}
	}

	send_option = {		
		flag = remove_fellowship_member
		localization = remove_fellowship_member
	}

	auto_accept = yes

	on_accept = {
		if = {
			limit = { scope:remove_fellowship_member = yes }
			remove_fellowship_member = { CHARACTER = scope:recipient }
		} else_if = {
			limit = { scope:add_fellowship_member = yes }
			set_fellowship_member = { CHARACTER = scope:recipient }
		}
	}
	
	auto_accept = yes
}

set_corruption_of_fellowship_member = {
	category = interaction_debug_realms
	use_diplomatic_range = no
	common_interaction = yes
	ignores_pending_interaction_block = yes
	icon = realms_debug

	is_shown = {
		debug_only = yes
	}
	
	can_send = {
		always = yes
	}

	send_option = {		
		flag = increase_corruption
		localization = increase_corruption
		starts_enabled = { always = yes	}
	}

	send_option = {		
		flag = decrease_corruption
		localization = decrease_corruption
	}

	auto_accept = yes

	on_accept = {
		if = {
			limit = { scope:increase_corruption = yes }
			scope:recipient = { increase_fellowship_member_corruption = { VALUE = 5 } }
		} else_if = {
			limit = { scope:decrease_corruption = yes }
			scope:recipient = { decrease_fellowship_member_corruption = { VALUE = 100 } }
		}
	}
	
	auto_accept = yes
}