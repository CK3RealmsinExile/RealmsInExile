debug_situation = {
	
	is_unique = yes # It can only exist once in the world

	gui_window_name = "window_situation"
	gui_participation_window_name = "window_situation_participation"

	##################################################
	# Regions
	##################################################
	sub_regions = {
		steppe_west = {
			icon = "gfx/interface/icons/situations/debug_situation/steppe_west.dds"
			# geographical_regions = { world_steppe_west } #LotR
			geographical_regions = { middleearth_west_rhovanion_brownlands }
		}
		steppe_central = {
			icon = "gfx/interface/icons/situations/debug_situation/steppe_central.dds"
			# geographical_regions = { world_steppe_central } #LotR
			geographical_regions = { middleearth_rhun_seaofrhun }
		}
		steppe_east = {
			icon = "gfx/interface/icons/situations/debug_situation/steppe_east.dds"
			# geographical_regions = { world_steppe_east } #LotR
			geographical_regions = { middleearth_rhun_upper_khand }
		}
	}
	
	##################################################
	# On Actions
	##################################################
	# on_monthly = {
	# }

	##################################################
	# Groups
	##################################################
	participant_groups = {
		nomad_rulers = {
			icon = "gfx/interface/icons/situations/debug_situation/group_nomad.dds"

			is_character_valid = {
				has_government = nomad_government
				highest_held_title_tier >= tier_duchy
			}

			on_join = {
				trigger_event = debug_situation.0003
			}
			on_leave = {
				trigger_event = debug_situation.0004
			}

			map_color = hsv{ 0.37 1.00 0.78 }
		}

		other_rulers = {
			icon = "gfx/interface/icons/situations/debug_situation/group_other.dds"

			on_join = {
				trigger_event = debug_situation.0003
			}
			on_leave = {
				trigger_event = debug_situation.0004
			}

			map_color = hsv{ 0.8 0.75 0.83 }
		}

		out_of_realm = {
			icon = "gfx/interface/icons/situations/debug_situation/group_out_of_realm.dds"

			on_join = {
				trigger_event = debug_situation.0003
			}
			on_leave = {
				trigger_event = debug_situation.0004
			}
			is_character_valid = {
				scope:situation = {
					is_manual_participant = root
				}
			}
			require_realm_in_sub_region = no
			map_color = hsv{ 0.37 0.50 0.9 }
		}
	}
	
	##################################################
	# Phases
	##################################################
	start_phase = plentiful_harvest

	phases = {
		plentiful_harvest = {
			icon = "gfx/interface/icons/situations/debug_situation/plentiful_harvest.dds"

			on_start = {
				scope:situation_sub_region = {
					every_situation_sub_region_participant = {
						trigger_event = debug_situation.0001
					}
				}
			}
			on_end = {
				scope:situation_sub_region = {
					every_situation_sub_region_participant = {
						trigger_event = debug_situation.0002
					}
				}
			}


			max_duration = { days = 10 }
			max_duration_next_phase = weighted_random_points

			future_phases = {
				severe_drought = {
					takeover_type = duration
					takeover_duration = { days = 20 }
				}
				flood = {
					takeover_type = duration
					takeover_duration = { days = 20 }
				}
				test_with_catalysts = {
					takeover_type = points
					takeover_points = 1000

					catalysts = {
						# Passage of time
						catalyst_situation_passing_of_time_blessing = medium_the_great_steppe_catalyst_gain
						catalyst_situation_passing_of_time_lucky_chance_blessing = massive_the_great_steppe_catalyst_gain
					}
				}
			}

			modifier_sets = {
				debug_situation_effect_set_1 = {
					icon = "gfx/interface/icons/situations/debug_situation/test_effects.dds"

					all = {
						character_modifier = {
							tax_mult = 0.1
						}
					}

					nomad_rulers = {
						character_modifier = {
							tax_mult = 0.1
						}
						county_modifier = {
							county_fertility_growth_add = 0.2
						}
						parameters = {
							unlocks_special_thingy_interaction = yes
						}
					}
					other_rulers = {
						character_modifier = {
							tax_mult = -0.1
						}
						county_modifier = {
							county_fertility_growth_add = -0.2
						}
						parameters = {
							unlocks_special_other_thingy_interaction = yes
						}
					}
				}
				debug_situation_effect_set_2 = {
					icon = "gfx/interface/icons/situations/debug_situation/test_effects_2.dds"

					nomad_rulers = {
						character_modifier = {
							stewardship = -2
						}
					}
					other_rulers = {
						character_modifier = {
							learning = -1
						}
					}
				}
			}
		}

		severe_drought = {
			icon = "gfx/interface/icons/situations/debug_situation/severe_drought.dds"

			max_duration = { days = 80 }

			on_start = {
				scope:situation_sub_region = {
					every_situation_sub_region_participant = {
						trigger_event = debug_situation.0001
					}
				}
			}
			on_end = {
				scope:situation_sub_region = {
					every_situation_sub_region_participant = {
						trigger_event = debug_situation.0002
					}
				}
			}

			max_duration_next_phase = weighted_random_points

			future_phases = {
				plentiful_harvest = {
				}
				flood = {
				}
			}

			modifier_sets = {
				debug_situation_effect_set_1 = {
					icon = "gfx/interface/icons/situations/debug_situation/test_effects.dds"

					nomad_rulers = {
						character_modifier = {
							tax_mult = -0.2
						}
						county_modifier = {
							county_fertility_growth_add = -0.1234
						}
						parameters = {
							unlocks_special_thingy_interaction = yes
						}
						doctrine_character_modifier = {
							name = test_steppe_doctrine_lay_modifier_name
							doctrine = doctrine_theocracy_lay_clergy
							same_faith_opinion = -3
						}
					}
					other_rulers = {
						character_modifier = {
							tax_mult = -0.5
						}
						county_modifier = {
							county_fertility_growth_add = -0.8
						}
						parameters = {
							unlocks_special_other_thingy_interaction = yes
						}
						doctrine_character_modifier = {
							name = test_steppe_doctrine_lay_modifier_name
							doctrine = doctrine_theocracy_lay_clergy
							same_faith_opinion = -30
						}
					}
				}
				debug_situation_effect_set_2 = {
					icon = "gfx/interface/icons/situations/debug_situation/test_effects_2.dds"

					nomad_rulers = {
						character_modifier = {
							stewardship = 2
						}
					}
					other_rulers = {
						character_modifier = {
							learning = -1
						}
					}
				}
			}
		}

		flood = {
			icon = "gfx/interface/icons/situations/debug_situation/flood.dds"

			max_duration = { days = 30 }

			on_start = {
				scope:situation_sub_region = {
					every_situation_sub_region_participant = {
						trigger_event = debug_situation.0001
					}
				}
			}
			on_end = {
				scope:situation_sub_region = {
					every_situation_sub_region_participant = {
						trigger_event = debug_situation.0002
					}
				}
			}

			max_duration_next_phase = weighted_random_points

			future_phases = {
				severe_drought = {
				}
				plentiful_harvest = {
				}
			}

			modifier_sets = {
				debug_situation_effect_set_1 = {
					icon = "gfx/interface/icons/situations/debug_situation/test_effects.dds"

					nomad_rulers = {
						character_modifier = {
							tax_mult = 0.1
						}
						county_modifier = {
							county_fertility_growth_add = 0.3
						}
						parameters = {
							unlocks_special_thingy_interaction = yes
						}
						doctrine_character_modifier = {
							name = test_steppe_doctrine_lay_modifier_name
							doctrine = doctrine_theocracy_lay_clergy
							same_faith_opinion = 3
						}
					}
					other_rulers = {
						character_modifier = {
							tax_mult = -0.1
						}
						county_modifier = {
							county_fertility_growth_add = -0.2
						}
						parameters = {
							unlocks_special_other_thingy_interaction = yes
						}
						doctrine_character_modifier = {
							name = test_steppe_doctrine_lay_modifier_name
							doctrine = doctrine_theocracy_lay_clergy
							same_faith_opinion = -3
						}
						doctrine_character_modifier = {
							name = test_steppe_doctrine_lay_modifier_name
							doctrine = doctrine_theocracy_temporal
							same_faith_opinion = -30
						}
					}
				}

				debug_situation_effect_set_2 = {
					icon = "gfx/interface/icons/situations/debug_situation/test_effects_2.dds"

					nomad_rulers = {
						character_modifier = {
							stewardship = 1
						}
					}
					other_rulers = {
						character_modifier = {
							learning = 1
						}
					}
				}
			}
		}


		test_with_catalysts = {
			icon = "gfx/interface/icons/situations/debug_situation/test_with_catalysts.dds"

			max_duration = { days = 30 }
			max_duration_next_phase = weighted_random_points

			future_phases = {
				plentiful_harvest = {
					takeover_type = points
					takeover_points = 10
				}
				flood = {
					takeover_type = points
					takeover_points = 10
				}
			}
		}

	}
}
