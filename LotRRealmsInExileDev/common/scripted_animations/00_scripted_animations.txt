duel_wield_weapon = {
	
	############
    ### LotR ###
    ############
	# Two Handed Axe
	triggered_animation = {
		trigger = { portrait_should_wield_longaxe_trigger = yes }
		animation = aggressive_longaxe #Two Handed Axe
	}
	
	###############
    ### Vanilla ###
    ###############
	# Axe
	triggered_animation = {
		trigger = { portrait_should_wield_axe_trigger = yes }
		animation = aggressive_axe #Axe
	}
	# Mace
	triggered_animation = {
		trigger = { portrait_should_wield_mace_trigger = yes }
		animation = aggressive_mace #Mace
	}
	# Sword
	triggered_animation = {
		trigger = { portrait_should_wield_sword_trigger = yes }
		animation = aggressive_sword #Sword
	}
	# Dagger
	triggered_animation = {
		trigger = { portrait_should_wield_dagger_trigger = yes }
		animation = aggressive_dagger #Dagger
	}
	# Spear
	triggered_animation = {
		trigger = { portrait_should_wield_spear_trigger = yes }
		animation = aggressive_spear #Spear
	}
	# Hammer
	triggered_animation = {
		trigger = { portrait_should_wield_hammer_trigger = yes }
		animation = aggressive_hammer #Hammer
	}
	#Wooden Sword, used by children or for training, setup by set_temporary_signature_weapon = { WEAPON_TYPE = wooden_sword }
	triggered_animation = {
		trigger = { portrait_should_wield_wooden_sword_trigger = yes }
		animation = aggressive_wooden_sword #Wooden Sword
	}
	# Fallback
	triggered_animation = {
		trigger = { government_has_flag = government_is_tribal }
		animation = aggressive_axe
	}
	animation = aggressive_sword
}

duel_celebrate = {
	
	############
    ### LotR ###
    ############
	# Two Handed Axe
	triggered_animation = {
		trigger = { portrait_should_wield_longaxe_trigger = yes }
		animation = celebrate_longaxe #Two Handed Axe
	}

	###############
    ### Vanilla ###
    ###############
	# Axe
	triggered_animation = {
		trigger = { portrait_should_wield_axe_trigger = yes }
		animation = celebrate_axe #Axe
	}
	# Mace
	triggered_animation = {
		trigger = { portrait_should_wield_mace_trigger = yes }
		animation = celebrate_mace #Mace
	}
	# Sword
	triggered_animation = {
		trigger = { portrait_should_wield_sword_trigger = yes }
		animation = celebrate_sword #Sword
	}
	# Dagger
	triggered_animation = {
		trigger = { portrait_should_wield_dagger_trigger = yes }
		animation = celebrate_dagger #Dagger
	}
	# Spear
	triggered_animation = {
		trigger = { portrait_should_wield_spear_trigger = yes }
		animation = celebrate_spear #Spear
	}
	# Hammer
	triggered_animation = {
		trigger = { portrait_should_wield_hammer_trigger = yes }
		animation = celebrate_hammer #Hammer
	}
	#Wooden Sword, used by children or for training, setup by set_temporary_signature_weapon = { WEAPON_TYPE = wooden_sword }
	triggered_animation = {
		trigger = { portrait_should_wield_wooden_sword_trigger = yes }
		animation = celebrate_wooden_sword #Wooden Sword
	}
	# Fallback
	triggered_animation = {
		trigger = { government_has_flag = government_is_tribal }
		animation = celebrate_axe
	}
	animation = celebrate_sword
}

idle = {
	animation = idle
}

bow_drawn = {
	# Longbow
	triggered_animation = {
		trigger = { portrait_should_wield_longbow_trigger = yes }
		animation = hunting_longbow_aim_arrow_default
	}
	# Crossbow
	triggered_animation = {
		trigger = { portrait_should_wield_crossbow_trigger = yes }
		animation = crossbow
	}
	# Bow
	animation = hunting_shortbow_aim_arrow_default
}

bow_closed = {
	# Longbow
	triggered_animation = {
		trigger = { portrait_should_wield_longbow_trigger = yes }
		animation = hunting_longbow_rest_arrow_default
	}
	# Crossbow
	triggered_animation = {
		trigger = { portrait_should_wield_crossbow_trigger = yes }
		animation = crossbow
	}
	# Bow
	animation = hunting_shortbow_rest_arrow_default
}

bow_drawn_blunt = {
	# Longbow
	triggered_animation = {
		trigger = { portrait_should_wield_longbow_trigger = yes }
		animation = hunting_longbow_aim_bluntarrow_default
	}
	# Bow
	animation = hunting_shortbow_aim_bluntarrow_default
}

bow_closed_blunt = {
	# Longbow
	triggered_animation = {
		trigger = { portrait_should_wield_longbow_trigger = yes }
		animation = hunting_longbow_rest_bluntarrow_default
	}
	# Bow
	animation = hunting_shortbow_rest_bluntarrow_default
}

scheme_prep_pick_best_stance = {
	# Scheme Owner.
	## Seduce/Elope/Court.
	triggered_animation = {
		trigger = {
			this = root
			scope:scheme = { should_use_amorous_scheme_animation_trigger = yes }
		}
		animation = flirtation
	}
	## Learn Language.
	triggered_animation = {
		trigger = {
			this = root
			scope:scheme = { scheme_type = learn_language }
		}
		animation = reading
	}
	## Other Hostile schemes.
	triggered_animation = {
		trigger = {
			this = root
			scope:scheme = { is_hostile = yes }
		}
		animation = scheme
	}
	## Fallback.
	### Diplomacy.
	triggered_animation = {
		trigger = {
			this = root
			scope:scheme = { scheme_skill = diplomacy }
		}
		animation = chancellor
	}
	### Martial.
	triggered_animation = {
		trigger = {
			this = root
			scope:scheme = { scheme_skill = martial }
		}
		animation = marshal
	}
	### Stewardship.
	triggered_animation = {
		trigger = {
			this = root
			scope:scheme = { scheme_skill = stewardship }
		}
		animation = steward
	}
	### Intrigue.
	triggered_animation = {
		trigger = {
			this = root
			scope:scheme = { scheme_skill = intrigue }
		}
		animation = spymaster
	}
	### Learning.
	triggered_animation = {
		trigger = {
			this = root
			scope:scheme = { scheme_skill = learning }
		}
		animation = page_flipping
	}
	### Prowess.
	triggered_animation = {
		trigger = {
			this = root
			scope:scheme = { scheme_skill = prowess }
		}
		animation = marshal
	}
	# Scheme Target.
	## Seduce/Elope/Court.
	### You're enemies.
	triggered_animation = {
		trigger = {
			this = scope:target
			scope:scheme = { should_use_amorous_scheme_animation_trigger = yes }
			OR = {
				has_any_bad_relationship_with_root_trigger = yes
				is_at_war_with = root
				number_of_opposing_personality_traits = {
					target = root
					value >= 3
				}
			}
		}
		animation = sick_stomach
	}
	### They like you!
	triggered_animation = {
		trigger = {
			this = scope:target
			scope:scheme = { should_use_amorous_scheme_animation_trigger = yes }
			opinion = {
				target = root
				value >= 50
			}
		}
		animation = happiness
	}
	### They do not like you!
	triggered_animation = {
		trigger = {
			this = scope:target
			scope:scheme = { should_use_amorous_scheme_animation_trigger = yes }
			opinion = {
				target = root
				value <= -50
			}
		}
		animation = disgust
	}
	### They are indifferent to you.
	triggered_animation = {
		trigger = {
			this = scope:target
			scope:scheme = { should_use_amorous_scheme_animation_trigger = yes }
		}
		animation = boredom
	}
	## Other Hostile schemes.
	triggered_animation = {
		trigger = {
			this = scope:target
			scope:scheme = { is_hostile = yes }
		}
		animation = stress
	}
	## Fallback.
	### They like you!
	triggered_animation = {
		trigger = {
			this = scope:target
			opinion = {
				target = root
				value >= 50
			}
		}
		animation = happiness
	}
	### They do not like you!
	triggered_animation = {
		trigger = {
			this = scope:target
			opinion = {
				target = root
				value <= -50
			}
		}
		animation = dismissal
	}
	### They are indifferent to you.
	triggered_animation = {
		trigger = { this = scope:target }
		animation = personality_rational
	}
	# Final fallback.
	animation = personality_bold
}

coronation_guest_animation = {
	triggered_animation = {
		trigger = {
			scope:character = {
				"opinion(scope:host)" >= 50
			}
			scope:character.involved_activity ?= {
				NOT = { has_current_phase = coronation_phase_coronation }
			}
		}
		animation = { admiration ecstasy beg wedding_happy_cry toast_goblet throne_room_cheer_2 throne_room_cheer_1 celebrate_sword }
	}
	triggered_animation = {
		trigger = {
			scope:character = {
				"opinion(scope:host)" >= 5
			}
			scope:character.involved_activity ?= {
				NOT = { has_current_phase = coronation_phase_coronation }
			}
		}
		animation = { laugh happiness interested_left storyteller throne_room_applaud_1 personality_compassionate }
	}
	triggered_animation = {
		trigger = {
			scope:character = {
				"opinion(scope:host)" < 5
			}
			scope:character.involved_activity ?= {
				NOT = { has_current_phase = coronation_phase_coronation }
			}
		}
		animation = { boredom interested stress thinking war_defender personality_cynical personality_rational personality_dishonorable war_over_win  }
	}
	triggered_animation = {
		trigger = {
			scope:character = {
				"opinion(scope:host)" <= -50
			}
			scope:character.involved_activity ?= {
				NOT = { has_current_phase = coronation_phase_coronation }
			}
		}
		animation = { stunned disapproval eyeroll dismissal spymaster disappointed dismissal war_attacker bribing personality_vengeful inspect_weapon }
	}
	triggered_animation = {
		trigger = {
			scope:character = {
				OR = {
					government_has_flag = government_is_feudal
					government_has_flag = government_is_clan
					government_has_flag = government_is_administrative
				}
			}
			scope:character.involved_activity ?= {
				NOT = { has_current_phase = coronation_phase_coronation }
			}
		}
		animation = { chancellor }
	}
	triggered_animation = {
		trigger = {
			scope:character.involved_activity ?= {
				has_current_phase = coronation_phase_feast
			}
			scope:character.involved_activity ?= {
				NOT = { has_current_phase = coronation_phase_coronation }
			}
		}
		animation = { drink drink_goblet toast toast_goblet dancing }
	}
	triggered_animation = {
		trigger = {
			scope:character.involved_activity ?= {
				has_current_phase = coronation_phase_coronation
			}
			scope:character = {
				highest_held_title_tier < involved_activity.activity_host.highest_held_title_tier
				NAND = {
					exists = involved_activity.var:officiator
					this = involved_activity.var:officiator
				}
			}
		}
		animation = { throne_room_kneel_1 throne_room_kneel_2  }
	}
	triggered_animation = {
		trigger = {
			scope:character.involved_activity ?= {
				has_current_phase = coronation_phase_coronation
			}
			scope:character = {
				OR = {
					highest_held_title_tier >= involved_activity.activity_host.highest_held_title_tier
					AND = {
						exists = involved_activity.var:officiator
						this = involved_activity.var:officiator
					}
				}
				
			}
		}
		animation = { prayer personality_zealous chancellor }
	}
	triggered_animation = {
		trigger = {
			scope:character.involved_activity ?= {
				has_current_phase = coronation_phase_coronation
			}
			scope:character = {
				highest_held_title_tier >= involved_activity.activity_host.highest_held_title_tier
			}
		}
		animation = { personality_bold personality_zealous personality_cynical personality_rational }
	}
}

coronation_host_animation = {
	triggered_animation = {
		trigger = {
			scope:character.involved_activity ?= {
				has_current_phase = coronation_phase_preparations
			}
		}
		animation = { debating survey chancellor }
	}

	triggered_animation = {
		trigger = {
			scope:character.involved_activity ?= {
				NOR = {
					has_current_phase = coronation_phase_preparations
					has_current_phase = coronation_phase_feast
				}
			}
		}
		animation = { prayer personality_honorable chaplain }
	}

	#triggered_animation = { #LotR
	#	trigger = {
	#		scope:character = {
	#			faith.religion = religion:christianity_religion
	#		}
	#		scope:character.involved_activity ?= {
	#			has_current_phase = coronation_phase_feast
	#		}
	#	}
	#	animation = { acknowledging personality_honorable }
	#}
	triggered_animation = {
		trigger = {
			scope:character.involved_activity ?= {
				has_current_phase = coronation_phase_feast
			}
		}
		animation = { personality_bold personality_content }
	}
}
