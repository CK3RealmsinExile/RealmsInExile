################################
### LOTR - Flavorization Loc ###
################################

###############
### GENERAL ###
###############

### Pipeweed Loc - Pulls appropriate name for the herb

GetPipeWeedName = { #[ROOT.Char.Custom('GetPipeWeedName')]
	type = character

	text = {
		trigger = {
			OR = {
				is_hobbit = yes
				culture = culture:breemen
				culture = { any_parent_culture_or_above = { this = culture:breemen } }
				is_istari = yes
			}
		}
		localization_key = pipeweed_generic
	}

	text = {
		trigger = {
			OR = {
				is_orc = yes
			}
		}
		localization_key = pipeweed_gallows_weed
	}

	text = {
		trigger = {
			OR = {
				culture = culture:arnorian
				culture = { any_parent_culture_or_above = { this = culture:arnorian } }
				culture = { has_cultural_pillar = heritage_daen_lintis }
				is_elf = yes
				capital_province ?= {
					OR = {
						geographical_region = middleearth_west_arnor
					}
				}
				liege.capital_province ?= {
					OR = {
						geographical_region = middleearth_west_arnor
					}
				}
				location ?= {
					OR = {
						geographical_region = middleearth_west_arnor
					}
				}
			}
		}
		localization_key = pipeweed_sweet_galenas
	}

	text = {
		trigger = {
			OR = {
				culture = { has_cultural_pillar = language_westron }
				culture = { has_cultural_pillar = heritage_northron }
				culture = { has_cultural_pillar = heritage_hadorim }
				culture = { has_cultural_pillar = heritage_daen_coentis }
				culture = { has_cultural_pillar = heritage_danan_lin }
				capital_province ?= {
					OR = {
						geographical_region = middleearth_west
						geographical_region = middleearth_blue_mountains
						geographical_region = middleearth_misty_mountains
						geographical_region = middleearth_iron_mountains
					}
				}
				liege.capital_province ?= {
					OR = {
						geographical_region = middleearth_west
						geographical_region = middleearth_blue_mountains
						geographical_region = middleearth_misty_mountains
						geographical_region = middleearth_iron_mountains
					}
				}
				location ?= {
					OR = {
						geographical_region = middleearth_west
						geographical_region = middleearth_blue_mountains
						geographical_region = middleearth_misty_mountains
						geographical_region = middleearth_iron_mountains
					}
				}
			}
		}
		localization_key = pipeweed_westmans_weed
	}
	
	text = {
		trigger = {
			OR = {
				capital_province ?= {
					OR = {
						geographical_region = middleearth_rhun
						geographical_region = middleearth_mordor # Núrn
					}
				}
				liege.capital_province ?= {
					OR = {
						geographical_region = middleearth_rhun
						geographical_region = middleearth_mordor # Núrn
					}
				}
				location ?= {
					OR = {
						geographical_region = middleearth_rhun
						geographical_region = middleearth_mordor # Núrn
					}
				}
			}
		}
		localization_key = pipeweed_swuth
	}
	
	text = {
		trigger = {
			OR = {
				capital_province ?= {
					OR = {
						geographical_region = middleearth_haradwaith
					}
				}
				liege.capital_province ?= {
					OR = {
						geographical_region = middleearth_haradwaith
					}
				}
				location ?= {
					OR = {
						geographical_region = middleearth_haradwaith
					}
				}
			}
		}
		localization_key = pipeweed_ucason
	}
	
	text = {
		trigger = {
			OR = {
				capital_province ?= {
					OR = {
						geographical_region = middleearth_uttersouth
						geographical_region = middleearth_yellow_mountains
					}
				}
				liege.capital_province ?= {
					OR = {
						geographical_region = middleearth_uttersouth
						geographical_region = middleearth_yellow_mountains
					}
				}
				location ?= {
					OR = {
						geographical_region = middleearth_uttersouth
						geographical_region = middleearth_yellow_mountains
					}
				}
			}
		}
		localization_key = pipeweed_ul_ucason
	}
	
	text = {
		fallback = yes
		localization_key = pipeweed_generic
	}
}

### TAMSKANGI ORIGIN STORIES ###
TamskangiOrigins = { # Origin stories for Tamska heir in Mag and Tumag, used in loc
	type = character
	random_valid = yes

	text = {
		trigger = {
			is_lowborn = no
			dynasty ?= {
				this = dynasty:dynasty_tamskal
			}
			any_close_family_member = {
				this = title:d_tamska_main.holder
			}
		}
		localization_key = tamska_origin_your_relative
	}

	text = {
		trigger = {
			is_lowborn = no
			dynasty ?= {
				this = dynasty:dynasty_tamskal
			}
			NOT = {
				any_close_family_member = {
					this = title:d_tamska_main.holder
				}
			}
		}
		localization_key = tamska_origin_tamskic
	}

	text = {
		trigger = {
			is_lowborn = no
			dynasty ?= {
				NOT = { this = dynasty:dynasty_tamskal }
				dynasty_prestige_level >= 2
			}
			OR = {
				dynasty = { dynasty_prestige_level >= 2 }
				is_landed = yes
			}
		}
		localization_key = tamska_origin_highborn
	}

	text = {
		trigger = {
			is_lowborn = no
			dynasty ?= {
				NOT = { this = dynasty:dynasty_tamskal }
				dynasty_prestige_level <= 1
			}
		}
		localization_key = tamska_origin_noble
	}

	text = {
		trigger = {
			is_lowborn = no
			OR = {
				any_close_family_member = {
					is_landed = yes
					government_has_flag = government_is_tribal
					house ?= ROOT.house
				}
			}
		}
		localization_key = tamska_origin_tribe
	}

	text = {
		trigger = {
			OR = {
				has_trait = legitimized_bastard
				has_trait = bastard
				has_trait = bastard_founder
			}
		}
		localization_key = tamska_origin_bastard
	}

	text = {
		trigger = {
			has_trait = lifestyle_mystic
		}
		localization_key = tamska_origin_mystic
	}

	text = {
		trigger = {
			is_lowborn = yes
			OR = {
				exists = mother
				exists = father
			}
		}
		localization_key = tamska_origin_courtier
	}

	text = {
		trigger = {
			is_lowborn = yes
			NOR = {
				exists = mother
				exists = father
			}
		}
		localization_key = tamska_origin_farmer
	}

	text = {
		trigger = {
			is_lowborn = yes
			NOR = {
				exists = mother
				exists = father
			}
		}
		localization_key = tamska_origin_fisher
	}

	text = {
		trigger = {
			is_lowborn = yes
			NOR = {
				exists = mother
				exists = father
			}
		}
		localization_key = tamska_origin_soldier
	}

	text = {
		trigger = {
			is_lowborn = yes
			NOR = {
				exists = mother
				exists = father
			}
		}
		localization_key = tamska_origin_worker
	}

	text = {
		trigger = {
			is_lowborn = yes
			NOR = {
				exists = mother
				exists = father
			}
		}
		localization_key = tamska_origin_urchin
	}

	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = tamska_origin_generic
	}
}


####################
### SONG BATTLES ###
####################

### Counter Skills

sb_CounterSkill_Diplomacy = {
	type = character

	# Diplomacy is scope:skill_a.
	text = {
		trigger = {
			scope:sb_skill_a = flag:diplomacy
			scope:sb_skill_c = flag:intrigue
		}
		localization_key = sb_counterskill_intrigue
	}
}

sb_CounterSkill_Intrigue = {
	type = character
	
	# Intrigue is scope:skill_b.
	text = {
		trigger = {
			scope:sb_skill_b = flag:intrigue
			scope:sb_skill_a = flag:learning
		}
		localization_key = sb_counterskill_learning
	}
}

sb_CounterSkill_Learning = {
	type = character

	# Learning is scope:skill_c.
	text = {
		trigger = {
			scope:sb_skill_c = flag:learning
			scope:sb_skill_b = flag:diplomacy
		}
		localization_key = sb_counterskill_diplomacy
	}
}

### Moves & Pieces

sb_RandomPoetPossessive = {
	type = character
	random_valid = yes
	
	text = { localization_key = sb_RandomPoetPossessive_Maglor }
	text = { localization_key = sb_RandomPoetPossessive_Feanor }
	text = { localization_key = sb_RandomPoetPossessive_Daeron }
	text = { localization_key = sb_RandomPoetPossessive_Felagund }
	text = { localization_key = sb_RandomPoetPossessive_Luthien }
	text = { localization_key = sb_RandomPoetPossessive_Elrond }
	text = { localization_key = sb_RandomPoetPossessive_Sauron }
	text = { localization_key = sb_RandomPoetPossessive_Galadriel }
	text = { localization_key = sb_RandomPoetPossessive_Melian }
	text = { localization_key = sb_RandomPoetPossessive_Mithrandir }
	text = { localization_key = sb_RandomPoetPossessive_Saruman }
	text = { localization_key = sb_RandomPoetPossessive_Celebrimbor }
}

sb_RandomVerseType = {
	type = character
	random_valid = yes

	# Gambit
	text = { localization_key = sb_RandomVerseType_sonnet }
	# Cross
	text = { localization_key = sb_RandomVerseType_alexandrine }
	# Stratagem
	text = { localization_key = sb_RandomVerseType_ballad }
	# Feint
	text = { localization_key = sb_RandomVerseType_limerick }
	# Rush
	text = { localization_key = sb_RandomVerseType_alliterative }
}

sb_RandomFacialExpression = {
	type = character

	# They're smarmily confident.
	text = {
		trigger = {
			OR = {
				scope:sb_opponent = { has_trait = arrogant }
				sb_cumulative_skill_score_comparison_value <= -20
			}
		}
		localization_key = sb_randomfacialexpression_scornful
	}
	# They're confident.
	text = {
		trigger = {
			sb_cumulative_skill_score_comparison_value > -20
			sb_cumulative_skill_score_comparison_value <= -10
		}
		localization_key = sb_randomfacialexpression_confident
	}
	# They're ready for a fight.
	text = {
		trigger = {
			sb_cumulative_skill_score_comparison_value > -10
			sb_cumulative_skill_score_comparison_value <= 10
		}
		localization_key = sb_randomfacialexpression_fight
		#fallback = yes
	}
	# They're unsure.
	text = {
		trigger = {
			sb_cumulative_skill_score_comparison_value > 10
			sb_cumulative_skill_score_comparison_value <= 20
		}
		localization_key = sb_randomfacialexpression_unsure
	}
	# They're quailing.	
	text = {
		trigger = { sb_cumulative_skill_score_comparison_value > 20 }
		localization_key = sb_randomfacialexpression_quailing
	}
}

####################
##### CRAFTING #####
####################

### Artifact descriptions

ArtifactBowShaftDescription = {
	type = artifact

	text = {
		trigger = {
			has_artifact_feature_group = shaft_decoration
		}
		localization_key = artifact_bow_shaft_decorated
	}
	text = { #This loc gives a bit more flavor to weight up for not having any decorations
		trigger = {
			NOT = { has_artifact_feature_group = shaft_decoration }
		}
		localization_key = artifact_bow_shaft_undecorated_alt
	}
	text = {
		localization_key = artifact_bow_shaft_undecorated
	}
}

ArtifactBowStringDescription = {
	type = artifact

	text = {
		localization_key = artifact_bow_string
	}
}

ArtifactFungiSpecies = {
	type = character

	text = {
		trigger = {
			exists = scope:fungi_species
			scope:fungi_species = flag:fungi_type_cave_puffball
		}
		localization_key = fungi_type_cave_puffball
	}
	text = {
		trigger = {
			exists = scope:fungi_species
			scope:fungi_species = flag:fungi_type_scaly_earthstar
		}
		localization_key = fungi_type_scaly_earthstar
	}
	text = {
		trigger = {
			exists = scope:fungi_species
			scope:fungi_species = flag:fungi_type_cordyceps
		}
		localization_key = fungi_type_cordyceps
	}
	text = {
		trigger = {
			exists = scope:fungi_species
			scope:fungi_species = flag:fungi_type_inky_cap
		}
		localization_key = fungi_type_inky_cap
	}
	text = {
		trigger = {
			exists = scope:fungi_species
			scope:fungi_species = flag:fungi_type_turkey_tail
		}
		localization_key = fungi_type_turkey_tail
	}
	text = {
		trigger = {
			exists = scope:fungi_species
			scope:fungi_species = flag:fungi_type_polypore
		}
		localization_key = fungi_type_polypore
	}
	text = {
		trigger = {
			exists = scope:fungi_species
			scope:fungi_species = flag:fungi_type_panellus
		}
		localization_key = fungi_type_panellus
	}
	text = {
		trigger = {
			exists = scope:fungi_species
			scope:fungi_species = flag:fungi_type_artists_conk
		}
		localization_key = fungi_type_artists_conk
	}
	text = {
		trigger = {
			exists = scope:fungi_species
			scope:fungi_species = flag:fungi_type_phantom_orchid
		}
		localization_key = fungi_type_phantom_orchid
	}
	text = {
		trigger = {
			exists = scope:fungi_species
			scope:fungi_species = flag:fungi_type_earth_fan
		}
		localization_key = fungi_type_earth_fan
	}
}

ArtifactCraftingToolsHeadDescription = {
	type = artifact

	text = {
		trigger = {
			has_artifact_feature_group = head_decoration
		}
		localization_key = artifact_crafting_tools_head_decorated
	}
	text = {
		localization_key = artifact_crafting_tools_head_undecorated
	}
}

ArtifactCraftingToolsShaftDescription = {
	type = artifact

	text = {
		trigger = {
			has_artifact_feature_group = shaft_decoration
		}
		localization_key = artifact_crafting_tools_shaft_decorated
	}
	text = {
		localization_key = artifact_crafting_tools_shaft_undecorated
	}
}

ArtifactCraftingToolsHandleDescription = {
	type = artifact

	text = {
		trigger = {
			has_artifact_feature_group = metal_handle_decoration
		}
		localization_key = artifact_crafting_tools_handle_decorated
	}
	text = {
		localization_key = artifact_crafting_tools_handle_undecorated
	}
}
