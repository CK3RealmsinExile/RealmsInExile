# LotR: removed real world references

ToleranceValue = {
	type = character

	text = {
		localization_key = tolerance_righteous

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_fully_accepted_level
				}
			}
		}
	}
	text = {
		localization_key = tolerance_astray

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_astray_level
				}
			}
		}
	}
	text = {
		localization_key = tolerance_sinister

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_hostile_level
				}
			}
		}
	}
	text = {
		localization_key = tolerance_evil

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_evil_level
				}
			}
		}
	}
}

ToleranceValueConcept = {
	type = character

	text = {
		localization_key = FAITH_HOSTILITY_RIGHTEOUS

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_fully_accepted_level
				}
			}
		}
	}
	text = {
		localization_key = FAITH_HOSTILITY_ASTRAY

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_astray_level
				}
			}
		}
	}
	text = {
		localization_key = FAITH_HOSTILITY_HOSTILE

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_hostile_level
				}
			}
		}
	}
	text = {
		localization_key = FAITH_HOSTILITY_EVIL

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_evil_level
				}
			}
		}
	}
}

MyPriestTitle = {
	type = character

	text = {
		trigger = {
			exists = cp:councillor_court_chaplain
			cp:councillor_court_chaplain = {
				is_female = no
			}
		}
		localization_key = male_priest_title
	}
	text = {
		trigger = {
			exists = cp:councillor_court_chaplain
			cp:councillor_court_chaplain = {
				is_female = yes
			}
		}
		localization_key = female_priest_title
	}
	text = {
		trigger = {
			always = no
		}
		localization_key = neuter_priest_title
		fallback = yes
	}
}

PriestTitle = {
	type = character

	text = {
		trigger = { is_female = no }
		localization_key = male_priest_title
	}
	text = {
		trigger = { is_female = yes }
		localization_key = female_priest_title
	}
	text = {
		trigger = { always = no }
		localization_key = neuter_priest_title
		fallback = yes
	}
}

# For use when refering to a priest of unspecified gender, or the concept of priests in general.
DefaultPriestTitle = {
	type = character

	text = {
		trigger = {
			faith = {
				OR = {
					has_doctrine = doctrine_clerical_gender_male_only
					AND = {
						has_doctrine = doctrine_clerical_gender_either
						has_doctrine = doctrine_gender_male_dominated
					}
				}
			}
		}
		localization_key = male_priest_title
	}

	text = {
		trigger = {
			faith = {
				OR = {
					has_doctrine = doctrine_clerical_gender_female_only
					AND = {
						has_doctrine = doctrine_clerical_gender_either
						has_doctrine = doctrine_gender_female_dominated
					}
				}
			}
		}
		localization_key = female_priest_title
	}

	text = {
		trigger = {
			faith = {
				has_doctrine = doctrine_clerical_gender_either
				has_doctrine = doctrine_gender_equal
			}
		}
		localization_key = neuter_priest_title
		fallback = yes
	}
}

DefaultPriestTitlePlural = {
	type = character

	text = {
		trigger = {
			faith = {
				OR = {
					has_doctrine = doctrine_clerical_gender_male_only
					AND = {
						has_doctrine = doctrine_clerical_gender_either
						has_doctrine = doctrine_gender_male_dominated
					}
				}
			}
		}
		localization_key = male_priest_title_plural
	}

	text = {
		trigger = {
			faith = {
				OR = {
					has_doctrine = doctrine_clerical_gender_female_only
					AND = {
						has_doctrine = doctrine_clerical_gender_either
						has_doctrine = doctrine_gender_female_dominated
					}
				}
			}
		}
		localization_key = female_priest_title_plural
	}

	text = {
		trigger = {
			faith = {
				has_doctrine = doctrine_clerical_gender_either
				has_doctrine = doctrine_gender_equal
			}
		}
		localization_key = neuter_priest_title_plural
		fallback = yes
	}
}

# For use when refering to a priest of unspecified gender, or the concept of priests in general.
DefaultPriestWomenMen = {
	type = character

	text = {
		trigger = {
			faith = {
				OR = {
					has_doctrine = doctrine_clerical_gender_male_only
					AND = {
						has_doctrine = doctrine_clerical_gender_either
						has_doctrine = doctrine_gender_male_dominated
					}
				}
			}
		}
		localization_key = CHARACTER_MEN
	}

	text = {
		trigger = {
			faith = {
				OR = {
					has_doctrine = doctrine_clerical_gender_female_only
					AND = {
						has_doctrine = doctrine_clerical_gender_either
						has_doctrine = doctrine_gender_female_dominated
					}
				}
			}
		}
		localization_key = CHARACTER_WOMEN
	}

	text = {
		trigger = {
			faith = {
				has_doctrine = doctrine_clerical_gender_either
				has_doctrine = doctrine_gender_equal
			}
		}
		localization_key = CHARACTER_MEN
		fallback = yes
	}
}

DefaultBishopTitle = {
	type = character

	text = {
		trigger = {
			faith = {
				OR = {
					has_doctrine = doctrine_clerical_gender_male_only
					AND = {
						has_doctrine = doctrine_clerical_gender_either
						has_doctrine = doctrine_gender_male_dominated
					}
				}
			}
		}
		localization_key = male_bishop_title
	}

	text = {
		trigger = {
			faith = {
				OR = {
					has_doctrine = doctrine_clerical_gender_female_only
					AND = {
						has_doctrine = doctrine_clerical_gender_either
						has_doctrine = doctrine_gender_female_dominated
					}
				}
			}
		}
		localization_key = female_bishop_title
	}

	text = {
		trigger = {
			faith = {
				has_doctrine = doctrine_clerical_gender_either
				has_doctrine = doctrine_gender_equal
			}
		}
		localization_key = neuter_bishop_title
		fallback = yes
	}
}

DefaultBishopTitlePlural = {
	type = character

	text = {
		trigger = {
			faith = {
				OR = {
					has_doctrine = doctrine_clerical_gender_male_only
					AND = {
						has_doctrine = doctrine_clerical_gender_either
						has_doctrine = doctrine_gender_male_dominated
					}
				}
			}
		}
		localization_key = male_bishop_title_plural
	}

	text = {
		trigger = {
			faith = {
				OR = {
					has_doctrine = doctrine_clerical_gender_female_only
					AND = {
						has_doctrine = doctrine_clerical_gender_either
						has_doctrine = doctrine_gender_female_dominated
					}
				}
			}
		}
		localization_key = female_bishop_title_plural
	}

	text = {
		trigger = {
			faith = {
				has_doctrine = doctrine_clerical_gender_either
				has_doctrine = doctrine_gender_equal
			}
		}
		localization_key = neuter_bishop_title_plural
		fallback = yes
	}
}

#Returns Heathen for Pagans and Infidels for other Faiths.
GetUnbelieverName = {
	type = character

	# text = {
		# trigger = {
			# faith = {
				# has_doctrine = pagan_hostility_doctrine
			# }
		# }
		# localization_key = unbeliever_heathen
	# }
	text = {
		# trigger = {
			# faith = {
				# NOT = { has_doctrine = pagan_hostility_doctrine }
			# }
		# }
		localization_key = unbeliever_infidel
	}
}


#Returns Heathens for Pagans and Infidels for other Faiths.
GetUnbelieverNamePlural = {
	type = character

	# text = {
		# trigger = {
			# faith = {
				# has_doctrine = pagan_hostility_doctrine
			# }
		# }
		# localization_key = unbeliever_heathen_plural
	# }
	text = {
		# trigger = {
			# faith = {
				# NOT = { has_doctrine = pagan_hostility_doctrine }
			# }
		# }
		localization_key = unbeliever_infidel_plural
	}
}

GetUnbelieverTerm = {
	type = character

	text = {
		trigger = {
			is_infidel_trigger = { WHO = scope:second TARGET = root}
		}
		localization_key = unbeliever_infidel
	}
	# text = {
		# trigger = {
			# is_heathen_trigger = { WHO = scope:second TARGET = root}
		# }
		# localization_key = unbeliever_heathen
	# }
	text = {
		trigger = {
			is_heretic_trigger = { WHO = scope:second TARGET = root}
		}
		localization_key = unbeliever_heretic
	}
	text = {
		trigger = { always = yes }
		localization_key = unbeliever_unbeliever
	}
}

GetUnbelieverTermPlural = {
	type = character
	parent = GetUnbelieverTerm
	suffix = _plural
}

GetUnbelieverTermAdjective = {
	type = character

	text = {
		trigger = {
			is_infidel_trigger = { WHO = scope:second TARGET = root}
		}
		localization_key = unbeliever_infidel_adj
	}
	# text = {
		# trigger = {
			# is_heathen_trigger = { WHO = scope:second TARGET = root}
		# }
		# localization_key = unbeliever_heathen_adj
	# }
	text = {
		trigger = {
			is_heretic_trigger = { WHO = scope:second TARGET = root}
		}
		localization_key = unbeliever_heretic_adj
	}
	text = {
		trigger = { always = yes }
		localization_key = unbeliever_unbeliever_adj
	}
}

GetUnbelieverAndForeignerTerm = {
	type = character

	text = {
		trigger = {
			is_infidel_trigger = { WHO = scope:second TARGET = root}
			NOT = { scope:second.culture = root.culture }
		}
		localization_key = unbeliever_foreign_infidel
	}
	# text = {
		# trigger = {
			# is_heathen_trigger = { WHO = scope:second TARGET = root}
			# NOT = { scope:second.culture = root.culture }
		# }
		# localization_key = unbeliever_foreign_heathen
	# }
	text = {
		trigger = {
			is_heretic_trigger = { WHO = scope:second TARGET = root}
			NOT = { scope:second.culture = root.culture }
		}
		localization_key = unbeliever_foreign_heretic
	}
	text = {
		trigger = {
			is_infidel_trigger = { WHO = scope:second TARGET = root}
		}
		localization_key = unbeliever_infidel
	}
	# text = {
		# trigger = {
			# is_heathen_trigger = { WHO = scope:second TARGET = root}
		# }
		# localization_key = unbeliever_heathen
	# }
	text = {
		trigger = {
			is_heretic_trigger = { WHO = scope:second TARGET = root}
		}
		localization_key = unbeliever_heretic
	}
	text = {
		fallback = yes
		localization_key = unbeliever_believer
	}
}

#Intended to be used only for faith_creation.1001, and references scopes defined in that event.
GetFaithCreationReaction = {
	type = character

	text = {
		trigger = {
			root = scope:second
		}
		localization_key = faith_creation.1001.o.personal
	}
	text = {
		trigger = {
			scope:second = {
				faith = {
					save_temporary_scope_as = reformed_faith
				}
			}
			faith = {
				religion = scope:reformed_faith.religion
				faith_hostility_level = {
					target = scope:reformed_faith
					value > 1
				}
			}

		}
		localization_key = faith_creation.1001.o.heretical
	}
	text = {
		trigger = {
			scope:second = {
				faith = {
					save_temporary_scope_as = reformed_faith
				}
			}
			scope:reformed_faith = {
				OR = {
					has_doctrine_parameter = great_holy_wars_active
					has_doctrine_parameter = great_holy_wars_active_if_reformed
				}
				OR = {
					has_doctrine_parameter = cannibalism_legal
					has_doctrine_parameter = human_sacrifice_active
				}
			}
			NOR = {
				faith = {
					has_doctrine_parameter = cannibalism_legal
					has_doctrine_parameter = human_sacrifice_active
				}
			}
		}
		localization_key = faith_creation.1001.o.frightened
	}
	text = {
		trigger = {
			scope:second = {
				faith = {
					save_temporary_scope_as = reformed_faith
				}
			}
			faith = {
				OR = {
					has_doctrine_parameter = great_holy_wars_active
					AND = {
						has_doctrine_parameter = great_holy_wars_active_if_reformed
						NOT = { has_doctrine_parameter = unreformed }
					}
				}
				faith_hostility_level = {
					target = scope:reformed_faith
					value > 1
				}
			}
		}
		localization_key = faith_creation.1001.o.crusader
	}
	text = {
		trigger = {
			scope:second = {
				faith = {
					save_temporary_scope_as = reformed_faith
				}
			}
			faith = {
				faith_hostility_level = {
					target = scope:reformed_faith
					value <= 1
				}
			}
		}
		localization_key = faith_creation.1001.o.interested
	}
	text = {
		localization_key = faith_creation.1001.o.uninterested
	}
}

GetAfterLifeDestination = {
	type = character

	text = {
		trigger = {
			faith = {
				has_doctrine_parameter = reincarnation_resistance_to_conversion
			}
		}
		localization_key = character_afterlife_reincarnation
	}

	text = {
		trigger = {
			num_sinful_traits > num_virtuous_traits
		}
		localization_key = character_afterlife_negative
	}

	text = {
		localization_key = character_afterlife_positive
	}
}

# GetActualBishopTitlePossessive should be updated synchronously with this
GetActualBishopTitle = {
	type = character

	# 'Early Out' keys for Head of Faith/Landed Rulers.
	text = {
		trigger = {
			exists = faith.religious_head
			this = faith.religious_head
		}
		localization_key = religious_head_name
	}
	text = {
		trigger = {
			is_playable_character = yes
		}
		localization_key = ruler_title_name
	}

	# Religion-By-Religion Titles for Bishops based on Liege's Tier.
	# LotR: Norse converted to men_of_darkness intended for Dunlendings.
	#Norse
	text = {
		trigger = {
			liege.highest_held_title_tier >= tier_kingdom
			faith.religion = religion:gwathuirim_religion 
		}
		localization_key = councillor_court_chaplain_germanic_religion_kingdom
	}
	text = {
		trigger = {
			liege.highest_held_title_tier >= tier_duchy
			faith.religion = religion:gwathuirim_religion 
		}
		localization_key = councillor_court_chaplain_germanic_religion_duchy
	}
	text = {
		trigger = {
			liege.highest_held_title_tier < tier_duchy
			faith.religion = religion:gwathuirim_religion 
			is_female = no
		}
		localization_key = councillor_court_chaplain_germanic_religion_county
	}
	text = {
		trigger = {
			liege.highest_held_title_tier < tier_duchy
			faith.religion = religion:gwathuirim_religion 
			is_female = yes
		}
		localization_key = councillor_court_chaplain_germanic_religion_county_female
	}
	
	# Khand #
	text = {
		trigger = {
			OR = {
				faith = faith:faith_khandish_sauronic
				faith = faith:faith_nurniag 
			}
			is_female = no
		}
		localization_key = khand_clery_male
	}
	text = {
		trigger = {
			OR = {
				faith = faith:faith_khandish_sauronic
				faith = faith:faith_nurniag 
			}
			is_female = yes
		}
		localization_key = khand_clergy_female
	}
	
	# Druedain
	text = {
        trigger = {
            liege.highest_held_title_tier >= tier_kingdom
            faith.religion = religion:dru_diaspora_religion
        }
        localization_key = councillor_court_chaplain_bishop_druedain
    }
    text = {
        trigger = {
            liege.highest_held_title_tier < tier_kingdom
            faith.religion = religion:dru_diaspora_religion 
        }
        localization_key = councillor_court_chaplain_druedain
    }
	
	# Honnin
	text = {
        trigger = {
            liege.highest_held_title_tier >= tier_kingdom
            faith.religion = religion:dru_diaspora_religion 
        }
        localization_key = councillor_court_chaplain_bishop_honnin
    }
    text = {
        trigger = {
            liege.highest_held_title_tier < tier_kingdom
            faith.religion = religion:dru_diaspora_religion  
        }
        localization_key = councillor_court_chaplain_honnin
    }
	
	# Bellakarean
	text = {
        trigger = {
            liege.highest_held_title_tier >= tier_kingdom
            faith.religion = religion:bellakari_religion
        }
        localization_key = councillor_court_chaplain_bishop_bellakari
    }
    text = {
        trigger = {
            liege.highest_held_title_tier < tier_kingdom
            faith.religion = religion:bellakari_religion
        }
        localization_key = councillor_court_chaplain_bellakari
    }
	
	# Near Haradrim
	text = {
        trigger = {
            liege.highest_held_title_tier >= tier_kingdom
            faith.religion = religion:harad_religion
        }
        localization_key = councillor_court_chaplain_bishop_haradrim
    }
    text = {
        trigger = {
            liege.highest_held_title_tier < tier_kingdom
            faith.religion = religion:harad_religion 
        }
        localization_key = councillor_court_chaplain_haradrim
    }
	
	# Far Haradrim
	text = {
        trigger = {
            liege.highest_held_title_tier >= tier_kingdom
            faith.religion = religion:far_harad_religion
        }
        localization_key = councillor_court_chaplain_bishop_ray
    }
    text = {
        trigger = {
            liege.highest_held_title_tier < tier_kingdom
            faith.religion = religion:far_harad_religion 
        }
        localization_key = councillor_court_chaplain_ray
    }
	

	#Paganism
	# text = {
		# trigger = {
			# faith = { has_doctrine = pagan_hostility_doctrine }
			# liege.highest_held_title_tier >= tier_kingdom
			# is_female = no
		# }
		# localization_key = councillor_court_chaplain_paganism_religion_kingdom
	# }
	# text = {
		# trigger = {
			# faith = { has_doctrine = pagan_hostility_doctrine }
			# liege.highest_held_title_tier >= tier_kingdom
			# is_female = yes
		# }
		# localization_key = councillor_court_chaplain_paganism_religion_kingdom_female
	# }
	# text = {
		# trigger = {
			# faith = { has_doctrine = pagan_hostility_doctrine }
			# liege.highest_held_title_tier >= tier_duchy
		# }
		# localization_key = councillor_court_chaplain_paganism_religion_duchy
	# }
	# text = {
		# trigger = {
			# faith = { has_doctrine = pagan_hostility_doctrine }
			# liege.highest_held_title_tier < tier_duchy
		# }
		# localization_key = councillor_court_chaplain_paganism_religion_county
	# }

	#Fallback
	text = {
		trigger = { liege.highest_held_title_tier >= tier_empire is_female = no }
		localization_key = councillor_court_chaplain_theocrat_empire
	}
	text = {
		trigger = { liege.highest_held_title_tier >= tier_empire is_female = yes }
		localization_key = councillor_court_chaplain_theocrat_empire_female
	}
	text = {
		trigger = { liege.highest_held_title_tier >= tier_kingdom }
		localization_key = councillor_court_chaplain_theocrat_kingdom
	}
	text = {
		trigger = { liege.highest_held_title_tier >= tier_duchy }
		localization_key = councillor_court_chaplain_theocrat_duchy
	}
	text = {
		trigger = { liege.highest_held_title_tier < tier_duchy }
		localization_key = councillor_court_chaplain_theocrat_county
	}
}

GetBirthOmen = {
	type = character
	random_valid = yes

	text = {
		localization_key = birth_omen_caul
	}
	text = {
		localization_key = birth_omen_finger
	}
	text = {
		localization_key = birth_omen_birthmark	
	}
}

GetTaltosTerm = {
	type = character

	text = {
		trigger = {
			always = no
		}
		localization_key = chosen_one_fallback
		fallback = yes
	}
}

GetReligiousRite = {
	type = character

	text = {
		trigger = {
			always = no
		}
		fallback = yes
		localization_key = rite_worship
	}
}

# Doctrine Parameters
GetRiteEcumenismFullOrEmpty = {
	type = character

	# text = { #LotR
	# 	trigger = {
	# 		faith = { has_doctrine = special_doctrine_ecumenical_christian }
	# 	}
	# 	localization_key = GetRiteEcumenismFullOrEmpty_full
	# }
	text = {
		# trigger = { #LotR
		# 	NOT = {
		# 		faith = { has_doctrine = special_doctrine_ecumenical_christian }
		# 	}
		# }
		localization_key = GetRiteEcumenismFullOrEmpty_empty
	}
}

# Does the character's faith have Armed Pilgrimages or Struggle & Submission?
ghw_from_which_tenet = {
	type = character

	text = {
		trigger = {
			faith = { has_doctrine = tenet_armed_pilgrimages }
		}
		localization_key = ghw_from_which_tenet_armed_pilgrimages
	}

	text = {
		trigger = {
			faith = { has_doctrine = tenet_struggle_submission }
		}
		localization_key = ghw_from_which_tenet_struggle_submission
	}

	text = {
		trigger = {
			faith = { has_doctrine = tenet_warmonger }
		}
		localization_key = ghw_from_which_tenet_warmonger
	}
}

# Which institutions would be exempt from tax in this faith?
GetFaithTaxExemptInstitution = {
	type = character

	# Theocratic clergy faiths exempt the Church.
	text = {
		trigger = {
			faith = { has_doctrine_parameter = theocracy_temple_lease }
		}
		localization_key = faithtaxexemption_the_church
	}

	# Lay clergy faiths exempt charities.
	text = {
		trigger = {
			faith = { has_doctrine_parameter = lay_clergy }
		}
		fallback = yes
		localization_key = faithtaxexemption_charities
	}
}
