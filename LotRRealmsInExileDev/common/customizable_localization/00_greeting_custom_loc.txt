# LotR: removed real world references.

#GREETINGS MY LOVER
GreetingToLover = {
	type = character

	text = {
		trigger = {
			scope:second = {
				object_of_importance_exist_trigger = {
					LOVER = root
				}
			}
		}
		localization_key = greeting_lover_object
	}

	text = {
		localization_key = greeting_lover_fallback
	}
}

#GREETINGS MY LIEGE
GreetingToLiege = {
	type = character

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value >= 20
			}
		}
		localization_key = greeting_liege_positive
	}

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value <= -40
			}
		}
		localization_key = greeting_liege_negative
	}

	text = {
		localization_key = greeting_liege_fallback
	}
}

GreetingToLiegePositive = {
	type = character

	text = {
		localization_key = greeting_liege_liked
	}
}

GreetingToLiegeNegative = {
	type = character

	text = {
		localization_key = greeting_liege_dislike
	}
}


#GREETINGS MY VASSAL
GreetingToVassal = {
	type = character

	text = {
		trigger = {
			OR = {
				AND = {
					is_close_or_extended_family_of = scope:second
					opinion = {
						target = scope:second
						value >= 10
					}	
				}
				opinion = {
					target = scope:second
					value >= 30
				}	
			}

		}
		localization_key = greeting_vassal_positive
	}

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value <= -40
			}
		}
		localization_key = greeting_vassal_negative
	}

	text = {
		localization_key = greeting_vassal_fallback
	}
}

GreetingToVassalPositive = {
	type = character

	text = {
		trigger = {
			is_close_or_extended_family_of = scope:second
		}
		localization_key = greeting_vassal_relative_liked
	}

	text = {
		localization_key = greeting_vassal_liked
	}
}

GreetingToVassalNegative = {
	type = character

	text = {
		localization_key = greeting_vassal_dislike
	}
}



#GREETINGS MY CLOSE_RELATIVE
GreetingToFamily = {
	type = character

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value >= 40
			}
		}
		localization_key = greeting_family_positive
	}

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value <= -20
			}
		}
		localization_key = greeting_family_negative
	}

	text = {
		localization_key = greeting_family_fallback
	}
}

GreetingToFamilyPositive = {
	type = character

	text = {
		localization_key = greeting_family_liked
	}
}

GreetingToFamilyNegative = {
	type = character

	text = {
		localization_key = greeting_family_fallback
	}
}


#GREETINGS FOREIGN RULER
GreetingToForeignRuler = {
	type = character

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value >= 40
			}
		}
		localization_key = greeting_foreign_ruler_positive
	}

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value <= -20
			}
		}
		localization_key = greeting_foreign_ruler_negative
	}

	text = {
		localization_key = greeting_foreign_ruler
	}
}

GreetingToForeignRulerPositive = {
	type = character

	text = {
		localization_key = greeting_foreign_ruler_positive
	}
}

GreetingToForeignRulerNegative = {
	type = character

	text = {
		localization_key = greeting_foreign_ruler_negative
	}
}


#GENERIC GREETING
GreetingToGeneric = {
	type = character

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value >= 40
			}
		}
		localization_key = greeting_generic_positive
	}

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value <= -40
			}
		}
		localization_key = greeting_generic_negative
	}

	text = {
		localization_key = greeting_generic
	}
}

GreetingToGenericPositive = {
	type = character

	text = {
		localization_key = greeting_generic_positive
	}	
}

GreetingToGenericNegative = {
	type = character
	
	text = {
		localization_key = greeting_generic_negative
	}
}


#APPROPRIATE GREETING
# ROOT is the character doing the greeting, scope:second is the character being greeted.
AppropriateGreeting = {
	type = character

	text = {
		trigger = { has_relation_lover = scope:second }
		localization_key = greeting_appropriate_lover
	}

	text = {
		trigger = { is_vassal_of = scope:second }
		localization_key = greeting_appropriate_liege
	}

	text = {
		trigger = {
			scope:second = { is_vassal_of = root }
		}
		localization_key = greeting_appropriate_vassal
	}

	text = {
		trigger = {
			OR = {
				is_close_or_extended_family_of = scope:second
				has_relation_friend = scope:second
			}
		}
		localization_key = greeting_appropriate_family
	}

	text = {
		trigger = {
			scope:second = { is_independent_ruler = yes }
			NOT = { top_liege = scope:second.top_liege }
		}
		localization_key = greeting_appropriate_foreign_ruler
	}

	text = {
		localization_key = greeting_appropriate_fallback
	}
}

AppropriateGreetingPositive = {
	type = character

	text = {
		trigger = { has_relation_lover = scope:second }
		localization_key = greeting_appropriate_lover
	}

	text = {
		trigger = { is_vassal_of = scope:second }
		localization_key = greeting_appropriate_positive_liege
	}

	text = {
		trigger = {
			scope:second = { is_vassal_of = root }
		}
		localization_key = greeting_appropriate_positive_vassal
	}

	text = {
		trigger = {
			is_close_or_extended_family_of = scope:second
		}
		localization_key = greeting_appropriate_positive_family
	}

	text = {
		trigger = {
			scope:second = { is_independent_ruler = yes }
			NOT = { top_liege = scope:second.top_liege }
		}
		localization_key = greeting_appropriate_positive_foreign_ruler
	}

	text = {
		localization_key = greeting_appropriate_positive_fallback
	}
}

AppropriateGreetingNegative = {
	type = character


	text = {
		trigger = { is_vassal_of = scope:second }
		localization_key = greeting_appropriate_negative_liege
	}

	text = {
		trigger = {
			scope:second = { is_vassal_of = root }
		}
		localization_key = greeting_appropriate_negative_vassal
	}

	text = {
		trigger = {
			is_close_or_extended_family_of = scope:second
		}
		localization_key = greeting_appropriate_negative_family
	}

	text = {
		trigger = {
			scope:second = { is_independent_ruler = yes }
			NOT = { top_liege = scope:second.top_liege }
		}
		localization_key = greeting_appropriate_negative_foreign_ruler
	}

	text = {
		localization_key = greeting_appropriate_negative_fallback
	}
}


# Can be called after an appropriate greeting to add character and flavor to the address.
AppropriateSupplimentaryGreeting = {
	type = character

	text = {
		trigger = {
			NOT = {
				target_is_liege_or_above = scope:second
			}
			opinion = {
				target = scope:second
				value <= -10
			}
		}
		localization_key = greeting_supplimentary.negative
	}

	text = {
		trigger = {
			OR = {
				target_is_liege_or_above = scope:second
				opinion = {
					target = scope:second
					value > -10
				}
			}
		}
		localization_key = greeting_supplimentary.positive
	}
}

NegativeSupplimentaryGreeting = {
	type = character
	random_valid = yes

	
	text = { # Your misdeeds are told from Ireland to Cathay
		trigger = {
			# Must be in Western or Northern Europe
			#location = {
				#OR = {
#					geographical_region = world_europe_west
#					geographical_region = world_europe_north
				#}
			#}
			#Must be Eruhini religion family
			religion = { is_in_family = rf_eruhini }
		}
		localization_key =  greeting_supplimentary.negative.tales
	}

	text = { # Your low character is the subject of Greek plays.
		trigger = {
#			# Must be in Western or Northern Europe
#			exists = capital_province
#			capital_province = {
#				OR = {
#					geographical_region = world_europe_east
#					geographical_region = world_europe_south
#					geographical_region = world_asia_minor
#					geographical_region = world_middle_east_jerusalem
#					geographical_region = world_africa_north
#				}
#			}
			# Elda or Dunadan
			OR = {
				is_eldar = yes
				culture = { has_cultural_pillar = heritage_dunedain }
			}
		}
		localization_key =  greeting_supplimentary.negative.greek
	}	
	text = { # May your humors rot in your living body.
		localization_key =  greeting_supplimentary.negative.insult.1
	}	

	text = { # May your years be short and miserable.
		localization_key =  greeting_supplimentary.negative.insult.2
	}	

	text = { # May wisdom ever elude you.
		trigger = {
			scope:second = {
				learning < high_skill_rating
			}
		}
		localization_key = greeting_supplimentary.negative.insult.3
	}	

	text = { # Damn your seventh grandfather.
		trigger = {
#			faith = {
#				religion_tag = islam_religion
#			}
			#Rotting beard - Dwarves
			scope:second = { is_dwarf = yes }
		}
		localization_key =  greeting_supplimentary.negative.insult_muslim.1
	}	

	text = { # May you be sewn up alive in the belly of a dead camel.
		trigger = {
#			faith = {
#				religion_tag = islam_religion
#			}
			# Dead Mûmak - Character is in greater Harad + Utter South
			exists = capital_province
			capital_province = {
				OR = {
					geographical_region = middleearth_haradwaith
					geographical_region = middleearth_uttersouth
				}
			}
		}
		localization_key =  greeting_supplimentary.negative.insult_muslim.2
	}	

	text = { # May Allah destroy your house.
		#trigger = {
		#	faith = {
		#		religion_tag = islam_religion
		#	}
		#}
		localization_key =  greeting_supplimentary.negative.insult_muslim.3
	}	

	text = { # You child of a mangy dog.
		#trigger = {
		#	faith = {
		#		religion_tag = islam_religion
		#	}
		#}
		localization_key =  greeting_supplimentary.negative.insult_muslim.4
	}
	
	text = { # May you be trampled to death by a herd of wild kine.
		trigger = {
			# Character is in greater Rhûn or Wild Lands
			exists = capital_province
			capital_province = {
				OR = {
					geographical_region = middleearth_rhun
					geographical_region = middleearth_west_rhovanion_brownlands
				}
			}
		}
		localization_key =  greeting_supplimentary.negative.insult_rhun
	}

	text = { # May a rabid warg devour your entrails.
		trigger = {
			# Character borders the Misties
			exists = capital_province
			capital_province = {
				OR = {
					geographical_region = middleearth_west_rhovanion_anduin
					geographical_region = middleearth_west_eregion
					geographical_region = middleearth_misty_mountains
				}
			}
		}
		localization_key =  greeting_supplimentary.negative.insult_warg
	}

	text = { # May you dwell in Mandos until the world is made again.
		trigger = {
			# Elf to Elf
			is_elf = yes
			scope:second = { is_elf = yes }
		}
		localization_key =  greeting_supplimentary.negative.insult_elf1
	}

	text = { # May the Valar find pity for you, for I have none.
		trigger = {
			# Elf
			is_elf = yes
		}
		localization_key =  greeting_supplimentary.negative.insult_elf2
	}
	
	text = { # May the Dark Flame use your spine for a toothpick.
		trigger = {
			# Orc in Moria
			is_orc = yes
			exists = capital_province
			capital_province = { geographical_region = middleearth_misty_mountains_khazad_dum }
		}
		localization_key =  greeting_supplimentary.negative.insult_darkflame
	}

	text = { # May the Shadow claim your name, and may even the Dead forget you.
		trigger = {
			# BoN target
			scope:second = { numenorean_blood_tier >= 1 }
		}
		localization_key =  greeting_supplimentary.negative.insult_bon
	}

	text = { # May your halls lie empty, and may no songs be sung of your deeds.
		trigger = {
			# Dwarven target
			scope:second = { is_dwarf = yes }
		}
		localization_key =  greeting_supplimentary.negative.insult_dwarf1
	}

	text = { # May all rich veins vanish before your pickaxe.
		trigger = {
			# Dwarven target
			scope:second = { is_dwarf = yes }
		}
		localization_key =  greeting_supplimentary.negative.insult_dwarf2
	}

	text = { # May a dragon take your hoard for his litter.
		trigger = {
			# Dwarven target
			scope:second = { is_dwarf = yes }
		}
		localization_key =  greeting_supplimentary.negative.insult_dwarf3
	}
	
	text = { # May your horse throw you before battle, and your foes laugh as you crawl.
		trigger = {
			# Horse-Lords
			lotr_horse_lords_trigger = yes
		}
		localization_key =  greeting_supplimentary.negative.insult_horselords
	}

	text = { # May your water turn to dust, and shade be forever beyond reach.
		trigger = {
			# Dune Sea
			exists = capital_province
			capital_province = { geographical_region = middleearth_haradwaith_far_dune_sea }
		}
		localization_key =  greeting_supplimentary.negative.insult_dunesea
	}
	
	text = { # May sand blind your eyes and salt fill your lungs.
		trigger = {
			# Dune Sea
			exists = capital_province
			capital_province = { geographical_region = middleearth_haradwaith }
		}
		localization_key =  greeting_supplimentary.negative.insult_harad
	}
	
	text = { # May you squeal like a pig when the fire takes you, and may the flames burn slow.
		trigger = {
			is_orc = yes
		}
		localization_key =  greeting_supplimentary.negative.insult_orc1
	}

	text = { # Even an Orc possesses greater grace than you.
		trigger = {
			is_orc = no
			scope:second = { is_orc = no }
		}
		localization_key =  greeting_supplimentary.negative.insult_orc2
	}
	
	text = { # May your garden wither, your taters rot, and your holes be overrun with stoats.
		trigger = {
			is_hobbit = yes
		}
		localization_key =  greeting_supplimentary.negative.insult_hobbit1
	}

	text = { # You'd make good golf equipment.
		trigger = {
			is_hobbit = yes
		}
		localization_key =  greeting_supplimentary.negative.insult_hobbit2
	}
	
	text = { # May corsairs assail your every journey.
		trigger = {
			# Gondor and Bellakar
			exists = capital_province
			capital_province = { 
				OR = {
					geographical_region = middleearth_west_gondor
					geographical_region = custom_bellakar
				}
			}
		}
		localization_key =  greeting_supplimentary.negative.insult_corsair
	}

	text = { # May the Winds never tell of your passing.
		trigger = {
			# Gondor and Bellakar
			exists = capital_province
			culture = { has_cultural_pillar = heritage_dunedain }
		}
		localization_key =  greeting_supplimentary.negative.insult_winds
	}
	
	text = { # May you taste death from a thousand torments.
		trigger = {
			scope:second = { cannot_be_killed = no }
		}
		localization_key =  greeting_supplimentary.negative.insult_death
	}
	
	text = { #Your days are numbered. But you knew this, didn't you?
		trigger = {
			is_sauron = yes
		}
		localization_key =  greeting_supplimentary.negative.insult_sauron
	}
}

PositiveSupplimentaryGreeting = {
	type = character

	random_valid = yes

	text = { # Blessings upon you and your House.
		localization_key =  greeting_supplimentary.positive.flattery.1
	}	

	text = { # Your wisdom and mercy are legendary.
		trigger = {
			scope:second = {
				NOR = {
					has_trait = sadistic
					has_trait = callous
				}
			}
		}
		localization_key =  greeting_supplimentary.positive.flattery.2
	}	

	text = { # Peace be with you.
		trigger = {
			scope:second = {
				NOR = {
					has_trait = vengeful
					has_trait = wrathful
					faith = {
						has_doctrine = tenet_warmonger
						has_doctrine = tenet_human_sacrifice
					}
				}
			}
		}
		localization_key =  greeting_supplimentary.positive.flattery.3
	}	

	text = { # May you live in harmony and contentment.
		trigger = {
			scope:second = {
				NOR = {
					has_trait = ambitious
					has_trait = arrogant
					has_trait = sadistic
				}
			}
		}
		localization_key =  greeting_supplimentary.positive.flattery.4
	}

	text = { # Your ruthlessness is enviable.
		trigger = {
			scope:second = {
				OR = {
					has_trait = sadistic
					has_trait = callous
				}
			}
		}
		localization_key =  greeting_supplimentary.positive.flattery.5
	}

	text = { # Your great appetites are renowned throughout the world.
		trigger = {
			scope:second = {
				OR = {
					has_trait = gluttonous
					has_trait = greedy
					has_trait = ambitious
				}
			}
		}
		localization_key =  greeting_supplimentary.positive.flattery.6
	}
}
