#v1.5
education_focus_acc = {
	log_loc_errors = no
	parent = education_focus
	suffix = "_acc"
}

#v1.5
education_focus_ins = {
	log_loc_errors = no
	parent = education_focus
	suffix = "_ins"
}

#v1.5
education_focus_gen = {
	log_loc_errors = no
	parent = education_focus
	suffix = "_gen"
}


#v1.5
education_focus_child_ins = {
	log_loc_errors = no
	parent = education_focus_child
	suffix = "_ins"
}

#v1.5
education_focus_child_acc = {
	log_loc_errors = no
	parent = education_focus_child
	suffix = "_acc"
}

#v1.5
education_focus_child_gen = {
	log_loc_errors = no
	parent = education_focus_child
	suffix = "_gen"
}


GetShockedExpressionFemale = {
	log_loc_errors = no
	type = character

	random_valid = yes

	text = {
		localization_key = shocked_expression_shocked_female
	}
	text = {
		localization_key = shocked_expression_appalled_female
	}
}

# ------------------------------------------------------------------------------------

# v1.5
my_prison_pet = {
	log_loc_errors = no
	parent = prison_pet
	suffix = "_my"
}

# v1.5
little_prison_pet_vocative = {
	log_loc_errors = no
	parent = prison_pet
	suffix = "_little_vocative"
}

# ------------------------------------------------------------------------------------

# v1.5
exotic_fowl_type_genitive_plural = {
	log_loc_errors = no
	type = character

	text = {
		localization_key = fowl_dinner_peacock_genitive_plural
		trigger = {
			age > 14
		}
	}
	
	text = {
		localization_key = fowl_dinner_child_genitive_plural
		trigger = {
			age < 15
		}
	}
}

# v1.10
GruesomeFestivalNameMsc = {
	log_loc_errors = no
	type = character

	# text = {
	# 	localization_key = gruesomefestivalname_blot
	# 	trigger = { faith.religion = religion:germanic_religion }
	# }

	text = {
		localization_key = gruesomefestivalname_festival
		# trigger = {
		# 	NOT = { faith.religion = religion:germanic_religion }
		# }
		fallback = yes
	}
}

# v1.5
RealmTypeGenitive = {
	log_loc_errors = no
	type = character

	text = {
		localization_key = kingdom_genitive_lower_case
		trigger = {
			highest_held_title_tier >= 4
		}
	}

	text = {
		localization_key = duchy_genitive_lower_case
		trigger = {
			highest_held_title_tier >= 3
		}
	}

	text = {
		localization_key = county_genitive_lower_case
		trigger = {
			highest_held_title_tier >= 2
		}
	}

	text = {
		localization_key = barony_genitive_lower_case
		trigger = {
			highest_held_title_tier >= 1
		}
	}
}

# v1.5
BaronyTownTypeLocative = {
	log_loc_errors = no
	parent = BaronyTownType
	suffix = "_locative"
}

# v1.5
BaronyTownTypeGenitive = {
	log_loc_errors = no
	parent = BaronyTownType
	suffix = "_genitive"
}

# v1.5
diplomacy_skill_level_genitive = {
	log_loc_errors = no
	type = character

	text = {
		localization_key = skill_level_terrible_genitive
		trigger = { diplomacy < terrible_skill_level }
	}

	text = {
		localization_key = skill_level_poor_genitive
		trigger = {
			diplomacy >= terrible_skill_level
			diplomacy < average_skill_level
		}
	}

	text = {
		localization_key = skill_level_average_genitive
		trigger = {
			diplomacy >= average_skill_level
			diplomacy < good_skill_level
		}
	}

	text = {
		localization_key = skill_level_good_genitive
		trigger = {
			diplomacy >= good_skill_level
			diplomacy < excellent_skill_level
		}
	}

	text = {
		localization_key = skill_level_excellent_genitive
		trigger = { diplomacy >= excellent_skill_level }
	}
}

# v1.5
martial_skill_level_genitive = {
	log_loc_errors = no
	type = character

	text = {
		localization_key = skill_level_terrible_genitive
		trigger = { martial < terrible_skill_level }
	}

	text = {
		localization_key = skill_level_poor_genitive
		trigger = {
			martial >= terrible_skill_level
			martial < average_skill_level
		}
	}

	text = {
		localization_key = skill_level_average_genitive
		trigger = {
			martial >= average_skill_level
			martial < good_skill_level
		}
	}

	text = {
		localization_key = skill_level_good_genitive
		trigger = {
			martial >= good_skill_level
			martial < excellent_skill_level
		}
	}

	text = {
		localization_key = skill_level_excellent_genitive
		trigger = { martial >= excellent_skill_level }
	}
}

# v1.5
stewardship_skill_level_genitive = {
	log_loc_errors = no
	type = character

	text = {
		localization_key = skill_level_terrible_genitive
		trigger = { stewardship < terrible_skill_level }
	}

	text = {
		localization_key = skill_level_poor_genitive
		trigger = {
			stewardship >= terrible_skill_level
			stewardship < average_skill_level
		}
	}

	text = {
		localization_key = skill_level_average_genitive
		trigger = {
			stewardship >= average_skill_level
			stewardship < good_skill_level
		}
	}

	text = {
		localization_key = skill_level_good_genitive
		trigger = {
			stewardship >= good_skill_level
			stewardship < excellent_skill_level
		}
	}

	text = {
		localization_key = skill_level_excellent_genitive
		trigger = { stewardship >= excellent_skill_level }
	}
}

# v1.5
intrigue_skill_level_genitive = {
	log_loc_errors = no
	type = character

	text = {
		localization_key = skill_level_terrible_genitive
		trigger = { intrigue < terrible_skill_level }
	}

	text = {
		localization_key = skill_level_poor_genitive
		trigger = {
			intrigue >= terrible_skill_level
			intrigue < average_skill_level
		}
	}

	text = {
		localization_key = skill_level_average_genitive
		trigger = {
			intrigue >= average_skill_level
			intrigue < good_skill_level
		}
	}

	text = {
		localization_key = skill_level_good_genitive
		trigger = {
			intrigue >= good_skill_level
			intrigue < excellent_skill_level
		}
	}

	text = {
		localization_key = skill_level_excellent_genitive
		trigger = { intrigue >= excellent_skill_level }
	}
}

# v1.5
learning_skill_level_genitive = {
	log_loc_errors = no
	type = character

	text = {
		localization_key = skill_level_terrible_genitive
		trigger = { learning < terrible_skill_level }
	}

	text = {
		localization_key = skill_level_poor_genitive
		trigger = {
			learning >= terrible_skill_level
			learning < average_skill_level
		}
	}

	text = {
		localization_key = skill_level_average_genitive
		trigger = {
			learning >= average_skill_level
			learning < good_skill_level
		}
	}

	text = {
		localization_key = skill_level_good_genitive
		trigger = {
			learning >= good_skill_level
			learning < excellent_skill_level
		}
	}

	text = {
		localization_key = skill_level_excellent_genitive
		trigger = { learning >= excellent_skill_level }
	}
}

# v1.5
CompositionTypeGloriousAccusative = {
	log_loc_errors = no
	type = character

	text = {
		trigger = { var:composition_type = flag:song }
		localization_key = CompositionType_song_glorious_accusative
	}
	text = {
		trigger = { var:composition_type = flag:chronicle }
		localization_key = CompositionType_chronicle_glorious_accusative
	}
	text = {
		trigger = { var:composition_type = flag:poem }
		localization_key = CompositionType_poem_glorious_accusative
	}
}

# v1.5
ComplimentAdjectiveTheMostGenitive = {
	log_loc_errors = no
	type = character

	random_valid = yes

	# Fair/Handsome
	text = {
		trigger = {
			has_trait = beauty_good
			is_male = yes
			NOT = {
				has_variable = court_6040_best_looking_var	#needed to keep court.6040 loc coherent
			}
		}
		localization_key = compliment_handsome_the_most_genitive
	}
	text = {
		trigger = {
			has_trait = beauty_good
			is_female = yes
			NOT = {
				has_variable = court_6040_best_looking_var	#needed to keep court.6040 loc coherent
			}
		}
		localization_key = compliment_fair_the_most_genitive
	}

	# Impressive
	text = {
		trigger = {
			has_personality_malicious_trigger = yes
			is_female = yes
		}
		localization_key = compliment_impressive_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_malicious_trigger = yes
			is_male = yes
		}
		localization_key = compliment_impressive_the_most_genitive
	}

	# Benign
	text = {
		trigger = {
			ai_compassion >= medium_positive_ai_value
			is_female = yes
		}
		localization_key = compliment_benign_female_the_most_genitive
	}
	text = {
		trigger = {
			ai_compassion >= medium_positive_ai_value
			is_male = yes
		}
		localization_key = compliment_benign_the_most_genitive
	}

	# Benevolent
	text = {
		trigger = {
			ai_compassion >= medium_positive_ai_value
			is_female = yes
		}
		localization_key = compliment_benevolent_female_the_most_genitive
	}
	text = {
		trigger = {
			ai_compassion >= medium_positive_ai_value
			is_male = yes
		}
		localization_key = compliment_benevolent_the_most_genitive
	}

	# Implacable
	text = {
		trigger = {
			has_personality_dominant_trigger = yes
			is_female = yes
		}
		localization_key = compliment_implacable_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_dominant_trigger = yes
			is_male = yes
		}
		localization_key = compliment_implacable_the_most_genitive
	}

	# Modest
	text = {
		trigger = {
			has_personality_submissive_trigger = yes
			is_female = yes
		}
		localization_key = compliment_modest_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_submissive_trigger = yes
			is_male = yes
		}
		localization_key = compliment_modest_the_most_genitive
	}

	# Charming
	text = {
		trigger = {
			has_personality_extroverted_trigger = yes
			is_female = yes
		}
		localization_key = compliment_charming_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_extroverted_trigger = yes
			is_male = yes
		}
		localization_key = compliment_charming_the_most_genitive
	}


	# Thoughtful
	text = {
		trigger = {
			has_personality_introverted_trigger = yes
			is_female = yes
		}
		localization_key = compliment_thoughtful_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_introverted_trigger = yes
			is_male = yes
		}
		localization_key = compliment_thoughtful_the_most_genitive
	}

	# Perceptive
	text = {
		trigger = {
			has_personality_emotional_trigger = yes
			is_female = yes
		}
		localization_key = compliment_perceptive_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_emotional_trigger = yes
			is_male = yes
		}
		localization_key = compliment_perceptive_the_most_genitive
	}

	# Sensible
	text = {
		trigger = {
			has_personality_levelheaded_trigger = yes
			is_female = yes
		}
		localization_key = compliment_sensible_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_levelheaded_trigger = yes
			is_male = yes
		}
		localization_key = compliment_sensible_the_most_genitive
	}

	# Serene
	text = {
		trigger = {
			has_personality_annoying_trigger = yes
			is_female = yes
		}
		localization_key = compliment_serene_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_annoying_trigger = yes
			is_male = yes
		}
		localization_key = compliment_serene_the_most_genitive
	}

	# Fallback
	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = compliment_fallback_the_most_genitive
	}
}

# v1.5
RegionalGameObjectAccusative = {
	log_loc_errors = no
	type = character
	random_valid = yes

	text = {
		localization_key = deck_of_cards_accusative
	}

	text = {
		trigger = {
			exists = capital_province
			capital_province = {
				geographical_region = world_india
			}
		}
		localization_key = pachisi_board_accusative #indian
	}

	text = {
		localization_key = chess_set_accusative
	}
}

# v1.7.2
child_favorite_toy_adj = {
	log_loc_errors = no
	parent = child_favorite_toy
	suffix = "_adj"
}

# v1.7.2
child_favorite_toy_accusative = {
	log_loc_errors = no
	parent = child_favorite_toy
	suffix = "_accusative"
}

# v1.7.2
child_favorite_toy_instrumental = {
	log_loc_errors = no
	parent = child_favorite_toy
	suffix = "_instrumental"
}

# v1.7.2
child_favorite_toy_my = {
	log_loc_errors = no
	parent = child_favorite_toy
	suffix = "_my"
}

# v1.13.0.1 - dopelniacz - rycerza, czempiona
KnightCulturePossessiveNoTooltip = {
	log_loc_errors = no
	parent = KnightCulture
	suffix = "_no_tooltip_possessive"
}

# v1.13.0.1 - wołacz - rycerzu, czempionie
KnightCultureVocativeNoTooltip = {
	log_loc_errors = no
	parent = KnightCulture
	suffix = "_no_tooltip_vocative"
}

# v1.13.0.1 - miejscownik - rycerzu, czempionie
KnightCultureLocativeNoTooltip = {
	log_loc_errors = no
	parent = KnightCulture
	suffix = "_no_tooltip_locative"
}

# v1.13.0.1 - celownik - rycerzowi, czempionowi
KnightCultureDativeNoTooltip = {
	log_loc_errors = no
	parent = KnightCulture
	suffix = "_no_tooltip_dative"
}

# v1.13.0.1 - narzednik - rycerzem, czempionem
KnightCultureInstrumentalNoTooltip = {
	log_loc_errors = no
	parent = KnightCulture
	suffix = "_no_tooltip_instrumental"
}

# v1.5
PrisonTypeCellAdj = {
	log_loc_errors = no
	type = character

	text = {
		trigger = { is_in_prison_type = dungeon }
		localization_key = prisontypecell_dungeon_cell_adj
	}

	text = {
		trigger = { is_in_prison_type = house_arrest }
		localization_key = prisontypecell_house_arrest_adj
	}
}

# v1.5
GetUpperClothingArticleAdj = {
	log_loc_errors = no
	type = character

	random_valid = yes

	text = {
		trigger = {
			is_female = no
		}
		localization_key = clothing_word_shirt_adj
	}

	text = {
		trigger = {
			is_female = yes
		}
		localization_key = clothing_word_blouse_adj
	}

	text = {
		trigger = {
			is_female = yes
		}
		localization_key = clothing_word_dress_adj
	}
}

# v1.13.0.1
InsultNounGenitive = {
	log_loc_errors = no
	parent = InsultNoun
	suffix = "_genitive"
}

# v1.13.0.1
InsultNounVocative = {
	log_loc_errors = no
	parent = InsultNoun
	suffix = "_vocative"
}

# v1.13.0.1
InsultNounAccusative = {
	log_loc_errors = no
	parent = InsultNoun
	suffix = "_accusative"
}

# v1.13.0.1
InsultNounInstrumental = {
	log_loc_errors = no
	parent = InsultNoun
	suffix = "_instrumental"
}



# v1.6
GetUnbelieverNamePluralAdj = {
	log_loc_errors = no
	parent = GetUnbelieverNamePlural
	suffix = "_adj"
}

# v1.6
GetUnbelieverNamePluralDative = {
	log_loc_errors = no
	parent = GetUnbelieverNamePlural
	suffix = "_dative"
}


# ------------------------------------------------------------------------------ #

# v1.5
GritTypeAdj = {
	log_loc_errors = no
	type = character

	text = {
		trigger = {
			location = {
				OR = {
					terrain = mountains
					terrain = desert_mountains
				}
			}
		}
		localization_key = grit_type_grit_adj
		fallback = yes
	}

	text = {
		trigger = {
			location = {
				OR = {
					terrain = plains
					terrain = farmlands
					terrain = hills
					terrain = floodplains
				}
			}
		}
		localization_key = grit_type_dirt_adj
	}

	text = {
		trigger = {
			location = {
				OR = {
					terrain = desert
					terrain = oasis
				}
			}
		}
		localization_key = grit_type_sand_adj
	}

	text = {
		trigger = {
			location = { terrain = wetlands }
		}
		localization_key = grit_type_bog_water_adj
	}

	text = {
		trigger = {
			location = {
				OR = {
					terrain = forest
					terrain = taiga
				}
			}
		}
		localization_key = grit_type_twigs_adj
	}

	text = {
		trigger = {
			location = { terrain = jungle }
		}
		localization_key = grit_type_wet_leaves_adj
	}

	text = {
		trigger = {
			location = {
				OR = {
					terrain = steppe
					terrain = drylands
				}
			}
		}
		localization_key = grit_type_dry_grass_adj
	}
}

# v1.5
ToleranceValueAdj = {
	log_loc_errors = no
	type = character

	text = {
		localization_key = tolerance_righteous_adj

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_fully_accepted_level
				}
			}
		}
	}
	text = {
		localization_key = tolerance_astray_adj

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_astray_level
				}
			}
		}
	}
	text = {
		localization_key = tolerance_sinister_adj

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_hostile_level
				}
			}
		}
	}
	text = {
		localization_key = tolerance_evil_adj

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_evil_level
				}
			}
		}
	}
}

# v1.5
SeductionGiftTypeAdj = {
	log_loc_errors = no
	type = character

	text = {
		trigger = { scope:gift = flag:tapestry }
		localization_key = seduce_gift_tapestry_adj
	}

	text = {
		trigger = { scope:gift = flag:horse }
		localization_key = seduce_gift_horse_adj
	}

	text = {
		trigger = { scope:gift = flag:tailor }
		localization_key = seduce_gift_tailored_clothes_adj
	}

	text = {
		trigger = { scope:gift = flag:rare_book }
		localization_key = seduce_gift_rare_book_adj
	}

	text = {
		trigger = { scope:gift = flag:embroidery }
		localization_key = seduce_gift_embroidery_adj
	}

	text = {
		trigger = { scope:gift = flag:poem }
		localization_key = seduce_gift_poem_adj
	}

	text = {
		trigger = { scope:gift = flag:woodcarving }
		localization_key = seduce_gift_woodcarving_adj
	}

	text = {
		trigger = { scope:gift = flag:object }
		localization_key = seduce_gift_object_adj
	}

	text = {
		trigger = { scope:gift = flag:jewelry }
		localization_key = seduce_gift_jewelry_adj
	}

	text = {
		trigger = { scope:gift = flag:stuffed_animal }
		localization_key = seduce_gift_stuffed_animal_adj
	}

	text = {
		trigger = { scope:gift = flag:flower_display }
		localization_key = seduce_gift_flower_display_adj
	}

	text = {
		trigger = { scope:gift = flag:handkerchief }
		localization_key = seduce_gift_handkerchief_adj
	}
}

# v1.5
ThreeToTwelveInstrumental = {
	log_loc_errors = no
	type = character
	random_valid = yes

	text = {
		localization_key = number_three_instrumental
	}
	text = {
		localization_key = number_four_instrumental
	}
	text = {
		localization_key = number_five_instrumental
	}
	text = {
		localization_key = number_six_instrumental
	}
	text = {
		localization_key = number_seven_instrumental
	}
	text = {
		localization_key = number_eight_instrumental
	}
	text = {
		localization_key = number_nine_instrumental
	}
	text = {
		localization_key = number_ten_instrumental
	}
	text = {
		localization_key = number_eleven_instrumental
	}
	text = {
		localization_key = number_twelve_instrumental
	}
}

# v1.5
InsultNounSexualVocative = {
	log_loc_errors = no
	type = character

	random_valid = yes

	text = {
		trigger = { is_male = yes }
		localization_key = insultnounsexual_lecher_vocative
	}

	text = {
		trigger = { is_male = yes }
		localization_key = insultnounsexual_debaucher_vocative
	}

	text = {
		trigger = { is_male = yes }
		localization_key = insultnounsexual_fornicator_vocative
	}

	text = {
		trigger = { is_male = yes }
		localization_key = insultnounsexual_philanderer_vocative
	}

	text = {
		trigger = {
			is_male = yes
			NOT = { has_trait = sodomite }
		}
		localization_key = insultnounsexual_womanizer_vocative
	}

	text = {
		trigger = { is_female = yes }
		localization_key = insultnounsexual_amorosa_vocative
	}

	text = {
		trigger = { is_female = yes }
		localization_key = insultnounsexual_jezebel_vocative
	}

	text = {
		trigger = { is_female = yes }
		localization_key = insultnounsexual_quean_vocative
	}

	text = {
		trigger = { is_female = yes }
		localization_key = insultnounsexual_delilah_vocative
	}

	text = {
		trigger = { is_female = yes }
		localization_key = insultnounsexual_strumpet_vocative
	}

	text = {
		trigger = { is_female = yes }
		localization_key = insultnounsexual_trollop_vocative
	}

	text = {
		trigger = { is_female = yes }
		localization_key = insultnounsexual_hussy_vocative
	}

	text = {
		trigger = { is_male = yes }
		weight_multiplier = {
			base = 0.3
		}
		localization_key = insultnounsexual_voluptuary_vocative
	}

	text = {
		trigger = { is_male = yes }
		weight_multiplier = {
			base = 0.3
		}
		localization_key = insultnounsexual_copulator_vocative
	}

	text = {
		trigger = { is_male = yes }
		weight_multiplier = {
			base = 0.3
		}
		localization_key = insultnounsexual_libidinist_vocative
	}

	text = {
		trigger = { is_male = yes }
		weight_multiplier = {
			base = 0.1
		}
		localization_key = insultnounsexual_roue_vocative
	}
	
	# female versions requested for other languages
	text = {
		trigger = { is_female = yes }
		weight_multiplier = {
			base = 0.3
		}
		localization_key = insultnounsexual_voluptuary_female_vocative
	}

	text = {
		trigger = { is_female = yes }
		weight_multiplier = {
			base = 0.3
		}
		localization_key = insultnounsexual_copulator_female_vocative
	}

	text = {
		trigger = { is_female = yes }
		weight_multiplier = {
			base = 0.3
		}
		localization_key = insultnounsexual_libidinist_female_vocative
	}

	text = {
		trigger = { is_female = yes }
		weight_multiplier = {
			base = 0.1
		}
		localization_key = insultnounsexual_roue_female_vocative
	}
	# --
	text = {
		trigger = {
			is_female = yes
		}
		localization_key = whore_vocative
	}
	text = {
		trigger = {
			is_female = yes
		}
		localization_key = harlot_vocative
	}
	text = {
		weight_multiplier = {
			base = 0.3
		}
		localization_key = bedswerver_vocative
	}
	text = {
		trigger = { is_male = yes }
		localization_key = pig_vocative
	}
	text = {
		trigger = { is_male = yes }
		localization_key = skirt_chaser_vocative
	}
}


# v1.13.0.1
FavoriteTreatAccusative = {
	log_loc_errors = no
	parent = FavoriteTreat
	suffix = "_accusative"
}


# v1.5
SignatureWeaponAttemptedHeavyAccusative = {
	log_loc_errors = no
	type = character

	text = {
		localization_key = signature_weapon_attempted_heavy_slash_accusative
		trigger = {
			OR = {
				var:signature_weapon = flag:sword
				var:signature_weapon = flag:axe
				var:signature_weapon = flag:dagger
			}
		}
		fallback = yes
	}
	text = {
		localization_key = signature_weapon_attempted_heavy_crush_accusative
		trigger = {
			OR = {
				var:signature_weapon = flag:mace
				var:signature_weapon = flag:hammer
			}
		}
	}
	text = {
		localization_key = signature_weapon_attempted_heavy_pierce_accusative
		trigger = {
			var:signature_weapon = flag:spear
		}
	}
}

# v1.5
SignatureWeaponAttemptedLightAccusative = {
	log_loc_errors = no
	type = character

	text = {
		localization_key = signature_weapon_attempted_light_slash_accusative
		trigger = {
			OR = {
				var:signature_weapon = flag:sword
				var:signature_weapon = flag:axe
				var:signature_weapon = flag:dagger
			}
		}
		fallback = yes
	}
	text = {
		localization_key = signature_weapon_attempted_light_crush_accusative
		trigger = {
			OR = {
				var:signature_weapon = flag:mace
				var:signature_weapon = flag:hammer
			}
		}
	}
	text = {
		localization_key = signature_weapon_attempted_light_pierce_accusative
		trigger = {
			var:signature_weapon = flag:spear
		}
	}
}


#v1.13.0.1
GetExpensiveDessertInTheFaceInstrumental = {
	log_loc_errors = no
	parent = GetExpensiveDessertInTheFace
	suffix = "_instrumental"
}


ArtifactQualityNarz = {
	log_loc_errors = no
	parent = ArtifactQuality
	suffix = "_narz"
}

ArtifactQualityFMie = {
	log_loc_errors = no
	parent = ArtifactQuality
	suffix = "_fmie"
}



ArtifactArticleWealthMasculine = {
	log_loc_errors = no
	parent = ArtifactArticleWealth
	suffix = "_masc"
}

ArtifactArticleWealthAccusativeFem = {
	log_loc_errors = no
	parent = ArtifactArticleWealth
	suffix = "_acc_fem"
}

#v1.9.0.2
ArtifactFlowerSpeciesGender = {
	log_loc_errors = no
	type = character

	text = {
		trigger = {
			exists = scope:flower_species
			OR = {
				scope:flower_species = flag:flower_type_orchid
				scope:flower_species = flag:flower_type_rose
				scope:flower_species = flag:flower_type_foxglove
				scope:flower_species = flag:flower_type_geranium
				scope:flower_species = flag:flower_type_lily
				scope:flower_species = flag:flower_type_lavender
				scope:flower_species = flag:flower_type_peony
				scope:flower_species = flag:flower_type_delphinium
				scope:flower_species = flag:flower_type_chrysanthemum
				scope:flower_species = flag:flower_type_gardenia
			}
		}
		localization_key = ArtifactFlowerSpecies_z
	}

	text = {
		localization_key = ArtifactFlowerSpecies_m
		fallback = yes
	}

}


PetNamePrecious = { #PetName: lover ones with sexual or romantic terms removed
	log_loc_errors = no
	type = character

	random_valid = yes

	text = {
		localization_key = pet_name_darling_precious
	}

	text = {
		localization_key = pet_name_dearest_precious_precious
	}

	text = {
		localization_key = pet_name_little_pet_precious
	}

	text = {
		localization_key = pet_name_treasure_precious
	}

	text = {
		localization_key = pet_name_sweetness_precious
	}

	text = {
		localization_key = pet_name_rose_precious
	}

	text = {
		localization_key = pet_name_sunshine_precious
	}

	text = {
		localization_key = pet_name_spring_blossom_precious
	}

	text = {
		localization_key = pet_name_petal_precious
	}

	text = {
		localization_key = pet_name_honeycomb_precious
	}
}

#v1.13.0.1 
GetExpensiveMealBier = {
	log_loc_errors = no
	parent = GetExpensiveMeal
	suffix = "_bier"
}

#v1.13.0.1 
GetExpensiveMealDop = {
	log_loc_errors = no
	parent = GetExpensiveMeal
	suffix = "_dop"
}


#v1.6.1 
GetExpensiveMealAltDop = {
	log_loc_errors = no
	parent = GetExpensiveMealAlt
	suffix = "_dop"
}

#v1.6.1 
GetDisabilityIns = {
	log_loc_errors = no
	parent = GetDisability
	suffix = "_ins"
}

#v1.13.0.1
GetExpensiveDessertBier = {
	log_loc_errors = no
	parent = GetExpensiveDessert
	suffix = "_bier"
}

#v1.13.0.1
GetExpensiveDessertNarz = {
	log_loc_errors = no
	parent = GetExpensiveDessert
	suffix = "_narz"
}

#v1.13.0.1
GetExpensiveDessertDop = {
	log_loc_errors = no
	parent = GetExpensiveDessert
	suffix = "_dop"
}

GetVictimOrMy_VictimTrue = { # Used in Hold Court
	log_loc_errors = no
	type = character

	text = {
		trigger = {
			top_liege = { has_character_flag = concerned_exists }
		}
		localization_key = pt_true
	}
	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = pt_false
	}
}


#1.6
GetUnbelieverTermVocative = {
	log_loc_errors = no
	parent = GetUnbelieverTerm
	suffix = "_vocative"
}

#1.13.0.1
FavoriteTreatDemandAccusative = {
	log_loc_errors = no
	parent = FavoriteTreatDemand
	suffix = "_accusative"
}


#1.8.1
TrinketLookAdjectiveMasc = {
	log_loc_errors = no
	parent = TrinketLookAdjective
	suffix = "_masc"
}



#1.8.1
ArtifactBookContentQualityMasc = {
	log_loc_errors = no
	parent = ArtifactBookContentQuality
	suffix = "_masc"
}


PL_ArtifactBaseWeaponTypeNom = {
	log_loc_errors = no
	parent = ArtifactBaseWeaponType
	suffix = "_nom"
}


# v1.13.0.1
RegionalDrinkGenitive = {
	log_loc_errors = no
	parent = RegionalDrink
	suffix = "_genitive"
}

# v1.13.0.1
RegionalDrinkInstrumental = {
	log_loc_errors = no
	parent = RegionalDrink
	suffix = "_instrumental"
}

# v1.13.0.1
GetExpensiveDrink_SingularAccusative = {
	log_loc_errors = no
	parent = GetExpensiveDrink_Singular
	suffix = "_accusative_singular"
}

# v1.13.0.1
GetExpensiveDrink_SingularGenitive = {
	log_loc_errors = no
	parent = GetExpensiveDrink_Singular
	suffix = "_genitive_singular"
}


# v1.13.0.1
GetExpensiveDrinkGenitive = {
	log_loc_errors = no
	parent = GetExpensiveDrink
	suffix = "_genitive"
}

# v1.13.0.1
RegionalAlcoholicDrinkAdj = {
	log_loc_errors = no
	parent = RegionalAlcoholicDrink
	suffix = "_genitive"
}


# 1.10
GetRegionalArcherMAAGenitive = {
	log_loc_errors = no
	parent = GetRegionalArcherMAA
	suffix = "_genitive"
}



# v1.13.0.1
GetRegionalInfantryMAAGenitive = {
	log_loc_errors = no
	parent = GetRegionalInfantryMAA
	suffix = "_genitive"
}


# v1.13.0.1
GetRegionalCavalryMAAGenitive = {
	log_loc_errors = no
	parent = GetRegionalCavalryMAA
	suffix = "_genitive"
}



# 1.13.0.1
GetRegionalSkirmisherMAAGenitive = {
	log_loc_errors = no
	parent = GetRegionalSkirmisherMAA
	suffix = "_genitive"
}


#v1.5 - plik

GeneratePoem_Title_Fragment_Emotion_adj = {
	log_loc_errors = no
	type = character
	random_valid = yes

	# Romance Block
	## comment_container = {
		text = {
			trigger = { var:poetry_theme = flag:romance }
			localization_key = generatepoem_title_love_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:romance }
			localization_key = generatepoem_title_passion_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:romance }
			localization_key = generatepoem_title_tenderness_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:romance }
			localization_key = generatepoem_title_doting_adj
		}
	## }
	# Mourning Block
	## comment_container = {
		text = {
			trigger = { var:poetry_theme = flag:mourning }
			localization_key = generatepoem_title_sadness_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:mourning }
			localization_key = generatepoem_title_sorrow_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:mourning }
			localization_key = generatepoem_title_regret_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:mourning }
			localization_key = generatepoem_title_mourning_adj
		}
	## }
	# Legacy Block
	## comment_container = {
		# No current fragments.
	## }
	# Strife Block
	## comment_container = {
		text = {
			trigger = { var:poetry_theme = flag:strife }
			localization_key = generatepoem_title_rage_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:strife }
			localization_key = generatepoem_title_anger_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:strife }
			localization_key = generatepoem_title_bloodlust_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:strife }
			localization_key = generatepoem_title_wrath_adj
		}
	## }
	# Incompetence Block
	## comment_container = {
		# No current fragments.
	## }
}

GeneratePoem_Title_Fragment_MetaphoricalPlace_adj = {
	log_loc_errors = no
	type = character
	random_valid = yes

	# Romance Block
	## comment_container = {
		text = {
			trigger = { var:poetry_theme = flag:romance }
			localization_key = generatepoem_title_heart_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:romance }
			localization_key = generatepoem_title_head_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:romance }
			localization_key = generatepoem_title_dreams_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:romance }
			localization_key = generatepoem_title_chest_adj
		}
	## }
	# Mourning Block
	## comment_container = {
		# No current fragments.
	## }
	# Legacy Block
	## comment_container = {
		# No current fragments.
	## }
	# Strife Block
	## comment_container = {
		# No current fragments.
	## }
	# Incompetence Block
	## comment_container = {
		# No current fragments.
	## }
}

GeneratePoem_Title_Fragment_Season_adj = {
	log_loc_errors = no
	type = character
	random_valid = yes

	text = { localization_key = generatepoem_title_spring_adj }
	text = { localization_key = generatepoem_title_summer_adj }
	text = { localization_key = generatepoem_title_autumn_adj }
	text = { localization_key = generatepoem_title_winter_adj }
}

GeneratePoem_Title_Fragment_PatheticFallacy_adj = {
	log_loc_errors = no
	type = character
	random_valid = yes

	# Romance Block
	## comment_container = {
		# No current fragments.
	## }
	# Mourning Block
	## comment_container = {
		text = {
			trigger = { var:poetry_theme = flag:mourning }
			localization_key = generatepoem_title_windswept_woods_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:mourning }
			localization_key = generatepoem_title_rainy_nights_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:mourning }
			localization_key = generatepoem_title_still_mornings_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:mourning }
			localization_key = generatepoem_title_lonely_graves_adj
		}
	## }
	# Legacy Block
	## comment_container = {
		# No current fragments.
	## }
	# Strife Block
	## comment_container = {
		# No current fragments.
	## }
	# Incompetence Block
	## comment_container = {
		# No current fragments.
	## }
}

### 1.4.4
GeneratePoem_Title_Fragment_Sobriquet_adj = {
	log_loc_errors = no
	type = character
	random_valid = yes

	# Romance Block
	## comment_container = {
		# No current fragments.
	## }
	# Mourning Block
	## comment_container = {
		# No current fragments.
	## }
	# Legacy Block
	## comment_container = {
		# No current fragments.
	## }
	# Strife Block
	## comment_container = {
		text = {
			trigger = { var:poetry_theme = flag:strife }
			localization_key = generatepoem_title_sword_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:strife }
			localization_key = generatepoem_title_spear_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:strife }
			localization_key = generatepoem_title_axe_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:strife }
			localization_key = generatepoem_title_lance_adj
		}
		text = {
			trigger = { var:poetry_theme = flag:strife }
			localization_key = generatepoem_title_mace_adj
		}
	## }
	# Incompetence Block
	## comment_container = {
		# No current fragments.
	## }
}




PL_GetAnimalMale = {
	log_loc_errors = no
	type = all
	random_valid = yes

	text = {
		trigger = {
			OR = {
				var:animal_type ?= flag:stag
				var:animal_type ?= flag:hart
				#var:animal_type ?= flag:roe
				var:animal_type ?= flag:reindeer
				var:animal_type ?= flag:elk
				#var:animal_type ?= flag:antelope
				#var:animal_type ?= flag:gazelle
				#var:animal_type ?= flag:saiga
			}
		}
		localization_key = hunt_animal_male_stag
	}

	text = {
		trigger = {
			OR = {
				var:animal_type ?= flag:roe
			}
		}
		localization_key = pl_hunt_animal_male_roe
	}

	text = {
		trigger = {
			OR = {
				var:animal_type ?= flag:fox
				#var:animal_type ?= flag:wolf
				#var:animal_type ?= flag:hyena
			}
		}
		localization_key = hunt_animal_male_dog
	}

	text = {
		trigger = {
			OR = {
				var:animal_type ?= flag:wolf
			}
		}
		localization_key = pl_hunt_animal_male_wolf
	}

	text = {
		trigger = { var:animal_type ?= flag:hare }
		localization_key = hunt_animal_male_jack
	}

	text = {
		trigger = {
			OR = {
				#var:animal_type ?= flag:elk
				var:animal_type ?= flag:bison
				var:animal_type ?= flag:aurochs
			}
		}
		localization_key = hunt_animal_male_bull
	}

	text = {
		trigger = {
			OR = {
				var:animal_type ?= flag:boar
				#var:animal_type ?= flag:bear
			}
		}
		localization_key = pl_animal_type_male_boar
	}

	# text = {
	# 	trigger = { var:animal_type ?= flag:lion }
	# 	localization_key = pl_animal_type_male_lion
	# }

	# text = {
	# 	trigger = { var:animal_type ?= flag:tiger }
	# 	localization_key = pl_animal_type_male_tiger
	# }

	# text = {
	# 	trigger = { var:animal_type ?= flag:leopard }
	# 	localization_key = pl_animal_type_male_leopard
	# }

	# text = {
	# 	trigger = { var:animal_type ?= flag:unicorn }
	# 	localization_key = pl_horse_gender_male_stallion
	# }

	text = {
		trigger = { always = no }
		localization_key = hunt_animal_male_fallback
		fallback = yes
	}
}

PL_GetAnimalFemale = {
	log_loc_errors = no
	type = all
	random_valid = yes

	text = {
		trigger = {
			OR = {
				var:animal_type ?= flag:stag
				#var:animal_type ?= flag:roe
				#var:animal_type ?= flag:antelope
				#var:animal_type ?= flag:gazelle
			}
		}
		localization_key = hunt_animal_female_doe
	}

	text = {
		trigger = {
			OR = {
				var:animal_type ?= flag:roe
			}
		}
		localization_key = pl_hunt_animal_female_roe
	}

	text = {
		trigger = { var:animal_type ?= flag:hart }
		localization_key = hunt_animal_female_hind
	}

	text = {
		trigger = {
			OR = {
				var:animal_type ?= flag:wolf
				#var:animal_type ?= flag:hyena
			}
		}
		localization_key = pl_hunt_animal_female_wolf
	}

	text = {
		trigger = { var:animal_type ?= flag:fox }
		localization_key = hunt_animal_female_vixen
	}

	text = {
		trigger = { var:animal_type ?= flag:hare }
		localization_key = hunt_animal_female_jill
	}

	text = {
		trigger = {
			OR = {
				#var:animal_type ?= flag:elk
				var:animal_type ?= flag:bison
				#var:animal_type ?= flag:aurochs
			}
		}
		localization_key = hunt_animal_female_cow
	}

	text = {
		trigger = {
			OR = {
				var:animal_type ?= flag:elk
			}
		}
		localization_key = pl_hunt_animal_female_elk
	}

	text = {
		trigger = {
			OR = {
				var:animal_type ?= flag:boar
				#var:animal_type ?= flag:bear
			}
		}
		localization_key = pl_animal_type_female_boar
	}

	# text = {
	# 	trigger = { var:animal_type ?= flag:lion }
	# 	localization_key = hunt_animal_female_lioness
	# }

	# text = {
	# 	trigger = { var:animal_type ?= flag:tiger }
	# 	localization_key = hunt_animal_female_tigress
	# }

	# text = {
	# 	trigger = { var:animal_type ?= flag:leopard }
	# 	localization_key = hunt_animal_female_leopardess
	# }

	# text = {
	# 	trigger = { var:animal_type ?= flag:unicorn }
	# 	localization_key = horse_gender_mare
	# }

	text = {
		trigger = { always = no }
		localization_key = hunt_animal_female_fallback
	}
}


# v1.13.0.1
PL_GetTerrainTypeLocative = {
	log_loc_errors = no
	type = province
	parent = GetTerrainType
	suffix = _pl_locative
}

# v1.13.0.1
PL_GetTerrainTypeGenitive = {
	log_loc_errors = no
	type = province
	parent = GetTerrainType
	suffix = _pl_genitive
}

# v1.13.0.1
PL_GetTerrainTypeArticle = {
	log_loc_errors = no
	type = province
	parent = GetTerrainType
	suffix = _pl_art
}

# v1.13.0.1
PL_GetTerrainTypePluralLocative = {
	log_loc_errors = no
	type = province
	parent = GetTerrainType
	suffix = _plural_pl_locative
}

# v1.13.0.1
PL_GetTerrainTypePluralGenitive = {
	log_loc_errors = no
	type = province
	parent = GetTerrainType
	suffix = _plural_pl_genitive
}


#1.11.5
PL_GetRandomRegionalWoodGenitive = {
	log_loc_errors = no
	parent = GetRandomRegionalWood
	suffix = _pl_genitive
}



#1.12.5
PL_RegionalEdibleMeatGenitive = {
	log_loc_errors = no
	parent = RegionalEdibleMeat
	suffix = _gen
}

#1.12.5
PL_RegionalEdibleAnimalGenitive = {
	log_loc_errors = no
	parent = RegionalEdibleAnimal
	suffix = _gen
}


#1.12.5
PL_RegionalRootVegetableGenitive = {
	log_loc_errors = no
	parent = RegionalRootVegetable
	suffix = _gen
}

# 1.13.0.3
PL_GetRealmOrDomicileConceptYourLocative = {
	log_loc_errors = no
	parent = GetRealmOrDomicileConcept
	suffix = "_pl_y_locative"
}

 # 1.13.0.3
PL_GetCourtOrOfficerPositionConceptPlural = {
	log_loc_errors = no
	parent = GetCourtOrOfficerPositionConceptPlural
	suffix = "_pl"
}