####################################
#   FRENCH CUSTOM LOCALISATION     #
#      By Xavier Zimmermann        #
####################################

###################################
## I. PERSONNAGES HOMME OU FEMME ##
###################################

##################
## TERMINAISONS ##
##################
# FR_E (blessé\blessée ; Pluriel ; Sans espace avant)
# FR_EOpp (Pluriel ; Sans espace avant)
# FR_EauElle (beau\belle, jumeau\jumelle ; Sans espace avant)
# FR_EauxElles (beaux\belles ; Pluriel ; Sans espace avant)
# FR_EEsse (traître\traîtresse ; Pluriel ; Sans espace avant)
# FR_EEtte (ce\cette ; Sans espace avant)
# FR_ErEre (Pluriel ; Sans espace avant)
# FR_Eresse (devin\devineresse ; Pluriel ; Sans espace avant)
# FR_EteEtesse (poète\poétesse ; Pluriel ; Sans espace avant)
# FR_EtEte (secret\secrète, inquiet\inquiète ; Pluriel ; Sans espace avant)
# FR_EtEtte (cet\cette; muet\muette ; Pluriel ; Sans espace avant)
# FR_EurEresse (chasseur\chasseresse, vengeur\vengeresse ; Pluriel ; Sans espace avant)
# FR_EurRice (Pluriel ; Sans espace avant)
# FR_FVe (lascif\lascive ; Pluriel ; Sans espace avant)
# FR_IeuxIeille (vieux\vieille ; Sans espace avant)
# FR_LLle (tel\telle ; Pluriel ; Sans espace avant)
# FR_NNne (poltron\poltronne ; Pluriel ; Sans espace avant)
# FR_OnA (mon\ma, son\sa ; Sans espace avant)
# FR_OnAOpp (Sans espace avant)
# FR_OuOlle (fou\folle, mou\molle ; Pluriel ; Sans espace avant)
# FR_RSe (entremetteur\entremetteuse ; Pluriel ; Sans espace avant)
# FR_Hesse (duc\duchesse ; Pluriel ; Sans espace avant)
# FR_SSse (gros\grosse, las\lasse ; Sans espace avant)
# FR_TTte (sot\sotte ; Pluriel ; Sans espace avant)
# FR_XCe (doux\douce ; Sans espace avant)
# FR_XSe (furieux\furieuse ; Sans espace avant)
# FR_XSeOpp (Sans espace avant)
# FR_XSse (faux\fausse, roux\rousse ; Sans espace avant)
# FR_He (franc\franche ; Pluriel ; Sans espace avant)
# FR_EfEve (bref\brève ; Pluriel ; Sans espace avant)
# FR_Te (favori\favorite ; Sans espace avant)
# FR_AuxAles (vassaux\vassales, égaux\égales ; Pluriel ; Sans espace avant)
# FR_Es (assis\assises ; Pluriel ; Sans espace avant)
# FR_SEs (amis\amies ; Pluriel ; Sans espace avant)
# FR_EuxElles (eux\elles ; Pluriel)
# FR_IlsElles (ils\elles ; Pluriel)
# FR_STes (tous\toutes ; Pluriel ; Sans espace avant)
# FR_XSes (pieux\pieuses ; Pluriel ; Sans espace avant)
# FR_AinIne (copain\copine ; Sans espace avant)
# FR_OnE (compagnon\compagne ; Singulier ; Sans espace avant ; LotR)
# FR_OnEs (compagnon\compagne ; Singulier ; Sans espace avant ; LotR)

##################
#### ARTICLES ####
##################
# FR_AuAla
# FR_DuDela
# FR_LeLa
# FR_LeLaOpp
# FR_CeluiCelle
# FR_IlElle
# FR_LuiElle

# FR_EluiElle (e lui\’elle ; Sans espace avant)
# FR_SilSielle (s’il\si elle)
# FR_SilsSielles (s’ils\si elles ; Pluriel)
# FR_LLa (l’\la ; Sans espace après)
# FR_AlAla (à\à la ; Sans espace après)
# FR_DDe (d’\de ; Sans espace après)

##################
###### NOMS ######
##################
# FR_MonseigneurMadame
# FR_SeigneurDame (Pluriel)
# FR_SieurDame (Pluriel)
# FR_EpouxEpouse
# FR_EpouxEpouseOpp
# FR_PaternelMaternel
# FR_GarconFille (Pluriel)
# FR_ServiteurServante (Pluriel)

###########################################
# II. REMPLACEMENT DE COMMANDES ANGLAISES #
###########################################
# FR_RelationToMe_OnA - mon\ma + RelationToMe
# FR_RelationToMe_Le - le\la + RelationToMe
# FR_RelationToMeShort_OnA - mon\ma + RelationToMeShort
# FR_RelationToMeShort_Le - le\la + RelationToMeShort
# FR_Du_signature_weapon - signature_weapon
# FR_OnA_signature_weapon - signature_weapon
# FR_Un_signature_weapon - signature_weapon
# FR_CompositionType_lela - CompositionType
# FR_Le_PointOfRidicule - le pour PointOfRidicule
# FR_du_CharacterIntroductionSupportNoComma pour CharacterIntroductionSupportNoComma
# FR_du_MyCharacterIntroductionNoComma pour MyCharacterIntroductionNoComma
# FR_du_YourCharacterIntroductionNoComma pour YourCharacterIntroductionNoComma
# FR_du_HerHisCharacterIntroductionNoComma pour HerHisCharacterIntroductionNoComma
# FR_du_MyCharacterIntroduction pour MyCharacterIntroduction
# FR_du_YourCharacterIntroduction pour YourCharacterIntroduction
# FR_du_HerHisCharacterIntroduction pour HerHisCharacterIntroduction
# FR_au_CharacterIntroductionSupportNoComma pour CharacterIntroductionSupportNoComma
# FR_au_MyCharacterIntroductionNoComma pour MyCharacterIntroductionNoComma
# FR_au_YourCharacterIntroductionNoComma pour YourCharacterIntroductionNoComma
# FR_au_HerHisCharacterIntroductionNoComma pour HerHisCharacterIntroductionNoComma
# FR_au_MyCharacterIntroduction pour MyCharacterIntroduction
# FR_au_YourCharacterIntroduction pour YourCharacterIntroduction
# FR_au_HerHisCharacterIntroduction pour HerHisCharacterIntroduction
# FR_education_focus_Du pour education_focus
# FR_education_focus_child_Du pour education_focus_child
# FR_quirk_neg_adjective_Char pour quirk_neg_adjective
# FR_TerrainTypeProvince_Plural pour TerrainTypeProvince
# FR_GetDisability_Adj_Char pour GetDisability
# FR_GetFaithGrandTemple_Au pour GetFaithGrandTemple
# FR_GetYoungMiddleAgedOld_Un pour GetYoungMiddleAgedOld
# FR_get_hold_court_8100_parent_Son pour get_hold_court_8100_parent
# FR_GetUnbelieverTerm_Plural pour GetUnbelieverTerm
# FR_GetUnbelieverTerm_Gender pour GetUnbelieverTerm
# FR_GetCrime_Nickname pour GetCrime
# FR_GetInspirationTypeVerb_Inf pour GetInspirationTypeVerb
# FR_au_BG_GameType pour BG_GameType
# FR_de_BG_GameType pour BG_GameType
# FR_CouncilPosition_Le pour CouncilPosition
# FR_GetRandomWonContest_Le pour GetRandomWonContest

# FR_FaithGenderedAdj - GetFaith.GetAdjective\GetFaith.GetAdherentName (scope: character)
# FR_LocalAnimal_e - "e" du féminin pour LocalAnimal
# FR_LocalAnimal_d - de\d’ pour LocalAnimal (Sans espace après)
# FR_LocalAnimal_he - "he" du féminin pour LocalAnimal (blanc/blanche)
# FR_LocalAnimal_le - devant LocalAnimal (Sans espace après)
# FR_Scheme_FullAction - GetActionName - SCHEME_FULL_ACTION_NAME
# FR_CatStory_e
# FR_CatStory_le
# FR_DogStory_e
# FR_DogStory_le

##################################
# III. ARTICLES DEVANT COMMANDES #
##################################
# - Char:    commande de base
# - Char_L:  affiche "le/la" pour "sans terre"
# - Char_U:  affiche "vous" quand perso est le joueur
# - Char_P:  affiche Prince
# - Char_Pi: affiche "le/la" pour les titres comme prince, seulement si le perso est marié ou avec terre

# FR_le_Char_Pi devant GetTitledFirstName, GetShortUINameNotMe (Sans espace après)
# FR_du_Char_Pi
# FR_au_Char_Pi

# FR_le_Char_P devant GetFullName, GetFullNameNicknamed, GetUINameNotMe (Sans espace après)
# FR_du_Char_P
# FR_au_Char_P

# FR_le_Char_U_P devant GetUIName (Sans espace après)
# FR_du_Char_U_P
# FR_au_Char_U_P

# FR_le_Char_U_Pi devant GetShortUIName (Sans espace après)
# FR_du_Char_U_Pi
# FR_au_Char_U_Pi

# FR_le_Char_L devant GetTitleTierName, GetTitleAsName (Sans espace après)
# FR_du_Char_L
# FR_au_Char_L

# FR_le_Char devant GetName (Sans espace après)
# FR_du_Char
# FR_au_Char

# FR_only_de_HouseOfWorshipPlural devant HouseOfWorshipPlural (Sans espace après)
# FR_GetInspirationOwnerType_OnA devant GetInspirationOwnerType (Sans espace avant ; Sans espace après)
# FR_GetInspirationTypeRoom_Le devant GetInspirationTypeRoom (Sans espace après)
# FR_GetInspirationTypeRoom_Du devant GetInspirationTypeRoom (Sans espace après)
# FR_GetInspirationTypeRoom_OnA devant GetInspirationTypeRoom (Sans espace avant ; Sans espace après)
# FR_InspirationAdventureDestination_En devant InspirationAdventureDestination (Sans espace apres)
# FR_GetInspirationMaterialType_Du devant GetInspirationMaterialType (Sans espace apres)
# FR_GetInspirationMaterialType_OnA devant GetInspirationMaterialType (Sans espace avant ; Sans espace apres)
# FR_GetInspirationTypeObject_OnA devant GetInspirationTypeObject (Sans espace avant ; Sans espace apres)
# FR_GetInspirationTypeObject_Le devant GetInspirationTypeObject (Sans espace apres)
# FR_InspirationSmithBaseType_OnA devant InspirationSmithBaseType (Sans espace avant ; Sans espace apres)
# FR_InspirationSmithBaseType_Le devant InspirationSmithBaseType (Sans espace apres)
# FR_Artifact_OnA devant une commande d'artefact (Avec espace apres)
# FR_Le_ArtifactType devant le type d'artefact (Sans espace apres)
# FR_E_ArtifactType pour le type d'artefact
# FR_Le_ActivityType devant le type d'activité (Sans espace apres)
# FR_On_ActivityType devant le type d'activité (Sans espace apres)
# FR_E_ActivityType pour le type d'activité

##################################################################
##################################################################

# log_loc_errors = no # peut être ajouté pour masquer les erreurs

FR_gender_template = { # all basic gendered character custom commands are based on it
	type = character
	log_loc_errors = no
	text = {
		trigger = {
			trigger_if = { # one character (Custom)
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = { # two characters (Custom2)
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_female_
	}
	text = {
		localization_key = CustomLoc_FR_male_
		fallback = yes
	}
}

FR_AlAla = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = AlAla
}
FR_AuAla = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = AuAla
}
FR_AuxAles = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = AuxAles
}
FR_CeluiCelle = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = CeluiCelle
}
FR_DDe = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = DDe
}
FR_DuDela = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = DuDela
}
FR_E = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = E
}
FR_EauElle = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = EauElle
}
FR_EauxElles = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = EauxElles
}
FR_EEsse = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = EEsse
}
FR_EEtte = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = EEtte
}
FR_EfEve = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = EfEve
}
FR_EluiElle = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = EluiElle
}
FR_EOpp = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = EOpp
}
FR_EpouxEpouse = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = EpouxEpouse
}
FR_EpouxEpouseOpp = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = EpouxEpouseOpp
}
FR_ErEre = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = ErEre
}
FR_Eresse = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = Eresse
}
FR_Es = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = Es
}
FR_SEs = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = SEs
}
FR_EteEtesse = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = EteEtesse
}
FR_EtEte = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = EtEte
}
FR_EtEtte = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = EtEtte
}
FR_EurEresse = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = EurEresse
}
FR_EurRice = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = EurRice
}
FR_EuxElles = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = EuxElles
}
FR_FVe = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = FVe
}
FR_GarconFille = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = GarconFille
}
FR_He = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = He
}
FR_Hesse = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = Hesse
}
FR_IeuxIeille = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = IeuxIeille
}
FR_IlElle = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = IlElle
}
FR_IlsElles = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = IlsElles
}
FR_LeLa = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = LeLa
}
FR_LeLaOpp = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = LeLaOpp
}
FR_LLa = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = LLa
}
FR_LLle = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = LLle
}
FR_LuiElle = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = LuiElle
}
FR_MonseigneurMadame = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = MonseigneurMadame
}
FR_NNne = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = NNne
}
FR_OnA = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = OnA
}
FR_OnAOpp = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = OnAOpp
}
FR_OuOlle = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = OuOlle
}
FR_PaternelMaternel = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = PaternelMaternel
}
FR_RSe = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = RSe
}
FR_SeigneurDame = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = SeigneurDame
}
FR_ServiteurServante = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = ServiteurServante
}
FR_SieurDame = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = SieurDame
}
FR_SilSielle = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = SilSielle
}
FR_SilsSielles = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = SilsSielles
}
FR_SSse = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = SSse
}
FR_STes = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = STes
}
FR_XSes = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = XSes
}
FR_Te = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = Te
}
FR_TTte = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = TTte
}
FR_XCe = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = XCe
}
FR_XSe = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = XSe
}
FR_XSeOpp = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = XSeOpp
}
FR_XSse = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = XSse
}
FR_AinIne = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = AinIne
}
FR_LequelLaquelle = { 
	log_loc_errors = no
	parent = FR_gender_template
	suffix = LequelLaquelle
}
#############################################
#############################################
FR_RelationToMe_OnA = { 
	log_loc_errors = no
	parent = RelationToMe
	suffix = _FR_OnA
}

FR_RelationToMe_Le = { 
	log_loc_errors = no
	parent = RelationToMe
	suffix = _FR_Le
}

FR_RelationToMeShort_OnA = { 
	log_loc_errors = no
	parent = RelationToMeShort
	suffix = _FR_OnA
}

FR_RelationToMeShort_Le = { 
	log_loc_errors = no
	parent = RelationToMeShort
	suffix = _FR_Le
}

FR_Du_signature_weapon = { 
	log_loc_errors = no
	parent = signature_weapon
	suffix = _FR_Du
}

FR_OnA_signature_weapon = { 
	log_loc_errors = no
	parent = signature_weapon
	suffix = _FR_OnA
}

FR_Un_signature_weapon = { 
	log_loc_errors = no
	parent = signature_weapon
	suffix = _FR_Un
}

FR_CompositionType_lela = { 
	log_loc_errors = no
	parent = CompositionType
	suffix = _FR_Le
}

FR_Le_PointOfRidicule = { 
	log_loc_errors = no
	parent = PointOfRidicule
	suffix = _FR_Le
}

FR_du_CharacterIntroductionSupportNoComma = { 
	log_loc_errors = no
	parent = CharacterIntroductionSupportNoComma
	suffix = _FR_Du
}

FR_du_MyCharacterIntroductionNoComma = { 
	log_loc_errors = no
	parent = MyCharacterIntroductionNoComma
	suffix = _FR_Du
}

FR_du_YourCharacterIntroductionNoComma = { 
	log_loc_errors = no
	parent = YourCharacterIntroductionNoComma
	suffix = _FR_Du
}

FR_du_HerHisCharacterIntroductionNoComma = { 
	log_loc_errors = no
	parent = HerHisCharacterIntroductionNoComma
	suffix = _FR_Du
}

FR_du_MyCharacterIntroduction = { 
	log_loc_errors = no
	parent = MyCharacterIntroduction
	suffix = _FR_Du
}

FR_du_YourCharacterIntroduction = { 
	log_loc_errors = no
	parent = YourCharacterIntroduction
	suffix = _FR_Du
}

FR_du_HerHisCharacterIntroduction = { 
	log_loc_errors = no
	parent = HerHisCharacterIntroduction
	suffix = _FR_Du
}

FR_au_CharacterIntroductionSupportNoComma = { 
	log_loc_errors = no
	parent = CharacterIntroductionSupportNoComma
	suffix = _FR_Au
}

FR_au_MyCharacterIntroductionNoComma = { 
	log_loc_errors = no
	parent = MyCharacterIntroductionNoComma
	suffix = _FR_Au
}

FR_au_YourCharacterIntroductionNoComma = { 
	log_loc_errors = no
	parent = YourCharacterIntroductionNoComma
	suffix = _FR_Au
}

FR_au_HerHisCharacterIntroductionNoComma = { 
	log_loc_errors = no
	parent = HerHisCharacterIntroductionNoComma
	suffix = _FR_Au
}

FR_au_MyCharacterIntroduction = { 
	log_loc_errors = no
	parent = MyCharacterIntroduction
	suffix = _FR_Au
}

FR_au_YourCharacterIntroduction = { 
	log_loc_errors = no
	parent = YourCharacterIntroduction
	suffix = _FR_Au
}

FR_au_HerHisCharacterIntroduction = { 
	log_loc_errors = no
	parent = HerHisCharacterIntroduction
	suffix = _FR_Au
}

FR_education_focus_Du = { 
	log_loc_errors = no
	parent = education_focus
	suffix = _FR_Du
}

FR_education_focus_child_Du = { 
	log_loc_errors = no
	parent = education_focus_child
	suffix = _FR_Du
}

FR_quirk_neg_adjective_Char = { 
	log_loc_errors = no
	parent = quirk_neg_adjective
	suffix = _FR_Char
}

FR_TerrainTypeProvince_Plural = { 
	log_loc_errors = no
	parent = TerrainTypeProvince
	suffix = _FR_Plural
}

FR_GetDisability_Adj_Char = { 
	log_loc_errors = no
	parent = GetDisability
	suffix = _FR_Adj_Char
}

FR_GetFaithGrandTemple_Au = { 
	log_loc_errors = no
	parent = GetFaithGrandTemple
	suffix = _FR_au
}

FR_GetYoungMiddleAgedOld_Un = { 
	log_loc_errors = no
	parent = GetYoungMiddleAgedOld
	suffix = _FR_un
}

FR_get_hold_court_8100_parent_Son = { 
	log_loc_errors = no
	parent = get_hold_court_8100_parent
	suffix = _FR_son
}

FR_GetUnbelieverTerm_Plural = { 
	log_loc_errors = no
	parent = GetUnbelieverTerm
	suffix = _FR_Plural
}

FR_GetUnbelieverTerm_Gender = { 
	log_loc_errors = no
	parent = GetUnbelieverTerm
	suffix = _FR_Gender
}

FR_GetCrime_Nickname = { 
	log_loc_errors = no
	parent = GetCrime
	suffix = _FR_nickname
}

FR_GetMAAType1_On = { 
	log_loc_errors = no
	parent = GetMAAType1
	suffix = _FR_On
}

FR_GetMAAType2_On = { 
	log_loc_errors = no
	parent = GetMAAType2
	suffix = _FR_On
}

FR_ThisArtifactType_Le = { 
	log_loc_errors = no
	parent = ThisArtifactType
	suffix = _FR_Le
}

FR_GetInspirationTypeVerb_Inf = { 
	log_loc_errors = no
	parent = GetInspirationTypeVerb
	suffix = _FR_Inf
}

FR_GetTutorEducation_Du = { 
	log_loc_errors = no
	parent = GetTutorEducation
	suffix = _FR_Du
}

FR_get_region_flower_type_plural_Fix = { 
	log_loc_errors = no
	parent = get_region_flower_type_plural
	suffix = _FR_Fix
}

FR_au_BG_GameType = { 
	log_loc_errors = no
	parent = BG_GameType
	suffix = _FR_Au
}

FR_de_BG_GameType = { 
	log_loc_errors = no
	parent = BG_GameType
	suffix = _FR_De
}

FR_au_BG_GameType_Generic = { 
	log_loc_errors = no
	parent = BG_GameType_Generic
	suffix = _FR_Au
}

FR_de_BG_GameType_Generic = { 
	log_loc_errors = no
	parent = BG_GameType_Generic
	suffix = _FR_De
}

FR_CouncilPosition_Le = { 
	log_loc_errors = no
	parent = CouncilPosition
	suffix = _FR_Le
}

FR_au_ContestBoardGameType = { 
	log_loc_errors = no
	parent = ContestBoardGameType
	suffix = _FR_Au
}

FR_de_ContestBoardGameType = { 
	log_loc_errors = no
	parent = ContestBoardGameType
	suffix = _FR_De
}

FR_GetRandomWonContest_Le = { 
	log_loc_errors = no
	parent = GetRandomWonContest
	suffix = _FR_Le
}

FR_get_region_root_vegetable_Un = { 
	log_loc_errors = no
	parent = get_region_root_vegetable
	suffix = _FR_Un
}

#############################################
#############################################
FR_FaithGenderedAdj = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
				}
				this = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_FaithGenderedAdj_female
	}
	text = {
		localization_key = CustomLoc_FR_FaithGenderedAdj_male
		fallback = yes
	}
}

FR_LocalAnimal_e = {
	type = character
	log_loc_errors = no

	text = {
		localization_key = CustomLoc_FR_female_E
		trigger = {
			var:animal_type = flag:unicorn
		}
	}
	text = {
		localization_key = CustomLoc_FR_empty
		fallback = yes
	}
}

FR_LocalAnimal_d = {
	type = character
	log_loc_errors = no

	text = {
		localization_key = CustomLoc_FR_d
		trigger = {
			var:animal_type = flag:bear
		}
	}
	text = {
		localization_key = CustomLoc_FR_de
		fallback = yes
	}
}

FR_LocalAnimal_he = {
	type = character
	log_loc_errors = no

	text = {
		localization_key = CustomLoc_FR_female_He
		trigger = {
			var:animal_type = flag:unicorn
		}
	}
	text = {
		localization_key = CustomLoc_FR_empty
		fallback = yes
	}
}

FR_LocalAnimal_le = {
	type = character
	log_loc_errors = no

	text = {
		localization_key = CustomLoc_FR_l
		trigger = {
			var:animal_type = flag:bear
		}
	}
	text = {
		localization_key = CustomLoc_FR_la
		trigger = {
			var:animal_type = flag:unicorn
		}
	}
	text = {
		localization_key = CustomLoc_FR_le
		fallback = yes
	}
}

FR_le_Char_L = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = {
			holds_landed_title = no
			is_female = no
		}
		localization_key = CustomLoc_FR_le
	}
	text = {
		trigger = {
			holds_landed_title = no
			is_female = yes
		}
		localization_key = CustomLoc_FR_la
	}
	text = {
		localization_key = CustomLoc_FR_le_Char
		fallback = yes
	}
}

FR_le_Char_U_Pi = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = {
			is_local_player = yes
		}
		localization_key = CustomLoc_FR_empty
	}
	text = {
		trigger = {
			OR = {
				any_spouse = { holds_landed_title = yes }
				holds_landed_title = yes
			}
		}
		localization_key = CustomLoc_FR_le_Char_P
	}
	text = {
		localization_key = CustomLoc_FR_le_Char
		fallback = yes
	}
}

FR_le_Char_U_P = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = {
			is_local_player = yes
		}
		localization_key = CustomLoc_FR_empty
	}
	text = {
		localization_key = CustomLoc_FR_le_Char_P
		fallback = yes
	}
}

FR_le_Char_Pi = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = {
			OR = {
				any_spouse = { holds_landed_title = yes }
				holds_landed_title = yes
			}
		}
		localization_key = CustomLoc_FR_le_Char_P
	}
	text = {
		localization_key = CustomLoc_FR_le_Char
		fallback = yes
	}
}

FR_le_Char_P = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = { # queen_mother (Reine mère)
			is_female = yes
			government_has_flag = government_is_feudal
			any_child = { primary_title.tier = tier_kingdom }
			primary_title.tier < tier_kingdom
		}
		localization_key = CustomLoc_FR_la
	}
	text = {
		trigger = {
			OR = {
				AND = { # prince_male_iberian_group (Infant), prince_female_iberian_group (Infante)
					primary_title.tier < tier_kingdom
					# culture = { has_cultural_pillar = heritage_iberian } #LotR
					government_has_flag = government_is_feudal
					any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
				}
				AND = { # empress_mother (Impératrice mère)
					is_female = yes
					government_has_flag = government_is_feudal
					any_child = { primary_title.tier = tier_empire }
					primary_title.tier < tier_empire
				}
			}
		}
		localization_key = CustomLoc_FR_l
	}
	text = {
		trigger = { # Prince
			is_female = no
			primary_title.tier < tier_kingdom
			OR = {
				government_has_flag = government_is_feudal
				government_has_flag = government_is_clan
			}
			any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
		}
		localization_key = CustomLoc_FR_le
	}
	text = {
		trigger = { # Princesse
			is_female = yes
			primary_title.tier < tier_kingdom
			OR = {
				government_has_flag = government_is_feudal
				government_has_flag = government_is_clan
			}
			any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
		}
		localization_key = CustomLoc_FR_la
	}
	text = {
		localization_key = CustomLoc_FR_le_Char
		fallback = yes
	}
}

FR_le_Char = { 
	type = character
	log_loc_errors = no
	text = { # chef de foi
		trigger = {
			any_held_title = { is_head_of_faith = yes }
		}
		localization_key = CustomLoc_FR_le
	}
	#text = {
	#	trigger = {
	#		OR = {
	#			#AND = { # emperor (Empereur), emperor_female (Impératrice)
	#			#	highest_held_title_tier = tier_empire
	#			#	NOT = {
	#			#		culture = { has_cultural_pillar = heritage_central_germanic } # Kaiser
	#			#		culture = { has_name_list = name_list_greek } # Basileus
	#			#		AND = { # emperor_feudal_male_altaic_group (Khagan)
	#			#			OR = {
	#			#				government_has_flag = government_is_feudal
	#			#				government_has_flag = government_is_clan
	#			#				government_has_flag = government_is_tribal
	#			#			}
	#			#			OR = {
	#			#				culture = { has_cultural_pillar = heritage_mongolic }
	#			#				culture = { has_cultural_pillar = heritage_turkic }
	#			#			}
	#			#		}
	#			#	}
	#			#}
	#			#AND = { # duke_theocracy_male_paganism_religion (Archiprêtre), duke_theocracy_female_paganism_religion (Archiprêtresse)
	#			#	highest_held_title_tier = tier_duchy
	#			#	government_has_flag = government_is_theocracy
	#			#	OR = {
	#			#		religion = religion:paganism_religion
	#			#		religion = religion:taoism_religion
	#			#		religion = religion:bon_religion
	#			#		religion = religion:germanic_religion
	#			#		religion = religion:tengrism_religion
	#			#		religion = religion:west_african_religion
	#			#		religion = religion:west_african_bori_religion
	#			#		religion = religion:west_african_roog_religion
	#			#		religion = religion:zunism_religion
	#			#	}
	#			#}
	#			#AND = { # king_feudal_male_uyghur (Idiqut), king_feudal_female_uyghur (Idiqut)
	#			#	highest_held_title_tier = tier_kingdom
	#			#	culture = { has_name_list = name_list_uyghur }
	#			#	OR = {
	#			#		government_has_flag = government_is_feudal
	#			#		government_has_flag = government_is_clan
	#			#		government_has_flag = government_is_tribal
	#			#	}
	#			#}
	#			#AND = { # duke_feudal_male_turkish (Atabeg), duke_feudal_female_turkish (Atabegum)
	#			#	highest_held_title_tier = tier_duchy
	#			#	OR = {
	#			#		AND = { 
	#			#			exists = top_liege
	#			#			top_liege = {
	#			#				OR = {
	#			#					government_has_flag = government_is_feudal
	#			#					government_has_flag = government_is_clan
	#			#				}
	#			#				culture = { has_name_list = name_list_turkish }
	#			#			}
	#			#		}
	#			#		AND = {
	#			#			NOT = { exists = top_liege }
	#			#			OR = {
	#			#				government_has_flag = government_is_feudal
	#			#				government_has_flag = government_is_clan
	#			#			}
	#			#			culture = { has_name_list = name_list_turkish }
	#			#		}
	#			#	}
	#			#}
	#			#AND = { # duke_feudal_male_sogdian (Ikhshide)
	#			#	is_female = no
	#			#	culture = { has_name_list = name_list_sogdian }
	#			#	highest_held_title_tier = tier_duchy
	#			#	OR = {
	#			#		government_has_flag = government_is_feudal
	#			#		government_has_flag = government_is_clan
	#			#	}
	#			#}
	#			#AND = {
	#			#	trigger_if = {
	#			#		limit = { 
	#			#			exists = top_liege
	#			#		}
	#			#		top_liege = {
	#			#			OR = {
	#			#				culture = { has_cultural_pillar = heritage_berber } # duke_feudal_male_berber_group (Émir), duke_feudal_female_berber_group (Émira)
	#			#				culture = { has_name_list = name_list_beja } # duke_feudal_male_beja (Émir), duke_feudal_female_beja (Émira)
	#			#			}
	#			#			OR = {
	#			#				government_has_flag = government_is_feudal
	#			#				government_has_flag = government_is_clan
	#			#				government_has_flag = government_is_tribal
	#			#			}
	#			#		}
	#			#	}
	#			#	OR = {
	#			#		culture = { has_cultural_pillar = heritage_berber } # duke_feudal_male_berber_group (Émir), duke_feudal_female_berber_group (Émira)
	#			#		culture = { has_name_list = name_list_beja } # duke_feudal_male_beja (Émir), duke_feudal_female_beja (Émira)
	#			#	}
	#			#	highest_held_title_tier = tier_duchy
	#			#	OR = {
	#			#		government_has_flag = government_is_feudal
	#			#		government_has_flag = government_is_clan
	#			#		government_has_flag = government_is_tribal
	#			#	}
	#			#}
	#			#AND = { # duke_feudal_male_arabic_group (Émir), duke_feudal_female_arabic_group (Émira)
	#			#	trigger_if = {
	#			#		limit = { 
	#			#			exists = top_liege
	#			#		}
	#			#		top_liege = {
	#			#			OR = {
	#			#				culture = { has_cultural_pillar = heritage_arabic }
	#			#			}
	#			#			OR = {
	#			#				government_has_flag = government_is_feudal
	#			#				government_has_flag = government_is_clan
	#			#			}
	#			#		}
	#			#	}
	#			#	OR = {
	#			#		culture = { has_cultural_pillar = heritage_arabic }
	#			#	}
	#			#	highest_held_title_tier = tier_duchy
	#			#	OR = {
	#			#		government_has_flag = government_is_feudal
	#			#		government_has_flag = government_is_clan
	#			#	}
	#			#}
	#			#AND = { # duke_clan_male_iberian_group (Émir), duke_clan_female_iberian_group (Émira)
	#			#	trigger_if = {
	#			#		limit = { 
	#			#			exists = top_liege
	#			#		}
	#			#		top_liege = {
	#			#			culture = { has_cultural_pillar = heritage_iberian }
	#			#			government_has_flag = government_is_clan
	#			#		}
	#			#	}
	#			#	OR = {
	#			#		culture = { has_cultural_pillar = heritage_iberian }
	#			#	}
	#			#	highest_held_title_tier = tier_duchy
	#			#	OR = {
	#			#		government_has_flag = government_is_clan
	#			#	}
	#			#}
	#			# AND = {
	#			# 	is_female = no
	#			# 	highest_held_title_tier = tier_county
	#			# 	OR = {
	#			# 		AND = { # count_feudal_male_english (Earl)
	#			# 			government_has_flag = government_is_feudal
	#			# 			primary_title = { 
	#			# 				target_is_de_jure_liege_or_above = title:e_britannia
	#			# 				NOT = { target_is_de_jure_liege_or_above = title:k_wales } # count_feudal_male_k_wales (Lord)
	#			# 			}
	#			# 		}
	#			# 		AND = { # count_feudal_male_e_britannia (Earl)
	#			# 			OR = {
	#			# 				government_has_flag = government_is_feudal
	#			# 				government_has_flag = government_is_tribal
	#			# 			}
	#			# 			culture = { has_name_list = name_list_english }
	#			# 			culture = { has_name_list = name_list_anglo_saxon }
	#			# 			culture = { has_name_list = name_list_scottish }
	#			# 		}
	#			# 	}
	#			# }
	#			#AND = { # count_theocracy_male_ismaili (Ayatollah), count_theocracy_female_ismaili (Ayatollah)
	#			#	highest_held_title_tier = tier_county
	#			#	government_has_flag = government_is_theocracy
	#			#	faith = faith:ismaili
	#			#}
	#			#AND = { # baron_theocracy_male_christianity_religion (Évêque), baron_theocracy_female_christianity_religion (Évêque)
	#			#	highest_held_title_tier = tier_barony
	#			#	government_has_flag = government_is_theocracy
	#			#	OR = {
	#			#		religion = religion:christianity_religion
	#			#		religion = religion:dualism_religion
	#			#	}
	#			#}
	#			#AND = { # baron_theocracy_male_zoroastrianism_religion (Ervad), baron_theocracy_female_zoroastrianism_religion (Ervad)
	#			#	highest_held_title_tier = tier_barony
	#			#	government_has_flag = government_is_theocracy
	#			#	religion = religion:zoroastrianism_religion
	#			#}
	#			#AND = { # baron_theocracy_male_west_african_bori_religion (Adjingi)
	#			#	highest_held_title_tier = tier_barony
	#			#	government_has_flag = government_is_theocracy
	#			#	religion = religion:west_african_bori_religion
	#			#}
	#			#AND = { # baron_feudal_male_iranian_group (Argbadh)
	#			#	highest_held_title_tier = tier_barony
	#			#	OR = {
	#			#		government_has_flag = government_is_feudal
	#			#		government_has_flag = government_is_clan
	#			#	}
	#			#	culture = { has_cultural_pillar = heritage_iranian }
	#			#}
	#			#primary_title = title:k_austria # archduke (Archiduc), archduchess (Archiduchesse)
	#		}
	#	}
	#	localization_key = CustomLoc_FR_l
	#}
	text = {
		trigger = {
			is_female = no
			OR = {
				primary_title.tier >= tier_barony
				any_spouse = { primary_title.tier >= tier_barony }
			}
		}
		localization_key = CustomLoc_FR_le
	}
	text = {
		trigger = {
			is_female = yes
			OR = {
				primary_title.tier >= tier_barony
				any_spouse = { primary_title.tier >= tier_barony }
			}
		}
		localization_key = CustomLoc_FR_la
	}
	text = {
		localization_key = CustomLoc_FR_empty
		fallback = yes
	}
}

FR_du_Char_L = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = {
			holds_landed_title = no
			is_female = no
		}
		localization_key = CustomLoc_FR_du
	}
	text = {
		trigger = {
			holds_landed_title = no
			is_female = yes
		}
		localization_key = CustomLoc_FR_dela
	}
	text = {
		localization_key = CustomLoc_FR_du_Char
		fallback = yes
	}
}

FR_du_Char_U_Pi = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = {
			is_local_player = yes
		}
		localization_key = CustomLoc_FR_de
	}
	text = {
		trigger = {
			OR = {
				any_spouse = { holds_landed_title = yes }
				holds_landed_title = yes
			}
		}
		localization_key = CustomLoc_FR_du_Char_P
	}
	text = {
		localization_key = CustomLoc_FR_du_Char
		fallback = yes
	}
}

FR_du_Char_U_P = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = {
			is_local_player = yes
		}
		localization_key = CustomLoc_FR_de
	}
	text = {
		localization_key = CustomLoc_FR_du_Char_P
		fallback = yes
	}
}

FR_du_Char_Pi = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = {
			OR = {
				any_spouse = { holds_landed_title = yes }
				holds_landed_title = yes
			}
		}
		localization_key = CustomLoc_FR_du_Char_P
	}
	text = {
		localization_key = CustomLoc_FR_du_Char
		fallback = yes
	}
}

FR_du_Char_P = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = { # queen_mother (Reine mère)
			is_female = yes
			government_has_flag = government_is_feudal
			any_child = { primary_title.tier = tier_kingdom }
			primary_title.tier < tier_kingdom
		}
		localization_key = CustomLoc_FR_dela
	}
	text = {
		trigger = {
			OR = {
				AND = { # prince_male_iberian_group (Infant), prince_female_iberian_group (Infante)
					primary_title.tier < tier_kingdom
					# culture = { has_cultural_pillar = heritage_iberian } #LotR
					government_has_flag = government_is_feudal
					any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
				}
				AND = { # empress_mother (Impératrice mère)
					is_female = yes
					government_has_flag = government_is_feudal
					any_child = { primary_title.tier = tier_empire }
					primary_title.tier < tier_empire
				}
			}
		}
		localization_key = CustomLoc_FR_del
	}
	text = {
		trigger = { # Prince
			is_female = no
			primary_title.tier < tier_kingdom
			OR = {
				government_has_flag = government_is_feudal
				government_has_flag = government_is_clan
			}
			any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
		}
		localization_key = CustomLoc_FR_du
	}
	text = {
		trigger = { # Princesse
			is_female = yes
			primary_title.tier < tier_kingdom
			OR = {
				government_has_flag = government_is_feudal
				government_has_flag = government_is_clan
			}
			any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
		}
		localization_key = CustomLoc_FR_dela
	}
	text = {
		localization_key = CustomLoc_FR_du_Char
		fallback = yes
	}
}

FR_du_Char = { 
	type = character
	log_loc_errors = no
	text = { # chef de foi
		trigger = {
			any_held_title = { is_head_of_faith = yes }
		}
		localization_key = CustomLoc_FR_du
	}
	#text = {
	#	trigger = {
	#		OR = {
	#			AND = { # emperor (Empereur), emperor_female (Impératrice)
	#				highest_held_title_tier = tier_empire
	#				NOT = {
	#					culture = { has_cultural_pillar = heritage_central_germanic } # Kaiser
	#					culture = { has_name_list = name_list_greek } # Basileus
	#					AND = { # emperor_feudal_male_altaic_group (Khagan)
	#						OR = {
	#							government_has_flag = government_is_feudal
	#							government_has_flag = government_is_clan
	#							government_has_flag = government_is_tribal
	#						}
	#						OR = {
	#							culture = { has_cultural_pillar = heritage_mongolic }
	#							culture = { has_cultural_pillar = heritage_turkic }
	#						}
	#					}
	#				}
	#			}
	#			AND = { # duke_theocracy_male_paganism_religion (Archiprêtre), duke_theocracy_female_paganism_religion (Archiprêtresse)
	#				highest_held_title_tier = tier_duchy
	#				government_has_flag = government_is_theocracy
	#				OR = {
	#					religion = religion:paganism_religion
	#					religion = religion:taoism_religion
	#					religion = religion:bon_religion
	#					religion = religion:germanic_religion
	#					religion = religion:tengrism_religion
	#					religion = religion:west_african_religion
	#					religion = religion:west_african_bori_religion
	#					religion = religion:west_african_roog_religion
	#					religion = religion:zunism_religion
	#				}
	#			}
	#			AND = { # king_feudal_male_uyghur (Idiqut), king_feudal_female_uyghur (Idiqut)
	#				highest_held_title_tier = tier_kingdom
	#				culture = { has_name_list = name_list_uyghur }
	#				OR = {
	#					government_has_flag = government_is_feudal
	#					government_has_flag = government_is_clan
	#					government_has_flag = government_is_tribal
	#				}
	#			}
	#			AND = { # duke_feudal_male_turkish (Atabeg), duke_feudal_female_turkish (Atabegum)
	#				highest_held_title_tier = tier_duchy
	#				OR = {
	#					AND = { 
	#						exists = top_liege
	#						top_liege = {
	#							OR = {
	#								government_has_flag = government_is_feudal
	#								government_has_flag = government_is_clan
	#							}
	#							culture = { has_name_list = name_list_turkish }
	#						}
	#					}
	#					AND = {
	#						NOT = { exists = top_liege }
	#						OR = {
	#							government_has_flag = government_is_feudal
	#							government_has_flag = government_is_clan
	#						}
	#						culture = { has_name_list = name_list_turkish }
	#					}
	#				}
	#			}
	#			AND = { # duke_feudal_male_sogdian (Ikhshide)
	#				is_female = no
	#				culture = { has_name_list = name_list_sogdian }
	#				highest_held_title_tier = tier_duchy
	#				OR = {
	#					government_has_flag = government_is_feudal
	#					government_has_flag = government_is_clan
	#				}
	#			}
	#			AND = {
	#				trigger_if = {
	#					limit = { 
	#						exists = top_liege
	#					}
	#					top_liege = {
	#						OR = {
	#							culture = { has_cultural_pillar = heritage_berber } # duke_feudal_male_berber_group (Émir), duke_feudal_female_berber_group (Émira)
	#							culture = { has_name_list = name_list_beja } # duke_feudal_male_beja (Émir), duke_feudal_female_beja (Émira)
	#						}
	#						OR = {
	#							government_has_flag = government_is_feudal
	#							government_has_flag = government_is_clan
	#							government_has_flag = government_is_tribal
	#						}
	#					}
	#				}
	#				OR = {
	#					culture = { has_cultural_pillar = heritage_berber } # duke_feudal_male_berber_group (Émir), duke_feudal_female_berber_group (Émira)
	#					culture = { has_name_list = name_list_beja } # duke_feudal_male_beja (Émir), duke_feudal_female_beja (Émira)
	#				}
	#				highest_held_title_tier = tier_duchy
	#				OR = {
	#					government_has_flag = government_is_feudal
	#					government_has_flag = government_is_clan
	#					government_has_flag = government_is_tribal
	#				}
	#			}
	#			AND = { # duke_feudal_male_arabic_group (Émir), duke_feudal_female_arabic_group (Émira)
	#				trigger_if = {
	#					limit = { 
	#						exists = top_liege
	#					}
	#					top_liege = {
	#						OR = {
	#							culture = { has_cultural_pillar = heritage_arabic }
	#						}
	#						OR = {
	#							government_has_flag = government_is_feudal
	#							government_has_flag = government_is_clan
	#						}
	#					}
	#				}
	#				OR = {
	#					culture = { has_cultural_pillar = heritage_arabic }
	#				}
	#				highest_held_title_tier = tier_duchy
	#				OR = {
	#					government_has_flag = government_is_feudal
	#					government_has_flag = government_is_clan
	#				}
	#			}
	#			AND = { # duke_clan_male_iberian_group (Émir), duke_clan_female_iberian_group (Émira)
	#				trigger_if = {
	#					limit = { 
	#						exists = top_liege
	#					}
	#					top_liege = {
	#						culture = { has_cultural_pillar = heritage_iberian }
	#						government_has_flag = government_is_clan
	#					}
	#				}
	#				OR = {
	#					culture = { has_cultural_pillar = heritage_iberian }
	#				}
	#				highest_held_title_tier = tier_duchy
	#				OR = {
	#					government_has_flag = government_is_clan
	#				}
	#			}
	#			# AND = {
	#			# 	is_female = no
	#			# 	highest_held_title_tier = tier_county
	#			# 	OR = {
	#			# 		AND = { # count_feudal_male_english (Earl)
	#			# 			government_has_flag = government_is_feudal
	#			# 			primary_title = { 
	#			# 				target_is_de_jure_liege_or_above = title:e_britannia
	#			# 				NOT = { target_is_de_jure_liege_or_above = title:k_wales } # count_feudal_male_k_wales (Lord)
	#			# 			}
	#			# 		}
	#			# 		AND = { # count_feudal_male_e_britannia (Earl)
	#			# 			OR = {
	#			# 				government_has_flag = government_is_feudal
	#			# 				government_has_flag = government_is_tribal
	#			# 			}
	#			# 			culture = { has_name_list = name_list_english }
	#			# 			culture = { has_name_list = name_list_anglo_saxon }
	#			# 			culture = { has_name_list = name_list_scottish }
	#			# 		}
	#			# 	}
	#			# }
	#			AND = { # count_theocracy_male_ismaili (Ayatollah), count_theocracy_female_ismaili (Ayatollah)
	#				highest_held_title_tier = tier_county
	#				government_has_flag = government_is_theocracy
	#				faith = faith:ismaili
	#			}
	#			AND = { # baron_theocracy_male_christianity_religion (Évêque), baron_theocracy_female_christianity_religion (Évêque)
	#				highest_held_title_tier = tier_barony
	#				government_has_flag = government_is_theocracy
	#				OR = {
	#					religion = religion:christianity_religion
	#					religion = religion:dualism_religion
	#				}
	#			}
	#			AND = { # baron_theocracy_male_zoroastrianism_religion (Ervad), baron_theocracy_female_zoroastrianism_religion (Ervad)
	#				highest_held_title_tier = tier_barony
	#				government_has_flag = government_is_theocracy
	#				religion = religion:zoroastrianism_religion
	#			}
	#			AND = { # baron_theocracy_male_west_african_bori_religion (Adjingi)
	#				highest_held_title_tier = tier_barony
	#				government_has_flag = government_is_theocracy
	#				religion = religion:west_african_bori_religion
	#			}
	#			AND = { # baron_feudal_male_iranian_group (Argbadh)
	#				highest_held_title_tier = tier_barony
	#				OR = {
	#					government_has_flag = government_is_feudal
	#					government_has_flag = government_is_clan
	#				}
	#				culture = { has_cultural_pillar = heritage_iranian }
	#			}
	#			primary_title = title:k_austria # archduke (Archiduc), archduchess (Archiduchesse)
	#		}
	#	}
	#	localization_key = CustomLoc_FR_del
	#}
	text = {
		trigger = {
			is_female = no
			OR = {
				primary_title.tier >= tier_barony
				any_spouse = { primary_title.tier >= tier_barony }
			}
		}
		localization_key = CustomLoc_FR_du
	}
	text = {
		trigger = {
			is_female = yes
			OR = {
				primary_title.tier >= tier_barony
				any_spouse = { primary_title.tier >= tier_barony }
			}
		}
		localization_key = CustomLoc_FR_dela
	}
	text = {
		localization_key = CustomLoc_FR_de
		fallback = yes
	}
}

FR_au_Char_L = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = {
			holds_landed_title = no
			is_female = no
		}
		localization_key = CustomLoc_FR_au
	}
	text = {
		trigger = {
			holds_landed_title = no
			is_female = yes
		}
		localization_key = CustomLoc_FR_a_la
	}
	text = {
		localization_key = CustomLoc_FR_au_Char
		fallback = yes
	}
}

FR_au_Char_U_Pi = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = {
			is_local_player = yes
		}
		localization_key = CustomLoc_FR_a_accent
	}
	text = {
		trigger = {
			OR = {
				any_spouse = { holds_landed_title = yes }
				holds_landed_title = yes
			}
		}
		localization_key = CustomLoc_FR_au_Char_P
	}
	text = {
		localization_key = CustomLoc_FR_au_Char
		fallback = yes
	}
}

FR_au_Char_U_P = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = {
			is_local_player = yes
		}
		localization_key = CustomLoc_FR_a_accent
	}
	text = {
		localization_key = CustomLoc_FR_au_Char_P
		fallback = yes
	}
}

FR_au_Char_Pi = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = {
			OR = {
				any_spouse = { holds_landed_title = yes }
				holds_landed_title = yes
			}
		}
		localization_key = CustomLoc_FR_au_Char_P
	}
	text = {
		localization_key = CustomLoc_FR_au_Char
		fallback = yes
	}
}

FR_au_Char_P = { 
	type = character
	log_loc_errors = no
	text = {
		trigger = { # queen_mother (Reine mère)
			is_female = yes
			government_has_flag = government_is_feudal
			any_child = { primary_title.tier = tier_kingdom }
			primary_title.tier < tier_kingdom
		}
		localization_key = CustomLoc_FR_a_la
	}
	text = {
		trigger = {
			OR = {
				AND = { # prince_male_iberian_group (Infant), prince_female_iberian_group (Infante)
					primary_title.tier < tier_kingdom
					# culture = { has_cultural_pillar = heritage_iberian } #LotR
					government_has_flag = government_is_feudal
					any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
				}
				AND = { # empress_mother (Impératrice mère)
					is_female = yes
					government_has_flag = government_is_feudal
					any_child = { primary_title.tier = tier_empire }
					primary_title.tier < tier_empire
				}
			}
		}
		localization_key = CustomLoc_FR_a_l
	}
	text = {
		trigger = { # Prince
			is_female = no
			primary_title.tier < tier_kingdom
			OR = {
				government_has_flag = government_is_feudal
				government_has_flag = government_is_clan
			}
			any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
		}
		localization_key = CustomLoc_FR_au
	}
	text = {
		trigger = { # Princesse
			is_female = yes
			primary_title.tier < tier_kingdom
			OR = {
				government_has_flag = government_is_feudal
				government_has_flag = government_is_clan
			}
			any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
		}
		localization_key = CustomLoc_FR_a_la
	}
	text = {
		localization_key = CustomLoc_FR_au_Char
		fallback = yes
	}
}

FR_au_Char = { 
	type = character
	log_loc_errors = no
	text = { # chef de foi
		trigger = {
			any_held_title = { is_head_of_faith = yes }
		}
		localization_key = CustomLoc_FR_au
	}
	#text = {
	#	trigger = {
	#		OR = {
	#			AND = { # emperor (Empereur), emperor_female (Impératrice)
	#				highest_held_title_tier = tier_empire
	#				NOT = {
	#					culture = { has_cultural_pillar = heritage_central_germanic } # Kaiser
	#					culture = { has_name_list = name_list_greek } # Basileus
	#					AND = { # emperor_feudal_male_altaic_group (Khagan)
	#						OR = {
	#							government_has_flag = government_is_feudal
	#							government_has_flag = government_is_clan
	#							government_has_flag = government_is_tribal
	#						}
	#						OR = {
	#							culture = { has_cultural_pillar = heritage_mongolic }
	#							culture = { has_cultural_pillar = heritage_turkic }
	#						}
	#					}
	#				}
	#			}
	#			AND = { # duke_theocracy_male_paganism_religion (Archiprêtre), duke_theocracy_female_paganism_religion (Archiprêtresse)
	#				highest_held_title_tier = tier_duchy
	#				government_has_flag = government_is_theocracy
	#				OR = {
	#					religion = religion:paganism_religion
	#					religion = religion:taoism_religion
	#					religion = religion:bon_religion
	#					religion = religion:germanic_religion
	#					religion = religion:tengrism_religion
	#					religion = religion:west_african_religion
	#					religion = religion:west_african_bori_religion
	#					religion = religion:west_african_roog_religion
	#					religion = religion:zunism_religion
	#				}
	#			}
	#			AND = { # king_feudal_male_uyghur (Idiqut), king_feudal_female_uyghur (Idiqut)
	#				highest_held_title_tier = tier_kingdom
	#				culture = { has_name_list = name_list_uyghur }
	#				OR = {
	#					government_has_flag = government_is_feudal
	#					government_has_flag = government_is_clan
	#					government_has_flag = government_is_tribal
	#				}
	#			}
	#			AND = { # duke_feudal_male_turkish (Atabeg), duke_feudal_female_turkish (Atabegum)
	#				highest_held_title_tier = tier_duchy
	#				OR = {
	#					AND = { 
	#						exists = top_liege
	#						top_liege = {
	#							OR = {
	#								government_has_flag = government_is_feudal
	#								government_has_flag = government_is_clan
	#							}
	#							culture = { has_name_list = name_list_turkish }
	#						}
	#					}
	#					AND = {
	#						NOT = { exists = top_liege }
	#						OR = {
	#							government_has_flag = government_is_feudal
	#							government_has_flag = government_is_clan
	#						}
	#						culture = { has_name_list = name_list_turkish }
	#					}
	#				}
	#			}
	#			AND = { # duke_feudal_male_sogdian (Ikhshide)
	#				is_female = no
	#				culture = { has_name_list = name_list_sogdian }
	#				highest_held_title_tier = tier_duchy
	#				OR = {
	#					government_has_flag = government_is_feudal
	#					government_has_flag = government_is_clan
	#				}
	#			}
	#			AND = {
	#				trigger_if = {
	#					limit = { 
	#						exists = top_liege
	#					}
	#					top_liege = {
	#						OR = {
	#							culture = { has_cultural_pillar = heritage_berber } # duke_feudal_male_berber_group (Émir), duke_feudal_female_berber_group (Émira)
	#							culture = { has_name_list = name_list_beja } # duke_feudal_male_beja (Émir), duke_feudal_female_beja (Émira)
	#						}
	#						OR = {
	#							government_has_flag = government_is_feudal
	#							government_has_flag = government_is_clan
	#							government_has_flag = government_is_tribal
	#						}
	#					}
	#				}
	#				OR = {
	#					culture = { has_cultural_pillar = heritage_berber } # duke_feudal_male_berber_group (Émir), duke_feudal_female_berber_group (Émira)
	#					culture = { has_name_list = name_list_beja } # duke_feudal_male_beja (Émir), duke_feudal_female_beja (Émira)
	#				}
	#				highest_held_title_tier = tier_duchy
	#				OR = {
	#					government_has_flag = government_is_feudal
	#					government_has_flag = government_is_clan
	#					government_has_flag = government_is_tribal
	#				}
	#			}
	#			AND = { # duke_feudal_male_arabic_group (Émir), duke_feudal_female_arabic_group (Émira)
	#				trigger_if = {
	#					limit = { 
	#						exists = top_liege
	#					}
	#					top_liege = {
	#						OR = {
	#							culture = { has_cultural_pillar = heritage_arabic }
	#						}
	#						OR = {
	#							government_has_flag = government_is_feudal
	#							government_has_flag = government_is_clan
	#						}
	#					}
	#				}
	#				OR = {
	#					culture = { has_cultural_pillar = heritage_arabic }
	#				}
	#				highest_held_title_tier = tier_duchy
	#				OR = {
	#					government_has_flag = government_is_feudal
	#					government_has_flag = government_is_clan
	#				}
	#			}
	#			AND = { # duke_clan_male_iberian_group (Émir), duke_clan_female_iberian_group (Émira)
	#				trigger_if = {
	#					limit = { 
	#						exists = top_liege
	#					}
	#					top_liege = {
	#						culture = { has_cultural_pillar = heritage_iberian }
	#						government_has_flag = government_is_clan
	#					}
	#				}
	#				OR = {
	#					culture = { has_cultural_pillar = heritage_iberian }
	#				}
	#				highest_held_title_tier = tier_duchy
	#				OR = {
	#					government_has_flag = government_is_clan
	#				}
	#			}
	#			# AND = {
	#			# 	is_female = no
	#			# 	highest_held_title_tier = tier_county
	#			# 	OR = {
	#			# 		AND = { # count_feudal_male_english (Earl)
	#			# 			government_has_flag = government_is_feudal
	#			# 			primary_title = { 
	#			# 				target_is_de_jure_liege_or_above = title:e_britannia
	#			# 				NOT = { target_is_de_jure_liege_or_above = title:k_wales } # count_feudal_male_k_wales (Lord)
	#			# 			}
	#			# 		}
	#			# 		AND = { # count_feudal_male_e_britannia (Earl)
	#			# 			OR = {
	#			# 				government_has_flag = government_is_feudal
	#			# 				government_has_flag = government_is_tribal
	#			# 			}
	#			# 			culture = { has_name_list = name_list_english }
	#			# 			culture = { has_name_list = name_list_anglo_saxon }
	#			# 			culture = { has_name_list = name_list_scottish }
	#			# 		}
	#			# 	}
	#			# }
	#			AND = { # count_theocracy_male_ismaili (Ayatollah), count_theocracy_female_ismaili (Ayatollah)
	#				highest_held_title_tier = tier_county
	#				government_has_flag = government_is_theocracy
	#				faith = faith:ismaili
	#			}
	#			AND = { # baron_theocracy_male_christianity_religion (Évêque), baron_theocracy_female_christianity_religion (Évêque)
	#				highest_held_title_tier = tier_barony
	#				government_has_flag = government_is_theocracy
	#				OR = {
	#					religion = religion:christianity_religion
	#					religion = religion:dualism_religion
	#				}
	#			}
	#			AND = { # baron_theocracy_male_zoroastrianism_religion (Ervad), baron_theocracy_female_zoroastrianism_religion (Ervad)
	#				highest_held_title_tier = tier_barony
	#				government_has_flag = government_is_theocracy
	#				religion = religion:zoroastrianism_religion
	#			}
	#			AND = { # baron_theocracy_male_west_african_bori_religion (Adjingi)
	#				highest_held_title_tier = tier_barony
	#				government_has_flag = government_is_theocracy
	#				religion = religion:west_african_bori_religion
	#			}
	#			AND = { # baron_feudal_male_iranian_group (Argbadh)
	#				highest_held_title_tier = tier_barony
	#				OR = {
	#					government_has_flag = government_is_feudal
	#					government_has_flag = government_is_clan
	#				}
	#				culture = { has_cultural_pillar = heritage_iranian }
	#			}
	#			primary_title = title:k_austria # archduke (Archiduc), archduchess (Archiduchesse)
	#		}
	#	}
	#	localization_key = CustomLoc_FR_al
	#}
	text = {
		trigger = {
			is_female = no
			OR = {
				primary_title.tier >= tier_barony
				any_spouse = { primary_title.tier >= tier_barony }
			}
		}
		localization_key = CustomLoc_FR_au
	}
	text = {
		trigger = {
			is_female = yes
			OR = {
				primary_title.tier >= tier_barony
				any_spouse = { primary_title.tier >= tier_barony }
			}
		}
		localization_key = CustomLoc_FR_a_la
	}
	text = {
		localization_key = CustomLoc_FR_a_accent
		fallback = yes
	}
}

FR_only_de_HouseOfWorshipPlural = { 
	type = character
	log_loc_errors = no
	# text = { #LotR
	# 	trigger = {
	# 		OR = {
	# 			AND = {
	# 				has_religion = religion:christianity_religion # église, abbaye
	# 				NOT = { faith = faith:bosnian_church } # hiža
	# 			}
	# 			has_religion = religion:magyar_religion # egyház
	# 		}
	# 	}
	# 	localization_key = CustomLoc_FR_d
	# }
	text = {
		localization_key = CustomLoc_FR_de
		fallback = yes
	}
}

FR_Scheme_FullAction = { 
	type = scheme
	log_loc_errors = no
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = abduct
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_abduct_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = befriend
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_befriend_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = claim_throne
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_claim_throne_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = convert_to_witchcraft
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_convert_to_witchcraft_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = courting
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_courting_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = elope
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_elope_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = fabricate_hook
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_fabricate_hook_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = learn_language
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_learn_language_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = murder
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_murder_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = overthrow_regent
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_overthrow_regent_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = seduce
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_seduce_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = steal_back_artifact
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_steal_back_artifact_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = sway
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_sway_you
	}
	text = {
		trigger = {
			scheme_type = abduct
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_abduct
	}
	text = {
		trigger = {
			scheme_type = befriend
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_befriend
	}
	text = {
		trigger = {
			scheme_type = claim_throne
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_claim_throne
	}
	text = {
		trigger = {
			scheme_type = convert_to_witchcraft
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_convert_to_witchcraft
	}
	text = {
		trigger = {
			scheme_type = courting
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_courting
	}
	text = {
		trigger = {
			scheme_type = elope
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_elope
	}
	text = {
		trigger = {
			scheme_type = fabricate_hook
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_fabricate_hook
	}
	text = {
		trigger = {
			scheme_type = learn_language
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_learn_language
	}
	text = {
		trigger = {
			scheme_type = murder
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_murder
	}
	text = {
		trigger = {
			scheme_type = overthrow_regent
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_overthrow_regent
	}
	text = {
		trigger = {
			scheme_type = seduce
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_seduce
	}
	text = {
		trigger = {
			scheme_type = steal_back_artifact
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_steal_back_artifact
	}
	text = {
		trigger = {
			scheme_type = sway
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_sway
	}
	text = {
		localization_key = CustomLoc_FR_Scheme_FullAction_fallback
		fallback = yes
	}
}

FR_DogStory_fake = {
	type = character
	log_loc_errors = no

	text = {
		trigger = {
			any_owned_story = {
				story_type = story_cycle_pet_dog
				var:dog_gender = flag:female
			}
		}
		localization_key = FR_dog_female
	}
	text = {
		trigger = {
			any_owned_story = {
				story_type = story_cycle_pet_dog
				var:dog_gender = flag:male
			}
		}
		localization_key = FR_dog_male
	}
}

FR_DogStory_e = { 
	log_loc_errors = no
	parent = FR_DogStory_fake
	suffix = _e
}

FR_DogStory_le = { 
	log_loc_errors = no
	parent = FR_DogStory_fake
	suffix = _le
}

FR_CatStory_fake = {
	type = character
	log_loc_errors = no

	text = {
		trigger = {
			any_owned_story = {
				story_type = story_cycle_pet_cat
				var:cat_gender = flag:female
			}
		}
		localization_key = FR_cat_female
	}
	text = {
		trigger = {
			any_owned_story = {
				story_type = story_cycle_pet_cat
				var:cat_gender = flag:male
			}
		}
		localization_key = FR_cat_male
	}
}

FR_CatStory_e = { 
	log_loc_errors = no
	parent = FR_CatStory_fake
	suffix = _e
}

FR_CatStory_le = { 
	log_loc_errors = no
	parent = FR_CatStory_fake
	suffix = _le
}

FR_InspirationTypeDescription_Inf = { 
	log_loc_errors = no
	parent = InspirationTypeDescription
	suffix = _FR_Inf
}

FR_GetInspirationOwnerType_OnA = { 
	log_loc_errors = no
	parent = GetInspirationOwnerType
	suffix = _FR_On
}

FR_GetInspirationTypeRoom_Le = { 
	log_loc_errors = no
	parent = GetInspirationTypeRoom
	suffix = _FR_Le
}

FR_GetInspirationTypeRoom_Du = { 
	log_loc_errors = no
	parent = GetInspirationTypeRoom
	suffix = _FR_Du
}

FR_GetInspirationTypeRoom_OnA = { 
	log_loc_errors = no
	parent = GetInspirationTypeRoom
	suffix = _FR_On
}

FR_InspirationAdventureDestination_En = { 
	log_loc_errors = no
	parent = InspirationAdventureDestination
	suffix = _FR_en
}

FR_GetInspirationMaterialType_Du = { 
	log_loc_errors = no
	parent = GetInspirationMaterialType
	suffix = _FR_Du
}

FR_GetInspirationMaterialType_OnA = { 
	log_loc_errors = no
	parent = GetInspirationMaterialType
	suffix = _FR_On
}

FR_GetInspirationTypeObject_OnA = { 
	log_loc_errors = no
	parent = GetInspirationTypeObject
	suffix = _FR_On
}

FR_GetInspirationTypeObject_Le = { 
	log_loc_errors = no
	parent = GetInspirationTypeObject
	suffix = _FR_Le
}

FR_InspirationSmithBaseType_OnA = { 
	log_loc_errors = no
	parent = InspirationSmithBaseType
	suffix = _FR_On
}

FR_InspirationSmithBaseType_Le = { 
	log_loc_errors = no
	parent = InspirationSmithBaseType
	suffix = _FR_Le
}

FR_InspirationArtisanBaseType_OnA = { 
	log_loc_errors = no
	parent = InspirationArtisanBaseType
	suffix = _FR_On
}

FR_InspirationArtisanBaseType_Le = { 
	log_loc_errors = no
	parent = InspirationArtisanBaseType
	suffix = _FR_Le
}

FR_ArtifactArmorTypeLowercase_OnA = { 
	log_loc_errors = no
	parent = ArtifactArmorTypeLowercase
	suffix = _FR_On
}

FR_ArtifactArmorTypeLowercase_Le = { 
	log_loc_errors = no
	parent = ArtifactArmorTypeLowercase
	suffix = _FR_Le
}

FR_ArtifactArmorTypeLowercase_E = { 
	log_loc_errors = no
	parent = ArtifactArmorTypeLowercase
	suffix = _FR_E
}

FR_ArtifactWeaponBaseType_OnA = { 
	log_loc_errors = no
	parent = ArtifactWeaponBaseType
	suffix = _FR_On
}

FR_ArtifactWeaponBaseType_Le = { 
	log_loc_errors = no
	parent = ArtifactWeaponBaseType
	suffix = _FR_Le
}

FR_GetRandomPositiveTrait_OnA = { 
	log_loc_errors = no
	parent = GetRandomPositiveTrait
	suffix = _FR_On
}

FR_Artifact_OnA = { 
	type = artifact
	log_loc_errors = no
	text = {
		trigger = {
			OR = {
				artifact_type = dagger
				artifact_type = axe
				artifact_type = mace
				artifact_type = spear
				artifact_type = goblet
				artifact_type = animal_hide
				artifact_type = animal_hide_big
				artifact_type = armor_brigandine
				artifact_type = armor_laminar
				artifact_type = armor_mail
				artifact_type = armor_plate
				artifact_type = brooch
				artifact_type = brooch_pedestal
				artifact_type = panacea
				artifact_type = philosophers_stone
				artifact_type = sculpture
				artifact_type = tapestry
				has_variable = banner_dynasty
				has_variable = banner_house
				has_variable = christian_girdle
				has_variable = pope_hat
				has_variable = crown_of_justinian
				has_variable = throne_scone
				has_variable = buddhism_bowl
				has_variable = islam_hand
			}
		}
		localization_key = CustomLoc_FR_female_OnA
	}
	text = {
		localization_key = CustomLoc_FR_male_OnA
		fallback = yes
	}
}

FR_Le_ArtifactType = { 
	type = artifact
	log_loc_errors = no
	text = {
		trigger = {
			OR = {
				artifact_type = animal_hide
				artifact_type = animal_hide_big
				artifact_type = axe
				artifact_type = brooch
				artifact_type = brooch_pedestal
				artifact_type = ring
				artifact_type = spear
				artifact_type = dagger
				artifact_type = goblet
				artifact_type = jug
				artifact_type = mace
				artifact_type = panacea
				artifact_type = philosophers_stone
				artifact_type = tapestry
			}
		}
		localization_key = CustomLoc_FR_la
	}
	text = {
		trigger = {
			OR = {
				artifact_type = armor_brigandine
				artifact_type = armor_lamellar
				artifact_type = armor_laminar
				artifact_type = armor_mail
				artifact_type = armor_plate
				artifact_type = armor_scale
				artifact_type = bow
				artifact_type = composite
				artifact_type = elixir
				artifact_type = longbow
				artifact_type = pedestal
				artifact_type = regalia
				artifact_type = regalia_simple
				artifact_type = scientific_apparatus
				artifact_type = sword
			}
		}
		localization_key = CustomLoc_FR_l
	}
	text = {
		localization_key = CustomLoc_FR_le
		fallback = yes
	}
}

FR_E_ArtifactType = { 
	type = artifact
	log_loc_errors = no
	text = {
		trigger = {
			OR = {
				artifact_type = animal_hide
				artifact_type = animal_hide_big
				artifact_type = armor_brigandine
				artifact_type = armor_lamellar
				artifact_type = armor_laminar
				artifact_type = armor_mail
				artifact_type = armor_plate
				artifact_type = armor_scale
				artifact_type = axe
				artifact_type = brooch
				artifact_type = brooch_pedestal
				artifact_type = dagger
				artifact_type = goblet
				artifact_type = jug
				artifact_type = mace
				artifact_type = panacea
				artifact_type = philosophers_stone
				artifact_type = ring
				artifact_type = spear
				artifact_type = sword
				artifact_type = tapestry
			}
		}
		localization_key = CustomLoc_FR_female_E
	}
	text = {
		localization_key = CustomLoc_FR_empty
		fallback = yes
	}
}

FR_Le_ActivityType = { 
	type = activity
	log_loc_errors = no
	text = {
		trigger = { has_activity_type = activity_feast } # Grand rite
		localization_key = CustomLoc_FR_le
	}
	text = {
		trigger = { has_activity_type = activity_gruesome_festival } # Fête sacrificielle
		localization_key = CustomLoc_FR_la
	}
	text = {
		trigger = { has_activity_type = activity_hunt } # Festin
		localization_key = CustomLoc_FR_le
	}
	text = {
		trigger = { has_activity_type = activity_pilgrimage } # Chasse
		localization_key = CustomLoc_FR_la
	}
	text = {
		trigger = { has_activity_type = activity_playdate } # Rencontre des pairs
		localization_key = CustomLoc_FR_la
	}
	text = {
		trigger = { has_activity_type = activity_tour } # Pèlerinage
		localization_key = CustomLoc_FR_le
	}
	text = {
		trigger = { has_activity_type = activity_tournament } # Grand mariage
		localization_key = CustomLoc_FR_le
	}
	text = {
		trigger = { has_activity_type = activity_wedding } # Grand tournoi
		localization_key = CustomLoc_FR_le
	}
	text = {
		trigger = { has_activity_type = activity_witch_ritual } # Grande visite
		localization_key = CustomLoc_FR_la
	}
	text = {
		localization_key = CustomLoc_FR_le
		fallback = yes
	}
}

FR_On_ActivityType = { 
	type = activity
	log_loc_errors = no
	text = {
		trigger = { has_activity_type = activity_feast } # Grand rite
		localization_key = CustomLoc_FR_on
	}
	text = {
		trigger = { has_activity_type = activity_gruesome_festival } # Fête sacrificielle
		localization_key = CustomLoc_FR_a
	}
	text = {
		trigger = { has_activity_type = activity_hunt } # Festin
		localization_key = CustomLoc_FR_on
	}
	text = {
		trigger = { has_activity_type = activity_pilgrimage } # Chasse
		localization_key = CustomLoc_FR_a
	}
	text = {
		trigger = { has_activity_type = activity_playdate } # Rencontre des pairs
		localization_key = CustomLoc_FR_a
	}
	text = {
		trigger = { has_activity_type = activity_tour } # Pèlerinage
		localization_key = CustomLoc_FR_on
	}
	text = {
		trigger = { has_activity_type = activity_tournament } # Grand mariage
		localization_key = CustomLoc_FR_on
	}
	text = {
		trigger = { has_activity_type = activity_wedding } # Grand tournoi
		localization_key = CustomLoc_FR_on
	}
	text = {
		trigger = { has_activity_type = activity_witch_ritual } # Grande visite
		localization_key = CustomLoc_FR_a
	}
	text = {
		localization_key = CustomLoc_FR_on
		fallback = yes
	}
}

FR_E_ActivityType = { 
	type = activity
	log_loc_errors = no
	text = {
		trigger = { has_activity_type = activity_feast } # Grand rite
		localization_key = CustomLoc_FR_empty
	}
	text = {
		trigger = { has_activity_type = activity_gruesome_festival } # Fête sacrificielle
		localization_key = CustomLoc_FR_female_E
	}
	text = {
		trigger = { has_activity_type = activity_hunt } # Festin
		localization_key = CustomLoc_FR_empty
	}
	text = {
		trigger = { has_activity_type = activity_pilgrimage } # Chasse
		localization_key = CustomLoc_FR_female_E
	}
	text = {
		trigger = { has_activity_type = activity_playdate } # Rencontre des pairs
		localization_key = CustomLoc_FR_female_E
	}
	text = {
		trigger = { has_activity_type = activity_tour } # Pèlerinage
		localization_key = CustomLoc_FR_empty
	}
	text = {
		trigger = { has_activity_type = activity_tournament } # Grand mariage
		localization_key = CustomLoc_FR_empty
	}
	text = {
		trigger = { has_activity_type = activity_wedding } # Grand tournoi
		localization_key = CustomLoc_FR_empty
	}
	text = {
		trigger = { has_activity_type = activity_witch_ritual } # Grande visite
		localization_key = CustomLoc_FR_female_E
	}
	text = {
		localization_key = CustomLoc_FR_empty
		fallback = yes
	}
}
