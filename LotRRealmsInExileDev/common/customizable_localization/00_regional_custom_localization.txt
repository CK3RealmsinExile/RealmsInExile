MountedWarriorTerm = {
	type = character

	#Faris for muslims

	text = {
		localization_key = knight
	}
}


MountedWarriorTermPlural = {
	type = character

	#Faris for muslims

	text = {
		localization_key = knights
	}
}


MountedWarriorAdjective = {
	type = character

	#Faris for muslims

	text = {
		localization_key = knightly
	}
}

MartialTournamentAdjective = {
	type = character

	text = {
		trigger = {
			government_has_flag = government_is_feudal
			capital_province = {
				geographical_region = middleearth_west
			}
		}
		localization_key = tournament_jousting
	}
	text = {
		trigger = {
			OR = {		
				government_has_flag = government_is_tribal
				# faith = {
					# has_doctrine = pagan_hostility_doctrine
				# }
				capital_province = {
					geographical_region = middleearth_west_enedhwaith
				}
			}
		}
		localization_key = tournament_wrestling
	}
	text = {
		trigger = {
			always = no
		}
		localization_key = tournament_sparring
		fallback = yes
	}
}

LevyMenWomen = {
	type = character

	#Gender law triggers

	text = {
		localization_key = levies_men
	}

	text = {
		localization_key = levies_women
	}

	text = {
		localization_key = levies_people
	}
}

FortifiedBuilding = { #Castle, Fort, Kasbah etc.
	type = character

	text = {
		trigger = {
			government_has_flag = government_is_landless_adventurer
		}
		localization_key = encampment
	}

	#text = {
	#	trigger = {
	#		culture = { has_cultural_pillar = language_arabic }
	#	}
	#	localization_key = kasbah
	#}
	#
	#text = {
	#	trigger = {
	#		culture = { has_cultural_pillar = heritage_indo_aryan }
	#	}
	#	localization_key = durga
	#}
	#
	#text = {
	#	trigger = {
	#		culture = { has_cultural_pillar = language_greek }
	#	}
	#	localization_key = kastron
	#}

	text = {
		trigger = { government_has_flag = government_is_tribal }
		localization_key = stronghold
	}

	text = {
		trigger = { always = no }
		localization_key = castle
		fallback = yes
	}
}

ResidenceBuilding = { #Castle, Palace, etc.
	type = character

	text = {
		trigger = {
			government_has_flag = government_is_landless_adventurer
		}
		localization_key = tent
	}
	
	text = {
		trigger = {
			government_has_flag = government_is_republic
			is_landless_adventurer = no
		}
		localization_key = mansion
	}

	text = {
		trigger = {
			is_landless_adventurer = no
			OR = {
				government_has_flag = government_is_theocracy
				is_theocratic_lessee = yes
			}
		}
		localization_key = temple
	}

	text = {
		trigger = {
			any_held_title = { is_noble_family_title = yes }
		}
		localization_key = estate
	}

	text = {
		trigger = {
			is_landless_adventurer = no
			NOR = {
				government_has_flag = government_is_republic
				government_has_flag = government_is_theocracy
				any_held_title = { is_noble_family_title = yes }
				is_theocratic_lessee = yes
			}
		}
		localization_key = castle
	}

	text = {
		localization_key = residence
		fallback = yes
	}
}

ResidenceBuildingPlural = { #Castles, Palaces, etc.
	type = character

	text = {
		trigger = {
			government_has_flag = government_is_landless_adventurer
		}
		localization_key = camp_plural
	}

	text = {
		trigger = {
			government_has_flag = government_is_republic
			is_landless_adventurer = no
		}
		localization_key = mansions
	}

	text = {
		trigger = {
			is_landless_adventurer = no
			OR = {
				government_has_flag = government_is_theocracy
				is_theocratic_lessee = yes
			}
		}
		localization_key = temples
	}

	text = {
		trigger = {
			any_held_title = { is_noble_family_title = yes }
		}
		localization_key = estate_plural
	}

	text = {
		trigger = {
			is_landless_adventurer = no
			NOR = {
				government_has_flag = government_is_republic
				government_has_flag = government_is_theocracy
				any_held_title = { is_noble_family_title = yes }
				is_theocratic_lessee = yes
			}
		}
		localization_key = castles
	}

	text = {
		localization_key = residences
		fallback = yes
	}
}

OutdoorsHidingPlace = { #Something you can find in nature / by the road
	type = character

	text = {
		localization_key = trees
	}

	text = {
		localization_key = rocks
	}
}

ObjectToClimb = {
	type = character

	text = {	
		trigger = { location = { terrain = desert } }
		localization_key = sand_dune
	}
	text = {	
		trigger = {
			location = {
				OR = {
					terrain = plains
					terrain = mountains
					terrain = desert_mountains
					terrain = drylands
					terrain = steppe
				}
			}
		}
		localization_key = boulder
	}
	text = {	
		localization_key = tree
	}
}

IndefiniteBodyOfWater = { #Lake, River, Oasis, etc.
	type = character

	text = {
		trigger = { location = { terrain = oasis } }
		localization_key = body_of_water_an_oasis
	}
	text = {
		trigger = { location.county = { is_coastal_county = yes } }
		localization_key = body_of_water_the_ocean
	}
	text = {
		localization_key = body_of_water_a_lake
	}
	text = {
		trigger = { always = no }
		# For the areas with no good source of water.
		fallback = yes
		localization_key = body_of_water_a_watering_hole
	}
}

# As above, but excluding rivers'n'seas.
IndefiniteBodyOfWater_Static = {
	type = character
	random_valid = yes

	text = {
		trigger = {
			location = { terrain = oasis }
		}
		localization_key = body_of_water_an_oasis
	}
	text = {
		trigger = {
			location = {
				OR = {
					terrain = farmlands
					terrain = jungle
					terrain = wetlands
				}
			}
		}
		localization_key = body_of_water_a_large_pond
	}
	text = {
		trigger = {
			location = {
				OR = {
					terrain = floodplains
					terrain = wetlands
				}
			}
		}
		localization_key = body_of_water_a_lagoon
	}
	text = {
		trigger = {
			location = {
				OR = {
					terrain = plains
					terrain = hills
					terrain = forest
					terrain = taiga
					terrain = steppe
				}
			}
		}
		localization_key = body_of_water_a_lake
	}
	text = {
		trigger = { always = no }
		# For the areas with no good source of water.
		fallback = yes
		localization_key = body_of_water_a_watering_hole
	}
}

RandomExampleName = {
	type = character

	text = {
		localization_key = random_example_name_default
	}
}

TerrainTypeCountyScope = {
	type = landed_title

	text = {	
		trigger = { title_province = { terrain = plains } }
		localization_key = terrain_plains
	}

	text = {	
		trigger = { title_province = { terrain = farmlands } }
		localization_key = terrain_farmlands
	}

	text = {	
		trigger = { title_province = { terrain = hills } }
		localization_key = terrain_hills
	}

	text = {	
		trigger = {
			title_province = {
				OR = {
					terrain = mountains
					terrain = desert_mountains
				}
			}
		}
		localization_key = terrain_mountains
	}

	text = {	
		trigger = { title_province = { terrain = desert } }
		localization_key = terrain_desert
	}

	text = {	
		trigger = { title_province = { terrain = oasis } }
		localization_key = terrain_oasis
	}

	text = {	
		trigger = { title_province = { terrain = jungle } }
		localization_key = terrain_jungle
	}

	text = {	
		trigger = { title_province = { terrain = forest } }
		localization_key = terrain_forest
	}

	text = {	
		trigger = { title_province = { terrain = taiga } }
		localization_key = terrain_taiga
	}

	text = {	
		trigger = { title_province = { terrain = wetlands } }
		localization_key = terrain_wetlands
	}

	text = {	
		trigger = { title_province = { terrain = steppe } }
		localization_key = terrain_steppe
	}

	text = {	
		trigger = { title_province = { terrain = floodplains } }
		localization_key = terrain_floodplains
	}

	text = {	
		trigger = { title_province = { terrain = drylands } }
		localization_key = terrain_drylands
	}
}

TerrainTypeCountyScopePlural = {
	type = landed_title

	text = {	
		trigger = { title_province = { terrain = plains } }
		localization_key = terrain_plains
	}

	text = {	
		trigger = { title_province = { terrain = farmlands } }
		localization_key = terrain_farmlands
	}

	text = {	
		trigger = { title_province = { terrain = hills } }
		localization_key = terrain_hills
	}

	text = {	
		trigger = {
			title_province = {
				OR = {
					terrain = mountains
					terrain = desert_mountains
				}
			}
		}
		localization_key = terrain_mountains
	}

	text = {	
		trigger = { title_province = { terrain = desert } }
		localization_key = terrain_deserts
	}

	text = {	
		trigger = { title_province = { terrain = oasis } }
		localization_key = terrain_oases
	}

	text = {	
		trigger = { title_province = { terrain = jungle } }
		localization_key = terrain_jungles
	}

	text = {	
		trigger = { title_province = { terrain = forest } }
		localization_key = terrain_forests
	}

	text = {	
		trigger = { title_province = { terrain = taiga } }
		localization_key = terrain_taigas
	}

	text = {	
		trigger = { title_province = { terrain = wetlands } }
		localization_key = terrain_wetlands
	}

	text = {	
		trigger = { title_province = { terrain = steppe } }
		localization_key = terrain_steppes
	}

	text = {	
		trigger = { title_province = { terrain = floodplains } }
		localization_key = terrain_floodplains
	}

	text = {	
		trigger = { title_province = { terrain = drylands } }
		localization_key = terrain_drylands
	}
}

TerrainType = {
	type = character

	text = {	
		trigger = { capital_province = { terrain = plains } }
		localization_key = terrain_plains
	}

	text = {	
		trigger = { capital_province = { terrain = farmlands } }
		localization_key = terrain_farmlands
	}

	text = {	
		trigger = { capital_province = { terrain = hills } }
		localization_key = terrain_hills
	}

	text = {	
		trigger = {
			capital_province = {
				OR = {
					terrain = mountains
					terrain = desert_mountains
				}
			}
		}
		localization_key = terrain_mountains
	}

	text = {	
		trigger = { capital_province = { terrain = desert } }
		localization_key = terrain_desert
	}

	text = {	
		trigger = { capital_province = { terrain = oasis } }
		localization_key = terrain_oasis
	}

	text = {	
		trigger = { capital_province = { terrain = jungle } }
		localization_key = terrain_jungle
	}

	text = {	
		trigger = { capital_province = { terrain = forest } }
		localization_key = terrain_forest
	}

	text = {	
		trigger = { capital_province = { terrain = taiga } }
		localization_key = terrain_taiga
	}

	text = {	
		trigger = { capital_province = { terrain = wetlands } }
		localization_key = terrain_wetlands
	}

	text = {	
		trigger = { capital_province = { terrain = steppe } }
		localization_key = terrain_steppe
	}

	text = {	
		trigger = { capital_province = { terrain = floodplains } }
		localization_key = terrain_floodplains
	}

	text = {	
		trigger = { capital_province = { terrain = drylands } }
		localization_key = terrain_drylands
	}

	text = {	
		trigger = { capital_province = { terrain = savanna } }
		localization_key = terrain_savanna
	}

	text = {	
		trigger = { capital_province = { terrain = dune_sea } }
		localization_key = terrain_dune_sea
	}

	text = {	
		trigger = { capital_province = { terrain = red_desert } }
		localization_key = terrain_red_desert
	}

	text = {	
		trigger = { capital_province = { terrain = saltflats } }
		localization_key = terrain_saltflats
	}

	text = {	
		trigger = { capital_province = { terrain = mallorn_forest } }
		localization_key = terrain_mallorn_forest
	}

	text = {	
		trigger = { capital_province = { terrain = deep_forest } }
		localization_key = terrain_deep_forest
	}

	text = {	
		trigger = { capital_province = { terrain = myrtle_forest } }
		localization_key = terrain_myrtle_forest
	}

	text = {	
		trigger = { capital_province = { terrain = volcanic_plains } }
		localization_key = terrain_volcanic_plains
	}

	text = {	
		trigger = { capital_province = { terrain = arctic } }
		localization_key = terrain_arctic
	}

	text = {	
		trigger = { capital_province = { terrain = caverns } }
		localization_key = terrain_caverns
	}

	text = {	
		trigger = { capital_province = { terrain = halls } }
		localization_key = terrain_halls
	}

	text = {	
		trigger = { capital_province = { terrain = pathsofthedead } }
		localization_key = terrain_pathsofthedead
	}

	text = {	
		trigger = { capital_province = { terrain = pathsofthedead } }
		localization_key = terrain_pathsofthedead
	}
}

TerrainTypeProvince = {
	type = province

	text = {	
		trigger = { terrain = plains }
		localization_key = terrain_plains
	}

	text = {	
		trigger = { terrain = farmlands }
		localization_key = terrain_farmlands
	}

	text = {	
		trigger = { terrain = hills }
		localization_key = terrain_hills
	}

	text = {	
		trigger = {
			OR = {
				terrain = mountains
				terrain = desert_mountains
			}
		}
		localization_key = terrain_mountains
	}

	text = {	
		trigger = { terrain = desert }
		localization_key = terrain_desert
	}

	text = {	
		trigger = { terrain = oasis }
		localization_key = terrain_oasis
	}

	text = {	
		trigger = { terrain = jungle }
		localization_key = terrain_jungle
	}

	text = {	
		trigger = { terrain = forest }
		localization_key = terrain_forest
	}

	text = {	
		trigger = { terrain = taiga }
		localization_key = terrain_taiga
	}

	text = {	
		trigger = { terrain = wetlands }
		localization_key = terrain_wetlands
	}

	text = {	
		trigger = { terrain = steppe }
		localization_key = terrain_steppe
	}

	text = {	
		trigger = { terrain = floodplains }
		localization_key = terrain_floodplains
	}

	text = {	
		trigger = { terrain = drylands }
		localization_key = terrain_drylands
	}

	text = {	
		trigger = { terrain = savanna }
		localization_key = terrain_savanna
	}

	text = {	
		trigger = { terrain = dune_sea }
		localization_key = terrain_dune_sea
	}

	text = {	
		trigger = { terrain = red_desert }
		localization_key = terrain_red_desert
	}

	text = {	
		trigger = { terrain = saltflats }
		localization_key = terrain_saltflats
	}

	text = {	
		trigger = { terrain = mallorn_forest }
		localization_key = terrain_mallorn_forest
	}

	text = {	
		trigger = { terrain = deep_forest }
		localization_key = terrain_deep_forest
	}

	text = {	
		trigger = { terrain = myrtle_forest }
		localization_key = terrain_myrtle_forest
	}

	text = {	
		trigger = { terrain = volcanic_plains }
		localization_key = terrain_volcanic_plains
	}

	text = {	
		trigger = { terrain = arctic }
		localization_key = terrain_arctic
	}

	text = {	
		trigger = { terrain = caverns }
		localization_key = terrain_caverns
	}

	text = {	
		trigger = { terrain = halls }
		localization_key = terrain_halls
	}

	text = {	
		trigger = { terrain = pathsofthedead }
		localization_key = terrain_pathsofthedead
	}

	text = {	
		trigger = { terrain = pathsofthedead }
		localization_key = terrain_pathsofthedead
	}
}

TerrainTypeProvincePrefix = {
	type = province

	text = {	
		trigger = {
			OR = {
				terrain = plains
				terrain = farmlands
				terrain = oasis
				terrain = savanna #LotR
			}
		}
		localization_key = prefix_verdant
	}

	text = {	
		trigger = {
			OR = {
				terrain = hills
				terrain = red_desert #LotR
			}
		}
		localization_key = prefix_rolling
	}

	text = {	
		trigger = {
			OR = {
				terrain = mountains
				terrain = desert_mountains
				terrain = jungle
				terrain = halls #LotR
			}
		}
		localization_key = prefix_mighty
	}

	text = {		
		trigger = {
			OR = {
				terrain = desert
				terrain = steppe
				terrain = taiga
				terrain = saltflats #LotR
				terrain = dune_sea #LotR
				terrain = volcanic_plains #LotR
				terrain = arctic #LotR
			}
		}
		localization_key = prefix_endless
	}

	text = {	
		trigger = {
			OR = {
				terrain = jungle
				terrain = forest
				terrain = mallorn_forest #LotR
				terrain = deep_forest #LotR
			}
		}
		localization_key = prefix_lush
	}

	text = {	
		trigger = {
			OR = {
				terrain = floodplains
				terrain = drylands
				terrain = wetlands
			}
		}
		localization_key = prefix_rich
	}
}

LocalAnimal = {
	type = character

	text = {
		localization_key = animal_hart
		trigger = {
			var:local_animal = flag:hart
		}
		fallback = yes
	}

	text = {
		localization_key = animal_stag
		trigger = {
			var:local_animal = flag:stag
		}
	}

	text = {
		localization_key = animal_boar
		trigger = {
			var:local_animal = flag:boar
		}
	}

	text = {
		localization_key = animal_wolf
		trigger = {
			var:local_animal = flag:wolf
		}
	}

	text = {
		localization_key = animal_warg
		trigger = {
			var:local_animal = flag:warg
		}
	}

	text = {
		localization_key = animal_caragor
		trigger = {
			var:local_animal = flag:caragor
		}
	}

	text = {
		localization_key = animal_fox
		trigger = {
			var:local_animal = flag:fox
		}
	}

	text = {
		localization_key = animal_hare
		trigger = {
			var:local_animal = flag:hare
		}
	}

	text = {
		localization_key = animal_lion
		trigger = {
			var:local_animal = flag:lion
		}
	}

	text = {
		localization_key = animal_tiger
		trigger = {
			var:local_animal = flag:tiger
		}
	}

	text = {
		localization_key = animal_bear
		trigger = {
			var:local_animal = flag:bear
		}
	}

	text = {
		localization_key = animal_lynx
		trigger = {
			var:local_animal = flag:lynx
		}
	}

	text = {
		localization_key = animal_unicorn
		trigger = {
			var:local_animal = flag:unicorn
		}
	}

	text = {
		localization_key = animal_dragon
		trigger = {
			var:local_animal = flag:dragon
		}
	}
}

LocalAnimalMultiple = {
	type = character

	text = {
		localization_key = animal_harts
		trigger = {
			var:local_animal = flag:hart
		}
		fallback = yes
	}

	text = {
		localization_key = animal_stags
		trigger = {
			var:local_animal = flag:stag
		}
	}

	text = {
		localization_key = animal_boars
		trigger = {
			var:local_animal = flag:boar
		}
	}

	text = {
		localization_key = animal_wolfs
		trigger = {
			var:local_animal = flag:wolf
		}
	}

	text = {
		localization_key = animal_wargs
		trigger = {
			var:local_animal = flag:warg
		}
	}

	text = {
		localization_key = animal_caragors
		trigger = {
			var:local_animal = flag:caragor
		}
	}

	text = {
		localization_key = animal_lynxes
		trigger = {
			var:local_animal = flag:lynx
		}
	}

	text = {
		localization_key = animal_foxes
		trigger = {
			var:local_animal = flag:fox
		}
	}

	text = {
		localization_key = animal_hares
		trigger = {
			var:local_animal = flag:hare
		}
	}

	text = {
		localization_key = animal_lions
		trigger = {
			var:local_animal = flag:lion
		}
	}

	text = {
		localization_key = animal_tigers
		trigger = {
			var:local_animal = flag:tiger
		}
	}

	text = {
		localization_key = animal_bears
		trigger = {
			var:local_animal = flag:bear
		}
	}

	text = {
		localization_key = animal_unicorns
		trigger = {
			var:local_animal = flag:unicorn
		}
	}

	text = {
		localization_key = animal_dragons
		trigger = {
			var:local_animal = flag:dragon
		}
	}
}

LocalAnimalDesc = {
	type = character

	text = {
		localization_key = animal_flighty_desc
		trigger = {
			OR = {
				var:local_animal = flag:hart
				var:local_animal = flag:hare
			}
		}
		fallback = yes
	}

	text = {
		localization_key = animal_majestic_desc
		trigger = {
			OR = {
				var:local_animal = flag:stag
				var:local_animal = flag:dragon
				var:local_animal = flag:lion
			}
		}
	}

	text = {
		localization_key = animal_powerful_desc
		trigger = {
			OR = {
				var:local_animal = flag:boar
				var:local_animal = flag:tiger
				var:local_animal = flag:lion
				var:local_animal = flag:wolf
				var:local_animal = flag:warg
				var:local_animal = flag:caragor
				var:local_animal = flag:bear
			}
		}
	}

	text = {
		localization_key = animal_sly_desc
		trigger = {
			var:local_animal = flag:fox
		}
	}

	text = {
		localization_key = animal_quick_desc
		trigger = {
			OR = {
				var:local_animal = flag:hare
				var:local_animal = flag:hart
			}
		}
	}

	text = {
		localization_key = animal_cunning_desc
		trigger = {
			var:local_animal = flag:fox
		}
	}

	text = {
		localization_key = animal_fabled_desc
		trigger = {
			OR = {
				var:local_animal = flag:unicorn
				var:local_animal = flag:dragon
			}
		}
	}

	text = {
		localization_key = animal_mystical_desc
		trigger = {
			OR = {
				var:local_animal = flag:dragon
				var:local_animal = flag:unicorn
			}
		}
	}
}

Abortifacient = {
	type = character

	random_valid = yes

	text = {
		localization_key = abortifacient_pennyroyal
		weight_multiplier = {
			base = 3
		}
		#Europe, North Africa, Middle East
	}

	text = {
		localization_key = abortifacient_catmint
		#Europe, Asia, Africa
	}

	text = {
		localization_key = abortifacient_thymbra
		#North Africa, Southern Europe, Middle East, Central Asia
	}

	text = {
		localization_key = abortifacient_broadleaf_sage
		#Mediterranean
	}

	text = {
		localization_key = abortifacient_soapwort
		#Europe and Asia
	}

	text = {
		localization_key = abortifacient_galingales
		#Africa, Asia
	}

	text = {
		localization_key = abortifacient_bishops_lace
		#Christian only
		#Europe and Southwest Asia
	}

	text = {
		localization_key = abortifacient_wild_carrot
		#Same as Bishop's Lace
		#Europe and Southwest Asia
	}

	text = {
		localization_key = abortifacient_bitter_melon
		#India
	}

	text = {
		localization_key = abortifacient_nutmeg
		#India
	}

	text = {
		localization_key = abortifacient_saffron
		#India
	}

	text = {
		localization_key = abortifacient_vervain
		#Europe
	}

	#text = {
	#	localization_key = abortifacient_mugwort
	#	#lesser chance in Europe, rest of Asia
	#}

	text = {
		localization_key = abortifacient_herb_of_grace
		#Christian only
		#Balkans, Anatolia, Mediterranean
	}

	text = {
		localization_key = abortifacient_rue
		#Same as herb-of-grace
		#Balkans, Anatolia, Mediterranean
	}

	text = {
		localization_key = abortifacient_tansy
		#Europe, Mediterranean
	}

	text = {
		localization_key = abortifacient_ergot
		weight_multiplier = {
			base = 3
		}
		#Europe
	}
}


#Various Venomous Creatures
VenomousCreature = {
	type = character

	text = {
		localization_key = venomous_creature_rare_spider
		trigger = {
			trigger_if = {
				limit = { exists = scope:venomous_creature }
				scope:venomous_creature = flag:rare_spider #Very rare, as spiders poisonous enough to kill a man would need to come from VERY far
			}
			trigger_else = { always = yes }
		}
	}

	# text = {
	# 	localization_key = venomous_creature_red_scorpion
	# 	trigger = {
	# 		trigger_if = {
	# 			limit = { exists = scope:venomous_creature }
	# 			scope:venomous_creature = flag:red_scorpion #India, Nepal
	# 		}
	# 		trigger_else = { 
	# 			location = { geographical_region = world_india }
	# 		}
	# 	}
	# }

	# text = {
	# 	localization_key = venomous_creature_deathstalker
	# 	trigger = {
	# 		trigger_if = {
	# 			limit = { exists = scope:venomous_creature }
	# 			scope:venomous_creature = flag:deathstalker #North Africa or Middle East
	# 		}
	# 		trigger_else = { 
	# 			location = { 
	# 				OR = {
	# 					geographical_region = world_africa_north
	# 					geographical_region = world_middle_east_jerusalem
	# 					geographical_region = world_middle_east_persia
	# 				}
	# 			}
	# 		}
	# 	}
	# }

	# text = {
	# 	localization_key = venomous_creature_fat_tail
	# 	trigger = {
	# 		trigger_if = {
	# 			limit = { exists = scope:venomous_creature }
	# 			scope:venomous_creature = flag:fat_tail #Arabia, Middle East, Egypt
	# 		}
	# 		trigger_else = { 
	# 			location = { 
	# 				OR = {
	# 					geographical_region = world_middle_east
	# 					geographical_region = world_africa_north_east
	# 				}
	# 			}
	# 		}
	# 	}
	# }

	# text = {
	# 	localization_key = venomous_creature_viper
	# 	trigger = {
	# 		trigger_if = {
	# 			limit = { exists = scope:venomous_creature }
	# 			scope:venomous_creature = flag:viper #Fallback - Everywhere
	# 		}
	# 		trigger_else = { always = yes }
	# 	}
	# }

	# text = {
	# 	localization_key = venomous_creature_mamba
	# 	trigger = {
	# 		trigger_if = {
	# 			limit = { exists = scope:venomous_creature }
	# 			scope:venomous_creature = flag:mamba #Sub-saharan Africa
	# 		}
	# 		trigger_else = { 
	# 			location = { geographical_region = world_africa_west }
	# 		}
	# 	}
	# }

	# text = {
	# 	localization_key = venomous_creature_boomslang
	# 	trigger = {
	# 		trigger_if = {
	# 			limit = { exists = scope:venomous_creature }
	# 			scope:venomous_creature = flag:boomslang #Sub-saharan Africa
	# 		}
	# 		trigger_else = { 
	# 			location = { geographical_region = world_africa_west }
	# 		}
	# 	}
	# }

	# text = {
	# 	localization_key = venomous_creature_king_cobra
	# 	trigger = {
	# 		trigger_if = {
	# 			limit = { exists = scope:venomous_creature }
	# 			scope:venomous_creature = flag:king_cobra #South-east Asia + India
	# 		}
	# 		trigger_else = { 
	# 			location = { 
	# 				OR = {
	# 					geographical_region = world_india
	# 					geographical_region = world_burma
	# 				}
	# 			}
	# 		}
	# 	}
	# }

	# text = {
	# 	localization_key = venomous_creature_daboia
	# 	trigger = {
	# 		trigger_if = {
	# 			limit = { exists = scope:venomous_creature }
	# 			scope:venomous_creature = flag:daboia #India
	# 		}
	# 		trigger_else = { 
	# 			location = { geographical_region = world_india }
	# 		}
	# 	}
	# }

	# text = {
	# 	localization_key = venomous_creature_saw_scale
	# 	trigger = {
	# 		trigger_if = {
	# 			limit = { exists = scope:venomous_creature }
	# 			scope:venomous_creature = flag:saw_scale #North Africa, Middle East, Pakistan, India
	# 		}
	# 		trigger_else = { 
	# 			location = { 
	# 				OR = {
	# 					geographical_region = world_africa_north
	# 					geographical_region = world_middle_east
	# 					geographical_region = world_india
	# 				}
	# 			}
	# 		}
	# 	}
	# }

	# text = {
	# 	localization_key = venomous_creature_krait
	# 	trigger = {
	# 		trigger_if = {
	# 			limit = { exists = scope:venomous_creature }
	# 			scope:venomous_creature = flag:krait #North Africa, Middle East, Pakistan, India
	# 		}
	# 		trigger_else = { 
	# 			location = { 
	# 				OR = {
	# 					geographical_region = world_india
	# 						geographical_region = world_burma
	# 				}
	# 			}
	# 		}
	# 	}
	# }

	# text = {
	# 	localization_key = venomous_creature_beaked_mammal
	# 	trigger = {
	# 		trigger_if = {
	# 			limit = { exists = scope:venomous_creature }
	# 			scope:venomous_creature = flag:beaked_mammal #Australia
	# 		}
	# 		trigger_else = { always = no }
	# 	}
	# }

	text = {
		localization_key = venomous_creature_snake
		trigger = {
			always = no
		}
		fallback = yes
	}
}

#VenomousCreatureType
VenomousCreatureType = {
	type = character

	text = {
		localization_key = venomous_creature_scorpion
		trigger = {
			OR = {
				scope:venomous_creature = flag:red_scorpion
				scope:venomous_creature = flag:deathstalker
				scope:venomous_creature = flag:fat_tail
			}
		}
	}
	text = {
		localization_key = venomous_creature_spider
		trigger = {
			OR = {
				scope:venomous_creature = flag:rare_spider
			}
		}
	}
	text = {
		localization_key = venomous_creature_thing
		trigger = {
			OR = {
				scope:venomous_creature = flag:beaked_mammal
			}
		}
	}
	text = {
		localization_key = venomous_creature_snake
		trigger = {
			OR = {
				scope:venomous_creature = flag:viper
				scope:venomous_creature = flag:mamba
				scope:venomous_creature = flag:boomslang
				scope:venomous_creature = flag:king_cobra
				scope:venomous_creature = flag:daboia
				scope:venomous_creature = flag:saw_scale
				scope:venomous_creature = flag:krait
			}
		}
		fallback = yes
	}
}

#VenomousCreatureType
VenomousCreatureTypePlural = {
	type = character

	text = {
		localization_key = venomous_creature_scorpion_plural
		trigger = {
			OR = {
				scope:venomous_creature = flag:red_scorpion
				scope:venomous_creature = flag:deathstalker
				scope:venomous_creature = flag:fat_tail
			}
		}
	}
	text = {
		localization_key = venomous_creature_spider_plural
		trigger = {
			OR = {
				scope:venomous_creature = flag:rare_spider
			}
		}
	}
	text = {
		localization_key = venomous_creature_thing_plural
		trigger = {
			OR = {
				scope:venomous_creature = flag:beaked_mammal
			}
		}
	}
	text = {
		localization_key = venomous_creature_snake_plural
		trigger = {
			OR = {
				scope:venomous_creature = flag:viper
				scope:venomous_creature = flag:mamba
				scope:venomous_creature = flag:boomslang
				scope:venomous_creature = flag:king_cobra
				scope:venomous_creature = flag:daboia
				scope:venomous_creature = flag:saw_scale
				scope:venomous_creature = flag:krait
			}
		}
		fallback = yes
	}
}

#VenomousCreatureType
VenomousCreatureAttack = {
	type = character

	text = {
		localization_key = venomous_creature_sting
		trigger = {
			OR = {
				scope:venomous_creature = flag:red_scorpion
				scope:venomous_creature = flag:deathstalker
				scope:venomous_creature = flag:fat_tail
				scope:venomous_creature = flag:beaked_mammal
			}
		}
	}
	text = {
		localization_key = venomous_creature_bite
		trigger = {
			OR = {
				scope:venomous_creature = flag:rare_spider
				scope:venomous_creature = flag:viper
				scope:venomous_creature = flag:mamba
				scope:venomous_creature = flag:boomslang
				scope:venomous_creature = flag:king_cobra
				scope:venomous_creature = flag:daboia
				scope:venomous_creature = flag:saw_scale
				scope:venomous_creature = flag:krait
			}
		}
	}
}

#VenomousCreatureAttackPlural
VenomousCreatureAttackPlural = {
	type = character

	text = {
		localization_key = venomous_creature_stings
		trigger = {
			OR = {
				scope:venomous_creature = flag:red_scorpion
				scope:venomous_creature = flag:deathstalker
				scope:venomous_creature = flag:fat_tail
				scope:venomous_creature = flag:beaked_mammal
			}
		}
	}
	text = {
		localization_key = venomous_creature_bites
		trigger = {
			OR = {
				scope:venomous_creature = flag:rare_spider
				scope:venomous_creature = flag:viper
				scope:venomous_creature = flag:mamba
				scope:venomous_creature = flag:boomslang
				scope:venomous_creature = flag:king_cobra
				scope:venomous_creature = flag:daboia
				scope:venomous_creature = flag:saw_scale
				scope:venomous_creature = flag:krait
			}
		}
	}
}

VenomousCreatureMovement = {
	type = character

	text = {
		localization_key = venomous_creature_scutter
		trigger = {
			OR = {
				scope:venomous_creature = flag:red_scorpion
				scope:venomous_creature = flag:deathstalker
				scope:venomous_creature = flag:fat_tail
				scope:venomous_creature = flag:rare_spider
			}
		}
	}
	text = {
		localization_key = venomous_creature_slither
		trigger = {
			OR = {
				scope:venomous_creature = flag:viper
				scope:venomous_creature = flag:mamba
				scope:venomous_creature = flag:boomslang
				scope:venomous_creature = flag:king_cobra
				scope:venomous_creature = flag:daboia
				scope:venomous_creature = flag:saw_scale
				scope:venomous_creature = flag:krait
			}
		}
	}
	text = {
		localization_key = venomous_creature_scamper
		trigger = {
			OR = {
				scope:venomous_creature = flag:beaked_mammal
			}
		}
	}
}


RandomReligiousTextName = {
	type = character

	# text = {
	# 	trigger = {
	# 		#Original implementation
	# 		trigger_if = {
	# 			limit = { exists = scope:religious_book_title }
	# 			scope:religious_book_title = flag:golden_legend
	# 		}
	# 		#We're a LAAMP visiting somewhere
	# 		trigger_else_if = {
	# 			limit = { exists = scope:visiting_location }
	# 			location.faith.religion = religion:christianity_religion
	# 		}
	# 		#The book is of my religion
	# 		trigger_else = { faith.religion = religion:christianity_religion }
	# 	}
	# 	localization_key = random_religious_text_golden_legend
	# }

	# text = {
	# 	trigger = {
	# 		#Original implementation
	# 		trigger_if = {
	# 			limit = { exists = scope:religious_book_title }
	# 			scope:religious_book_title = flag:city_of_god
	# 		}
	# 		#We're a LAAMP visiting somewhere
	# 		trigger_else_if = {
	# 			limit = { exists = scope:visiting_location }
	# 			location.faith.religion = religion:christianity_religion
	# 		}
	# 		#The book is of my religion
	# 		trigger_else = { faith.religion = religion:christianity_religion }
	# 	}
	# 	localization_key = random_religious_text_city_of_god
	# }

	# text = {
	# 	trigger = {
	# 		#Original implementation
	# 		trigger_if = {
	# 			limit = { exists = scope:religious_book_title }
	# 			scope:religious_book_title = flag:summa_theologica
	# 		}
	# 		#We're a LAAMP visiting somewhere
	# 		trigger_else_if = {
	# 			limit = { exists = scope:visiting_location }
	# 			location.faith.religion = religion:christianity_religion
	# 			NOT = { location.faith = faith:orthodox }
	# 		}
	# 		#The book is of my religion
	# 		trigger_else = {
	# 			faith.religion = religion:christianity_religion
	# 			NOT = { faith = faith:orthodox }
	# 		}
	# 	}
	# 	localization_key = random_religious_text_summa_theologica
	# }

	# text = {
	# 	trigger = {
	# 		#Original implementation
	# 		trigger_if = {
	# 			limit = { exists = scope:religious_book_title }
	# 			scope:religious_book_title = flag:sic_et_non
	# 		}
	# 		#We're a LAAMP visiting somewhere
	# 		trigger_else_if = {
	# 			limit = { exists = scope:visiting_location }
	# 			location.faith.religion = religion:christianity_religion
	# 			NOT = { location.faith = faith:orthodox }
	# 		}
	# 		#The book is of my religion
	# 		trigger_else = {
	# 			faith.religion = religion:christianity_religion
	# 			NOT = { faith = faith:orthodox }
	# 		}
	# 	}
	# 	localization_key = random_religious_text_sic_et_non
	# }

	# text = {
	# 	trigger = {
	# 		#Original implementation
	# 		trigger_if = {
	# 			limit = { exists = scope:religious_book_title }
	# 			scope:religious_book_title = flag:chrysostomos
	# 		}
	# 		#We're a LAAMP visiting somewhere
	# 		trigger_else_if = {
	# 			limit = { exists = scope:visiting_location }
	# 			location.faith = faith:orthodox
	# 		}
	# 		#The book is of my religion
	# 		trigger_else = { faith = faith:orthodox }
	# 	}
	# 	localization_key = random_religious_text_chrysostomos
	# }

	# text = {
	# 	trigger = {
	# 		#Original implementation
	# 		trigger_if = {
	# 			limit = { exists = scope:religious_book_title }
	# 			scope:religious_book_title = flag:symeon_menologion
	# 		}
	# 		#We're a LAAMP visiting somewhere
	# 		trigger_else_if = {
	# 			limit = { exists = scope:visiting_location }
	# 			location.faith = faith:orthodox
	# 		}
	# 		#The book is of my religion
	# 		trigger_else = { faith = faith:orthodox }
	# 	}
	# 	localization_key = random_religious_text_symeon_menologion
	# }

	# text = {
	# 	trigger = {
	# 		#Original implementation
	# 		trigger_if = {
	# 			limit = { exists = scope:religious_book_title }
	# 			scope:religious_book_title = flag:god_and_christ
	# 		}
	# 		#We're a LAAMP visiting somewhere
	# 		trigger_else_if = {
	# 			limit = { exists = scope:visiting_location }
	# 			location.faith = faith:orthodox
	# 		}
	# 		#The book is of my religion
	# 		trigger_else = { faith = faith:orthodox }
	# 	}
	# 	localization_key = random_religious_text_god_and_christ
	# }

	# text = {
	# 	trigger = {
	# 		#Original implementation
	# 		trigger_if = {
	# 			limit = { exists = scope:religious_book_title }
	# 			scope:religious_book_title = flag:the_small_book_on_theism
	# 		}
	# 		#We're a LAAMP visiting somewhere
	# 		trigger_else_if = {
	# 			limit = { exists = scope:visiting_location }
	# 			location.faith.religion = religion:islam_religion
	# 		}
	# 		#The book is of my religion
	# 		trigger_else = { faith.religion = religion:islam_religion }
	# 	}
	# 	localization_key = random_religious_text_the_small_book_on_theism
	# }

	# text = {
	# 	trigger = {
	# 		#Original implementation
	# 		trigger_if = {
	# 			limit = { exists = scope:religious_book_title }
	# 			scope:religious_book_title = flag:modern_philosophy
	# 		}
	# 		#We're a LAAMP visiting somewhere
	# 		trigger_else_if = {
	# 			limit = { exists = scope:visiting_location }
	# 			location.faith.religion = religion:islam_religion
	# 		}
	# 		#The book is of my religion
	# 		trigger_else = { faith.religion = religion:islam_religion }
	# 	}
	# 	localization_key = random_religious_text_modern_philosophy
	# }

	text = {
		trigger = {
			#Original implementation
			trigger_if = {
				limit = { exists = scope:religious_book_title }
				scope:religious_book_title = flag:stories_from_holy_book
			}
			trigger_else = { always = yes }
		}
		localization_key = random_religious_text_stories_from_holy_book
	}
	
}


RandomEntertainmentTextName = {
	type = character

	text = {
		trigger = {
			scope:entertainment_book_title = flag:beowulf
		}
		localization_key = random_entertainment_text_beowulf
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:niebelungenlied
		}
		localization_key = random_entertainment_text_niebelungenlied
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:song_of_roland
		}
		localization_key = random_entertainment_text_song_of_roland
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:mabinogi
		}
		localization_key = random_entertainment_text_mabinogi
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:travels_to_jerusalem
		}
		localization_key = random_entertainment_text_travels_to_jerusalem
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:east_of_indus
		}
		localization_key = random_entertainment_text_east_of_indus
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:travels_to_byzantium
		}
		localization_key = random_entertainment_text_travels_to_byzantium
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:digenes_akrites
		}
		localization_key = random_entertainment_text_digenes_akrites
	}

	# text = { #LotR
	# 	trigger = {
	# 		scope:entertainment_book_title = flag:epigrams
	# 	}
	# 	localization_key = random_entertainment_text_epigrams
	# }

	# text = {
	# 	trigger = {
	# 		scope:entertainment_book_title = flag:philogelos
	# 	}
	# 	localization_key = random_entertainment_text_philogelos
	# }

	text = {
		trigger = {
			scope:entertainment_book_title = flag:riddle_poems
		}
		localization_key = random_entertainment_text_riddle_poems
	}
}


RandomInformativeTextName = {
	type = character

	text = {
		trigger = {
			scope:informative_book_title = flag:on_the_judgement_of_the_stars
		}
		localization_key = random_informative_text_on_the_judgement_of_the_stars
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:the_perfect_state
		}
		localization_key = random_informative_text_the_perfect_state
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:spiritual_medicine
		}
		localization_key = random_informative_text_spiritual_medicine
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:trotula
		}
		localization_key = random_informative_text_trotula
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:the_improvement_of_the_moral_qualities
		}
		localization_key = random_informative_text_the_improvement_of_the_moral_qualities
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:armes_prydein
		}
		localization_key = random_informative_text_armes_prydein
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:almagest
		}
		localization_key = random_informative_text_almagest
	}

	# text = {
	# 	trigger = {
	# 		scope:informative_book_title = flag:anekdota
	# 	}
	# 	localization_key = random_informative_text_anekdota
	# }
	# text = {
	# 	trigger = {
	# 		scope:informative_book_title = flag:chronographia
	# 	}
	# 	localization_key = random_informative_text_chronographia
	# }
}


MusicalPerformer = {
	type = character
	random_valid = yes

	text = {
		#Latin
		localization_key = music_performer_troubadour
	}
}


MusicalPerformerPossessive = {
	type = character
	random_valid = yes

	text = {
		#Latin
		localization_key = music_performer_troubadour_possessive
	}
}

#NOTE! All of these nouns should work with "a" (not "an")
RegionalGameObject = {
	type = character
	random_valid = yes

	text = {
		localization_key = deck_of_cards
	}

#	text = {
#		localization_key = pachisi_board #indian
#	}

	text = {
		localization_key = chess_set
	}
}

CulturalCurse = {
	type = character
	random_valid = yes

	#Norse
	text = {
		trigger = { has_culture = culture:adornaen }
#		trigger = { has_culture = culture:norse }
		localization_key = curse_skitr
	}


	#Fallback (english)
	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = curse_curses
	}
	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = curse_shit
	}

}

GetOldBook = {
	type = character
	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = old_book_general
	}
}

get_region_dog_type = {
	type = character 
	random_valid = yes

	# Generic
	text = {
		trigger = { always = yes }
		localization_key = dog_type_hound # Hound
	}
}

get_region_flower_type = {
	type = province 
	random_valid = yes
	
	text = {
		trigger = {
			geographical_region = middleearth_haradwaith
		}
		localization_key = flower_type_hibiscus # Hibiscus
	}
	text = {
		trigger = {
			OR = {
				geographical_region = adventure_nearharad  
				geographical_region = middleearth_haradwaith_far_bayoftulwang
				geographical_region = middleearth_haradwaith_far_mardruak
				geographical_region = middleearth_haradwaith_far_jungle
			}
		}
		localization_key = flower_type_gardenia # Gardenia
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_rhun
				geographical_region = middleearth_mordor_nurn
				geographical_region = middleearth_haradwaith_far_jungle
				geographical_region = custom_greater_ray
			}
		}
		localization_key = flower_type_lotus # Lotus
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_rhun
				geographical_region = middleearth_mordor_nurn
				geographical_region = middleearth_haradwaith_far_jungle
				geographical_region = custom_greater_ray
			}
		}
		localization_key = flower_type_chrysanthemum # Chrysanthemum
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_rhun
				geographical_region = middleearth_mordor_nurn
				geographical_region = adventure_nearharad  
				geographical_region = middleearth_haradwaith_far_bayoftulwang
				geographical_region = middleearth_haradwaith_far_mardruak
				geographical_region = middleearth_haradwaith_far_jungle
			}
		}
		localization_key = flower_type_jasmine # Jasmine
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_rhun
				geographical_region = middleearth_mordor_nurn
				geographical_region = middleearth_haradwaith
				geographical_region = middleearth_west
			}
		}
		localization_key = flower_type_delphinium # Delphinium
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_rhun
				geographical_region = middleearth_mordor_nurn
				geographical_region = adventure_nearharad  
				geographical_region = middleearth_haradwaith_far_mardruak
				geographical_region = middleearth_west
			}
		}
		localization_key = flower_type_violet # Violet/Pansy
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_rhun
				geographical_region = middleearth_mordor_nurn
				geographical_region = adventure_nearharad  
				geographical_region = middleearth_haradwaith_far_bayoftulwang
				geographical_region = middleearth_haradwaith_far_mardruak
				geographical_region = middleearth_west
			}
		}
		localization_key = flower_type_peony # Peony
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_rhun
				geographical_region = middleearth_mordor_nurn
				geographical_region = adventure_nearharad  
				geographical_region = middleearth_haradwaith_far_bayoftulwang
				geographical_region = middleearth_haradwaith_far_mardruak
				geographical_region = middleearth_west
			}
		}
		localization_key = flower_type_lavender # Lavender
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_rhun
				geographical_region = middleearth_mordor_nurn
				geographical_region = adventure_nearharad  
				geographical_region = middleearth_haradwaith_far_bayoftulwang
				geographical_region = middleearth_haradwaith_far_mardruak
				geographical_region = middleearth_haradwaith_far_jungle
				geographical_region = middleearth_west
			}
		}
		localization_key = flower_type_lily # Lily
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_rhun
				geographical_region = middleearth_mordor_nurn
				geographical_region = adventure_nearharad  
				geographical_region = middleearth_haradwaith_far_bayoftulwang
				geographical_region = middleearth_haradwaith_far_mardruak
				geographical_region = middleearth_west
			}
		}
		localization_key = flower_type_geranium # Geranium
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_rhun
				geographical_region = middleearth_mordor_nurn
				geographical_region = adventure_nearharad  
				geographical_region = middleearth_haradwaith_far_bayoftulwang
				geographical_region = middleearth_haradwaith_far_mardruak
				geographical_region = middleearth_west
			}
		}
		localization_key = flower_type_iris # Iris
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_rhun
				geographical_region = middleearth_mordor_nurn
				geographical_region = adventure_nearharad  
				geographical_region = middleearth_haradwaith_far_bayoftulwang
				geographical_region = middleearth_haradwaith_far_mardruak
				geographical_region = middleearth_west
			}
		}
		localization_key = flower_type_foxglove # Foxglove/Digitalis
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_west_gondor
				geographical_region = middleearth_west_rhovanion_dalelands
				geographical_region = middleearth_rhun_dorwinion
				geographical_region = adventure_nearharad  
				geographical_region = middleearth_haradwaith_far_mardruak
			}
		}
		localization_key = flower_type_carnation # Carnation/Dianthus
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_west_gondor
				geographical_region = middleearth_west_rhovanion_dalelands
				geographical_region = middleearth_rhun_dorwinion
				geographical_region = adventure_nearharad  
				geographical_region = middleearth_haradwaith_far_mardruak
			}
		}
		localization_key = flower_type_snapdragon # Snapdragon/Antirrhinum
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_west
				geographical_region = adventure_nearharad  
				geographical_region = middleearth_haradwaith_far_bayoftulwang
				geographical_region = middleearth_haradwaith_far_mardruak
				geographical_region = middleearth_rhun
				geographical_region = middleearth_mordor_nurn
			}
		}
		localization_key = flower_type_narcissus # Narcissus/Daffodil
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_west_gondor
				geographical_region = middleearth_west_rhovanion_dalelands
				geographical_region = middleearth_rhun_dorwinion
				geographical_region = adventure_nearharad  
				geographical_region = middleearth_haradwaith_far_mardruak
				geographical_region = middleearth_rhun
				geographical_region = middleearth_mordor_nurn
			}
		}
		localization_key = flower_type_crocus # Crocus
	}
	text = {
		trigger = {
			OR = {
				geographical_region = adventure_nearharad  
				geographical_region = middleearth_haradwaith_far_bayoftulwang
				geographical_region = middleearth_haradwaith_far_mardruak
				geographical_region = middleearth_rhun
				geographical_region = middleearth_mordor_nurn
			}
		}
		localization_key = flower_type_tulip # Tulip
	}
	text = {
		trigger = {
			OR = {
				geographical_region = middleearth_west_gondor
				geographical_region = middleearth_west_rhovanion_dalelands
				geographical_region = middleearth_rhun_dorwinion
				geographical_region = adventure_nearharad  
				geographical_region = middleearth_haradwaith_far_mardruak
				geographical_region = middleearth_rhun
				geographical_region = middleearth_mordor_nurn
			}
		}
		localization_key = flower_type_poppy # Poppy
	}
	text = {
		trigger = {
			geographical_region = adventure_elvenlands
		}
		localization_key = flower_type_elanor # Elanor
	}
	text = {
		trigger = {
			geographical_region = adventure_elvenlands
		}
		localization_key = flower_type_niphredil # Niphredil
	}
	text = {
		trigger = {
			geographical_region = adventure_elvenlands
		}
		localization_key = flower_type_lissuin # Lissuin
	}
	text = {
		trigger = {
			geographical_region = middleearth_west_rohan
		}
		localization_key = flower_type_simbelmyne # Simbelmyne
	}
	text = {
		trigger = {
			geographical_region = middleearth_mordor_gorgoroth
		}
		localization_key = flower_type_morgai_flower # Morgai flower
	}
	text = {
		trigger = { NOT = {geographical_region = middleearth_mordor_gorgoroth } }
		localization_key = flower_type_rose # Rose
	}
	text = {
		trigger = { NOT = {geographical_region = middleearth_mordor_gorgoroth } }
		localization_key = flower_type_orchid # Orchid
	}
	text = {
		trigger = { NOT = {geographical_region = middleearth_mordor_gorgoroth } }
		localization_key = flower_type_aster # Aster/Daisy
	}
}

get_region_flower_type_plural = {
	type = province 
	random_valid = yes

	text = {
		trigger = { always = yes }
		localization_key = flower_type_rose_plural # Roses
	}
	text = {
		trigger = { always = yes }
		localization_key = flower_type_orchid_plural # Orchids
	}
	text = {
		trigger = { always = yes }
		localization_key = flower_type_aster_plural # Asters/Daisies
	}
}

get_carvable_surface = {
	type = province

	text = {
		trigger = {
			is_likely_to_contain_trees_trigger = yes
		}
		localization_key = tree
	}
	text = {
		fallback = yes
		trigger = {
			always = yes
		}
		localization_key = rock
	}
}

RegionalFerociousAnimal = {
	type = character
	random_valid = yes

	#Bear
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:animal_type }
				var:animal_type = flag:bear
			}
			trigger_else = {
				location = { geographical_region = hunt_animal_bear_region }
			}
		}
		localization_key = animal_type_bear
	}
	#Wolf
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:animal_type }
				var:animal_type = flag:wolf
			}
			trigger_else = {
				NOT = {
					location = { geographical_region = world_africa_west }
				}
			}
		}
		localization_key = animal_type_wolf
	}
	# Hyena
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:animal_type }
				var:animal_type = flag:hyena
			}
			trigger_else = {
				location = {
					OR = {
						geographical_region = world_africa
						geographical_region = world_middle_east
						geographical_region = world_india
					}
				}
			}
		}
		localization_key = animal_type_hyena
	}
	#Boar
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:animal_type }
				var:animal_type = flag:boar
			}
			trigger_else = {
				location = { geographical_region = hunt_animal_boar_region }
			}
		}
		localization_key = animal_type_boar
	}
	#Tiger
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:animal_type }
				var:animal_type = flag:tiger
			}
			trigger_else = {
				location = { hunt_animal_tiger_trigger = yes }
			}
		}
		localization_key = animal_type_tiger
	}
	#Leopard
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:animal_type }
				var:animal_type = flag:leopard
			}
			trigger_else = {
				location = { hunt_animal_leopard_trigger = yes }
			}
		}
		localization_key = animal_type_leopard
	}
	#Lion
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:animal_type }
				var:animal_type = flag:lion
			}
			trigger_else = {
				location = { hunt_animal_lion_trigger = yes }
			}
		}
		localization_key = animal_type_lion
	}
	#Gorilla
	text = {
		trigger = {
			location = { geographical_region = world_africa_east }
		}
		localization_key = animal_type_gorilla
	}
	#Fallback - Shape
	text = {
		trigger = { always = no }
		localization_key = animal_type_shape
		fallback = yes
	}
}

RegionalOnlyFerociousAnimal = {
	type = character
	random_valid = yes

	#Bear
	text = {
		trigger = {
			location = { geographical_region = hunt_animal_bear_region }
		}
		localization_key = animal_type_bear
	}
	#Wolf
	text = {
		trigger = {
			NOT = {
				location = { geographical_region = world_africa_west }
			}
		}
		localization_key = animal_type_wolf
		fallback = yes
	}
	# Hyena
	text = {
		trigger = {
			location = {
				OR = {
					geographical_region = world_africa
					geographical_region = world_middle_east
					geographical_region = world_india
				}
			}
		}
		localization_key = animal_type_hyena
	}
	#Boar
	text = {
		trigger = {
			location = { geographical_region = hunt_animal_boar_region }
		}
		localization_key = animal_type_boar
	}
	#Tiger
	text = {
		trigger = {
			location = { hunt_animal_tiger_trigger = yes }
		}
		localization_key = animal_type_tiger
	}
	#Leopard
	text = {
		trigger = {
			location = { hunt_animal_leopard_trigger = yes }
		}
		localization_key = animal_type_leopard
	}
	#Lion
	text = {
		trigger = {
			location = { hunt_animal_lion_trigger = yes }
		}
		localization_key = animal_type_lion
	}
	#Gorilla
	text = {
		trigger = {
			location = { geographical_region = world_africa_east }
		}
		localization_key = animal_type_gorilla
	}
}

#this is used with the select_local_farm_animal_effect effect
RegionalFarmAnimal = {
	type = character
	random_valid = yes

	#Goat
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:goat
			}
			trigger_else = { always = yes }
			
		}
		localization_key = regional_farm_animal_goat
	}

	#Chicken
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:chicken
			}
			trigger_else = { always = yes }
		}
		localization_key = regional_farm_animal_chicken
	}

	#Cow
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:cow
			}
			trigger_else = { always = yes }
		}
		localization_key = regional_farm_animal_cow
	}
	
	#Sheep
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:sheep
			}
			trigger_else = { always = yes }
		}
		localization_key = regional_farm_animal_sheep
	}

	#Pig
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:pig
			}
			trigger_else = { always = yes }
			# trigger_else = { 
			# 	location.faith = {
			# 		NOR = {
			# 			religion_tag = islam_religion
			# 			religion_tag = judaism_religion
			# 		}
			# 	}
			# }
		}
		localization_key = regional_farm_animal_pig
	}
	
	#Yak
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:yak
			}
			trigger_else = { always = no }
			# trigger_else = {
			# 	location = {
			# 		OR = {
			# 			geographical_region = world_tibet
			# 			geographical_region = ghw_region_mongolia
			# 		}
			# 	}
			# }
			
		}
		localization_key = regional_farm_animal_yak
	}

	#Camel
	text = {
		trigger = {
			#No need to disturb the original implementation
			trigger_if = {
				limit = { 
					NOT = { exists = var:local_farm_animal }
				}
				location = {
					OR = {
						# geographical_region = world_middle_east
						# geographical_region = world_africa_north
						geographical_region = middleearth_haradwaith
					}
				}
			}
			trigger_else = { always = no }
			
		}
		localization_key = regional_farm_animal_camel
	}

	#Horse
	text = {
		trigger = {
			#No need to disturb the original implementation
			trigger_if = {
				limit = { 
					NOT = { exists = var:local_farm_animal }
				}
				always = yes
			}
			trigger_else = {
				always = no
			}
			
		}
		localization_key = regional_farm_animal_horse
	}
}

RegionalFarmAnimalPlural = {
	type = character
	random_valid = yes

	#Goat
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:goat
			}
			trigger_else = { always = yes }
			
		}
		localization_key = regional_farm_animal_goat_plural
	}

	#Chicken
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:chicken
			}
			trigger_else = { always = no } # ... "herd of chickens" ain't a thing.
		}
		localization_key = regional_farm_animal_chicken_plural
	}

	#Cow
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:cow
			}
			trigger_else = { always = yes }
		}
		localization_key = regional_farm_animal_cow_plural
	}
	
	#Sheep
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:sheep
			}
			trigger_else = { always = yes }
		}
		localization_key = regional_farm_animal_sheep_plural
	}

	#Pig
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:pig
			}
			trigger_else = { always = yes }
			# trigger_else = { 
			# 	location.faith = {
			# 		NOR = {
			# 			religion_tag = islam_religion
			# 			religion_tag = judaism_religion
			# 		}
			# 	}
			# }
		}
		localization_key = regional_farm_animal_pig_plural
	}
	
	#Yaks
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:yak
			}
			trigger_else = { always = no }
			# trigger_else = {
			# 	location = {
			# 		OR = {
			# 			geographical_region = world_tibet
			# 			geographical_region = ghw_region_mongolia
			# 		}
			# 	}
			# }
			
		}
		localization_key = regional_farm_animal_yak_plural
	}
}

SoundingRegionalFarmAnimal = {
	type = character
	random_valid = yes

	#Goat
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:goat
			}
			trigger_else = { always = yes }
			
		}
		localization_key = regional_farm_animal_bleating_goat
	}

	#Chicken
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:chicken
			}
			trigger_else = { always = yes }
		}
		localization_key = regional_farm_animal_clucking_chicken
	}

	#Cow
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:cow
			}
			trigger_else = { always = yes }
		}
		localization_key = regional_farm_animal_bellowing_cow
	}
	
	#Sheep
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:sheep
			}
			trigger_else = { always = yes }
		}
		localization_key = regional_farm_animal_bleating_sheep
	}

	#Pig
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:pig
			}
			trigger_else = { always = yes }
			# trigger_else = { 
			# 	location.faith = {
			# 		NOR = {
			# 			religion_tag = islam_religion
			# 			religion_tag = judaism_religion
			# 		}
			# 	}
			# }
		}
		localization_key = regional_farm_animal_snorting_pig
	}
	
	#Yak
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:yak
			}
			# trigger_else = {
			# 	location = {
			# 		OR = {
			# 			geographical_region = world_tibet
			# 			geographical_region = ghw_region_mongolia
			# 		}
			# 	}
			# }
			
		}
		localization_key = regional_farm_animal_grunting_yak
	}

	#Camel
	text = {
		trigger = {
			#No need to disturb the original implementation
			trigger_if = {
				limit = { 
					NOT = { exists = var:local_farm_animal }
				}
				location = {
					OR = {
						# geographical_region = world_middle_east
						# geographical_region = world_africa_north
						geographical_region = middleearth_haradwaith
					}
				}
			}
			trigger_else = { always = no }
			
		}
		localization_key = regional_farm_animal_grunting_camel
	}

	#Horse
	text = {
		trigger = {
			#No need to disturb the original implementation
			trigger_if = {
				limit = { 
					NOT = { exists = var:local_farm_animal }
				}
				always = yes
			}
			trigger_else = {
				always = no
			}
			
		}
		localization_key = regional_farm_animal_whinnying_horse
	}
}

RegionalArtilleryType = {
	type = character

	text = {
		trigger = { culture = { has_innovation = innovation_bombard } }
		localization_key = regional_artillery_bombard
	}
	text = {
		trigger = { culture = { has_innovation = innovation_trebuchet } }
		localization_key = regional_artillery_trebuchet
	}
	text = {
		trigger = { culture = { has_innovation = innovation_mangonel } }
		localization_key = regional_artillery_mangonel
	}
	text = {
		trigger = { always = yes }
		localization_key = regional_artillery_onager
	}
}

RegionalArtilleryPlural = {
	type = character

	parent = RegionalArtilleryType
	suffix = "_plural"
}

RegionalShipType = {
	type = character
	random_valid = yes

	# text = { #LotR
	# 	trigger = { culture = { has_cultural_pillar = heritage_north_germanic } }
	# 	localization_key = regional_ship_knarr
	# }
	text = {
		trigger = { artifact_use_northern_unit_visuals_trigger = yes }
		localization_key = regional_ship_longship
	}
	text = {
		trigger = { culture = { has_building_gfx = mediterranean_building_gfx } }
		localization_key = regional_ship_galley
	}
	# text = { #LotR
	# 	trigger = { culture = { has_cultural_pillar = heritage_byzantine } }
	# 	localization_key = regional_ship_dromon
	# }
	text = {
		trigger = { culture = { has_unit_gfx = western_unit_gfx } }
		localization_key = regional_ship_cog
	}
	text = {
		trigger = { always = yes }
		localization_key = regional_ship_fallback
	}
}

RegionalShipPlural = {
	type = character

	parent = RegionalShipType
	suffix = "_plural"
}

RegionalPoxAnimal = {
	type = character
	random_valid = yes

	#Goat
	text = {
		localization_key = regional_farm_animal_goat
	}

	#Chicken
	text = {
		localization_key = regional_farm_animal_chicken
	}

	#Cow
	text = {
		localization_key = regional_farm_animal_cow
	}

	#Sheep
	text = {
		localization_key = regional_farm_animal_sheep
	}

	#Pig
	text = {
		# trigger = { #LotR
		# 	faith = {
		# 		NOR = {
		# 			religion_tag = islam_religion
		# 			religion_tag = judaism_religion
		# 		}
		# 	}
		# }
		localization_key = regional_farm_animal_pig
	}

	#Yak
	# text = { #LotR
	# 	trigger = {
	# 		capital_province = {
	# 			OR = {
	# 				geographical_region = world_tibet
	# 				geographical_region = ghw_region_mongolia
	# 			}
	# 		}
	# 	}
	# 	localization_key = regional_farm_animal_yak
	# }

	#Monkey
	# text = { #LotR
	# 	trigger = {
	# 		capital_province = {
	# 			OR = {
	# 				geographical_region = world_middle_east
	# 				geographical_region = world_india
	# 				geographical_region = world_africa
	# 				geographical_region = world_burma
	# 			}
	# 		}
	# 	}
	# 	localization_key = animal_monkey
	# }
}


WritingInstrument = {
	type = character
	random_valid = yes

	text = { # Quills, European
		trigger = {
			trigger_if = {
				limit = {
					exists = capital_province
				}
				capital_province = {
					geographical_region = world_europe
				}
			}
			trigger_else_if = {
				limit = {
					exists = liege_or_court_owner.capital_province
				}
				liege_or_court_owner.capital_province = {
					geographical_region = world_europe
				}
			}
			trigger_else_if = {
				limit = { exists = location }
				location = { geographical_region = world_europe }
			}
			trigger_else = {
				always = no
			}
		}
		localization_key = quill
	}

	text = { # Pens, non-European. Made from bamboo, reeds, whatever. Just a bit of wood sharpened to a point and dipped in ink.
		localization_key = pen
		fallback = yes
	}
}

GetKnightErrantAnimal = {
	type = character
	
	text = {
		trigger = {
			location = {
				geographical_region = world_europe
			}
		}
		localization_key = GetKnightErrantAnimal_swan
	}
	# text = {
	# 	trigger = {
	# 		location = {
	# 			OR = {
	# 				geographical_region = world_india
	# 				geographical_region = world_burma
	# 				geographical_region = ghw_region_caucasus
	# 			}
	# 		}
	# 	}
	# 	localization_key = GetKnightErrantAnimal_tiger
	# }
	# text = {
	# 	trigger = {
	# 		location = {
	# 			geographical_region = world_africa
	# 		}
	# 	}
	# 	localization_key = GetKnightErrantAnimal_lion
	# }
	text = { # Basically everywhere
		localization_key = GetKnightErrantAnimal_hart
		fallback = yes
	}
}

