heroic = {
	color = { 243 150 0 }
	
	on_start = {
		legend_owner = {
			add_prestige = legend_prestige_gain
		}
		mark_historical_legend_as_done = yes
		if = {
			limit = {
				has_legend_chronicle = holy_warrior
				legend_protagonist = {
					is_landed = no
				}
			}
			set_legend_property = {
				name = ancestor
				target = legend_owner
			}
		}
	}
	
	is_valid_protagonist = {
		age >= 16
	}

	ai_protagonist_weight = {
		value = 0
		if = {
			limit = {
				this = scope:creator
				prestige_level < 3
			}
			add = 6
		}
		else_if = {
			limit = {
				this = scope:creator
				prestige_level >= 3
			}
			add = 10
		}
		if = {
			limit = {
				is_parent_of = scope:creator
				is_alive = no
			}
			add = 5
		}
		if = {
			limit = {
				is_primary_heir_of = scope:creator
			}
			add = 5
		}
		if = {
			limit = {
				is_spouse_of = scope:creator
				has_relation_soulmate = scope:creator
			}
			add = 3
		}
		if = {
			limit = {
				is_close_family_of = scope:creator
				has_any_good_relationship_with_root_trigger = yes
			}
			add = 1
		}
		if = {
			limit = {
				OR = {
					has_trait = brave
					has_trait = just
				}
			}
			add = 1
		}
		if = { # If they already have the trait it makes no sense that they will get it again
			limit = {
				has_trait = legend
			}
			add = -10
		}
	}
	
	quality = {
		famed = {
			spread_chance = {
				if = {
					limit = {
						exists = scope:legend.legend_owner
					}
					value = spread_chance_legends_default_value
					multiply = spread_chance_legends_mult_value
				}
				else = {
					value = 0
				}
			}

			max_provinces = 200

			creation_cost = {
				gold = legend_base_cost
			}

			owner_cost = {
				round = no
				gold = famed_legend_owner_cost
			}
			
			promoter_cost = {
				round = no
				gold = famed_legend_promoter_cost
			}
			
			upgrade_cost = {
				gold = legend_upgrade_cost
				prestige = legend_prestige_cost
			}

			removal_duration = {
				years = { 25 35 }
			}

			impact = {
				province_modifier = {
					county_opinion_add = 5
					stationed_maa_damage_mult = 0.05
				}
				owner_modifier = {
					monthly_prestige_gain_mult = 0.1
				}
				promoter_modifier = {
					monthly_prestige_gain_mult = 0.02
					martial = 1
				}
				# Effect run when a legend is completed
				# root = the owner
				on_complete = {
					promoted_legend ?= { save_scope_as = promoted_legend } #For the ending event loc
					scope:protagonist = { save_scope_as = legend_protagonist }
					give_legendary_building_heroic_tooltip_effect = yes
					legend_ending_rewards_heroic_effect = yes
					legend_ending_rewards_famed_heroic_effect = yes
					legend_ending_achievements_effect = yes
					# Ending event
					trigger_event = story_event_legends.0001
					
					#balancing_legend_global_var_effect = yes # Left for testing purposes
				}
			}
			ai_chance = {
				# root = character with the legend seed
				create = {
					value = heroic_legend_create_ai
				}

				# root = character who can promote
				# scope:legend = the legend to promote
				promote = {
					value = base_legend_promote_ai
					if = {
						limit = {
							ai_has_warlike_personality = yes
						}
						multiply = 1.2
					}
				}
				
				# root = character who can take a legend
				# scope:legend = the legend to take ownership
				take_unowned = 100

				# root = legend owner
				# scope:legend = the legend
				upgrade = {
					value = 1000 # Always upgrade when you can
				}

				# root = legend owner
				# scope:legend = the legend
				complete = {
					value = base_legend_complete_ai
				}
			}
		}
		
		illustrious = {
			spread_chance = {
				if = {
					limit = {
						exists = scope:legend.legend_owner
					}
					value = spread_chance_legends_default_value
					multiply = spread_chance_legends_mult_value
				}
				else = {
					value = 0
				}
			}

			max_provinces = 600
			
			creation_cost = {
				gold = {
					value = legend_base_cost
					multiply = 1.5
				}
			}

			owner_cost = {
				round = no
				gold = illustrious_legend_owner_cost
			}
			
			promoter_cost = {
				round = no
				gold = illustrious_legend_promoter_cost
			}
			
			upgrade_cost = {
				gold = legend_upgrade_cost
				prestige = legend_prestige_cost
			}

			removal_duration = {
				years = { 50 70 }
			}

			impact = {
				province_modifier = {
					county_opinion_add = 10
					stationed_maa_damage_mult = 0.1
				}
				owner_modifier = {
					monthly_prestige_gain_mult = 0.15
					diplomacy_per_prestige_level = 1
				}
				promoter_modifier = {
					monthly_prestige_gain_mult = 0.06
					martial = 2
				}
				# Effect run when a legend is completed
				# root = the owner
				on_complete = {
					promoted_legend ?= { save_scope_as = promoted_legend } #For the ending event loc
					scope:protagonist = { save_scope_as = legend_protagonist }
					custom_tooltip = {
						text = unlock_legendary_adventure_tt
						add_character_flag = launch_a_legendary_adventure
					}
					give_legendary_building_heroic_tooltip_effect = yes
					legend_ending_rewards_heroic_effect = yes
					legend_ending_rewards_illustrious_heroic_effect = yes
					legend_ending_achievements_effect = yes
					# Ending event
					trigger_event = story_event_legends.0001
					
					#balancing_legend_global_var_effect = yes # Left for testing purposes
				}
			}
			ai_chance = {
				# root = character with the legend seed
				create = {
					value = heroic_legend_create_ai
					add = illustrious_legend_create_ai
				}

				# root = character who can promote
				# scope:legend = the legend to promote
				promote = {
					value = base_legend_promote_ai
					if = {
						limit = {
							ai_has_warlike_personality = yes
						}
						multiply = 1.2
					}
				}
				
				# root = character who can take a legend
				# scope:legend = the legend to take ownership
				take_unowned = 100

				# root = legend owner
				# scope:legend = the legend
				upgrade = {
					value = 1000 # Always upgrade when you can
				}

				# root = legend owner
				# scope:legend = the legend
				complete = {
					value = base_legend_complete_ai
				}
			}
		}
		
		mythical = {
			spread_chance = {
				if = {
					limit = {
						exists = scope:legend.legend_owner
					}
					value = spread_chance_legends_default_value
					multiply = spread_chance_legends_mult_value
				}
				else = {
					value = 0
				}
			}

			max_provinces = 1000
			
			creation_cost = {
				gold = {
					value = legend_base_cost
					multiply = 2
				}
			}

			owner_cost = {
				round = no
				gold = mythical_legend_owner_cost
			}
			
			promoter_cost = {
				round = no
				gold = mythical_legend_promoter_cost
			}

			upgrade_cost = {
				gold = {
					value = {
						value = legend_upgrade_cost
						multiply = 2
					}
				}
				prestige = legend_prestige_cost
			}

			removal_duration = {
				years = { 75 100 }
			}

			impact = {
				province_modifier = {
					county_opinion_add = 20
					stationed_maa_damage_mult = 0.2
				}
				owner_modifier = {
					monthly_prestige_gain_mult = 0.25
					diplomacy_per_prestige_level = 2
				}
				promoter_modifier = {
					monthly_prestige_gain_mult = 0.1
					martial = 4
				}
				# Effect run when a legend is completed
				# root = the owner
				on_complete = {
					promoted_legend ?= { save_scope_as = promoted_legend } #For the ending event loc
					scope:protagonist = { save_scope_as = legend_protagonist }
					custom_tooltip = {
						text = unlock_legendary_adventure_tt
						add_character_flag = launch_a_legendary_adventure
					}
					custom_tooltip = {
						text = unlock_legendary_fealty_tt
						add_character_flag = legend_demand_fealty
					}
					give_legendary_building_mythical_heroic_tooltip_effect = yes
					legend_ending_rewards_heroic_effect = yes
					legend_ending_rewards_mythical_heroic_effect = yes
					legend_ending_achievements_effect = yes
					# Ending event
					trigger_event = story_event_legends.0001
					
					#balancing_legend_global_var_effect = yes # Left for testing purposes
				}
			}
			ai_chance = {
				# root = character with the legend seed
				create = {
					value = heroic_legend_create_ai
					add = mythical_legend_create_ai
				}

				# root = character who can promote
				# scope:legend = the legend to promote
				promote = {
					value = base_legend_promote_ai
					if = {
						limit = {
							ai_has_warlike_personality = yes
						}
						multiply = 1.2
					}
				}
				
				# root = character who can take a legend
				# scope:legend = the legend to take ownership
				take_unowned = 100

				# root = legend owner
				# scope:legend = the legend
				upgrade = {
					value = 1000 # Always upgrade when you can
				}

				# root = legend owner
				# scope:legend = the legend
				complete = {
					value = base_legend_complete_ai
				}
			}
		}
	}
	
	on_yearly = {
		scope:legend = { save_scope_as = promoted_legend }
		trigger_event = {
			on_action = legend_ongoing_events
		}
		trigger_event = {
			on_action = legend_changing_events
		}
	}
}

legitimizing = {
	color = { 129 29 176 }

	on_start = {
		legend_owner = {
			if = {
				limit = { exists = dynasty }
				dynasty = { add_dynasty_prestige = legend_dynasty_prestige_gain }
			}
			else = { add_prestige = legend_prestige_gain } 
		}
		mark_historical_legend_as_done = yes
		# Error logging for Legitimizing legends that will not give a claim
		if = {
			limit = {
				NOT = {
					exists = legend_property:title
				}
			}
			error_log = "Creating a Legitimizing legend without a Title property defined!"
		}
	}
	
	is_valid_protagonist = {
		age >= 16
	}

	ai_protagonist_weight = {
		value = 0
		if = { # More likely to choose yourself
			limit = {
				this = scope:creator
			}
			add = 10
		}
		if = {
			limit = {
				is_parent_of = scope:creator
				is_alive = no
			}
			add = 8
		}
		if = {
			limit = {
				is_primary_heir_of = scope:creator
			}
			add = 10
		}
		if = {
			limit = {
				is_spouse_of = scope:creator
				has_relation_soulmate = scope:creator
			}
			add = 1
		}
		if = {
			limit = {
				OR = {
					has_trait = diligent
					has_trait = just
				}
			}
			add = 1
		}
	}

	quality = {
		famed = {
			spread_chance = {
				if = {
					limit = {
						exists = scope:legend.legend_owner
					}
					value = spread_chance_legends_default_value
					multiply = spread_chance_legends_mult_value
				}
				else = {
					value = 0
				}
			}

			max_provinces = 200

			creation_cost = {
				gold = legend_base_cost
				prestige = minor_prestige_value
			}

			owner_cost = {
				round = no
				gold = famed_legend_owner_cost
			}
			
			promoter_cost = {
				round = no
				gold = famed_legend_promoter_cost
			}
			
			upgrade_cost = {
				gold = legend_upgrade_cost
				prestige = legend_prestige_cost
			}

			removal_duration = {
				years = { 25 35 }
			}

			impact = {
				province_modifier = {
					county_opinion_add = 5
					development_growth_factor = 0.01
				}
				owner_modifier = {
					monthly_dynasty_prestige = 0.1
					monthly_dynasty_prestige_mult = 0.05
				}
				promoter_modifier = {
					monthly_dynasty_prestige = 0.01
					stewardship = 1
				}
				
				# Effect run when a legend is completed
				# root = the owner
				on_complete = {
					promoted_legend ?= { save_scope_as = promoted_legend } #For the ending event loc
					scope:protagonist = { save_scope_as = legend_protagonist }
					if = {
						limit = {
							exists = scope:title
							scope:title.tier < tier_duchy
						}
						scope:title.duchy = { save_scope_as = title_claim }
					}
					else_if = {
						limit = {
							exists = scope:title
						}
						scope:title = { save_scope_as = title_claim }
					}
					give_legendary_building_legitimizing_tooltip_effect = yes
					legend_ending_rewards_legitimizing_effect = yes
					legend_ending_rewards_famed_legitimizing_effect = yes
					legend_ending_achievements_effect = yes
					trigger_event = story_event_legends.0002
					
					#balancing_legend_global_var_effect = yes # Left for testing purposes
				}
			}
			ai_chance = {
				# root = character with the legend seed
				create = {
					value = legitimizing_legend_create_ai
				}

				# root = character who can promote
				# scope:legend = the legend to promote
				promote = {
					value = base_legend_promote_ai
					if = {
						limit = {
							ai_has_economical_boom_personality = yes
						}
						multiply = 1.2
					}
				}
				
				# root = character who can take a legend
				# scope:legend = the legend to take ownership
				take_unowned = 100

				# root = legend owner
				# scope:legend = the legend
				upgrade = {
					value = 1000 # Always upgrade when you can
				}

				# root = legend owner
				# scope:legend = the legend
				complete = {
					value = base_legend_complete_ai
				}
			}
		}
		
		illustrious = {
			spread_chance = {
				if = {
					limit = {
						exists = scope:legend.legend_owner
					}
					value = spread_chance_legends_default_value
					multiply = spread_chance_legends_mult_value
				}
				else = {
					value = 0
				}
			}

			max_provinces = 600
			
			creation_cost = {
				gold = {
					value = legend_base_cost
					multiply = 1.5
				}
				prestige = medium_prestige_value
			}

			owner_cost = {
				round = no
				gold = illustrious_legend_owner_cost
			}
			
			promoter_cost = {
				round = no
				gold = illustrious_legend_promoter_cost
			}
			
			upgrade_cost = {
				gold = legend_upgrade_cost
				prestige = legend_prestige_cost
			}

			removal_duration = {
				years = { 50 70 }
			}

			impact = {
				province_modifier = {
					county_opinion_add = 10
					development_growth_factor = 0.02
				}
				owner_modifier = {
					monthly_dynasty_prestige = 0.25
					monthly_dynasty_prestige_mult = 0.1
				}
				promoter_modifier = {
					monthly_dynasty_prestige = 0.04
					stewardship = 2
				}
				
				# Effect run when a legend is completed
				# root = the owner
				on_complete = {
					promoted_legend ?= { save_scope_as = promoted_legend } #For the ending event loc
					scope:protagonist = { save_scope_as = legend_protagonist }
					custom_tooltip = {
						text = unlock_legendary_integration_d_tt
						add_character_flag = legendary_integration_d
					}
					if = {
						limit = {
							exists = scope:title
							scope:title.tier < tier_kingdom
						}
						scope:title.kingdom = { save_scope_as = title_claim }
					}
					else_if = {
						limit = {
							exists = scope:title
						}
						scope:title = { save_scope_as = title_claim }
					}
					give_legendary_building_legitimizing_tooltip_effect = yes
					legend_ending_rewards_legitimizing_effect = yes
					legend_ending_rewards_illustrious_legitimizing_effect = yes
					legend_ending_achievements_effect = yes
					trigger_event = story_event_legends.0002
					
					#balancing_legend_global_var_effect = yes # Left for testing purposes
				}
			}
			ai_chance = {
				# root = character with the legend seed
				create = {
					value = legitimizing_legend_create_ai
					add = illustrious_legend_create_ai
				}

				# root = character who can promote
				# scope:legend = the legend to promote
				promote = {
					value = base_legend_promote_ai
					if = {
						limit = {
							ai_has_economical_boom_personality = yes
						}
						multiply = 1.2
					}
				}
				
				# root = character who can take a legend
				# scope:legend = the legend to take ownership
				take_unowned = 100

				# root = legend owner
				# scope:legend = the legend
				upgrade = {
					value = 1000 # Always upgrade when you can
				}

				# root = legend owner
				# scope:legend = the legend
				complete = {
					value = base_legend_complete_ai
				}
			}
		}
		
		mythical = {
			spread_chance = {
				if = {
					limit = {
						exists = scope:legend.legend_owner
					}
					value = spread_chance_legends_default_value
					multiply = spread_chance_legends_mult_value
				}
				else = {
					value = 0
				}
			}

			max_provinces = 1000
			
			creation_cost = {
				gold = {
					value = legend_base_cost
					multiply = 2
				}
				prestige = {
					value = medium_prestige_value
					multiply = 1.5
				}
			}

			owner_cost = {
				round = no
				gold = mythical_legend_owner_cost
			}
			
			promoter_cost = {
				round = no
				gold = mythical_legend_promoter_cost
			}

			upgrade_cost = {
				gold = {
					value = {
						value = legend_upgrade_cost
						multiply = 2
					}
				}
				prestige = legend_prestige_cost
			}

			removal_duration = {
				years = { 75 100 }
			}

			impact = {
				province_modifier = {
					county_opinion_add = 20
					development_growth_factor = 0.06
				}
				owner_modifier = {
					monthly_dynasty_prestige = 0.5
					monthly_dynasty_prestige_mult = 0.2
				}
				promoter_modifier = {
					monthly_dynasty_prestige = 0.1
					stewardship = 4
				}
				# Effect run when a legend is completed
				# root = the owner
				on_complete = {
					promoted_legend ?= { save_scope_as = promoted_legend } #For the ending event loc
					scope:protagonist = { save_scope_as = legend_protagonist }
					custom_tooltip = {
						text = unlock_legendary_integration_k_tt
						add_character_flag = legendary_integration_k
					}
					if = { #Elessar Addition - Heirs of Isildur
						limit = {
							scope:ancestor ?= character:lineisildur0
							scope:title ?= title:e_arnor
							OR = {
								dynasty = dynasty:dynasty_aranbor
								dynasty = dynasty:dynasty_silivnir
							}
						}
						custom_tooltip = {
							text = unlock_reclaim_dunedain_royal_lineage_tt
							root.house = { add_house_modifier = heirs_of_isildur_modifier }
						}
					}
					else_if = { # Heirs of Anarion
						limit = {
							scope:ancestor ?= character:lineofanarion1
							scope:title ?= title:e_gondor
						}
						custom_tooltip = {
							text = unlock_claim_gondor_kingship_tt
							root.house = { add_house_modifier = heirs_of_anarion_modifier }
						}
					}
					else_if = { #Heirs of Castamir
						limit = {
							scope:ancestor ?= character:lineofanarion53
							scope:title ?= title:e_gondor
						}
						custom_tooltip = {
							text = unlock_castamiri_claim_tt
							root.house = { add_house_modifier = heirs_of_castamir_modifier }
						}
					}					
					if = {
						limit = {
							exists = scope:title
							scope:title.tier < tier_empire
						}
						scope:title.empire = { save_scope_as = title_claim }
					}
					else_if = {
						limit = {
							exists = scope:title
						}
						scope:title = { save_scope_as = title_claim }
					}
					if = {
						limit = {
							exists = scope:culture
						}
						set_variable = {
							name = legendary_culture
							value = scope:culture
						}
						scope:culture = { save_scope_as = legendary_culture }
					}
					give_legendary_building_mythical_legitimizing_tooltip_effect = yes
					legend_ending_rewards_legitimizing_effect = yes
					legend_ending_rewards_mythical_legitimizing_effect = yes
					legend_ending_achievements_effect = yes
					trigger_event = story_event_legends.0002
					
					#balancing_legend_global_var_effect = yes # Left for testing purposes
				}
			}
			ai_chance = {
				# root = character with the legend seed
				create = {
					value = legitimizing_legend_create_ai
					add = mythical_legend_create_ai
				}

				# root = character who can promote
				# scope:legend = the legend to promote
				promote = {
					value = base_legend_promote_ai
					if = {
						limit = {
							ai_has_economical_boom_personality = yes
						}
						multiply = 1.2
					}
				}
				
				# root = character who can take a legend
				# scope:legend = the legend to take ownership
				take_unowned = 100

				# root = legend owner
				# scope:legend = the legend
				upgrade = {
					value = 1000 # Always upgrade when you can
				}

				# root = legend owner
				# scope:legend = the legend
				complete = {
					value = base_legend_complete_ai
				}
			}
		}
	}
	
	on_yearly = {
		scope:legend = { save_scope_as = promoted_legend }
		trigger_event = {
			on_action = legend_ongoing_events
		}
		trigger_event = {
			on_action = legend_changing_events
		}
	}
}

holy = {
	color = { 53 141 229 }

	on_start = {
		legend_owner = {
			add_piety = legend_piety_gain
		}
		mark_historical_legend_as_done = yes
		if = {
			limit = {
				has_legend_chronicle = saintly_location
			}
			legend_owner.faith = {
				random_holy_site = {
					limit = {
						OR = {
							holder = root.legend_owner
							holder.top_liege = root.legend_owner
						}
					}
					save_scope_as = holy_site
				}
			}
			set_legend_property = {
				name = location
				target = scope:holy_site.title_province 
			}
		}
	}
	
	is_valid_protagonist = {
		age >= 16
	}

	ai_protagonist_weight = {
		value = 0
		if = {
			limit = {
				this = scope:creator
				piety_level < 3
			}
			add = 6
		}
		else_if = {
			limit = {
				this = scope:creator
				piety_level >= 3
			}
			add = 10
		}
		if = {
			limit = {
				is_parent_of = scope:creator
				is_alive = no
			}
			add = 8
		}
		if = {
			limit = {
				is_primary_heir_of = scope:creator
			}
			add = 5
		}
		if = {
			limit = {
				is_spouse_of = scope:creator
				has_relation_soulmate = scope:creator
			}
			add = 5
		}
		if = {
			limit = {
				is_close_family_of = scope:creator
				has_any_good_relationship_with_root_trigger = yes
			}
			add = 1
		}
		if = {
			limit = {
				has_trait = zealous
			}
			add = 1
		}
		if = { # If they already have the trait it makes no sense that they will get it again
			limit = {
				has_trait = saint
			}
			add = -10
		}
	}

	quality = {
		famed = {
			spread_chance = {
				if = {
					limit = {
						exists = scope:legend.legend_owner
					}
					value = spread_chance_legends_default_value
					multiply = spread_chance_legends_mult_value
				}
				else = {
					value = 0
				}
			}

			max_provinces = 200

			creation_cost = {
				gold = legend_base_cost
			}

			owner_cost = {
				round = no
				gold = famed_legend_owner_cost
			}
			
			promoter_cost = {
				round = no
				gold = famed_legend_promoter_cost
			}
			
			upgrade_cost = {
				gold = legend_upgrade_cost
				prestige = legend_piety_cost
			}

			removal_duration = {
				years = { 25 35 }
			}

			impact = {
				province_modifier = {
					county_opinion_add = 5
					monthly_county_control_growth_add = 0.1
				}
				owner_modifier = {
					monthly_piety_gain_mult = 0.1
				}
				promoter_modifier = {
					monthly_piety_gain_mult = 0.02
					learning = 1
				}
				on_complete = {
					promoted_legend ?= { save_scope_as = promoted_legend } #For the ending event loc
					scope:protagonist = { save_scope_as = legend_protagonist }
					give_legendary_building_holy_tooltip_effect = yes
					legend_ending_rewards_holy_effect = yes
					legend_ending_rewards_famed_holy_effect = yes
					legend_ending_achievements_effect = yes
					trigger_event = story_event_legends.0003
					
					#balancing_legend_global_var_effect = yes # Left for testing purposes
				}
			}
			ai_chance = {
				# root = character with the legend seed
				create = {
					value = holy_legend_create_ai
				}

				# root = character who can promote
				# scope:legend = the legend to promote
				promote = {
					value = base_legend_promote_ai
					if = {
						limit = {
							ai_has_economical_boom_personality = yes
						}
						multiply = 1.2
					}
				}
				
				# root = character who can take a legend
				# scope:legend = the legend to take ownership
				take_unowned = 100

				# root = legend owner
				# scope:legend = the legend
				upgrade = {
					value = 1000 # Always upgrade when you can
				}

				# root = legend owner
				# scope:legend = the legend
				complete = {
					value = base_legend_complete_ai
				}
			}
		}
		
		illustrious = {
			spread_chance = {
				if = {
					limit = {
						exists = scope:legend.legend_owner
					}
					value = spread_chance_legends_default_value
					multiply = spread_chance_legends_mult_value
				}
				else = {
					value = 0
				}
			}

			max_provinces = 600
			
			creation_cost = {
				gold = {
					value = legend_base_cost
					multiply = 1.5
				}
			}

			owner_cost = {
				round = no
				gold = illustrious_legend_owner_cost
			}
			
			promoter_cost = {
				round = no
				gold = illustrious_legend_promoter_cost
			}
			
			upgrade_cost = {
				gold = legend_upgrade_cost
				prestige = legend_piety_cost
			}

			removal_duration = {
				years = { 50 70 }
			}

			impact = {
				province_modifier = {
					county_opinion_add = 10
					monthly_county_control_growth_add = 0.15
				}
				owner_modifier = {
					monthly_piety_gain_mult = 0.15
					diplomacy_per_piety_level = 1
				}
				promoter_modifier = {
					monthly_piety_gain_mult = 0.04
					learning = 2
				}
				on_complete = {
					promoted_legend ?= { save_scope_as = promoted_legend } #For the ending event loc
					scope:protagonist = { save_scope_as = legend_protagonist }
					custom_tooltip = {
						text = unlock_legendary_conversion_tt
						add_character_flag = legendary_conversion
					}
					give_legendary_building_holy_tooltip_effect = yes
					legend_ending_rewards_holy_effect = yes
					legend_ending_rewards_illustrious_holy_effect = yes
					legend_ending_achievements_effect = yes
					trigger_event = story_event_legends.0003
					
					#balancing_legend_global_var_effect = yes # Left for testing purposes
				}
			}
			ai_chance = {
				# root = character with the legend seed
				create = {
					value = holy_legend_create_ai
					add = illustrious_legend_create_ai
				}

				# root = character who can promote
				# scope:legend = the legend to promote
				promote = {
					value = base_legend_promote_ai
					if = {
						limit = {
							ai_has_economical_boom_personality = yes
						}
						multiply = 1.2
					}
				}
				
				# root = character who can take a legend
				# scope:legend = the legend to take ownership
				take_unowned = 100

				# root = legend owner
				# scope:legend = the legend
				upgrade = {
					value = 1000 # Always upgrade when you can
				}

				# root = legend owner
				# scope:legend = the legend
				complete = {
					value = base_legend_complete_ai
				}
			}
		}
		
		mythical = {
			spread_chance = {
				if = {
					limit = {
						exists = scope:legend.legend_owner
					}
					value = spread_chance_legends_default_value
					multiply = spread_chance_legends_mult_value
				}
				else = {
					value = 0
				}
			}

			max_provinces = 1000
			
			creation_cost = {
				gold = {
					value = legend_base_cost
					multiply = 2
				}
			}

			owner_cost = {
				round = no
				gold = mythical_legend_owner_cost
			}
			
			promoter_cost = {
				round = no
				gold = mythical_legend_promoter_cost
			}

			upgrade_cost = {
				gold = {
					value = {
						value = legend_upgrade_cost
						multiply = 2
					}
				}
				prestige = legend_piety_cost
			}

			removal_duration = {
				years = { 75 100 }
			}

			impact = {
				province_modifier = {
					county_opinion_add = 20
					monthly_county_control_growth_add = 0.25
				}
				owner_modifier = {
					monthly_piety_gain_mult = 0.25
					diplomacy_per_piety_level = 2
				}
				promoter_modifier = {
					monthly_piety_gain_mult = 0.1
					learning = 4
				}
				# Effect run when a legend is completed
				# root = the owner
				on_complete = {
					promoted_legend ?= { save_scope_as = promoted_legend } #For the ending event loc
					scope:protagonist = { save_scope_as = legend_protagonist }
					custom_tooltip = {
						text = unlock_legendary_conversion_tt
						add_character_flag = legendary_conversion
					}
					if = {
						limit = {
							faith = { has_doctrine_parameter = holy_wars_forbidden }
						}
						custom_tooltip = {
							text = unlock_legendary_pacifism_spread_tt
							add_character_flag = legendary_pacifism_spread
						}
					}
					else = {
						custom_tooltip = {
							text = unlock_legendary_holy_war_tt
							add_character_flag = legendary_holy_war
						}
					}
					give_legendary_building_mythical_holy_tooltip_effect = yes
					legend_ending_rewards_holy_effect = yes
					legend_ending_rewards_mythical_holy_effect = yes
					legend_ending_achievements_effect = yes
					trigger_event = story_event_legends.0003
					
					#balancing_legend_global_var_effect = yes # Left for testing purposes
				}
			}
			ai_chance = {
				# root = character with the legend seed
				create = {
					value = holy_legend_create_ai
					add = mythical_legend_create_ai
				}

				# root = character who can promote
				# scope:legend = the legend to promote
				promote = {
					value = base_legend_promote_ai
					if = {
						limit = {
							ai_has_economical_boom_personality = yes
						}
						multiply = 1.2
					}
				}
				
				# root = character who can take a legend
				# scope:legend = the legend to take ownership
				take_unowned = 100

				# root = legend owner
				# scope:legend = the legend
				upgrade = {
					value = 1000 # Always upgrade when you can
				}

				# root = legend owner
				# scope:legend = the legend
				complete = {
					value = base_legend_complete_ai
				}
			}
		}
	}
	
	on_yearly = {
		scope:legend = { save_scope_as = promoted_legend }
		trigger_event = {
			on_action = legend_ongoing_events
		}
		trigger_event = {
			on_action = legend_changing_events
		}
	}
}
