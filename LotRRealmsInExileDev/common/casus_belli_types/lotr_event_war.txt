kingstrife_cb = {
	group = civil_war
	ai_only_against_liege = yes
	target_titles = none
	target_de_jure_regions_above = yes
	white_peace_possible = no

	allowed_for_character = {
		NOT = {
			has_government = feudal_government
			has_government = tribal_government
			has_government = steward_government
			has_government = republic_government 
			has_government = theocracy_government 
			has_government = clan_government 
			has_government = mercenary_government
			has_government = holy_order_government 
		}
	}

	on_declaration = {
		#on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = kingstrife_victory_desc_defender
			}
			desc = kingstrife_victory_desc
		}
		
	}

	on_victory = {

		scope:attacker = { 
			show_pow_release_message_effect = yes
		}

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = 80
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 5
			LOSER_ALLY_FAME_SCALE = 5
		}
		
		scope:defender = {
			# If we win the rebellion, our liege loses any legal right to imprison us/banish us/revoke our titles.
			consume_all_criminal_reasons_effect = {
				LIEGE = scope:defender
				CRIMINAL = scope:attacker
			}
			# Remove offending HumSac modifiers.
			hidden_effect = { fp1_remove_humsac_offended_counties_effect = yes }
			# Then our liege is deposed (but the imprisonment loss remains true for their heir).
		}
	
		hidden_effect = {
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = victory
				}
				if = {
					limit = {
						character:lineisildur42 = { is_alive = yes }
					}
					character:lineisildur42 = {
						trigger_event = gondor.0562
					}
				}
				else = {
					trigger_event = gondor.0565
				}
			}
		}
	}

	on_white_peace_desc = {
		desc = WHITE_PEACE_DISABLED
	}

	on_white_peace = {
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = kingstrife_defeat_desc_defender
			}
			desc = kingstrife_defeat_desc
		}
		
	}

	on_defeat = {

		# Defender gets Prestige Experience, Attacker loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = 80
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 5
			LOSER_ALLY_FAME_SCALE = -5
		}

		scope:attacker = { show_pow_release_message_effect = yes }
		on_lost_faction_revolt_war = yes
		scope:defender = {
			add_dread = medium_dread_gain
			trigger_event = gondor.0572
		}
	}
	
	on_invalidated_desc = msg_invalidate_war_title

	check_attacker_inheritance_validity = no

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "DEPOSE_WAR_NAME"

	interface_priority = 80

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	attacker_score_from_occupation_scale = 50
	defender_score_from_occupation_scale = 50
	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 100

	max_ai_diplo_distance_to_title = 500
}

castamir_claim_cb = {
	group = invasion

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		NOT = {
			has_government = feudal_government
			has_government = tribal_government
			has_government = steward_government
			has_government = republic_government 
			has_government = theocracy_government 
			has_government = clan_government 
			has_government = mercenary_government
			has_government = holy_order_government 
		}
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	
	on_declaration = {
		on_declared_war = yes
        scope:defender = {
                trigger_event = umbar.1002
            }
	}	

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = invasion_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
			desc = invasion_war_warning_desc
		}
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
			take_occupied = yes
		}
		resolve_title_and_vassal_change = scope:change

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
		
		hidden_effect = {
            scope:attacker = {
                trigger_event = umbar.1001
            }
		}
		
		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_prestige = mongol_invasion_cb_prestige_white_peace
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "INVASION_CB_NAME"
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8
	
}

rohan_war_cb = {
	group = invasion

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		NOT = {
			has_government = feudal_government
			has_government = tribal_government
			has_government = steward_government
			has_government = republic_government 
			has_government = theocracy_government 
			has_government = clan_government 
			has_government = mercenary_government
			has_government = holy_order_government 
		}
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	
	on_declaration = {
		on_declared_war = yes
        scope:defender = {
                trigger_event = theodred.0111
        }
	}	

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = invasion_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
			desc = invasion_war_warning_desc
		}
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
			take_occupied = yes
		}
		resolve_title_and_vassal_change = scope:change

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
		
		hidden_effect = {
            scope:attacker = {
                trigger_event = theodred.0115
            }
		}
		
		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}
		
		hidden_effect = {
            scope:attacker = {
                trigger_event = theodred.0116
            }
		}

		# Truce
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
			trigger_event = theodred.0116
		}
		on_lost_aggression_war_discontent_loss = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "INVASION_CB_NAME"
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8
}

pezarsan_invasion_war = {
	group = claim

	target_titles = claim

	on_declaration = {
		on_declared_war = yes
	}
	allowed_for_character = {
		NOT = {
			has_government = feudal_government
			has_government = tribal_government
			has_government = steward_government
			has_government = republic_government 
			has_government = theocracy_government 
			has_government = clan_government 
			has_government = mercenary_government
			has_government = holy_order_government 
		}
	}
	should_invalidate = {
		OR = {
			NOT = {
				any_in_list = {
					list = target_titles
					any_in_de_jure_hierarchy = {
						tier >= tier_county
						exists = holder
						holder = {
							OR = {
								this = scope:defender
								target_is_liege_or_above = scope:defender
							}
						}
					}
				}
			}
			AND = { 
				NOT = { scope:claimant = scope:attacker } 
				scope:claimant = {
					OR = {
						is_alive = no 
						NOR = { 
							is_vassal_or_below_of = scope:attacker 
							is_courtier_of = scope:attacker 
						}
					}
				}
			} 
		}
	}

	on_invalidated_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { scope:claimant = scope:attacker } 
					scope:claimant = { is_alive = no }
				}
				desc = msg_claim_war_invalidated_claimant_unavailable_dead_message
			}
			triggered_desc = {
				trigger = {
					scope:claimant = {
						NOR = { 
							this = scope:attacker 
							NOR = { 
								is_vassal_or_below_of = scope:attacker 
								is_courtier_of = scope:attacker 
							}
						}
					}
				}
				desc = msg_claim_war_invalidated_claimant_unavailable_not_vassal_message
			}
			desc = msg_claim_war_invalidated_message
		}
	}
	
	on_invalidated = {
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:claimant = { is_local_player = yes }
				}
				desc = claim_cb_victory_desc_attacker_claimant
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = claim_cb_victory_desc_attacker
			}
			desc = claim_cb_victory_desc
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
        scope:attacker = {
            trigger_event = {
				id = harad.0202
				days = { 5 30 }
			}
        }
		
		create_title_and_vassal_change = {
			type = conquest_claim
			save_scope_as = change
			add_claim_on_loss = yes
		}
		# Create a claim CB which is executed to handle title/vassal changes, in addition to being used to calculate Prestige awards for war participants.
		setup_claim_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			change = scope:change
		}

		resolve_title_and_vassal_change = scope:change

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:claimant.primary_title.tier < scope:attacker.primary_title.tier
				trigger_if = {
					limit = {
						exists = scope:claimant.liege
					}
					NOT = { scope:claimant.liege = scope:attacker }
				}
				trigger_else = {
					always = yes
				}
			}

			create_title_and_vassal_change = {
				type = conquest_claim
				save_scope_as = change_two
				add_claim_on_loss = yes
			}
			scope:claimant = {
				change_liege = {
					liege = scope:attacker
					change = scope:change_two
				}
			}
			resolve_title_and_vassal_change = scope:change_two
		}

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:attacker = {
					can_add_hook = {
					  	type = favor_hook
					  	target = scope:claimant
					}
				}
			}
			scope:attacker = {
				add_hook = {
		  			target = scope:claimant
		  			type = favor_hook
		 		}
			}
		}

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = claim_cb_white_peace_desc_defender
			}
			desc = claim_cb_white_peace_desc
		}
		
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

        scope:attacker = {
            trigger_event = {
				id = harad.0203
				days = { 5 30 }
			}
        }

		# press claims
		every_in_list = {
			list = target_titles
			if = {
				limit = { scope:claimant = { has_weak_claim_on = prev } }
				scope:claimant = {
					make_claim_strong = prev
				}
			}
		}

		# Create an 'helper' claim CB which we won't execute, but can use to determine how much Prestige should be given to war participants.
		setup_claim_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = scope:cb_prestige_factor # Set by 'setup_claim_cb'
				multiply = -5.0
			}
		}
		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
		# Defender neither gains nor loses any prestige.

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:attacker = {
					can_add_hook = {
					  	type = favor_hook
					  	target = scope:claimant
					}
				}
			}
			scope:attacker = {
				add_hook = {
		  			target = scope:claimant
		  			type = favor_hook
		 		}
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = { scope:claimant = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_attacker_claimant
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_attacker
			}
			desc = claim_cb_defeat_desc
		}
		
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

        scope:attacker = {
            trigger_event = {
				id = harad.0203
				days = { 5 30 }
			}
        }

		# lose claims
		every_in_list = {
			list = target_titles
			scope:claimant = {
				remove_claim = prev
			}
		}

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:attacker = {
					can_add_hook = {
					  	type = favor_hook
					  	target = scope:claimant
					}
				}
			}
			scope:attacker = {
				add_hook = {
		  			target = scope:claimant
		  			type = favor_hook
		 		}
			}
		}

		# Attacker pays gold to the defender as reparations.
		scope:attacker = {
			pay_short_term_gold = {
				gold = 3
				target = scope:defender
				yearly_income = yes
			}
		}
		# Create an 'helper' claim CB which we won't execute, but can use to determine how much Prestige should be given to war participants.
		setup_claim_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}
		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# Truce
		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "CLAIM_WAR_NAME"
	my_war_name = "CLAIM_WAR_NAME_MY"
	war_name_base = "CLAIM_WAR_NAME_BASE"
	cb_name = "CLAIM_CB_NAME"
	interface_priority = 60

	should_show_war_goal_subview = yes

	attacker_wargoal_percentage = 0.8

	max_ai_diplo_distance_to_title = 1000
}

final_battle_mordor_cb = {
	group = invasion

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		NOT = {
			has_government = feudal_government
			has_government = tribal_government
			has_government = steward_government
			has_government = republic_government 
			has_government = theocracy_government 
			has_government = clan_government 
			has_government = mercenary_government
			has_government = holy_order_government 
		}
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	
	on_declaration = {
		on_declared_war = yes
      }

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = mordor_invasion_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
			take_occupied = yes
		}
		resolve_title_and_vassal_change = scope:change
		
		scope:defender = {
			every_held_title = {
				limit = {
					tier > tier_kingdom
				}
				holder = { # Destroy that title
					destroy_title = prev
				}
			}
		}
		
		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
		
		hidden_effect = {
            scope:attacker = {
                trigger_event = sauron.2001
            }
			every_living_character = {
				trigger_event = {
					id = sauron.2002
					days = 30
				}
			}
		}
		
		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}
		
		# Truce
		add_truce_white_peace_effect = yes
	}
	
	on_invalidated_desc = msg_invalidate_war_title

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "MORDOR_INVASION_CB_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "INVASION_CB_NAME"
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8
}

final_battle_gondor_cb = {
	group = event 

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		NOT = {
			has_government = feudal_government
			has_government = tribal_government
			has_government = steward_government
			has_government = republic_government 
			has_government = theocracy_government 
			has_government = clan_government 
			has_government = mercenary_government
			has_government = holy_order_government 
		}
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	
	war_name = "INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "INVASION_CB_NAME"
	
	on_declaration = {
		on_declared_war = yes
        scope:defender = {
                trigger_event = gondor.2101
        }
	}
	
	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes
	}
	
	on_invalidated_desc = msg_invalidate_war_title

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = gondor_final_battle_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			every_held_title = {
				limit = {
					tier > tier_county
				}
				holder = { # Destroy that title
					destroy_title = prev
				}
			}
			every_held_title = { # Distribute excess non-capital counties to new characters
		
			limit = { # For every non-capital county
				tier = tier_county
			}

			set_county_faith = faith:sons_of_sauron

			save_temporary_scope_as = excess_title

			create_character = { # Create a new character to hold the title
				employer = root
				culture = culture:burgulhai
				faith = faith:sons_of_sauron
				after_creation = {
					save_temporary_scope_as = new_holder
				}
			}
			
			create_title_and_vassal_change = { # Define type of title change as a granting of the title
				type = granted
				save_scope_as = title_change
				add_claim_on_loss = no
			}
			
			scope:excess_title = { # Set the new character to be the new holder of the title
				change_title_holder = {
					holder = scope:new_holder
					change = scope:title_change
				}
			}
			
			resolve_title_and_vassal_change = scope:title_change # Take a look at yourself, and then make that... change!
			
			game_rule_create_spouse_and_children = { CHARACTER = scope:new_holder } # Create a family for the new holder
			
		}
			death = lineofsauron
		}	
		character:nazgul1 = {
			every_held_title = {
				limit = {
					tier > tier_county
				}
				holder = { # Destroy that title
					destroy_title = prev
				}
			}
			every_held_title = { # Distribute excess non-capital counties to new characters
			
				limit = { # For every non-capital county
					tier = tier_county
				}
	
				set_county_faith = faith:sons_of_sauron
	
				save_temporary_scope_as = excess_title
	
				create_character = { # Create a new character to hold the title
					employer = root
					culture = culture:burgulhai
					faith = faith:sons_of_sauron
					after_creation = {
						save_temporary_scope_as = new_holder
					}
				}
				
				create_title_and_vassal_change = { # Define type of title change as a granting of the title
					type = granted
					save_scope_as = title_change
					add_claim_on_loss = no
				}
				
				scope:excess_title = { # Set the new character to be the new holder of the title
					change_title_holder = {
						holder = scope:new_holder
						change = scope:title_change
					}
				}
				
				resolve_title_and_vassal_change = scope:title_change # Take a look at yourself, and then make that... change!
	
#				game_rule_create_spouse_and_children = { CHARACTER = scope:new_holder } # Create a family for the new holder
				
			}
			death = nazgul1
		}
		character:nazgul5 = {
			every_held_title = {
				limit = {
					tier > tier_county
				}
				holder = { # Destroy that title
					destroy_title = prev
				}
			}
			every_held_title = { # Distribute excess non-capital counties to new characters
			
				limit = { # For every non-capital county
					tier = tier_county
				}
	
				set_county_faith = faith:sons_of_sauron
	
				save_temporary_scope_as = excess_title
	
				create_character = { # Create a new character to hold the title
					employer = root
					culture = culture:burgulhai
					faith = faith:sons_of_sauron
					after_creation = {
						save_temporary_scope_as = new_holder
					}
				}
				
				create_title_and_vassal_change = { # Define type of title change as a granting of the title
					type = granted
					save_scope_as = title_change
					add_claim_on_loss = no
				}
				
				scope:excess_title = { # Set the new character to be the new holder of the title
					change_title_holder = {
						holder = scope:new_holder
						change = scope:title_change
					}
				}
				
				resolve_title_and_vassal_change = scope:title_change # Take a look at yourself, and then make that... change!
	
#				game_rule_create_spouse_and_children = { CHARACTER = scope:new_holder } # Create a family for the new holder
				
			}
			death = nazgul5
		}
		
		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			#LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			#LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			#LOSER_ALLY_FAME_SCALE = 10
		}
		
		hidden_effect = {
            scope:attacker = {
                trigger_event = gondor.2102
            }
			every_living_character = {
				trigger_event = {
					id = gondor.2103
					days = 30
				}
			}
			every_living_character = {
				limit = {
					OR = {
						faith = faith:lidless_eye
						faith = faith:red_eye_cult
					}
					OR = {
						culture_group = culture_group:lotr_mountain_orc_group
						culture_group = culture_group:lotr_uruk_group
					}
				}
				set_character_faith = faith:sons_of_sauron
				every_held_title = {
					limit = {
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
						}					
					}
					set_county_faith = faith:sons_of_sauron
				}
			}
			every_living_character = {
				limit = {
					OR = {
						faith = faith:lidless_eye
						faith = faith:red_eye_cult
					}
					culture_group = culture_group:lotr_haradrim_group
				}
				set_character_faith = faith:faith_haruze
				every_held_title = {
					limit = {
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
						}					
					}
					set_county_faith = faith:faith_haruze
				}
			}
			every_living_character = {
				limit = {
					OR = {
						faith = faith:lidless_eye
						faith = faith:red_eye_cult
					}
					culture_group = culture_group:lotr_ioriag_group
				}
				set_character_faith = faith:nurniag
				every_held_title = {
					limit = {
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
						}					
					}
					set_county_faith = faith:nurniag
				}				
			}
			every_living_character = {
				limit = {
					OR = {
						faith = faith:lidless_eye
						faith = faith:red_eye_cult
					}
					OR = {
						culture_group = culture_group:lotr_dunedain_group
						culture_group = culture_group:lotr_black_numenorean_group
					}
				}
				set_character_faith = faith:kings_men
				every_held_title = {
					limit = {
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
						}					
					}
					set_county_faith = faith:kings_men
				}				
			}
			every_living_character = {
				limit = {
					OR = {
						faith = faith:lidless_eye
						faith = faith:red_eye_cult
					}
					OR = {
						culture_group = culture_group:lotr_dunlending_group
						culture_group = culture_group:lotr_gondorian_gwathuirim_group
					}
				}
				set_character_faith = faith:faith_dunlending_khrabnazerh
				every_held_title = {
					limit = {
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
						}					
					}
					set_county_faith = faith:faith_dunlending_khrabnazerh
				}				
			}
			every_living_character = {
				limit = {
					OR = {
						faith = faith:lidless_eye
						faith = faith:red_eye_cult
					}
					culture_group = culture_group:lotr_hadorim_group
				}
				set_character_faith = faith:faith_withered_court
				every_held_title = {
					limit = {
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
						}					
					}
					set_county_faith = faith:faith_withered_court
				}				
			}
			every_living_character = {
				limit = {
					OR = {
						faith = faith:lidless_eye
						faith = faith:red_eye_cult
					}
					NOR = {	
						culture_group = culture_group:lotr_mountain_orc_group
						culture_group = culture_group:lotr_uruk_group
						culture_group = culture_group:lotr_haradrim_group
						culture_group = culture_group:lotr_ioriag_group
						culture_group = culture_group:lotr_dunedain_group
						culture_group = culture_group:lotr_black_numenorean_group
						culture_group = culture_group:lotr_dunlending_group
						culture_group = culture_group:lotr_gondorian_gwathuirim_group
						culture_group = culture_group:lotr_hadorim_group
					}
				}
				set_character_faith = faith:melkorite
				every_held_title = {
					limit = {
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
						}					
					}
					set_county_faith = faith:melkorite
				}				
			}
		}
		
		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}
}




