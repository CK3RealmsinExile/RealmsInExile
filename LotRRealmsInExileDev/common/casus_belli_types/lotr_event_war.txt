
##################
#
#	T.A. 3000 CBs
#
#	T.A. 1349 CBs
#
#
#
#
###################

#####################
### T.A. 3000 CBs ###
#####################

kingstrife_cb = {
	group = civil_war
	ai_only_against_liege = yes
	target_titles = none
	target_de_jure_regions_above = yes
	white_peace_possible = no

	allowed_for_character = {
		always = no
	}

	on_declaration = {
		#on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = kingstrife_victory_desc_defender
			}
			desc = kingstrife_victory_desc
		}
		
	}

	on_victory = {

		scope:attacker = { 
			show_pow_release_message_effect = yes
		}

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = 80
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 5
			LOSER_ALLY_FAME_SCALE = 5
		}
		
		scope:defender = {
			# If we win the rebellion, our liege loses any legal right to imprison us/banish us/revoke our titles.
			consume_all_criminal_reasons_effect = {
				LIEGE = scope:defender
				CRIMINAL = scope:attacker
			}
			# Remove offending HumSac modifiers.
			hidden_effect = { fp1_remove_humsac_offended_counties_effect = yes }
			# Then our liege is deposed (but the imprisonment loss remains true for their heir).
		}
	
		hidden_effect = {
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = victory
				}
				if = {
					limit = {
						character:lineisildur42 = { is_alive = yes }
					}
					character:lineisildur42 = {
						trigger_event = gondor.0562
					}
				}
				else = {
					trigger_event = gondor.0565
				}
			}
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		desc = WHITE_PEACE_DISABLED
	}

	on_white_peace = {
		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = kingstrife_defeat_desc_defender
			}
			desc = kingstrife_defeat_desc
		}
		
	}

	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		# Defender gets Prestige Experience, Attacker loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = 80
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 5
			LOSER_ALLY_FAME_SCALE = -5
		}

		scope:attacker = { show_pow_release_message_effect = yes }
		on_lost_faction_revolt_war = yes
		scope:defender = {
			add_dread = medium_dread_gain
			trigger_event = gondor.0572
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	on_invalidated_desc = msg_invalidate_war_title

	check_attacker_inheritance_validity = no

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "DEPOSE_WAR_NAME"

	interface_priority = 80

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	attacker_score_from_occupation_scale = 50
	defender_score_from_occupation_scale = 50
	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 100

	max_ai_diplo_distance_to_title = 500
}

tedjin_civil_war_cb = {
	group = civil_war
	ai_only_against_liege = yes
	allowed_for_character = {
		scope:attacker = {
			is_leading_faction_type = tedjin_civil_war_faction
		}
		
		scope:attacker = {		
			NOT = {
				has_culture = culture:wastelands
			}
		}
	}

	allowed_against_character = {
		scope:attacker = {
			liege = scope:defender
		}
		
		scope:attacker = {		
			NOT = {
				has_culture = culture:wastelands
			}
		}
	}

	target_de_jure_regions_above = yes

	valid_to_start = {
	}

	on_declaration = {
		if = {
			limit = { # Minor News
				has_game_rule = all_news
			}
			every_player = { # Global News Announcement
				trigger_event = news_event.0001
			}
		}
		title:k_izindizanda_eruhinim.holder = {
			trigger_event = {
				id = tedjin.0153
				days = { 10 30 }
			}
		}
		title:e_mordor.holder = {
			trigger_event = {
				id = tedjin.0150
			}
		}
		title:k_haruzan.holder = {
			trigger_event = {
				id = tedjin.0150
			}
		}
		title:k_umbar.holder = {
			trigger_event = {
				id = tedjin.0150
			}
		}
		title:e_bellakar.holder = {
			trigger_event = {
				id = tedjin.0150
			}
		}
		title:k_felaya.holder = {
			trigger_event = {
				id = tedjin.0150
			}
		}
		title:d_nykkea.holder = {
			trigger_event = {
				id = tedjin.0150
			}
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = tedjin_civil_war_victory_defender_desc
			}
			desc = tedjin_civil_war_victory_desc
		}
		desc = tedjin_civil_war_victory_end_desc		
	}

	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes
		
		scope:attacker = { 
			show_pow_release_message_effect = yes 
			hard_imprison_character_effect = {
				TARGET = scope:defender
				IMPRISONER = this
			}
		}
		scope:defender = {
			add_prestige = -500
			add_dread = -30

			create_title_and_vassal_change = {
				type = faction_demand
				save_scope_as = change
				add_claim_on_loss = no
			}
	

			every_held_title = {
				change_title_holder = {
					holder = scope:attacker
					change = scope:change
				}
			}
			
			resolve_title_and_vassal_change = scope:change
			
			add_realm_law = crown_authority_0
		}
		
		if = {
			limit = {
				character:lineofsauron = {
					has_character_flag = promised_tedjin_tributary
				}
			}
			make_tributary = {
				TYPE = tributary_non_permanent
				SUZERAIN = character:lineofsauron
				TRIBUTARY = scope:attacker
			}
			character:lineofsauron = {
				remove_character_flag = promised_tedjin_tributary
			}
		}

		hidden_effect = {
			set_global_variable = {
				name = tedjin_civil_war_over
				value = yes
			}
			set_global_variable = {
				name = tedjin_civil_war_result
				value = 1 #Azumen Victory
			}
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = victory
				}
				joined_faction = {
					save_scope_as = saved_faction
					add_faction_discontent = -200
					every_faction_member = {
						if = {
							limit = {
								exists = scope:attacker.joined_faction # Can get destroyed as we loop through
							}
							leave_faction_with_cooldown_effect = {
								FACTION = scope:attacker.joined_faction
								YEARS = liberty_war_victory_cooldown
							}
						}
						else = {
							add_faction_cooldown_effect = { YEARS = liberty_war_victory_cooldown }
						}
					}
				}
				# The faction should have already been destroyed due to all members leaving above, but in case it hasn't, destroy it now. 
				if = {
					limit = { exists = scope:saved_faction }
					scope:saved_faction = {
						destroy_faction = yes
					}
				}
			}

			# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
			laamp_as_mercenary_payout_tooltip_effect = yes
		}
		
		scope:attacker = {
			trigger_event = {
				id = tedjin.0200
				days = 7
			}
		}
		#scope:war = {
		#	every_war_participant = {
		#		limit = { 
		#			NOT = { this = scope:attacker }
		#		}
		#		trigger_event = {
		#			id = tedjin.0201
		#		}
		#	}
		#}
		#title:e_mordor.holder = {
		#	trigger_event = {
		#		id = tedjin.0201
		#	}
		#}
		#title:k_haruzan.holder = {
		#	trigger_event = {
		#		id = tedjin.0201
		#	}
		#}
		#title:k_umbar.holder = {
		#	trigger_event = {
		#		id = tedjin.0201
		#	}
		#}
		#title:e_bellakar.holder = {
		#	trigger_event = {
		#		id = tedjin.0201
		#	}
		#}
		#title:k_felaya.holder = {
		#	trigger_event = {
		#		id = tedjin.0201
		#	}
		#}
		#title:d_nykkea.holder = {
		#	trigger_event = {
		#		id = tedjin.0201
		#	}
		#}
		if = {
			limit = { # Minor News
				has_game_rule = all_news
			}
			every_player = { #Global News Announcement
				trigger_event = news_event.0007
			}
		}
	}

	white_peace_possible = no

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = tribal_subjugation_cb_white_peace_desc_defender
			}
			desc = tribal_subjugation_cb_white_peace_desc
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = tedjin_civil_war_defeat_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker.joined_faction = {
						any_faction_member = { is_local_player = yes }
					}
				}
				desc = tedjin_civil_war_defeat_attacker_desc
			}
			desc = tedjin_civil_war_defeat_desc
		}
		desc = tedjin_civil_war_defeat_end_desc
		
	}

	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }
		scope:attacker = {
			create_title_and_vassal_change = {
				type = faction_demand
				save_scope_as = change
				add_claim_on_loss = no
			}
	

			every_held_title = {
				limit = { tier > tier_barony }
				change_title_holder = {
					holder = scope:defender
					change = scope:change
				}
			}
			
			resolve_title_and_vassal_change = scope:change
		}
		scope:defender = {
			add_dread = 30
			if = {
				limit = { has_realm_law = crown_authority_2 }
				add_realm_law = crown_authority_3
			}
			else_if = {
				limit = { has_realm_law = crown_authority_1 }
				add_realm_law = crown_authority_2
			}
			else_if = {
				limit = { has_realm_law = crown_authority_0 }
				add_realm_law = crown_authority_1
			} 
			add_character_flag = {
				flag = recent_liberty_faction_war
				years = faction_war_defeat_cooldown
			}
		}
		on_lost_faction_revolt_war = yes
		set_global_variable = {
			name = tedjin_civil_war_over
			value = yes
		}
		set_global_variable = {
			name = tedjin_civil_war_result
			value = 2 #Bor Victory
		}
		scope:defender = {
			trigger_event = {
				id = tedjin.0202
				days = 7
			}
		}
		#scope:war = {
		#	every_war_participant = {
		#		limit = { 
		#			NOT = { this = scope:defender }
		#		}
		#		trigger_event = {
		#			id = tedjin.0203
		#		}
		#	}
		#}
		#title:e_mordor.holder = {
		#	trigger_event = {
		#		id = tedjin.0203
		#	}
		#}
		#title:k_haruzan.holder = {
		#	trigger_event = {
		#		id = tedjin.0203
		#	}
		#}
		#title:k_umbar.holder = {
		#	trigger_event = {
		#		id = tedjin.0203
		#	}
		#}
		#title:e_bellakar.holder = {
		#	trigger_event = {
		#		id = tedjin.0203
		#	}
		#}
		#title:k_felaya.holder = {
		#	trigger_event = {
		#		id = tedjin.0203
		#	}
		#}
		#title:d_nykkea.holder = {
		#	trigger_event = {
		#		id = tedjin.0203
		#	}
		#}
		if = {
			limit = { # Major News
				NOT = { has_game_rule = no_news }
			}
			every_player = { #Global News Announcement
				trigger_event = news_event.0006
			}
		}
		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_invalidated_desc = msg_invalidate_war_title

	check_attacker_inheritance_validity = no

	on_primary_attacker_death = inherit_faction
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "TEDJIN_CIVIL_WAR_NAME"

	interface_priority = 80

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 50

	max_ai_diplo_distance_to_title = 500
}

tedjin_invasion_cb = {
	group = invasion

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		has_title = title:k_tedjin
		exists = global_var:tedjin_civil_war_result
		global_var:tedjin_civil_war_result > 0
		
		scope:attacker = {		
			NOT = {
				has_culture = culture:wastelands
			}
		}
	}
	
	allowed_against_character = {
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}
		
		scope:attacker = {		
			NOT = {
				has_culture = culture:wastelands
			}
		}
	}
	
	allowed_against_character_display_regardless = { #LotR Tributaries
		custom_tooltip = {
			text = IS_GUARANTEED_BY_ME_TRIGGER_CB
			NAND = {
				exists = var:my_suzerain
				scope:attacker = {
					OR = {
						is_target_in_variable_list = { name = non_permanent_tributaries target = prev }
						is_target_in_variable_list = { name = permanent_tributaries target = prev }
					}		
				}
			}
		}
		custom_tooltip = {
			text = IS_GUARANTEED_BY_ATTACKERS_TOP_LIEGE_TRIGGER_CB
			NAND = {
				exists = var:my_suzerain
				scope:attacker.top_liege = {
					OR = {
						is_target_in_variable_list = { name = non_permanent_tributaries target = prev }
						is_target_in_variable_list = { name = permanent_tributaries target = prev }
					}		
				}
				scope:attacker = {
					is_independent_ruler = no
				}
			}
		}
		custom_tooltip = {
			text = IS_MY_SUZERAIN_TRIGGER_CB
			NAND = {
				scope:attacker = { 
					exists = var:my_suzerain
					scope:defender = var:my_suzerain
				}
			}
		}
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	ai_can_target_all_titles = {
		always = yes
	}
	
	ai_score = {
		value = 10
	}
	
	ai_score_mult = {
		value = 2000

		# LotR - Non-Evil faith characters leave poor Radagast alone! 
		add = {
			if = {
				limit = {
					scope:attacker = { faith_is_evil = no }
					scope:defender.culture = culture:istari
				}
				add = -1000
			}
		}

		# LotR - Protectorates are much less aggressive
		add = {
			if = {
				limit = {
					scope:attacker = { has_variable = overlord_protector }
				}
				add = -1000
			}
		}

		#LotR
		multiply = elf_target_ai_score_value
	}

	valid_to_start = {
		scope:target = {
			#any_in_de_jure_hierarchy = {
			#	tier = tier_county
			#	neighboring_county_or_viking_conquest_trigger = { CHARACTER = root }
			#}
			tier < tier_empire
			trigger_if = {
				limit = {
					global_var:tedjin_civil_war_result = 1 #Reactionary Victory - 1st phase
				}
				OR = {
					kingdom = title:k_tedja
					kingdom = title:k_mardruak
					kingdom = title:k_felaya
				}
			}
			trigger_else_if = {
				limit = {
					global_var:tedjin_civil_war_result = 2 #Reformist Victory - 1st phase
				}
				OR = {
					kingdom = title:k_tedja
					kingdom = title:k_mardruak
					kingdom = title:k_umbar
				}
			}
			trigger_else_if = {
				limit = {
					global_var:tedjin_civil_war_result = 3 #Reactionary Victory - 2nd phase
				}
				OR = {
					kingdom = title:k_tedja
					kingdom = title:k_mardruak
					kingdom = title:k_felaya
					kingdom = title:k_bellazen
					kingdom = title:k_nilulonde
				}
			}
			trigger_else_if = {
				limit = {
					global_var:tedjin_civil_war_result = 4 #Reformist Victory - 2nd phase
				}
				OR = {
					kingdom = title:k_tedja
					kingdom = title:k_mardruak
					kingdom = title:k_umbar
					kingdom = title:k_narak
					kingdom = title:k_haruzan
					kingdom = title:k_pezarsan
				}
			}
			trigger_else = {
				always = no
			}
		}
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_invasion_war_invalidated_message
	
	on_invalidated = {
	}

	cost = {
		piety = {
			value = 0
			add = common_cb_impious_piety_cost
		}
		prestige = {
			value = 0
			add = {
				every_in_list = {
					list = target_titles
					limit = { tier = tier_county }
					add = {
						value = 150
					}
				}
				every_in_list = {
					list = target_titles
					limit = { tier = tier_duchy }
					add = {
						value = 300
					}
				}
				every_in_list = {
					list = target_titles
					limit = { tier = tier_kingdom }
					add = {
						value = 800
					}
				}
				desc = "CB_CLAIM_COST_TARGET_TITLES"
			}
			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}
			
			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
	}
	
	on_declaration = {
		on_declared_war = yes
	}	

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = invasion_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
			desc = invasion_war_warning_desc
		}
	}
	
	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
			take_occupied = no
		}
		resolve_title_and_vassal_change = scope:change

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_prestige = mongol_invasion_cb_prestige_white_peace
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "TEDJIN_INVASION_CB_NAME"
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8
}

castamir_claim_cb = {
	group = invasion

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		always = no
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	
	white_peace_possible = no #juke note: newly added
	
	on_declaration = {
		on_declared_war = yes
        scope:defender = {
            trigger_event = umbar.1002
        }
	}	
	
	on_invalidated_desc = msg_invalidate_war_title
	
	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = invasion_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
			desc = invasion_war_warning_desc
		}
	}
	
	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
			take_occupied = yes
		}
		resolve_title_and_vassal_change = scope:change

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
		
		hidden_effect = {
            scope:attacker = {
                trigger_event = umbar.1001
            }
		}
		
		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		character:lineofanarion53 = { save_scope_as = castamir }
		if = {
			limit = { # Major News
				NOT = { has_game_rule = no_news }
			}
			every_player = { #Global News Announcement
				trigger_event = news_event.0014
			}
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_prestige = mongol_invasion_cb_prestige_white_peace
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
			
			# destroys any kingdom/empire tiered title of emporer of Anadune
			every_held_title = {
				limit = {
					OR = {
						tier = tier_empire
						# tier = tier_kingdom # Commenting this out, maybe have empire titles be destroyed and let revolts from natives/corsairs
						this = title:d_high_steward #King's Men head of faith
					}
				}
				holder = { destroy_title = prev }
			}
			add_character_flag = pressed_castamiri_claim
			add_character_modifier = {
				modifier = castamiri_claim_failed
				years = 50
			}
		
			trigger_event = { # Event to start CW in Anadune | Put this here to make root the emperor of Anadune
				id = umbar.1500
				days = { 15 30 }
			}
		}
		
		dynasty:dynasty_kamal = {
			add_dynasty_modifier = {
				modifier = dynasty_castamiri_claim_failed
				years = 30
			}
		}
			
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		character:lineofanarion53 = { save_scope_as = castamir }
		if = {
			limit = { # Major News
				NOT = { has_game_rule = no_news }
			}
			every_player = { #Global News Announcement
				trigger_event = news_event.0013
			}
		}
		scope:defender = {
			add_pressed_claim = title:k_umbar
			add_pressed_claim = title:d_umbar
			add_pressed_claim = title:c_umbar
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "INVASION_CB_NAME"
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8
	
}

rohan_war_cb = {
	group = invasion

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	white_peace_possible = no
	
	allowed_for_character = {
		always = no
		scope:attacker = {		
			NOT = {
				has_culture = culture:wastelands
			}
		}
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	
	on_declaration = {
		on_declared_war = yes
		scope:attacker = {
			if = {
				limit = {
					has_character_flag = logged_fangorn
				}
				trigger_event = {
					id = saruman_event_chain.2009
					days = 1825
				}
			}
		}
	}	
	
	on_invalidated_desc = msg_invalidate_war_title

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = invasion_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
			desc = invasion_war_warning_desc
		}
	}
	
	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
			take_occupied = yes
		}
		resolve_title_and_vassal_change = scope:change

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
		
		hidden_effect = {
            scope:attacker = {
                trigger_event = saruman_event_chain.2101
            }
		}
		
		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		desc = WHITE_PEACE_DISABLED
	}

	on_white_peace = {
		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		
		scope:defender = {
			trigger_event = saruman_event_chain.2102
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "INVASION_CB_NAME"
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8
}

pezarsan_invasion_war = {
	group = claim

	target_titles = claim

	on_declaration = {
		on_declared_war = yes
	}
	allowed_for_character = {
		always = no
	}
	should_invalidate = {
		OR = {
			NOT = {
				any_in_list = {
					list = target_titles
					any_in_de_jure_hierarchy = {
						tier >= tier_county
						exists = holder
						holder = {
							OR = {
								this = scope:defender
								target_is_liege_or_above = scope:defender
							}
						}
					}
				}
			}
			AND = { 
				NOT = { scope:claimant = scope:attacker } 
				scope:claimant = {
					OR = {
						is_alive = no 
						NOR = { 
							is_vassal_or_below_of = scope:attacker 
							is_courtier_of = scope:attacker 
						}
					}
				}
			} 
		}
	}

	on_invalidated_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { scope:claimant = scope:attacker } 
					scope:claimant = { is_alive = no }
				}
				desc = msg_claim_war_invalidated_claimant_unavailable_dead_message
			}
			triggered_desc = {
				trigger = {
					scope:claimant = {
						NOR = { 
							this = scope:attacker 
							NOR = { 
								is_vassal_or_below_of = scope:attacker 
								is_courtier_of = scope:attacker 
							}
						}
					}
				}
				desc = msg_claim_war_invalidated_claimant_unavailable_not_vassal_message
			}
			desc = msg_claim_war_invalidated_message
		}
	}
	
	on_invalidated = {
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:claimant = { is_local_player = yes }
				}
				desc = claim_cb_victory_desc_attacker_claimant
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = claim_cb_victory_desc_attacker
			}
			desc = claim_cb_victory_desc
		}
	}

	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }
		
        scope:attacker = {
            trigger_event = {
				id = harad.0202
				days = { 5 30 }
			}
        }
		
		create_title_and_vassal_change = {
			type = conquest_claim
			save_scope_as = change
			add_claim_on_loss = yes
		}
		# Create a claim CB which is executed to handle title/vassal changes, in addition to being used to calculate Prestige awards for war participants.
		setup_claim_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			change = scope:change
		}

		resolve_title_and_vassal_change = scope:change

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:claimant.primary_title.tier < scope:attacker.primary_title.tier
				trigger_if = {
					limit = {
						exists = scope:claimant.liege
					}
					NOT = { scope:claimant.liege = scope:attacker }
				}
				trigger_else = {
					always = yes
				}
			}

			create_title_and_vassal_change = {
				type = conquest_claim
				save_scope_as = change_two
				add_claim_on_loss = yes
			}
			scope:claimant = {
				change_liege = {
					liege = scope:attacker
					change = scope:change_two
				}
			}
			resolve_title_and_vassal_change = scope:change_two
		}

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:attacker = {
					can_add_hook = {
					  	type = favor_hook
					  	target = scope:claimant
					}
				}
			}
			scope:attacker = {
				add_hook = {
		  			target = scope:claimant
		  			type = favor_hook
		 		}
			}
		}

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = claim_cb_white_peace_desc_defender
			}
			desc = claim_cb_white_peace_desc
		}
		
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

        scope:attacker = {
            trigger_event = {
				id = harad.0203
				days = { 5 30 }
			}
        }

		# press claims
		every_in_list = {
			list = target_titles
			if = {
				limit = { scope:claimant = { has_weak_claim_on = prev } }
				scope:claimant = {
					make_claim_strong = prev
				}
			}
		}

		# Create an 'helper' claim CB which we won't execute, but can use to determine how much Prestige should be given to war participants.
		setup_claim_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = scope:cb_prestige_factor # Set by 'setup_claim_cb'
				multiply = -5.0
			}
		}
		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
		# Defender neither gains nor loses any prestige.

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:attacker = {
					can_add_hook = {
					  	type = favor_hook
					  	target = scope:claimant
					}
				}
			}
			scope:attacker = {
				add_hook = {
		  			target = scope:claimant
		  			type = favor_hook
		 		}
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = { scope:claimant = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_attacker_claimant
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_attacker
			}
			desc = claim_cb_defeat_desc
		}
		
	}

	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

        scope:attacker = {
            trigger_event = {
				id = harad.0203
				days = { 5 30 }
			}
        }

		# lose claims
		every_in_list = {
			list = target_titles
			scope:claimant = {
				remove_claim = prev
			}
		}

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:attacker = {
					can_add_hook = {
					  	type = favor_hook
					  	target = scope:claimant
					}
				}
			}
			scope:attacker = {
				add_hook = {
		  			target = scope:claimant
		  			type = favor_hook
		 		}
			}
		}

		# Attacker pays gold to the defender as reparations.
		scope:attacker = {
			pay_short_term_gold = {
				gold = 3
				target = scope:defender
				yearly_income = yes
			}
		}
		# Create an 'helper' claim CB which we won't execute, but can use to determine how much Prestige should be given to war participants.
		setup_claim_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}
		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# Truce
		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "CLAIM_WAR_NAME"
	my_war_name = "CLAIM_WAR_NAME_MY"
	war_name_base = "CLAIM_WAR_NAME_BASE"
	cb_name = "CLAIM_CB_NAME"
	interface_priority = 60

	should_show_war_goal_subview = yes

	attacker_wargoal_percentage = 0.8

	max_ai_diplo_distance_to_title = 1000
}

final_battle_mordor_cb = {
	group = invasion

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		always = no
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	
	on_declaration = {
		on_declared_war = yes
      }

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = mordor_invasion_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
	}
	
	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:invade_gondor_decision
		}
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
			take_occupied = yes
		}
		resolve_title_and_vassal_change = scope:change
		
		scope:defender = {
			hidden_effect = {
				destroy_title = title:e_reunitedkingdom
				destroy_title = title:e_gondor
				destroy_title = title:e_gondor_steward
				destroy_title = title:e_castamir
			}
			every_vassal = {
				limit = { capital_province = { geographical_region = custom_greater_gondor } }
				create_title_and_vassal_change = {
					type = independency
					save_scope_as = change
					add_claim_on_loss = yes
				}
				becomes_independent = {
					change = scope:change
				}

				resolve_title_and_vassal_change = scope:change
			}
			# every_held_title = {
				# limit = {
					# tier > tier_duchy
				# }
				# holder = { # Destroy that title
					# destroy_title = prev
				# }
			# }
		}
		
		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
		
		hidden_effect = {
            scope:attacker = {
                trigger_event = sauron.2001
            }
			every_living_character = {
				limit = {
					NOT = { this = scope:attacker }
				}
				trigger_event = {
					id = sauron.2002
					days = 30
				}
			}
		}
		
		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}
		
		# Truce
		add_truce_white_peace_effect = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	on_invalidated_desc = msg_invalidate_war_title

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "MORDOR_INVASION_CB_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "INVASION_CB_NAME"
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8
}

final_battle_gondor_cb = {
	group = event 

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		NOT = {
			government_has_flag = government_is_feudal
			government_has_flag = government_is_tribal
			government_has_flag = government_is_republic 
			government_has_flag = government_is_theocracy 
			government_has_flag = government_is_clan 
			government_has_flag = government_is_mercenary
			government_has_flag = government_is_holy_order 
			government_has_flag = government_is_elven 
		}
		always = no
		
		scope:attacker = {		
			NOT = {
				has_culture = culture:wastelands
			}
		}
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	
	war_name = "INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "INVASION_CB_NAME"
	
	on_declaration = {
		on_declared_war = yes
        scope:defender = {
                trigger_event = gondor.2101
        }
	}
	
	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	on_invalidated_desc = msg_invalidate_war_title

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = gondor_final_battle_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
	}
	
	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		set_global_variable = {
			name = sauron_destroyed
			value = yes
		}
		
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_destroy_mordor
		}
		
		scope:attacker.dynasty = {
			set_variable = this_dynasty_killed_sauron
		}

		every_independent_ruler = {
			limit = {
				exists = var:my_suzerain
				var:my_suzerain = scope:defender
			}
			free_tributary = yes
		}	
		
		scope:attacker = { show_pow_release_message_effect = yes }

		scope:defender = {
			hidden_effect = {
				every_held_title = {
					limit = {
						tier > tier_county
					}
					holder = { # Destroy that title
						destroy_title = prev
					}
				}
				every_held_title = { # Distribute excess non-capital counties to new characters			
					limit = { # For every non-capital county
						tier = tier_county
					}
					set_county_faith = faith:sons_of_sauron
					save_temporary_scope_as = excess_title
	
					create_character = { # Create a new character to hold the title
						employer = root
						culture = culture:burgulhai
						faith = faith:sons_of_sauron
						gender_female_chance = 0
						after_creation = {
							save_temporary_scope_as = new_holder
						}
					}
				
					create_title_and_vassal_change = { # Define type of title change as a granting of the title
						type = granted
						save_scope_as = title_change
						add_claim_on_loss = no
					}
				
					scope:excess_title = { # Set the new character to be the new holder of the title
						change_title_holder = {
							holder = scope:new_holder
							change = scope:title_change
						}
					}
				
					resolve_title_and_vassal_change = scope:title_change # Take a look at yourself, and then make that... change!
					
					# game_rule_create_spouse_and_children = { CHARACTER = scope:new_holder } # Create a family for the new holder
				}
			}
		}
		
		title:c_barad_dur.title_province = {
			remove_building = wonder_baraddur	
		}
		title:k_nurn = {
			if = {
				limit = {
					holder = {
						faith_is_evil = yes
					}
				}
				holder = { # Destroy that title
					destroy_title = prev
				}
			}
		}
		#custom_tooltip = shadow_of_mordor_clears_tt
		#hidden_effect = {
		#	nurnoth_slaves_openly_convert = yes
		#	every_province = {
		#		limit = {
		#			has_holding = yes
		#			OR = {
		#				has_holding_type = wastelands_holding
		#				has_holding_type = settlement_holding
		#				has_holding_type = ruined_holding
		#			}
		#			has_building = shadow_of_mordor
		#			NOT = { geographical_region = middleearth_mordor_gorgoroth }
		#		}
		#		remove_building = shadow_of_mordor
		#	}
		#}
		hidden_effect = {
			nurnoth_slaves_openly_convert = yes
		}
		character:lineofsauron = {
			every_character_artifact = {
				limit = { 
					OR = {
						has_variable = palantir 
						has_variable = relic
					}
				}
				set_owner = {
					target = scope:attacker
					history = {
						type = inherited
						recipient = scope:attacker
					}
				}
			}
			death = { death_reason = death_sauron }
		}
		
		character:mouthofsauron = {
			hidden_effect = {
				every_held_title = {
					limit = {
						tier > tier_county
					}
					holder = { # Destroy that title
						destroy_title = prev
					}
				}
				every_held_title = { # Distribute excess non-capital counties to new characters
				
					limit = { # For every non-capital county
						tier = tier_county
					}
		
					set_county_faith = faith:sons_of_sauron
		
					save_temporary_scope_as = excess_title
		
					create_character = { # Create a new character to hold the title
						employer = root
						culture = culture:burgulhai
						faith = faith:sons_of_sauron
						gender_female_chance = 0
						after_creation = {
							save_temporary_scope_as = new_holder
						}
					}
					
					create_title_and_vassal_change = { # Define type of title change as a granting of the title
						type = granted
						save_scope_as = title_change
						add_claim_on_loss = no
					}
					
					scope:excess_title = { # Set the new character to be the new holder of the title
						change_title_holder = {
							holder = scope:new_holder
							change = scope:title_change
						}
					}
					
					resolve_title_and_vassal_change = scope:title_change # Take a look at yourself, and then make that... change!
		
					# game_rule_create_spouse_and_children = { CHARACTER = scope:new_holder } # Create a family for the new holder
					
				}
			}
			get_title = title:c_barad_dur
		}
		
		#juke note: moved nazgul to scripted effect
		kill_nazgul_effect = yes
		
		scope:attacker = {
			add_prestige = 5000
			every_war_ally = {
				add_prestige = 2000
			}
			if = { # Deus Ex Amroth | Achievement
				limit = { 
					NOT = { has_global_variable = lotr_achievement_76 }
					realms_achievements_enabled = yes
					scope:attacker = { is_ai = no }
					scope:attacker.dynasty = dynasty:dynasty_dol_amroth
				}
				set_global_variable = lotr_achievement_76
			}
		}
		
		
		hidden_effect = {
            scope:attacker = {
                trigger_event = gondor.2102
				trigger_event = {
					id = nurnoth.0002
					days = 9
				}
				trigger_event = {
					id = nurnoth.0004
					days = 10
				}
            }
			every_living_character = {
				trigger_event = {
					id = gondor.2103
					#days = 30
				}
			}
			faith:lidless_eye = {
				change_fervor = {
					value = -100
					desc = fervor_dark_lord_defeated
				}
			}
			faith:cult_of_zigur = {
				change_fervor = {
					value = -100
					desc = fervor_dark_lord_defeated
				}
			}
			#faith:red_eye_cult = {	#causes weird heresies like pirate haradwaith
			#	change_fervor = {
			#		value = -30
			#		desc = fervor_dark_lord_defeated
			#	}
			#}
			#faith:faith_haruze = {
			#	change_fervor = {
			#		value = -30
			#		desc = fervor_dark_lord_defeated
			#	}
			#}
			#faith:faith_kerkassk = {
			#	change_fervor = {
			#		value = -30
			#		desc = fervor_dark_lord_defeated
			#	}
			#}
			#faith:faith_khandish_sauronic = {
			#	change_fervor = {
			#		value = -30
			#		desc = fervor_dark_lord_defeated
			#	}
			#}
			
			#juke note: moved religious conversion to a scripted effect
			lidless_eye_destroyed_effect = yes
		}
		
		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
}

humble_mordor_cb = {
	group = event 

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		always = no
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	
	war_name = "INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "INVASION_CB_NAME"
	
	on_declaration = {
		on_declared_war = yes
        scope:defender = {
            trigger_event = saruman_event_chain.2082
        }
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = humble_mordor_cb_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
	}
	
	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		every_independent_ruler = {
			limit = {
				exists = var:my_suzerain
				var:my_suzerain = scope:defender
			}
			free_tributary = yes
		}	
		
		scope:attacker = { 
			show_pow_release_message_effect = yes
			# Saruman imprisons Sauron
			imprison = { 
				target = scope:defender
				type = dungeon 
			}
			#Trigger event rounding off war
			trigger_event = saruman_event_chain.2083
		}

		scope:defender = {
			hidden_effect = {
				 # Convert any Lidless Eye county and character faiths to White Hand Cult in Mordor - Sauron has lost all authority
				every_county = {
					limit = {
						faith = faith:lidless_eye
						title_province = { geographical_region = special_mordor_and_surrounding_kingdoms }
						#empire = title:e_mordor
					}
					set_county_faith = faith:white_hand_cult
				}
				every_living_character = {
					limit = {
						faith = faith:lidless_eye
						location.empire = title:e_mordor
					}
					set_character_faith = faith:white_hand_cult
				}
				# Transfer all his vassals
				create_title_and_vassal_change = {
					type = usurped
					save_scope_as = title_change
					add_claim_on_loss = no
				}
				every_vassal = {
					change_liege = {
						liege = scope:attacker
						change = scope:title_change
					}		
				}
				resolve_title_and_vassal_change = scope:title_change
				# Destroy the HoF title
				destroy_title = title:k_dark_lord
				# Usurp all of Sauron's titles
				create_title_and_vassal_change = {
					type = usurped
					save_scope_as = title_change
					add_claim_on_loss = no
				}
				create_title_and_vassal_change = {
					type = usurped
					save_scope_as = title_change
					add_claim_on_loss = no
				}
				every_held_title = {
					change_title_holder_include_vassals = {
						holder = scope:attacker
						change = scope:title_change
					}
				}
				resolve_title_and_vassal_change = scope:title_change
			}
		}
				
		scope:attacker = {
			add_prestige = 5000
			every_war_ally = {
				add_prestige = 2000
			}
		}
		
		hidden_effect = {	# juke note: moved religious conversion to a scripted effect
			
			# Resolving other stuff unique to Saruman
			
			faith:lidless_eye = {
				change_fervor = {
					value = -100
					desc = fervor_dark_lord_defeated
				}
			}
			faith:cult_of_zigur = {
				change_fervor = {
					value = -100
					desc = fervor_dark_lord_defeated
				}
			}
			faith:red_eye_cult = {
				change_fervor = {
					value = -70
					desc = fervor_dark_lord_defeated
				}
			}
			faith:faith_haruze = {
				change_fervor = {
					value = -20
					desc = fervor_dark_lord_defeated
				}
			}
			faith:faith_kerkassk = {
				change_fervor = {
					value = -20
					desc = fervor_dark_lord_defeated
				}
			}
			faith:faith_khandish_sauronic = {
				change_fervor = {
					value = -20
					desc = fervor_dark_lord_defeated
				}
			}
			
			#root.faith = {	#juke note: we should probably account for custom saruman faiths eventually
			#	save_scope_as = saruman_faith
			#}
			
			character:nazgul1 = {
				set_character_faith_with_conversion = faith:white_hand_cult
				every_held_title = {
					limit = {
						tier = tier_county
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
							faith = faith:cult_of_zigur
						}					
					}
					set_county_faith = faith:white_hand_cult
				}
				if = {
					limit = {
						is_ruler = no
						NOR = {
							employer = character:lineofsaruman
							employer = { is_nazgul = yes}
						}
					}
					set_employer = character:lineofsaruman
				}
			}
			character:nazgul2 = {
				set_character_faith_with_conversion = faith:white_hand_cult
				every_held_title = {
					limit = {
						tier = tier_county
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
							faith = faith:cult_of_zigur
						}					
					}
					set_county_faith = faith:white_hand_cult
				}
				if = {
					limit = {
						is_ruler = no
						NOR = {
							employer = character:lineofsaruman
							employer = { is_nazgul = yes}
						}
					}
					set_employer = character:lineofsaruman
				}
			}
			character:nazgul4 = {
				set_character_faith_with_conversion = faith:white_hand_cult
				every_held_title = {
					limit = {
						tier = tier_county
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
							faith = faith:cult_of_zigur
						}					
					}
					set_county_faith = faith:white_hand_cult
				}
				if = {
					limit = {
						is_ruler = no
						NOR = {
							employer = character:lineofsaruman
							employer = { is_nazgul = yes}
						}
					}
					set_employer = character:lineofsaruman
				}
			}
			character:nazgul5 = {
				set_character_faith_with_conversion = faith:white_hand_cult
				every_held_title = {
					limit = {
						tier = tier_county
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
							faith = faith:cult_of_zigur
						}					
					}
					set_county_faith = faith:white_hand_cult
				}
				if = {
					limit = {
						is_ruler = no
						NOR = {
							employer = character:lineofsaruman
							employer = { is_nazgul = yes}
						}
					}
					set_employer = character:lineofsaruman
				}
			}
			character:nazgul6= {
				set_character_faith_with_conversion = faith:white_hand_cult
				every_held_title = {
					limit = {
						tier = tier_county
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
							faith = faith:cult_of_zigur
						}					
					}
					set_county_faith = faith:white_hand_cult
				}
				if = {
					limit = {
						is_ruler = no
						NOR = {
							employer = character:lineofsaruman
							employer = { is_nazgul = yes}
						}
					}
					set_employer = character:lineofsaruman
				}
			}
			character:nazgul3 = {
				set_character_faith_with_conversion = faith:white_hand_cult
				every_held_title = {
					limit = {
						tier = tier_county
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
							faith = faith:cult_of_zigur
						}					
					}
					set_county_faith = faith:white_hand_cult
				}
				if = {
					limit = {
						is_ruler = no
						NOR = {
							employer = character:lineofsaruman
							employer = { is_nazgul = yes}
						}
					}
					set_employer = character:lineofsaruman
				}
			}
			character:nazgul7 = {
				set_character_faith_with_conversion = faith:white_hand_cult
				every_held_title = {
					limit = {
						tier = tier_county
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
							faith = faith:cult_of_zigur
						}					
					}
					set_county_faith = faith:white_hand_cult
				}
				if = {
					limit = {
						is_ruler = no
						NOR = {
							employer = character:lineofsaruman
							employer = { is_nazgul = yes}
						}
					}
					set_employer = character:lineofsaruman
				}
			}
			character:nazgul8 = {
				set_character_faith_with_conversion = faith:white_hand_cult
				every_held_title = {
					limit = {
						tier = tier_county
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
							faith = faith:cult_of_zigur
						}					
					}
					set_county_faith = faith:white_hand_cult
				}
				if = {
					limit = {
						is_ruler = no
						NOR = {
							employer = character:lineofsaruman
							employer = { is_nazgul = yes}
						}
					}
					set_employer = character:lineofsaruman
				}
			}
			character:nazgul9 = {
				set_character_faith_with_conversion = faith:white_hand_cult
				every_held_title = {
					limit = {
						tier = tier_county
						OR = {
							faith = faith:lidless_eye
							faith = faith:red_eye_cult
							faith = faith:cult_of_zigur
						}					
					}
					set_county_faith = faith:white_hand_cult
				}
				if = {
					limit = {
						is_ruler = no
						NOR = {
							employer = character:lineofsaruman
							employer = { is_nazgul = yes}
						}
					}
					set_employer = character:lineofsaruman
				}
			}
			
			# Effect shared with "Destroy Mordor" CB
			lidless_eye_destroyed_effect = yes
		}
		
		
		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}	

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	on_invalidated_desc = msg_invalidate_war_title

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { 
			show_pow_release_message_effect = yes
			#Trigger event for flavour of failure
			trigger_event = saruman_event_chain.2084
		}

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		scope:defender = {
			#Trigger event for flavour of success
			trigger_event = saruman_event_chain.2085
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8

}

humble_isengard_cb = {
	group = event 

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		always = no
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	
	war_name = "INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "INVASION_CB_NAME"
	
	on_declaration = {
		on_declared_war = yes
    }

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = humble_isengard_cb_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
	}
	
	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		every_independent_ruler = {
			limit = {
				exists = var:my_suzerain
				var:my_suzerain = scope:defender
			}
			free_tributary = yes
		}
		
		scope:attacker = { 
			show_pow_release_message_effect = yes
			add_hook = { 
				type = loyalty_hook
				target = scope:defender
			}
			imprison = { 
				target = scope:defender
				type = dungeon 
			}
			trigger_event = saruman_event_chain.2088
		}

		scope:defender = {
			set_character_faith = faith:lidless_eye
			trigger_event = saruman_event_chain.2089
			hidden_effect = {
				 # Convert any White Hand Cult county and character faiths to Lidless Eye globally - Isengard has lost all authority
				every_county = {
					limit = {
						faith = faith:white_hand_cult
					}
					set_county_faith = faith:lidless_eye
				}
				every_living_character = {
					limit = {
						faith = faith:white_hand_cult
					}
					set_character_faith = faith:lidless_eye
				}
			}
			every_held_title = {
				limit = {
					tier = tier_empire
				}
				holder = { destroy_title = prev }
			}
			make_tributary = {
				TYPE = tributary_non_permanent
				SUZERAIN = character:lineofsauron
				TRIBUTARY = scope:defender
			}
		}		
		
		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
				
		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}
		
		# Truce
		add_truce_white_peace_effect = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	on_invalidated_desc = msg_invalidate_war_title

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
			trigger_event = saruman_event_chain.2090
		}

		scope:defender = {
			trigger_event = saruman_event_chain.2091
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8
}

reclaim_calenardhon_cb = { #Reclaim Calenardhon
	war_name = "reclaim_calenardhon_cb"
	group = invasion

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		always = no
	}
	
	target_titles = all 
	target_title_tier = all 
	target_de_jure_regions_above = yes 
	ignore_effect = change_title_holder 
	
	on_declaration = {
		on_declared_war = yes
        scope:defender = {
            trigger_event = gondor.2401 #notification event for k_rohan title holder
        }
	}	
	
	on_invalidated_desc = msg_invalidate_war_title
	
	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = reclaim_calenardhon_cb_victory_desc
			}
			desc = invasion_war_victory_desc
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
			desc = invasion_war_warning_desc
		}
	}
	
	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		# setup_invasion_cb = {
			# titles = target_titles
			# attacker = scope:attacker
			# defender = scope:defender
			# change = scope:change
			# take_occupied = yes
		# }

		title:e_calenardhon = {
            every_in_de_jure_hierarchy = {
                limit = {
					exists = holder
                    holder = { is_orc = no }
                    holder.top_liege = scope:defender
                    holder.faith = { faith_is_evil = yes }
                }
                change_title_holder_include_vassals = {
                    holder = scope:attacker
                    change = scope:change
                }
            }
        }

		title:k_rohan = {
			every_in_de_jure_hierarchy = {
				limit = {
					exists = holder
					holder = { is_independent_ruler = yes }
					OR = {
						holder.culture = { any_parent_culture_or_above = { this = culture:rohirrim } }
						holder.culture = culture:rohirrim
						holder.culture = { any_parent_culture_or_above = { this = culture:dunedain } }
						holder.culture = culture:dunedain
					}
				}
				holder = { trigger_event = gondor.2502 }
			}
		}
	
		resolve_title_and_vassal_change = scope:change

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = 80
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
		
		hidden_effect = {
            scope:attacker = {
                trigger_event = gondor.2501
            }
		}
		
		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		if = {
			limit = {
				scope:attacker = { is_ai = no }
				realms_achievements_enabled = yes
				NOT = { exists = global_var:lotr_achievement_09 }
			}
			set_global_variable = lotr_achievement_09
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_prestige = mongol_invasion_cb_prestige_white_peace
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
}

destroy_dol_guldur_cb = {
	group = conquest

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		always = no
	}
	
	target_titles = all
	target_title_tier = duchy
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_religious_war_invalidation_region_message

	on_invalidated = {
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = county_conquest_cb_victory_desc_attacker
			}
			desc = county_conquest_cb_victory_desc
		}
	}

	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		# go through the dejure hierarchy under target titles, transfer eligible vassals and sieze counties from ineligible ones
		every_in_list = {
			list = target_titles
			custom_tooltip = CONQUEST_CB_TITLE

			save_scope_as = target_title # For the vassalization trigger.

			# Compile a list of all counties in the kingdom we will take from the defender.
			every_in_de_jure_hierarchy = {
				continue = {
					tier > tier_county
				}
				limit = {
					tier = tier_county
					has_county_modifier = elven_homeland_county_modifier
					# Current holder must be a (sub)vassal of the defender (no poaching titles from 3rd parties!)
					exists = holder
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}
				add_to_list = titles_taken
			}
		}

		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		if = { # Warning that only counties are changing hands
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_duchy
				}
			}
			random_in_list = {
				list = target_titles
				limit = { tier = tier_duchy }
				save_scope_as = de_jure_target
			}
			if = { # LotR - reordered to clean up errorlog
				limit = {
					any_in_list = {
						list = target_titles
						tier = tier_duchy
						holder = scope:defender
					}
				}
				if = {
					limit = {
						scope:defender = {
							any_held_title = {
								tier = tier_county
								NOT = { target_is_de_jure_liege_or_above = scope:de_jure_target }
							}
						}
					}
					custom_tooltip = conquest_title_not_transferred_tt
				}
				else = { custom_tooltip = conquest_title_destroyed_tt }
			}
			else = {
				if = {
					limit = {
						any_in_list = {
							list = target_titles
							tier = tier_duchy
							is_title_created = yes
						}
					}
					custom_tooltip = conquest_title_usurp_tt
				}
				else = { custom_tooltip = conquest_title_create_tt }
			}
		}

		#### DECISION-SPECIFIC EVENTS ####
		every_independent_ruler = {
			limit = {
				exists = var:my_suzerain
				var:my_suzerain = character:nazgul2
			}
			free_tributary = yes
		}

		character:nazgul2 = {
			hidden_effect = {
				every_held_title = {
					limit = {
						tier > tier_county
					}
					holder = { # Destroy that title
						destroy_title = prev
					}
				}
				every_held_title = { # Distribute excess non-capital counties to new characters			
					limit = { # For every non-capital county
						tier = tier_county
					}
					save_temporary_scope_as = excess_title
	
					create_character = { # Create a new character to hold the title
						employer = root
						culture = scope:excess_title.culture
						faith = scope:excess_title.faith
						gender_female_chance = 0
						save_scope_as = new_holder
					}
				
					create_title_and_vassal_change = { # Define type of title change as a granting of the title
						type = granted
						save_scope_as = title_change
						add_claim_on_loss = no
					}
				
					scope:excess_title = { # Set the new character to be the new holder of the title
						change_title_holder = {
							holder = scope:new_holder
							change = scope:title_change
						}
					}
				
					resolve_title_and_vassal_change = scope:title_change # Take a look at yourself, and then make that... change!
					
				}
			}
			set_employer = character:lineofsauron
			add_character_modifier = {
				modifier = lotr_vanquished_modifier
				years = 10
			}
		}

		if = { # Check if its maglor 
			limit = { scope:attacker = { has_variable = war_against_DG } }
			scope:attacker = { remove_variable = war_against_DG }
			scope:attacker = { trigger_event = maglor_event_chain.0061 }
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # not impactful as the scale are identical
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}


		add_truce_white_peace_effect = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "ELVEN_HOMELANDS_DUCHY_CONQUEST_WAR_NAME"
	war_name_base = "CONQUEST_WAR_NAME_BASE"
	cb_name = "ELVEN_HOMELANDS_DUCHY_CONQUEST_CB_NAME"

	interface_priority = 79

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8
}

bellakar_eru_vassals_cb = {
	group = event 

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		always = no
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	
	on_declaration = {
		on_declared_war = yes
	}	
	
	on_invalidated_desc = msg_invalidate_war_title
	
	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = invasion_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
			desc = invasion_war_warning_desc
		}
	}
	
	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		title:k_bellazen = {
			every_in_de_jure_hierarchy = {
				limit = {
					OR = {	
						tier = tier_county
						tier = tier_duchy
					}
					NOT = { this = title:k_nilulonde }
				}
				add_to_list = de_jure_titles_bellazen
			}
		}

		scope:defender = { # Empire tier titles of Bellakar holder are destroyed
			every_held_title = {
				limit = {
					OR = {
						tier = tier_empire
					}
				}
				holder = { destroy_title = prev }
			}
		}

		hidden_effect = { # Nilulonde + Bellazen are merged
			if = {
				limit = {
					scope:high_king_of_bellakar = {
						highest_held_title_tier < tier_kingdom
					}
				}
				scope:high_king_of_bellakar = {
					get_title = title:k_nilulonde
				}
			}
			every_in_list = {
				list = de_jure_titles_bellazen
				set_de_jure_liege_title = title:k_nilulonde
			}
		}
		
		title:k_nilulonde = { # Nilulonde is set de jure to Gondor
			set_de_jure_liege_title = title:e_gondor
		}

		title:k_felaya = { # Will need to add a trigger here for if felaya wants to be independent
			set_de_jure_liege_title = title:e_gondor
		}

		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
			add_claim_on_loss = no
		}

		title:k_nilulonde.holder = {
			change_liege = {
				liege = title:e_gondor.holder
				change = scope:change
			}
		}

		title:k_felaya.holder = {
			change_liege = {
				liege = title:e_gondor.holder
				change = scope:change
			}
		}

		resolve_title_and_vassal_change = scope:change

		scope:defender = { # Last ruler is deposed
			depose = yes
		}

		title:k_nilulonde.holder = { # New ruler is forcefully converted to Erulaitale
			set_character_faith_with_conversion = faith:faith_edain
		}

		title:k_nilulonde = { # Nilulonde CoA + name + colour is changed to that of Bellakar empire title
			set_title_name = e_bellakar 
			set_coa = e_bellakar
			set_color_from_title = title:e_bellakar
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_prestige = mongol_invasion_cb_prestige_white_peace
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "INVASION_CB_NAME"
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8
	
}

felaya_eru_vassals_cb = {
	group = event 

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		always = no
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	
	on_declaration = {
		on_declared_war = yes
	}	
	
	on_invalidated_desc = msg_invalidate_war_title
	
	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = invasion_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
			desc = invasion_war_warning_desc
		}
	}
	
	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		title:k_felaya = {
			set_de_jure_liege_title = title:e_gondor
		}

		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
			add_claim_on_loss = no
		}

		title:k_felaya.holder = {
			change_liege = {
				liege = title:e_gondor.holder
				change = scope:change
			}
		}

		resolve_title_and_vassal_change = scope:change

		scope:defender = { # Last ruler is deposed
			depose = yes
		}

		title:k_felaya.holder = { # New ruler is forcefully converted to Erulaitale
			set_character_faith_with_conversion = faith:faith_edain
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_prestige = mongol_invasion_cb_prestige_white_peace
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "INVASION_CB_NAME"
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8
	
}

fourth_kinslaying_cb = {
	icon = vassalization
	group = subjugation
	ai_only_against_neighbors = yes

	allowed_for_character = {
		always = no
	}
	
	allowed_against_character_display_regardless = {
	}
	
	allowed_against_character = {
	}
	
	should_invalidate = {
		OR = {
			scope:defender = {
				is_independent_ruler = no
			}
			scope:attacker = {
				has_culture = culture:wastelands
			}
			scope:defender = {
				has_culture = culture:wastelands
			}
		}
	}
	
	on_declaration = { on_declared_war = yes }	
	
	on_invalidated_desc = msg_subjugation_war_invalidated_message
	
	on_invalidated = {
	}

	on_victory_desc = {
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		scope:defender.capital_county = { save_temporary_scope_as = new_capital_county }
		scope:defender = {
			every_held_title = {
				add_to_list = target_titles
			}
		}

		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = title_change
			add_claim_on_loss = no
		}

		every_in_list = {
			list = target_titles
			
			change_title_holder = {
				holder = scope:attacker
				change = scope:title_change
			}
		}

		resolve_title_and_vassal_change = scope:title_change	

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		
		hidden_effect = {
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
				add_claim_on_loss = no
			}
			
			scope:defender = {
				every_vassal_or_below = {
					change_liege = {
						liege = scope:attacker
						change = scope:change
					}
					if = {
						limit = { has_variable = joined_maglor }
						remove_variable = joined_maglor
					}
				}
			}
			
			scope:attacker = { 
				get_title = title:e_noldor 
				set_primary_title_to = title:e_noldor  
				set_realm_capital = scope:new_capital_county
			}
		}
		scope:attacker = { trigger_event = maglor_event_chain.0010 }
		resolve_title_and_vassal_change = scope:change

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}
		remove_variable = rallied_loyalist
		# Truce
		add_truce_attacker_victory_effect = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		desc = WHITE_PEACE_DISABLED
	}
	
	on_white_peace = {
		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		desc = fourth_kinslaying_cb_defeat_desc
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_high_effect = yes }
		
		# Prestige loss for the attacker
		scope:attacker = { trigger_event = maglor_event_chain.0015 }

		# Prestige for the defender
		scope:defender = {
			add_prestige_war_defender_effect = { PRESTIGE_VALUE = major_prestige_value }
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}
		
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	ai_score_mult = { #LotR
		value = 1

		# LotR - Sauron and Nazgul should not target eachother
		add = {
			if = {
				limit = {
					OR = {
						AND = {
							scope:attacker = { is_sauron = yes }
							scope:defender = { has_trait = nazgul }
						}
						AND = {
							scope:defender = { is_sauron = yes }
							scope:attacker = { has_trait = nazgul }
						}
					}
				}
				add = -1000
			}
		}

		# LotR - Non-Evil faith characters leave poor Radagast alone! 
		add = {
			if = {
				limit = {
					scope:attacker = { faith_is_evil = no }
					scope:defender.culture = culture:istari
				}
				add = -1000
			}
		}

		# LotR - Protectorates are much less aggressive
		add = {
			if = {
				limit = {
					scope:attacker = { has_variable = overlord_protector }
				}
				add = -1000
			}
		}

		#LotR
		multiply = elf_target_ai_score_value
	}
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "fourth_kinslaying_cb_name"
	war_name_base = "fourth_kinslaying_cb_name"
	cb_name = "fourth_kinslaying_cb_name"
	interface_priority = 59
	
	ticking_war_score_targets_entire_realm = yes
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	attacker_ticking_warscore = 0
	attacker_wargoal_percentage = 0.8
	
	max_ai_diplo_distance_to_title = 500
}

maglor_umbar_cb = {
	icon = vassalization
	group = subjugation
	ai_only_against_neighbors = yes

	allowed_for_character = {
		always = no
	}
	
	allowed_against_character_display_regardless = {
	}
	
	allowed_against_character = {
		# always = no
	}
	
	should_invalidate = {
		OR = {
			scope:defender = {
				is_independent_ruler = no
			}
			scope:attacker = {
				has_culture = culture:wastelands
			}
			scope:defender = {
				has_culture = culture:wastelands
			}
		}
	}
	
	on_declaration = { on_declared_war = yes }	
	
	on_invalidated_desc = msg_subjugation_war_invalidated_message
	
	on_invalidated = {
	}

	on_victory_desc = {
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:attacker = {
			set_variable = maglor_umbar_event
			trigger_event = maglor_event_chain.0033
		}


		if = {
			limit = {
				scope:defender = { has_title = title:e_umbar }
			}
			title:e_umbar = { save_scope_as = defender_primary_title }
		}
		else = {
			title:k_umbar = { save_scope_as = defender_primary_title }
		}

		scope:defender_primary_title = {
			every_de_jure_county = {
				limit = { holder = { is_vassal_or_below_of = scope:defender } }
				add_to_list = target_titles
			}
		}

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = title_change
			add_claim_on_loss = no
		}

		every_in_list = {
			list = target_titles
			
			change_title_holder = {
				holder = scope:attacker
				change = scope:title_change
			}
		}

		resolve_title_and_vassal_change = scope:title_change	

		scope:defender = {
			every_held_title = {
				limit = { tier >= tier_kingdom }
				holder = { destroy_title = prev }
			}
			every_held_title = {
				limit = { tier <= tier_duchy }
				add_to_list = target_titles_defender
			}
		}

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = title_change_defender
			add_claim_on_loss = no
		}

		every_in_list = {
			list = target_titles_defender
			
			change_title_holder = {
				holder = scope:attacker
				change = scope:title_change_defender
			}
		}

		resolve_title_and_vassal_change = scope:title_change_defender	

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}
		# Truce
		add_truce_attacker_victory_effect = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_prestige = mongol_invasion_cb_prestige_white_peace
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = { desc = maglor_umbar_cb_defeat_desc }
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_high_effect = yes }

		# Prestige for the defender
		scope:defender = {
			add_prestige_war_defender_effect = { PRESTIGE_VALUE = major_prestige_value }
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}
		
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	ai_score_mult = { #LotR
		value = 1

		# LotR - Sauron and Nazgul should not target eachother
		add = {
			if = {
				limit = {
					OR = {
						AND = {
							scope:attacker = { is_sauron = yes }
							scope:defender = { has_trait = nazgul }
						}
						AND = {
							scope:defender = { is_sauron = yes }
							scope:attacker = { has_trait = nazgul }
						}
					}
				}
				add = -1000
			}
		}

		# LotR - Non-Evil faith characters leave poor Radagast alone! 
		add = {
			if = {
				limit = {
					scope:attacker = { faith_is_evil = no }
					scope:defender.culture = culture:istari
				}
				add = -1000
			}
		}

		# LotR - Protectorates are much less aggressive
		add = {
			if = {
				limit = {
					scope:attacker = { has_variable = overlord_protector }
				}
				add = -1000
			}
		}

		#LotR
		multiply = elf_target_ai_score_value
	}
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "maglor_umbar_cb_name"
	war_name_base = "maglor_umbar_cb_name"
	cb_name = "maglor_umbar_cb_name"
	interface_priority = 59
	
	ticking_war_score_targets_entire_realm = yes
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	attacker_ticking_warscore = 0
	attacker_wargoal_percentage = 0.8
	
	max_ai_diplo_distance_to_title = 500
}

final_battle_maglor_cb = {
	group = event 

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		NOT = {
			government_has_flag = government_is_feudal
			government_has_flag = government_is_republic 
			government_has_flag = government_is_theocracy 
			government_has_flag = government_is_clan 
			government_has_flag = government_is_mercenary
			government_has_flag = government_is_holy_order 
			government_has_flag = government_is_elven 
		}
		always = no
		
		scope:attacker = { NOT = { has_culture = culture:wastelands } }
	}
	
	ignore_effect = change_title_holder
	
	war_name = "INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "INVASION_CB_NAME"
	
	on_declaration = {
		on_declared_war = yes
        scope:defender = { trigger_event = maglor_event_chain.0068 }
	}
	
	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = { modifier = contributed_in_war }
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = { modifier = contributed_in_war }
		}

		# Truce
		add_truce_white_peace_effect = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	on_invalidated_desc = msg_invalidate_war_title

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	max_attacker_score_from_battles = 80
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = gondor_final_battle_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
	}
	
	on_victory = {
		set_global_variable = {
			name = sauron_destroyed
			value = yes
		}
		
		# Disable Gondors ability to attack Mordor
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_destroy_mordor
		}
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_annihilate_abhorred
		}
		
		scope:attacker.dynasty = {
			set_variable = this_dynasty_killed_sauron
		}

		every_independent_ruler = {
			limit = {
				exists = var:my_suzerain
				var:my_suzerain = scope:defender
			}
			free_tributary = yes
		}	
		
		scope:attacker = { show_pow_release_message_effect = yes }

		scope:defender = {
			hidden_effect = {
				every_held_title = {
					limit = { tier > tier_county }
					holder = { destroy_title = prev }
				}
				every_held_title = { # Distribute excess non-capital counties to new characters			
					limit = { tier = tier_county }
					set_county_faith = faith:sons_of_sauron
					save_temporary_scope_as = excess_title
	
					create_character = { # Create a new character to hold the title
						employer = root
						culture = culture:burgulhai
						faith = faith:sons_of_sauron
						gender_female_chance = 0
						after_creation = { save_scope_as = new_holder }
					}
				
					create_title_and_vassal_change = { # Define type of title change as a granting of the title
						type = granted
						save_scope_as = title_change
						add_claim_on_loss = no
					}
				
					scope:excess_title = { # Set the new character to be the new holder of the title
						change_title_holder = {
							holder = scope:new_holder
							change = scope:title_change
						}
					}
				
					resolve_title_and_vassal_change = scope:title_change # Take a look at yourself, and then make that... change! 
				}
			}
		}
		
		title:c_barad_dur.title_province = { remove_building = wonder_baraddur }

		title:k_nurn = {
			if = {
				limit = { holder = { faith_is_evil = yes } }
				holder = { destroy_title = prev }
			}
		}
		#custom_tooltip = shadow_of_mordor_clears_tt
		#hidden_effect = {
		#	nurnoth_slaves_openly_convert = yes
		#	every_province = {
		#		limit = {
		#			has_holding = yes
		#			OR = {
		#				has_holding_type = wastelands_holding
		#				has_holding_type = settlement_holding
		#				has_holding_type = ruined_holding
		#			}
		#			has_building = shadow_of_mordor
		#			NOT = { geographical_region = middleearth_mordor_gorgoroth }
		#		}
		#		remove_building = shadow_of_mordor
		#	}
		#}
		hidden_effect = {
			nurnoth_slaves_openly_convert = yes
		}
		
		character:mouthofsauron = {
			hidden_effect = {
				every_held_title = {
					limit = { tier > tier_county }
					holder = { destroy_title = prev }
				}
				every_held_title = {
					limit = { tier = tier_county }
		
					set_county_faith = faith:sons_of_sauron
		
					save_temporary_scope_as = excess_title
		
					create_character = { # Create a new character to hold the title
						employer = root
						culture = culture:burgulhai
						faith = faith:sons_of_sauron
						gender_female_chance = 0
						after_creation = { save_scope_as = new_holder }
					}
					
					create_title_and_vassal_change = { # Define type of title change as a granting of the title
						type = granted
						save_scope_as = title_change
						add_claim_on_loss = no
					}
					
					scope:excess_title = { # Set the new character to be the new holder of the title
						change_title_holder = {
							holder = scope:new_holder
							change = scope:title_change
						}
					}
					
					resolve_title_and_vassal_change = scope:title_change # Take a look at yourself, and then make that... change! 
				}
			}
			get_title = title:c_barad_dur
		}
		
		#Properly stablishes white hand if saruman doesnt have it yet
		character:lineofsaruman = {
			if = {
				limit = {
					is_alive = yes
					faith_is_evil = yes
					faith = faith:lidless_eye
					NOT = {
						is_target_in_global_variable_list = {
							name = unavailable_unique_decisions
							target = flag:decision_establish_cult_of_the_white_hand
						}
					}
				}
			}
			trigger_event = saruman_event_chain.2081
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_establish_cult_of_the_white_hand
			}
		}
		
		
		scope:attacker = {
			add_prestige = 5000
			every_war_ally = { add_prestige = 2000 }
		}
		
		hidden_effect = {
			scope:attacker = {
				trigger_event = {
					id = nurnoth.0002
					days = 9
				}
			}
			if = {
				limit = {
					exists = title:e_gondor.holder
				}
				title:e_gondor.holder = {
					trigger_event = {
						id = nurnoth.0004
						days = 10
					}
				}
			}
			else_if = {
				limit = {
					exists = title:e_gondor_steward.holder
				}
				title:e_gondor_steward.holder = {
					trigger_event = {
						id = nurnoth.0004
						days = 10
					}
				}
			}
			every_living_character = {
				limit = { 
					is_ruler = yes
					is_ai = no
					NOT = { this = scope:attacker } 
				}
				trigger_event = { id = news_event.0028 }
			}
			faith:lidless_eye = {
				change_fervor = {
					value = -100
					desc = fervor_dark_lord_defeated
				}
			}
			faith:cult_of_zigur = {
				change_fervor = {
					value = -100
					desc = fervor_dark_lord_defeated
				}
			}
			
			#juke note: moved religious conversion to a scripted effect
			lidless_eye_destroyed_effect = yes
		}

		scope:attacker = { trigger_event = maglor_event_chain.0069 }
		
		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
}

nadi_manye_religious_war_cb = {
	group = conquest
	allowed_for_character = {
		scope:attacker = {
			is_leading_faction_type = maglor_nadi_manye_faction
		}
		
		scope:attacker = {		
			NOT = {
				has_culture = culture:wastelands
			}
		}
	}

	allowed_against_character = {
		scope:defender = {
			has_title = title:c_amrun
		}
		
		scope:attacker = {		
			NOT = {
				has_culture = culture:wastelands
			}
		}
	}

	target_de_jure_regions_above = yes

	valid_to_start = {
	}

	on_declaration = {
	}

	on_victory_desc = {
		desc = nadi_manye_religious_war_victory_end_desc		
	}

	on_victory = {
		scope:attacker = { 
			show_pow_release_message_effect = yes
		}
		create_character = {
			template = maglor_nadi_manye_leader
			location = root.capital_province
			save_scope_as = nadi_manye_leader
		}
		create_title_and_vassal_change = {
			type = independency
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:defender = {
			if = {
				limit = { has_vassals = yes }
				every_vassal_or_below = {
					limit = { highest_held_title_tier > tier_barony }
					becomes_independent = {
						change = scope:change
					}
				}
			}
		}
		resolve_title_and_vassal_change = scope:change

		hidden_effect = {
			create_title_and_vassal_change = {
				type = faction_demand
				save_scope_as = change
				add_claim_on_loss = no
			}
	
			scope:defender = {
				every_held_title = {
					add_to_list = targeted_titles
				}
			}
	
			every_in_list = {
				list = targeted_titles
				random = {
					chance = 50
					if = {
						limit = { this.tier = tier_county }
						set_county_faith = scope:attacker.faith
					}
				}
				change_title_holder = {
					holder = scope:nadi_manye_leader
					change = scope:change
				}
			}
			
			resolve_title_and_vassal_change = scope:change
		}
		character:linefinwe11 = {
			trigger_event = maglor_event_chain.0041
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	white_peace_possible = no

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = tribal_subjugation_cb_white_peace_desc_defender
			}
			desc = tribal_subjugation_cb_white_peace_desc
		}
	}

	on_defeat_desc = { desc = nadi_manye_religious_war_defeat_end_desc }

	on_defeat = {
		on_lost_faction_revolt_war = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_invalidated_desc = msg_invalidate_war_title

	check_attacker_inheritance_validity = no

	on_primary_attacker_death = inherit_faction
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "nadi_manye_religious_war_cb"

	interface_priority = 80

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 50

	max_ai_diplo_distance_to_title = 500
}

war_in_the_north_cb = {
	group = conquest

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		always = no
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder ?= {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_religious_war_invalidation_region_message

	on_invalidated = {
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = county_conquest_cb_victory_desc_attacker
			}
			desc = county_conquest_cb_victory_desc
		}
	}

	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		
		title:k_erebor = {
            every_in_de_jure_hierarchy = {
                limit = {
                    holder ?= { is_orc = no }
                }
                change_title_holder_include_vassals = {
                    holder = scope:attacker
                    change = scope:change
                }
            }
        }

		title:e_rhovanion = {
            every_in_de_jure_hierarchy = {
                limit = {
                    holder ?= { is_orc = no }
                    holder.top_liege ?= scope:defender
                }
                change_title_holder_include_vassals = {
                    holder = scope:attacker
                    change = scope:change
                }
            }
        }

		title:e_iron_mountains = {
            every_in_de_jure_hierarchy = {
                limit = {
                    holder ?= { is_orc = no }
                    holder.top_liege ?= scope:defender
                   # holder.faith = { faith_is_evil = yes }
                }
                change_title_holder_include_vassals = {
                    holder = scope:attacker
                    change = scope:change
                }
            }
        }

		hidden_effect = {
			character:lineofdurin90 = {
				trigger_event = {
					id = huzmargoz_event_chain.0002	
				}	
			}
		}

		# go through the dejure hierarchy under target titles, transfer eligible vassals and sieze counties from ineligible ones
		every_in_list = {
			list = target_titles
			custom_tooltip = CONQUEST_CB_TITLE

			save_scope_as = target_title # For the vassalization trigger.

			# Compile a list of all counties in the kingdom we will take from the defender.
			every_in_de_jure_hierarchy = {
				continue = {
					tier > tier_county
				}
				limit = {
					tier = tier_county
					#has_county_modifier = elven_homeland_county_modifier
					# Current holder must be a (sub)vassal of the defender (no poaching titles from 3rd parties!)
					holder ?= {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}
				add_to_list = titles_taken
			}
		}

		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		if = { # Warning that only counties are changing hands
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_duchy
				}
			}
			random_in_list = {
				list = target_titles
				limit = { tier = tier_duchy }
				save_scope_as = de_jure_target
			}
			if = { # LotR - reordered to clean up errorlog
				limit = {
					any_in_list = {
						list = target_titles
						tier = tier_duchy
						holder = scope:defender
					}
				}
				if = {
					limit = {
						scope:defender = {
							any_held_title = {
								tier = tier_county
								NOT = { target_is_de_jure_liege_or_above = scope:de_jure_target }
							}
						}
					}
					custom_tooltip = conquest_title_not_transferred_tt
				}
				else = { custom_tooltip = conquest_title_destroyed_tt }
			}
			else = {
				if = {
					limit = {
						any_in_list = {
							list = target_titles
							tier = tier_duchy
							is_title_created = yes
						}
					}
					custom_tooltip = conquest_title_usurp_tt
				}
				else = { custom_tooltip = conquest_title_create_tt }
			}
		}

		if = { # Smaug the Second | Achievement
			limit = {
				NOT = { exists = global_var:lotr_achievement_48 }
				realms_achievements_enabled = yes
				scope:attacker = { is_ai = no }
			}
			set_global_variable = lotr_achievement_48
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # not impactful as the scale are identical
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}


		add_truce_white_peace_effect = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes
		
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes
		
		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
			destroy_title = title:e_golden_realm_rhun
		}

		character:lineofhuz190 = {
			hidden_effect = {
				every_held_title = {
					limit = {
						tier > tier_county
					}
					holder = { # Destroy that title
						destroy_title = prev
					}
				}
				every_held_title = { # Distribute excess non-capital counties to new characters			
					limit = { # For every non-capital county
						tier = tier_county
					}
					save_temporary_scope_as = excess_title
	
					create_character = { # Create a new character to hold the title
						employer = root
						culture = scope:excess_title.culture
						faith = scope:excess_title.faith
						gender_female_chance = 0
						save_temporary_scope_as = new_holder
					}
				
					create_title_and_vassal_change = { # Define type of title change as a granting of the title
						type = granted
						save_scope_as = title_change
						add_claim_on_loss = no
					}
				
					scope:excess_title = { # Set the new character to be the new holder of the title
						change_title_holder = {
							holder = scope:new_holder
							change = scope:title_change
						}
					}
				
					resolve_title_and_vassal_change = scope:title_change # Take a look at yourself, and then make that... change!
					
				}
			}
			set_employer = character:lineofsauron
			add_character_modifier = {
				modifier = lotr_vanquished_modifier
				years = 10
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "WAR_IN_THE_NORTH_WAR_NAME"
	war_name_base = "CONQUEST_WAR_NAME_BASE"
	cb_name = "WAR_IN_THE_NORTH_WAR_NAME"

	interface_priority = 79

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8
}

invade_bellakar_cb = {
	group = conquest

	white_peace_possible = no

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		always = no
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "INVADE_BELLAKAR_WAR_NAME"
	war_name_base = "INVADE_BELLAKAR_WAR_NAME"
	cb_name = "invade_bellakar_cb"

	interface_priority = 79

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_religious_war_invalidation_region_message

	on_invalidated = {
	}

	on_declaration = {
		on_declared_war = yes
		#title:e_thon_an_kharlokh.holder = {
		#	trigger_event = { # Revolt begins
		#		id = lotr_thani_hazad.2010 
		#		days = 30
		#	}
		#}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = county_conquest_cb_victory_desc_attacker
			}
			desc = county_conquest_cb_victory_desc
		}
	}

	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		

		title:e_bellakar = {
            every_in_de_jure_hierarchy = {
                limit = {
                    holder ?= { is_orc = no }
                    holder.top_liege ?= scope:defender
                }
                change_title_holder_include_vassals = {
                    holder = scope:attacker
                    change = scope:change
                }
            }
        }

		# go through the dejure hierarchy under target titles, transfer eligible vassals and sieze counties from ineligible ones
		every_in_list = {
			list = target_titles
			custom_tooltip = CONQUEST_CB_TITLE

			save_scope_as = target_title # For the vassalization trigger.

			# Compile a list of all counties in the kingdom we will take from the defender.
			every_in_de_jure_hierarchy = {
				continue = {
					tier > tier_county
				}
				limit = {
					tier = tier_county
					#has_county_modifier = elven_homeland_county_modifier
					# Current holder must be a (sub)vassal of the defender (no poaching titles from 3rd parties!)
					exists = holder
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}
				add_to_list = titles_taken
			}
		}

		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		if = { # Warning that only counties are changing hands
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_duchy
				}
			}
			random_in_list = {
				list = target_titles
				limit = { tier = tier_duchy }
				save_scope_as = de_jure_target
			}
			if = { # LotR - reordered to clean up errorlog
				limit = {
					any_in_list = {
						list = target_titles
						tier = tier_duchy
						holder = scope:defender
					}
				}
				if = {
					limit = {
						scope:defender = {
							any_held_title = {
								tier = tier_county
								NOT = { target_is_de_jure_liege_or_above = scope:de_jure_target }
							}
						}
					}
					custom_tooltip = conquest_title_not_transferred_tt
				}
				else = { custom_tooltip = conquest_title_destroyed_tt }
			}
			else = {
				if = {
					limit = {
						any_in_list = {
							list = target_titles
							tier = tier_duchy
							is_title_created = yes
						}
					}
					custom_tooltip = conquest_title_usurp_tt
				}
				else = { custom_tooltip = conquest_title_create_tt }
			}
		}

		if = {
			limit = { # Major News
				NOT = { has_game_rule = no_news }
			}
			every_player = { #Global News Announcement
				trigger_event = news_event.0029
			}
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		desc = WHITE_PEACE_DISABLED
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes
		
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes
		
		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
			destroy_title = title:e_thon_an_kharlokh
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		if = {
			limit = { # Major News
				NOT = { has_game_rule = no_news }
			}
			every_player = { #Global News Announcement
				trigger_event = news_event.0030
			}
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
}

restore_gondor_cb = { # Liberation of Gondor cb
	group = conquest

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		has_character_flag = liberating_gondor
		faith_is_good = yes
	}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	
	white_peace_possible = no 
	
	on_declaration = {
		on_declared_war = yes
        scope:defender = {
            trigger_event = gondor.6501
        }
		# scope:attacker = {
			# trigger_event = gondor.6500
		# }
	}	
	
	on_invalidated_desc = msg_invalidate_war_title
	
	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = invasion_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
			desc = invasion_war_warning_desc
		}
	}
	
	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }
		hidden_effect = {
			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = change
				add_claim_on_loss = yes
			}
			
			setup_invasion_cb = {
				titles = target_titles
				attacker = scope:attacker
				defender = scope:defender
				change = scope:change
				take_occupied = yes
			}
			resolve_title_and_vassal_change = scope:change
		}
		
		custom_tooltip = restore_gondor_cb_tt

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
		
		hidden_effect = {
            scope:attacker = {
                trigger_event = {
					id = gondor.6502
					days = 1
				}
            }
		}
		
		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# if = {
			# limit = { # Major News
				# NOT = { has_game_rule = no_news }
			# }
			# every_player = { #Global News Announcement
				# trigger_event = news_event.0014
			# }
		# }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_prestige = mongol_invasion_cb_prestige_white_peace
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = medium_gold_value
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
			
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# if = {
			# limit = { # Major News
				# NOT = { has_game_rule = no_news }
			# }
			# every_player = { #Global News Announcement
				# trigger_event = news_event.0013
			# }
		# }
		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
 	war_name = lotr_liberate_gondor_name
	my_war_name = "INVASION_WAR_NAME_MY"
 	war_name_base = lotr_liberate_gondor_name
 	cb_name = lotr_liberate_gondor_name
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8
}

### Stormhost Tulwangi revolt war ###

lotr_tulwangi_rebellion_war = {
 	icon = peasant_war
 	group = event

 	combine_into_one = yes
 	should_show_war_goal_subview = yes
 	mutually_exclusive_titles = { always = yes }

 	allowed_for_character = {
 		is_ai = yes
 	}

 	allowed_against_character = {
 		always = yes
 	}
 	target_titles = all
 	target_title_tier = duchy
 	target_de_jure_regions_above = yes
 	ignore_effect = change_title_holder

 	valid_to_start = {
 		always = no
 	}

 	should_invalidate = {
 		NOT = {
 			any_in_list = {
 				list = target_titles
 				any_in_de_jure_hierarchy = {
 					tier = tier_county
 					holder = {
 						target_is_same_character_or_above = scope:defender
 					}
 				}
 			}
 		}
 	}

 	on_invalidated_desc = msg_religious_war_invalidation_region_message

 	on_invalidated = {
 		scope:attacker = {
 			every_held_title = {
 				limit = { has_variable = temporary_title }
 				save_scope_as = destroyable_title
 				scope:attacker = { destroy_title = scope:destroyable_title }
 			}
 		}
 	}

 	on_declaration = {
 		on_declared_war = yes
		if = {
			limit = { # Minor News
				has_game_rule = all_news
			}
			every_player = { # Global News Announcement
				trigger_event = news_event.0031
			}
		}
		scope:defender = {
			every_vassal = {
				# limit = {
					# OR = {
						# has_culture = culture:tuladen
						# culture = { any_parent_culture_or_above = { this = culture:tuladen } }
					# }
				# }
				trigger_event = lotr_thani_hazad.2116
			}
		}
 	}

 	on_victory_desc = {
 		first_valid = {
 			triggered_desc = {
 				trigger = { scope:attacker = { is_local_player = yes } }
 				desc = county_conquest_cb_victory_desc_attacker
 			}
 			desc = county_conquest_cb_victory_desc
			#custom_tooltip = tulwangi_rebellion_counties_taken
 		}
 	}

 	on_victory = {
		# EP2 accolade glory gain for winning against higher ranked enemy
 		scope:attacker = { accolade_attacker_war_end_glory_gain_med_effect = yes }

 		create_title_and_vassal_change = {
 			type = conquest
 			save_scope_as = change
 			add_claim_on_loss = yes
 		}

		# go through the dejure hierarchy under target titles, transfer titles with same or worse tolerance holders (their religion equally or less tolerated than the defender's),
		# take the holder as vassal otherwise and don't go deeper

		title:k_tulwang = {
			 change_title_holder = {
 				holder = scope:attacker
 				change = scope:change
 			}
		}

 		every_in_list = {
 			list = target_titles
 			every_in_de_jure_hierarchy = {
 				continue = {
					OR = {
 						NOT = {	exists = holder }
 						NOT = {
 							holder = { target_is_liege_or_above = scope:defender }
 						}
 						AND = {
 							scope:attacker.faith = {
 								faith_hostility_level_comparison = { prev.holder.faith <= scope:defender.faith }
 							}
 							holder = {
								OR = {
 									this = scope:defender
 									target_is_liege_or_above = scope:defender
 								}
 							}
 						}
 					}
 					tier > tier_county
 				}
 				limit = {
 					tier <= tier_duchy
 					exists = holder
 					holder = {
 						OR = {
 							this = scope:defender
 							target_is_liege_or_above = scope:defender
 						}
 					}
 				}

 				if = {
 					limit = {
 						OR = {
 							scope:attacker.faith = {
 								faith_hostility_level_comparison = {
 									prev.holder.faith >= scope:defender.faith
 								}
 							}
 							holder.primary_title.tier >= scope:attacker.primary_title.tier
 						}
 					}
 					add_to_temporary_list = titles_taken
 				}
 				else = {
 					holder = {
 						add_to_temporary_list = vassals_taken
 					}
 				}
 			}
 		}
		
		scope:defender = { # Make sure all tulwangi counties are taken
			every_county = {
				limit = {
					culture = scope:attacker.culture
				}
				add_to_temporary_list = titles_taken
			}
		}

		scope:defender = {
			hidden_effect = {
				destroy_title = title:e_thon_an_kharlokh
			}
		}
	
 		every_in_list = {
 			list = titles_taken
 			if = {
 				limit = { this = title:c_rumyar }
 				change_title_holder = {
 					holder = scope:attacker
 					change = scope:change
 					take_baronies = yes
 				}
 				set_county_culture = culture:tuladen
 				set_county_faith = faith:faith_tulwang
 			}
 			else_if = {
 				limit = { this = title:d_dobaraka }
 				change_title_holder = {
 					holder = scope:attacker
 					change = scope:change
 					take_baronies = yes
 				}
 			}
 			else = {
 				create_tulwangi_vassal_effect = {
 					LOCATION = scope:attacker.location
 				}
 				change_title_holder = {
 					holder = scope:new_tulwangi_vassal
 					change = scope:change
 					take_baronies = yes
 				}
 				scope:new_tulwangi_vassal = {
 					change_liege = {
 						liege = scope:attacker
 						change = scope:change
 					}
 				}
 			}
 		}

 		every_in_list = {
 			list = vassals_taken
 			change_liege = {
 				liege = scope:attacker
 				change = scope:change
 			}
 		}
		
 		resolve_title_and_vassal_change = scope:change

 		# Prestige Progress for the Attacker
 		every_in_list = {
 			list = target_titles
 			scope:attacker = {
 				add_prestige_experience = medium_prestige_value
 			}
 		}	
		
 		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
 		modify_allies_of_participants_fame_values = {
 			WINNER = scope:attacker
 			FAME_BASE = medium_prestige_value
 			IS_RELIGIOUS_WAR = no
 			WINNER_ALLY_FAME_SCALE = 1
 			LOSER_ALLY_FAME_SCALE = 1
 		}

 		# Truce
 		add_truce_attacker_victory_effect = yes

		#Clean-up tulwangi leader
		hidden_effect = {
			scope:attacker = {
				every_held_title = {
					limit = { has_variable = temporary_title }
					save_scope_as = destroyable_title
 					scope:attacker = { destroy_title = scope:destroyable_title }
 				}
 			}
 		}
 		#Give the Tulwangi Leader some Tulwangi Courtiers
 		hidden_effect = {
 			create_tulwangi_courtier_effect = {
 				EMPLOYER = scope:attacker
 				LOCATION = scope:attacker.location
 			}
 			create_tulwangi_courtier_effect = {
 				EMPLOYER = scope:attacker
 				LOCATION = scope:attacker.location
 			}
 			create_tulwangi_courtier_effect = {
 				EMPLOYER = scope:attacker
 				LOCATION = scope:attacker.location
 			}
 			create_tulwangi_courtier_effect = {
 				EMPLOYER = scope:attacker
 				LOCATION = scope:attacker.location
 			}
 			create_tulwangi_courtier_effect = {
 				EMPLOYER = scope:attacker
 				LOCATION = scope:attacker.location
 			}
 			create_tulwangi_courtier_effect = {
 				EMPLOYER = scope:attacker
 				LOCATION = scope:attacker.location
 			}
 		}
		if = {
			limit = { # Major News
				NOT = { has_game_rule = no_news }
			}
			every_player = { #Global News Announcement
				trigger_event = news_event.0032 # Rebel Victory
			}
		}
		scope:attacker = { 
			show_pow_release_message_effect = yes 
			hard_imprison_character_effect = {
				TARGET = scope:defender
				IMPRISONER = this
			}
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
 	}

 	white_peace_possible = no
 	on_white_peace_desc = { desc = county_conquest_cb_white_peace_desc }

 	on_defeat_desc = {
 		first_valid = {
 			triggered_desc = {
 				trigger = { scope:defender = { is_local_player = yes } }
 				desc = county_conquest_cb_defeat_desc_defender
 			}
 			triggered_desc = {
 				trigger = {
 					scope:attacker = {
 						is_local_player = yes
 						has_targeting_faction = yes
 					}
 				}
 				desc = county_conquest_cb_defeat_desc_attacker
 			}
 			desc = county_conquest_cb_defeat_desc
 		}
 	}

 	on_defeat = {
		#EP2 accolade glory gain for winning against higher ranked enemy
 		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }

 		# Prestige loss for the attacker
 		scope:attacker = {
 			add_prestige = {
 				value = major_prestige_value
 				multiply = -1.0
 			}
 		}

 		# Prestige for Defender
 		scope:defender = {
 			add_prestige_war_defender_effect = {
 				PRESTIGE_VALUE = major_prestige_value
 			}
 		}

 		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
 		modify_allies_of_participants_fame_values = {
 			WINNER = scope:defender
 			FAME_BASE = medium_prestige_value
 			IS_RELIGIOUS_WAR = no
 			WINNER_ALLY_FAME_SCALE = 1
 			LOSER_ALLY_FAME_SCALE = 1
 		}

 		add_truce_attacker_defeat_effect = yes

 		scope:attacker = {
 			save_temporary_scope_as = loser
 		}

 		on_lost_aggression_war_discontent_loss = yes

 		#Clean-up tulwangi leader
 		hidden_effect = {
 			scope:attacker = {
 				every_held_title = {
 					limit = { has_variable = temporary_title }
 					save_scope_as = destroyable_title
 					scope:attacker = { destroy_title = scope:destroyable_title }
 				}
 			}
 		}
		if = {
			limit = { # Major News
				NOT = { has_game_rule = no_news }
			}
			every_player = { #Global News Announcement
				trigger_event = news_event.0033 # Rebels Defeated
			}
		}
		scope:defender = { 
			show_pow_release_message_effect = yes
			imprison = { 
				target = scope:attacker
				type = dungeon 
			}
		}
		scope:defender = {
			add_dread = medium_dread_gain
			trigger_event = lotr_thani_hazad.2120
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
 	}

 	transfer_behavior = transfer

 	on_primary_attacker_death = inherit
 	on_primary_defender_death = inherit

 	attacker_allies_inherit = yes
 	defender_allies_inherit = yes

 	war_name = lotr_tulwangi_rebellion_name
	my_war_name = "INVASION_WAR_NAME_MY"
 	war_name_base = lotr_tulwangi_rebellion_name
 	cb_name = lotr_tulwangi_rebellion_name

 	interface_priority = 79

 	use_de_jure_wargoal_only = yes

 	attacker_wargoal_percentage = 0.8
	
 	max_defender_score_from_occupation = 150
 	max_attacker_score_from_occupation = 150
}

lotr_valinor_invasion_cb = {
	group = conquest
	
	max_attacker_score_from_battles = 150
	defender_ticking_warscore = 0
	attacker_wargoal_percentage = 0.5
	attacker_score_from_battles_scale = 25
	defender_score_from_battles_scale = 10
	landless_attacker_needs_armies = yes
	full_occupation_by_attacker_gives_victory = yes

	white_peace_possible = no

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = no }

	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = no

	# ignore_effect = change_title_holder

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8

	ignore_effect = change_title_holder

	allowed_for_character = { scope:attacker = { has_variable = invasion_cb_unlock } }

	war_name = "VALINOR_HOST_LANDING_WAR_NAME"
	war_name_base = "VALINOR_HOST_LANDING_WAR_NAME"
	cb_name = "VALINOR_HOST_LANDING_CB_NAME"

	valid_to_start = {
		trigger_if = {
			limit = {
				OR = {
					scope:attacker.capital_county.title_province = { geographical_region = middleearth_west_arnor }
					scope:attacker.capital_county.title_province = { geographical_region = middleearth_west_beleriand }
					scope:attacker.capital_county.title_province = { geographical_region = middleearth_forodwaith }
				}
			}
			OR = {
				scope:target.title_capital_county.title_province = { geographical_region = middleearth_west_arnor }
				scope:target.title_capital_county.title_province = { geographical_region = middleearth_west_beleriand }
				scope:target.title_capital_county.title_province = { geographical_region = middleearth_forodwaith }
			}
		} 
		trigger_else_if = {
			limit = { scope:attacker.capital_county.title_province = { geographical_region = special_bay_of_belfalas_invasion } }
			scope:target.title_capital_county.title_province = { geographical_region = special_bay_of_belfalas_invasion }
		}
		trigger_else = { always = no }
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_religious_war_invalidation_region_message

	on_invalidated = { }

	on_declaration = { on_declared_war = yes scope:attacker = { remove_variable = invasion_cb_unlock } }

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = invasion_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
			desc = invasion_war_warning_desc
		}
	}
	
	on_victory = {
		# Legitimacy
		if = {
			limit = { scope:attacker = { NOT = { has_title = title:e_eonwe_host } } }
			scope:attacker = { get_title = title:e_eonwe_host }
		}
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		scope:attacker = {
			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = change
				add_claim_on_loss = yes
			}

			every_in_list = {
				list = target_titles
				save_scope_as = targeted_title
				valinorean_invasion_settle_local_people_effect = yes
			}
			
			resolve_title_and_vassal_change = scope:change
		}

		save_scope_value_as = {
			name = cb_prestige_factor
			value = 1
		}

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = { desc = WHITE_PEACE_DISABLED }

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes
		
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes
		
		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
			destroy_title = title:e_thon_an_kharlokh
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = { save_temporary_scope_as = loser }
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
}

zajantak_destruction_war = {
	icon = invasion
	group = subjugation
	ai_only_against_neighbors = yes

	allowed_for_character = {
		always = no
	}

	ai_score_mult = {value = 10}
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "zajantak_destruction_war"
	war_name_base = "zajantak_destruction_war"
	cb_name = "zajantak_destruction_war"
	interface_priority = 100
	
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	attacker_ticking_warscore = 0
	
	on_declaration = { on_declared_war = yes }	
	
	on_invalidated_desc = msg_subjugation_war_invalidated_message
	
	on_invalidated = {}

	on_victory_desc = { desc = zajantak_destruction_war_victory_desc }
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		scope:defender = {
			random_sub_realm_county = {
				limit = { 
					exists = duchy 
					is_neighbor_to_realm = scope:attacker 
				}
				duchy = { save_scope_as = target_duchy }
			}
		}

		create_title_and_vassal_change = {
			type = independency
			save_scope_as = change
			add_claim_on_loss = yes
		}

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = storm_king_grab
			add_claim_on_loss = yes
		}

		scope:target_duchy = {
			change_title_holder = {
				holder = scope:attacker
				change = scope:storm_king_grab
			}
			every_in_de_facto_hierarchy = {
				change_title_holder = {
					holder = scope:attacker
					change = scope:storm_king_grab
				}
			}
		}
		
		scope:defender = {
			destroy_title = title:k_zajantak
			change_government = tribal_government
			every_vassal_or_below = {
				change_government = tribal_government
				becomes_independent = {change = scope:change}
			}
			save_scope_as = zajantak_previous_king
		}

		resolve_title_and_vassal_change = scope:storm_king_grab
		resolve_title_and_vassal_change = scope:change

		scope:defender = {
			trigger_event = {id = lotr_bozisha_miraz.0302 days = {5 6}}
		}
		scope:attacker = {
			trigger_event = {id = lotr_bozisha_miraz.0301 days = {2 3}}
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = { desc = zajantak_destruction_war_white_peace_desc }
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_prestige = mongol_invasion_cb_prestige_white_peace
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = { desc = zajantak_destruction_war_defeat_desc }
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_high_effect = yes }

		# Prestige for the defender
		scope:defender = {
			add_prestige_war_defender_effect = { PRESTIGE_VALUE = major_prestige_value }
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 2
			LOSER_ALLY_FAME_SCALE = 0.5
		}

		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 4
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}
		
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
}

#####################
### T.A. 1349 CBs ###
#####################

angle_rhudaur_invasion_war = {
	group = invasion

	target_titles = all

	on_declaration = {
		on_declared_war = yes
	}
	allowed_for_character = {
		always = no
	}
	should_invalidate = {
		OR = {
			NOT = {
				any_in_list = {
					list = target_titles
					any_in_de_jure_hierarchy = {
						tier >= tier_county
						exists = holder
						holder = {
							OR = {
								this = scope:defender
								target_is_liege_or_above = scope:defender
							}
						}
					}
				}
			}
			AND = { 
				NOT = { scope:claimant = scope:attacker } 
				scope:claimant = {
					OR = {
						is_alive = no 
						NOR = { 
							is_vassal_or_below_of = scope:attacker 
							is_courtier_of = scope:attacker 
						}
					}
				}
			} 
		}
	}

	on_invalidated_desc = msg_invasion_war_invalidated_message
	
	on_invalidated = {
		#try again 
		title:e_thon_an_kharlokh.holder = {
			trigger_event = lotr_thani_hazad.2020
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = invasion_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
			desc = invasion_war_warning_desc
		}
	}

	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

        scope:attacker = {
            trigger_event = { #Witch-king demands tributary status
				id = rhudaur.2502
				days = 5
			}
        }
		
		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
			take_occupied = no
		}
		resolve_title_and_vassal_change = scope:change

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_prestige = mongol_invasion_cb_prestige_white_peace
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}
		
		scope:attacker = {
            trigger_event = { #Witch-king punishes Hwaldar for failing him
				id = rhudaur.2005
				days = 1
			}
        }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
		
		scope:attacker = {
            trigger_event = { #Witch-king punishes Hwaldar for failing him
				id = rhudaur.2005
				days = 1
			}
        }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "INVASION_WAR_NAME"
	my_war_name = "INVASION_WAR_NAME_MY"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "INVASION_CB_NAME"
	interface_priority = 60

	should_show_war_goal_subview = yes

	attacker_wargoal_percentage = 0.8

	max_ai_diplo_distance_to_title = 1000
}