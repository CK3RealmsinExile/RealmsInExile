make_tributary_cb = {
	icon = make_tributary_cb
	group = subjugation
	ai_only_against_neighbors = yes
	
	attacker_score_from_occupation_scale = 150
	attacker_score_from_battles_scale = 150
	defender_score_from_battles_scale = 150
	
	allowed_for_character = {
		can_have_tributaries_trigger = yes
		is_landed = yes

		# LotR
		NOR = {
			has_title = title:k_wastelands 
			is_in_valinor = yes
		}
		# Elven Expansion CB limitation in game rules
		NAND = {
			is_elf = yes
			has_game_rule = limited_elven_expansion
			NOT = { # Birthright of the Eldar enables conquest CBs again
				faith = { has_doctrine = tenet_birthright_eldar }
			}
		}
	}

	# Root is the title
	# scope:attacker is the attacker
	# scope:defender is the defender
	
	allowed_against_character = {
		scope:defender = {
			is_independent_ruler = yes
			is_landed = yes

			NOT = {	government_has_flag = cannot_be_vassal_or_liege	}
			
			#LotR
			NOR = { #Tom, Valinor and the Necromancer can't be targeted
				has_title = title:k_wastelands 
				is_in_valinor = yes
				has_character_flag = unknown_sauron_flag
			}
		}
		scope:attacker = {
			# For the AI to not create ugly Tributaries
			trigger_if = {
				limit = {
					is_ai = yes
				}
				trigger_if = {
					limit = {
						NOT = {
							government_has_flag = government_is_nomadic
						}
					}
					scope:defender.realm_size <= {
						value = scope:attacker.realm_size
						multiply = 0.75
					}
					scope:defender.primary_title.tier < tier_empire
				}
				OR = {
					scope:defender.primary_title.tier <= tier_duchy
					scope:defender.primary_title.tier <= scope:attacker.primary_title.tier
				}
			}

			#LotR
			trigger_if = { #Elves won't bring opposed alignment Orcs under tribute
				limit = {
					is_elf = yes
				}
				NAND = {
					opposite_alignment = { TARGET = scope:defender } 
					scope:defender = { is_orc = yes }
				}
			}
			trigger_if = { #Elves and Undying won't pay tribute to opposed alignment characters
				limit = {
					opposite_alignment = { TARGET = scope:defender }
				}
				scope:defender = { 
					is_elf = no
					cannot_be_killed = no
				}
			}
			trigger_if = { #Undying can only be brought under tribute by other Undying or Elves
				limit = {
					is_elf = no
					cannot_be_killed = no
				}
				scope:defender = { cannot_be_killed = no }
			}
		}
	}

	allowed_against_character_display_regardless = {
		custom_tooltip = {
			text = must_neighbor_or_neighbor_tributary_tt
			scope:attacker = {
				any_land_neighboring_realm_with_tributaries_owner = {
					this = scope:defender
				}
			}
		}
	}

	should_invalidate = {
		OR = {
			scope:attacker = {
				OR = {
					is_independent_ruler = no
					is_landed = no
					has_title = title:k_wastelands # LotR
				}
			}
			scope:defender = {
				OR = {
					is_independent_ruler = no
					is_landed = no
					has_title = title:k_wastelands # LotR
				}
			}
		}
	}
	
	cost = { 
		prestige = {
			scope:defender = {
				value = {
					add = realm_size
					multiply = 25
					if = {
						limit = { primary_title.tier = tier_county }
						max = 100
					}
					else_if = {
						limit = { primary_title.tier = tier_duchy }
						max = 200
					}
					else = {
						max = 300
					}
					desc = CB_SIZE_OF_TARGET_REALM_COST
				}
			}
		}
	}

	on_declaration = {
		on_declared_war = yes
	}	
	
	on_invalidated_desc = msg_make_tributary_war_invalidated_message
	
	on_invalidated = {}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = make_tributary_cb_victory_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = make_tributary_cb_victory_desc_defender
			}
			desc = make_tributary_cb_victory_desc
		}
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		scope:attacker = {
			if = {
				limit = { government_has_flag = government_is_nomadic }
				custom_tooltip = make_tributary_temp_protection_tooltip
				hidden_effect = {
					set_variable = {
						name = temp_tributary_protection
						years = temp_tributary_protection_value
					}
				}
			}
		}
		
		if = { # This if/else exists for localization purposes, since it could be parsed before the war starts
			limit = { exists = root.war }
			start_tributary_from_war_effect = {
				TRIBUTARY = scope:defender
				SUZERAIN = scope:attacker
				WAR = root.war
			}
		}
		else = {
			save_scope_value_as = {
				name = high_obligations
				value = yes
			}
			start_tributary_interaction_effect = {
				TRIBUTARY = scope:defender
				SUZERAIN = scope:attacker
			}
		}

		#If you tributarize a confederate, they leave their confederation
		if = {
			limit = {
				scope:defender = {
					is_confederation_member = yes
				}
			}
			scope:defender.confederation = {
				remove_confederation_member = scope:defender
			}
		}
		
		# Prestige level progress for the attacker
		scope:attacker = {
			add_prestige_experience = {
				value = medium_prestige_value
			}
		}

		# Prestige loss for the defender
		scope:defender = {
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}
		
		# Truce
		add_truce_attacker_victory_effect = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = make_tributary_cb_white_peace_desc_defender
			}
			desc = make_tributary_cb_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 accolade glory gain for doing ok against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # Not important as the scales are identical
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}
		
		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = make_tributary_cb_white_peace_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = make_tributary_cb_defeat_desc_attacker
			}
			desc = make_tributary_cb_white_peace_desc
		}
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }
		
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}

		# Truce
		add_truce_attacker_defeat_effect = yes
		
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "MAKE_TRIBUTARY_WAR_NAME"
	war_name_base = "MAKE_TRIBUTARY_WAR_NAME_BASE"
	cb_name = "MAKE_TRIBUTARY_CB_NAME"
	interface_priority = 59
	
	ticking_war_score_targets_entire_realm = yes
	max_defender_score_from_battles = 150
	max_attacker_score_from_battles = 150
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	attacker_ticking_warscore = 0
	attacker_wargoal_percentage = 0.8
	
	max_ai_diplo_distance_to_title = 500

	ai_score_mult = {
		value = 1

		if = {
			limit = {
				scope:defender.primary_title.tier >= scope:attacker.primary_title.tier
			}
			multiply = 0.1
		}

		multiply = struggle_wars_prioritise_struggle_targets_value
		
		if = {
			limit = {
				scope:attacker = { government_has_flag = government_is_nomadic }
				scope:attacker.domain_size < scope:attacker.domain_limit
			}
			multiply = 0.1
		}
		
		#LotR
		multiply = elf_target_ai_score_value
	}

	ai_score = {
		value = {
			value = 50
			scope:defender = {
				every_sub_realm_county = {
					add = 50
				}
			}
			scope:attacker = {
				if = {
					limit = {
						government_has_flag = government_is_nomadic
						domain_size >= domain_limit
					}
					multiply = 5
				}
				else_if = {
					limit = {
						NOT = {
							government_has_flag = government_is_nomadic
						}
					}
					multiply = {
						value = 0.2
						if = {
							limit = {
								scope:defender.monthly_character_income >= 3
								scope:defender.monthly_character_income >= {
									add = scope:attacker.monthly_character_income
									multiply = 1.25
								}
							}
							add = 0.3
						}
					}
				}
			}
		}
	}
}

tributary_independence_war = {
	icon = independence_faction_war
	group = independence

	allow_hostages = no
	allowed_for_character = {
		scope:attacker = {
			this != suzerain # has a suzerain
			NOT = { obedience_target ?= suzerain } # if the attacker is subject to Obedience and their target is their suzerain, they cannot fight for their freedom
		}
	}
	allowed_against_character = {
		scope:attacker = {
			suzerain = scope:defender
		}
	}

	cost = {
		prestige = {
			value = 0
			add = {
				value = 100
				desc = CB_BASE_COST
			}
			multiply = common_cb_prestige_cost_multiplier
		}
	}

	on_declaration = {
		on_declared_war = yes # this will also break the tributary agreement immediately
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = tributary_independence_war_victory_desc_attacker
			}
			triggered_desc = {
				trigger = {
					scope:defender = {
						is_local_player = yes
					}
				}
				desc = tributary_independence_war_victory_desc_defender
			}
			desc = tributary_independence_war_victory_desc
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 Accolade glory gain from winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }

		scope:attacker = { 
			add_truce_both_ways = {
				character = scope:defender
				days = 1825
				war = root.war
				result = victory
			}
		}

		scope:defender = {
			# Struggle Catalyst
			hidden_effect = {
				if = {
					limit = {
						catalyst_gave_independence_to_powerful_diff_faith_culture_vassal_preliminary_trigger = {
							CHAR1 = scope:defender
							CHAR2 = scope:attacker
						}
						any_character_struggle = {
							involvement = involved
							activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
								CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
								CHAR = scope:attacker
							}
						}
					}
					every_character_struggle = {
						involvement = involved
						limit = {
							activate_struggle_catalyst_secondary_character_involvement_either_trigger = {
								CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
								CHAR = scope:attacker
							}
						}
						activate_struggle_catalyst = {
							catalyst = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
							character = scope:defender
						}
					}
				}
			}
		}
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = tributary_independence_war_white_peace_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = tributary_independence_war_white_peace_attacker_desc
			}
			desc = tributary_independence_war_white_peace_desc
		}
	}

	on_white_peace = {
		save_scope_value_as = { name = low_obligations value = yes } # sets low obligations in the resulting tributary contract
		start_tributary_from_war_effect = {
			TRIBUTARY = scope:attacker
			SUZERAIN = scope:defender
			WAR = root.war
		}
		scope:attacker = {
			show_pow_release_message_effect = yes
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}
		hidden_effect = {
			scope:attacker = {
				add_truce_one_way = {
				 	character = scope:defender
					war = root.war
					result = white_peace
				}
			}
		}

		scope:defender = {
			add_prestige = minor_prestige_value
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = tributary_independence_war_defeat_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = tributary_independence_war_defeat_attacker_desc
			}
			desc = tributary_independence_war_defeat_desc
		}
	}

	on_defeat = {
		start_tributary_from_war_effect = {
			TRIBUTARY = scope:attacker
			SUZERAIN = scope:defender
			WAR = root.war
		}

		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			add_dread = medium_dread_gain
			# Prestige for Defender
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}

		scope:attacker = {
			hard_imprison_character_effect = {
				TARGET = this
				IMPRISONER = scope:defender
			}
			scope:defender = {
				add_opinion = {
					target = prev
					modifier = vassal_lost_faction_revolt_war
				}
			}
		}
	}

	should_invalidate = {
		scope:attacker.overlord = scope:defender
		scope:defender.overlord = scope:attacker
	}

	on_invalidated_desc = msg_invalidate_war_title

	check_defender_inheritance_validity = no

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	transfer_behavior = transfer

	war_name = "INDEPENDENCE_WAR_NAME"

	interface_priority = 120

	attacker_wargoal_percentage = 0.8

	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 50
	
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150

	max_ai_diplo_distance_to_title = 500
}
