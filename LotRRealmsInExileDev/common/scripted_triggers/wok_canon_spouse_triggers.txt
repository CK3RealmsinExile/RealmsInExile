wok_can_marry_character_trigger = {
	# trigger_if = { # Interspecies marriage handler
	# 	limit = {faith_prevents_interspecies_marriage = yes}
	# 	has_same_species_as = {TARGET = $CHARACTER$}
	# }
	trigger_if = { # Things that can override canon spouse
		limit = {
			OR = {
				$CHARACTER$ = {
					any_relation = {
						type = canon_spouse
						is_married = no
					}
				}
				any_relation = {
					type = canon_spouse
					is_married = no
				}
			}
		}
		OR = {
			has_relation_canon_spouse = $CHARACTER$
			trigger_if = {
				limit = {is_betrothed = yes}
				betrothed = $CHARACTER$
			}
			trigger_if = { # Done this way for tooltipping purposes
				limit = {is_ai = no}
				is_ai = no
			}
			trigger_if = { # Done this way for tooltipping
				limit = {$CHARACTER$ = {is_ai = no}}
				$CHARACTER$ = {is_ai = no}
			}
			trigger_if = {
				limit = {exists = scope:actor}
				scope:actor = {is_ai = no}
			}
			trigger_if = {
				limit = {exists = matchmaker}
				matchmaker = {is_ai = no}
			}
		}
	}
}
wok_ai_wants_marriable_relations = {
	is_ai = yes
	uses_marriage_consent = yes
	# has_marriable_canon_spouse = no
	wok_has_marriable_relations = no	
}
wok_has_marriable_relations = {
	save_temporary_scope_as = tmp_check
	any_relation = {
		type = soulmate
		could_marry_character_trigger = {CHARACTER = scope:tmp_check}
	}
}
wok_has_marriable_relation_with_target = {
	OR = {
		trigger_if = {
			limit = {exists = betrothed}
			betrothed = $TARGET$
		}
		has_relation_soulmate = $TARGET$
	}
}

wok_arrange_courtship_prompt_trigger = {
	uses_marriage_consent = yes
	has_marriable_canon_spouse = no
	wok_has_marriable_relations = no
}

has_marriable_canon_spouse = {
	can_marry_trigger = yes
	trigger_if = {
		limit = {exists = liege_or_court_owner is_ai = yes}
		liege_or_court_owner = {is_ai = yes}
	}
	any_relation = {
		type = canon_spouse
		can_marry_trigger = yes
		trigger_if = {
			limit = {exists = liege_or_court_owner}
			liege_or_court_owner = {is_ai = yes}
		}
	}
}

uses_marriage_consent = {
	trigger_if = {
		limit = {
			is_elf = yes
		}
	}
	trigger_else = {
		always = no
	}
}

can_marry_target_under_relational_game_rule = {
	trigger_if = {
		limit = {
			uses_marriage_consent = yes
			NOT = {has_relation_canon_spouse = $TARGET$} # These get a freebie
		}
		trigger_if = { # Prevent the AI from marrying characters currently being schemed by the player
			limit = {
				is_ai = yes
				$TARGET$ = {is_ai = yes}
				trigger_if = {
					limit = {exists = scope:actor}
					scope:actor = {
						is_ai = yes
					}
				}
			}
			$TARGET$ = {
				NOT = {
					any_targeting_scheme = {
						scheme_type_is_arrangeable = yes
						scheme_owner = {
							OR = {
								is_ai = no
								any_close_family_member = {
									is_ai = no
								}
							}
						}
					}
				}
			}
		}
		trigger_else = {
			wok_has_marriable_relation_with_target = {TARGET = $TARGET$}
		}
	}
}

scheme_type_is_arrangeable = {
	scheme_type = courting
}

arrange_courtship_send_option_relation_trigger = {
	exists = scope:secondary_actor
	exists = scope:secondary_recipient
	NOT = {
		scope:secondary_actor = {has_relation_$RELATION$ = scope:secondary_recipient}
	}
}

arrange_courtship_send_option_mutual_attraction_trigger = {
	exists = scope:secondary_actor
	exists = scope:secondary_recipient
	scope:secondary_actor = {is_attracted_to_gender_of = scope:secondary_recipient}
	scope:secondary_recipient = {is_attracted_to_gender_of = scope:secondary_actor}
}

scheme_has_matchmaker = {
	scope:owner = {
		any_scheme = {
			scheme_target = scope:target
			exists = var:matchmaker
			var:matchmaker = {is_alive = yes is_ai = no}
			scheme_type_is_arrangeable = yes
		}
	}
}