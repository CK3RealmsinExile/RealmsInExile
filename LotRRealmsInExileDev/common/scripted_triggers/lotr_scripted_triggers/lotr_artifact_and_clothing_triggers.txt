# GFX Trigger-picker

###########
#	
#	
#	
#	Specific triggers so we can trigger based off of a specific cultural pillar.
#	
#
#	This is done because the normal clothing triggers are not specific enough, especially with the
# 	amount of artifact models we have when it comes to axes.
#	
#	
###########

artifact_should_use_gfx_type_longbeard_and_stiffbeard_trigger = {
	trigger_if = {
		limit = { exists = scope:artifact.creator.culture }
		scope:artifact.creator = {
			exists = culture
			OR = {
				culture = { has_cultural_pillar = heritage_stiffbeard }
				culture = { has_cultural_pillar = heritage_longbeard }
			}
		}
	}
	trigger_else_if = { #If the creator is not found we use the owner. Often this would be if the creator is a dummy, which has no culture
		limit = { exists = culture }
		exists = culture
		OR = {
			culture = { has_cultural_pillar = heritage_stiffbeard }
			culture = { has_cultural_pillar = heritage_longbeard }
		}
	}
	trigger_else = {
		always = no #We should never get here as all created artifacts should have an owner.
	}
}

artifact_should_use_gfx_type_broadbeam_trigger = {
	trigger_if = {
		limit = { exists = scope:artifact.creator.culture }
		scope:artifact.creator = {
			exists = culture
			culture = { has_cultural_pillar = heritage_broadbeam }
		}
	}
	trigger_else_if = { #If the creator is not found we use the owner. Often this would be if the creator is a dummy, which has no culture
		limit = { exists = culture }
		exists = culture
		culture = { has_cultural_pillar = heritage_broadbeam }
	}
	trigger_else = {
		always = no #We should never get here as all created artifacts should have an owner.
	}
}

artifact_should_use_gfx_type_firebeard_trigger = {
	trigger_if = {
		limit = { exists = scope:artifact.creator.culture }
		scope:artifact.creator = {
			exists = culture
			culture = { has_cultural_pillar = heritage_firebeard }
		}
	}
	trigger_else_if = { #If the creator is not found we use the owner. Often this would be if the creator is a dummy, which has no culture
		limit = { exists = culture }
		exists = culture
		culture = { has_cultural_pillar = heritage_firebeard }
	}
	trigger_else = {
		always = no #We should never get here as all created artifacts should have an owner.
	}
}

artifact_should_use_gfx_type_ironfist_trigger = {
	trigger_if = {
		limit = { exists = scope:artifact.creator.culture }
		scope:artifact.creator = {
			exists = culture
			culture = { has_cultural_pillar = heritage_ironfist }
		}
	}
	trigger_else_if = { #If the creator is not found we use the owner. Often this would be if the creator is a dummy, which has no culture
		limit = { exists = culture }
		exists = culture
		culture = { has_cultural_pillar = heritage_ironfist }
	}
	trigger_else = {
		always = no #We should never get here as all created artifacts should have an owner.
	}
}

artifact_should_use_gfx_type_blacklock_trigger = {
	trigger_if = {
		limit = { exists = scope:artifact.creator.culture }
		scope:artifact.creator = {
			exists = culture
			culture = { has_cultural_pillar = heritage_blacklock }
		}
	}
	trigger_else_if = { #If the creator is not found we use the owner. Often this would be if the creator is a dummy, which has no culture
		limit = { exists = culture }
		exists = culture
		culture = { has_cultural_pillar = heritage_blacklock }
	}
	trigger_else = {
		always = no #We should never get here as all created artifacts should have an owner.
	}
}

artifact_should_use_gfx_type_stonefoot_trigger = {
	trigger_if = {
		limit = { exists = scope:artifact.creator.culture }
		scope:artifact.creator = {
			exists = culture
			culture = { has_cultural_pillar = heritage_stonefoot }
		}
	}
	trigger_else_if = { #If the creator is not found we use the owner. Often this would be if the creator is a dummy, which has no culture
		limit = { exists = culture }
		exists = culture
		culture = { has_cultural_pillar = heritage_stonefoot }
	}
	trigger_else = {
		always = no #We should never get here as all created artifacts should have an owner.
	}
}

animation_longbeard_and_stiffbeard_trigger = {
	culture = {
		OR = {
			has_cultural_pillar = heritage_stiffbeard
			has_cultural_pillar = heritage_longbeard
		}
	}
}

animation_broadbeam_trigger = {
	culture = { has_cultural_pillar = heritage_broadbeam }
}

animation_firebeard_trigger = {
	culture = { has_cultural_pillar = heritage_firebeard }
}

animation_ironfist_trigger = {
	culture = { has_cultural_pillar = heritage_ironfist }
}

animation_blacklock_trigger = {
	culture = { has_cultural_pillar = heritage_blacklock }
}

animation_stonefoot_trigger = {
	culture = { has_cultural_pillar = heritage_stonefoot }
}

is_important_artifact = {
	OR = {
		has_variable = ring_of_power
		has_variable = sword_of_manwe
		has_variable = ring_saruman
		has_variable = wizard_staff
		has_variable = palantir
		has_variable = elven
		has_variable = key_of_erebor
		has_variable = map_of_thror
		has_variable = arkenstone
		has_variable = barazanthual
		has_variable = relic
		has_variable = vasa
		has_variable = nazgul_artifact
		has_variable = mithrellas_talisman
		has_variable = lindalf
		has_variable = swan_shield
		has_variable = mace_of_anarion
		has_variable = artifact_succession_title
		has_variable = heirloom_of_title
	}
}

animation_elendil_trigger = {
	this = character:lineofelendil
}

animation_sauron_trigger = {
	this = character:lineofsauron
}

animation_elrond_trigger = {
	this = character:lineofelrond1
}

animation_durin_trigger = {
	OR = {
		this = character:lineofdurinII
		this = character:lineofdurinIII
		this = character:lineofdurinIV
		this = character:lineofdurinV
		this = character:lineofdurinVI
	}
}

animation_thorin_oakenshield_trigger = {
	AND = {
		game_start_date >= 6974.5.1
		this = character:lineofdurin83
	}
}

animation_dain_ironfoot_trigger = {
	this = character:lineofdurin90
}