#Triggers for races of LOTR
#these should work for character, culture and province scopes

is_human = { #all other races and species should be added here
	custom_description = {
		text = is_human
		culture ?= { has_cultural_parameter = is_human_heritage }
	}
}

is_human_culture = { #all other races and species should be added here
	this = { has_cultural_parameter = is_human_heritage }
}

# is_nazgul = {
# 	culture = culture:ringwraith
# }

is_nazgul_culture = {
	this = culture:ringwraith
}

is_maiar = {
	culture ?= { has_cultural_parameter = is_ainur_heritage }
}

is_maiar_culture = {
	this = { has_cultural_parameter = is_ainur_heritage }
}

is_maiar_fallen = {
	culture ?= { has_cultural_parameter = is_fallen_ainur_heritage }
}

is_maiar_fallen_culture = {
	this = { has_cultural_parameter = is_fallen_ainur_heritage }
}

is_undead = {
	culture ?= { has_cultural_pillar = heritage_undead }
}

is_undead_culture = {
	has_cultural_pillar = heritage_undead
}

is_wastelands = {
	OR = {
		culture = culture:wastelands
		trigger_if = { #Juke note: fallback, in case tom converts his culture somehow
			limit = {
				exists = primary_title
			}
			is_landed = yes
			government_has_flag = government_is_wastelands
		}

	}
}

is_wastelands_culture = { 
	has_cultural_pillar = heritage_wastelands
}

cannot_be_killed = {
	OR = {
		is_maiar = yes
		is_maiar_fallen = yes
		is_undead = yes
		is_wastelands = yes
		has_character_flag = is_eradan_companion
	}
}

is_immortal = { # Juke note: Trigger present in vanilla but not defined, PDX was kind enough to add it to some events for modders
	OR = {
		cannot_be_killed = yes
		is_elf = yes
	}
}
is_orc = { #juke note: we need to decide if we want these to have separate triggers
	custom_description = {
		text = is_orc
		culture ?= { has_cultural_parameter = is_orc_heritage }
	}
}

is_goblin = {
	culture ?= { has_cultural_pillar = heritage_goblin }
}

is_orc_culture = {
	this = { has_cultural_parameter = is_orc_heritage }
}

is_goblin_culture = {
	has_cultural_pillar = heritage_goblin
}

has_orc_accolades = { # juke note: used for accolade names - orcs will use some unique ones, but also not use others (such as horse-related names)
	OR = {
		is_orc = yes
		is_sauron = yes
		is_nazgul = yes
		has_character_flag = saruman_orc_accolades
	}
}

is_troll = {
	culture ?= { has_cultural_pillar = heritage_troll }
}

is_troll_culture = {
	has_cultural_pillar = heritage_troll
}

is_druedain = {
	culture ?= { has_cultural_pillar = heritage_druedain }
}

is_druedain_culture = {
	has_cultural_pillar = heritage_druedain
}

is_elf = {
	custom_description = {
		text = is_elf
		OR = {
			culture ?= { has_cultural_parameter = is_elven_heritage }
			trigger_if = { #Check to ensure it's a character
				limit = { exists = primary_title }
				has_trait = doom_sundered
			}
		}
	}
}

is_eldar = {
	OR = {
		culture ?= { has_cultural_pillar = heritage_calaquendi }
		culture ?= { has_cultural_pillar = heritage_lomiquendi }
	}
}

is_eldar_culture = {
	OR = {
		has_cultural_pillar = heritage_calaquendi
		has_cultural_pillar = heritage_lomiquendi
	}
}

is_elf_culture = {
	this = { has_cultural_parameter = is_elven_heritage }
}

is_dunedain = {
	numenorean_blood_tier >= 1
}

is_nazgul = {
	has_trait = nazgul
}

is_dwarf = { #is_dwarf_heritage
	custom_description = {
		text = is_dwarf
		culture ?= { has_cultural_parameter = is_dwarf_heritage }
	}
}

is_dwarf_culture = {
	this = { has_cultural_parameter = is_dwarf_heritage }
}

is_hobbit = {
	culture ?= { has_cultural_pillar = heritage_periannath }
}

is_hobbit_culture = {
	has_cultural_pillar = heritage_periannath
}

same_race = { #compares two scopes, example same_race = { TARGET = scope:target_ruler }
	custom_description = {
		text = same_race
		OR = {
			AND = {
				is_human = yes
				$TARGET$ = { is_human = yes }
			}
			AND = {
				is_orc = yes  # juke note: is_orc includes is_goblin
				$TARGET$ = { is_orc = yes }
			}
			AND = {
				is_goblin = yes
				$TARGET$ = { is_goblin = yes }
			}
			AND = {
				is_elf = yes
				$TARGET$ = { is_elf = yes }
			}
			AND = {
				is_dwarf = yes
				$TARGET$ = { is_dwarf = yes }
			}
			AND = {
				is_druedain = yes
				$TARGET$ = { is_druedain = yes }
			}
			AND = {
				is_undead = yes
				$TARGET$ = { is_undead = yes }
			}
			AND = {
				is_maiar = yes
				$TARGET$ = { is_maiar = yes }
			}
			AND = {
				is_hobbit = yes
				$TARGET$ = { is_hobbit = yes }
			}
		}
	}
}

same_race_culture = { #compares two scopes, example same_race_culture = { TARGET = scope:target_culture }
	OR = {
		AND = {
			is_human_culture = yes
			$TARGET$ = { is_human_culture = yes }
		}
		AND = {
			is_orc_culture = yes
			$TARGET$ = { is_orc_culture = yes }
		}
		AND = {
			is_elf_culture = yes
			$TARGET$ = { is_elf_culture = yes }
		}
		AND = {
			is_dwarf_culture = yes
			$TARGET$ = { is_dwarf_culture = yes }
		}
		AND = {
			is_druedain_culture = yes
			$TARGET$ = { is_druedain_culture = yes }
		}
		AND = {
			is_hobbit_culture = yes
			$TARGET$ = { is_hobbit_culture = yes }
		}
	}
}

is_istari = {
	OR = {
		culture ?= { has_cultural_parameter = is_ainur_heritage }
		culture ?= { has_cultural_parameter = is_fallen_ainur_heritage }
	}
}

is_istari_culture = {
	OR = {
		this = { has_cultural_parameter = is_ainur_heritage }
		this = { has_cultural_parameter = is_fallen_ainur_heritage }
	}
}

is_good_istari = {
	culture ?= { has_cultural_parameter = is_ainur_heritage }
}

is_good_istari_culture = {
	this = { has_cultural_parameter = is_ainur_heritage }
}

is_evil_istari = {
	culture ?= { has_cultural_parameter = is_fallen_ainur_heritage }
}

is_evil_istari_culture = {
	this = { has_cultural_parameter = is_fallen_ainur_heritage }
}

# For generated courtiers
not_nazgul = {
	culture = culture:ringwraith
	NOT = { has_trait = nazgul }
}
not_istari = {
	culture = culture:istari
	NOT = { has_trait = istari }
}
not_istari_evil = {
	culture = culture:istari_evil
	NOT = { has_trait = istari }
}
not_maiar = {
	culture = culture:maiar
	NOT = { has_trait = maiar }
}
not_maiar_fallen = {
	culture = culture:maiar_fallen
	NOT = { has_trait = maiar }
}
#not_valar = {
#	culture = culture:valar
#	NOT = { has_trait = valar }
#}

is_underground_race = {
	OR = {
		is_dwarf = yes
		is_orc = yes
		is_goblin = yes
	}
}

is_underground_race_culture = {
	OR = {
		is_dwarf_culture = yes
		is_orc_culture = yes
		is_goblin_culture = yes
	}
}

is_short_race = {
	OR = {
		is_dwarf = yes
		is_hobbit = yes
		is_druedain = yes
		is_goblin = yes
	}
}

is_short_race_culture = {
	OR = {
		is_dwarf_culture = yes
		is_hobbit_culture = yes
		is_druedain_culture = yes
		is_goblin_culture = yes
	}
}

lotr_race_and_alignment_compatibility_trigger = {
	is_wastelands = no #Tom doesn't care much about you
	is_in_valinor = no #Valinoreans don't, either
	$CHARACTER$ = { is_wastelands = no } #Tom doesn't care much about you
	$CHARACTER$ = { is_in_valinor = no } #Valinoreans don't, either
	trigger_if = {
		limit = { #Elves, Maiar and Wraiths won't deal with the Enemy
			OR = {
				is_elf = yes
				cannot_be_killed = yes
				$CHARACTER$ = { is_elf = yes }
				$CHARACTER$ = { cannot_be_killed = yes }
			}
		}
		NOT = { opposite_alignment = { TARGET = $CHARACTER$ }}
	}
	trigger_if = {
		limit = { #Orcs won't deal with anyone outside their (usually evil) alignment
			OR = {
				is_orc = yes
				$CHARACTER$ = { is_orc = yes }
			}
		}
		same_alignment = { TARGET = $CHARACTER$ }
	}
}

lotr_can_host_courtier = {
	lotr_race_and_alignment_compatibility_trigger = { CHARACTER = $CHARACTER$} #Basic race and alignment triggers 
	#Elves won't join just any court
	trigger_if = {
		limit = { is_elf = no }
		$CHARACTER$ = { NOT = { is_elf = yes } }
	}
	
	#AI Orcs only take on other Orcs
	trigger_if = {
		limit = { 
			is_orc = yes
			is_ai = yes
		}
		$CHARACTER$ = { is_orc = yes }
	}
}

restricted_culture = { #these cultures should not be present in-game outside of certain story characters
	OR = {
		is_maiar = yes
		is_maiar_fallen = yes
		is_undead = yes
		is_wastelands = yes
	}
}

restricted_culture_culture = { #these cultures should not be present in-game outside of certain story characters
	OR = {
		is_maiar_culture = yes
		is_maiar_fallen_culture = yes
		is_undead_culture = yes
		is_wastelands_culture = yes
	}
}

can_culture_convert = { #only checks if the culture can convert at all, for comparing two cultures use the next one
	restricted_culture = no
}

can_culture_convert_culture = { #only checks if the culture can convert at all, for comparing two cultures use the next one
	restricted_culture_culture = no
}

culture_conversion_to_allowed = { #example culture_conversion_to_allowed = { TARGET = scope:recipient }
	can_culture_convert = yes
	$TARGET$ = { can_culture_convert = yes }
	same_race = { TARGET = $TARGET$ }
}

culture_conversion_to_allowed_culture = { #example culture_conversion_to_allowed_culture = { TARGET = scope:recipientculture }
	can_culture_convert_culture = yes
	$TARGET$ = { can_culture_convert_culture = yes }
	same_race_culture = { TARGET = $TARGET$ }
}

## Building Validity Triggers ##

lotr_orc_buildings = { #Orc buildings are enabled under these conditions
	OR = {
		is_orc = yes
		this.dynasty = dynasty:dynasty_mouthofsauron
		AND = {
			cannot_be_killed = yes
			religion = { is_in_family = rf_forcesofevil }
		}
	}
}

lotr_orc_or_nurniag_buildings = { #Orc buildings are enabled under these conditions
	OR = {
		culture = culture:nurniag
		culture ?= { any_parent_culture_or_above = { this = culture:nurniag } }
		is_orc = yes
		this.dynasty = dynasty:dynasty_mouthofsauron
		AND = {
			cannot_be_killed = yes
			religion = { is_in_family = rf_forcesofevil }
		}
	}
}

lotr_subterranean_buildings = { #Subterranean holdings are enabled under these conditions
	OR = {
		is_orc = yes
		is_dwarf = yes
	}
}

is_elven_maa_regiment = {
	OR = {
		is_maa_type = high_elven_heavy_infantry
		is_maa_type = high_elven_archers
		is_maa_type = high_elven_heavy_cavalry
		is_maa_type = high_elven_pikemen
		is_maa_type = high_elven_skirmishers
		is_maa_type = high_elven_light_cavalry
		is_maa_type = grey_elven_pikemen
		is_maa_type = grey_elven_archers
		is_maa_type = grey_elven_heavy_cavalry
		is_maa_type = grey_elven_heavy_infantry
		is_maa_type = grey_elven_skirmishers
		is_maa_type = grey_elven_light_cavalry
		is_maa_type = avarin_skirmishers
		is_maa_type = avarin_light_cavalry
		is_maa_type = avarin_archers
		is_maa_type = avarin_pikemen
		is_maa_type = avarin_heavy_infantry
		is_maa_type = avarin_heavy_cavalry
		is_maa_type = noldor_swordsmen
		is_maa_type = noldor_veterans
		is_maa_type = noldor_cavalry
		is_maa_type = song_smiths
		is_maa_type = hir_hathol
		is_maa_type = falathrim_haven_guard
		is_maa_type = marchwardens
		is_maa_type = galadhrim_warriors
		is_maa_type = galadhrim_archers
		is_maa_type = silvan_rangers
		is_maa_type = royal_elk_riders
		is_maa_type = theladagnyr
		is_maa_type = neldoreth_borderwardens
		is_maa_type = nuinevari
		is_maa_type = cuind_wanderers
		is_maa_type = cuind_skirmishers
		is_maa_type = annammon_kin
		is_maa_type = kinnlai_skirmishers
		is_maa_type = sirrandrai_riders
		is_maa_type = wardens_of_sirgala
		is_maa_type = laiquendi_scouts
		is_maa_type = ossiriand_rangers
	}
}

is_dwarven_maa_regiment = {
	OR = {
		is_maa_type = longbeard_skirmishers
		is_maa_type = longbeard_pikemen
		is_maa_type = longbeard_crossbowmen
		is_maa_type = longbeard_heavy_infantry
		is_maa_type = longbeard_cavalry
		is_maa_type = longbeard_horse_archers
		is_maa_type = firebeard_skirmishers
		is_maa_type = firebeard_archers
		is_maa_type = firebeard_heavy_infantry
		is_maa_type = firebeard_pikemen
		is_maa_type = broadbeam_skirmishers
		is_maa_type = broadbeam_crossbowmen
		is_maa_type = broadbeam_heavy_infantry
		is_maa_type = broadbeam_pikemen
		is_maa_type = blacklock_skirmishers
		is_maa_type = blacklock_crossbowmen
		is_maa_type = blacklock_engineers
		is_maa_type = blacklock_heavy_infantry
		is_maa_type = blacklock_pikemen
		is_maa_type = stiffbeard_skirmishers
		is_maa_type = stiffbeard_crossbowmen
		is_maa_type = stiffbeard_heavy_infantry
		is_maa_type = stiffbeard_pikemen
		is_maa_type = undying_of_khazad_dum
		#is_maa_type = blacklock_mercenaries #mercs can be inherited
		is_maa_type = firebeard_monsters
		is_maa_type = broadbeam_dragonslayers
	}
}

is_orcish_maa_regiment = {
	OR = {
		is_maa_type = orc_warriors
		is_maa_type = orc_rabble
		is_maa_type = orc_archers
		is_maa_type = orc_trackers
		is_maa_type = orc_pikemen
		is_maa_type = wargrider_scouts
		is_maa_type = mountainorc_warriors
		is_maa_type = olog_hai
		is_maa_type = caragor_pack
		is_maa_type = grond
		is_maa_type = urukhai_skirmishers
		is_maa_type = urukhai_spearmen
		is_maa_type = urukhai_fighting
		is_maa_type = urukhai_pikemen
		is_maa_type = urukhai_archers
		is_maa_type = urukhai_crossbowmen
		is_maa_type = urukhai_warg_riders
		is_maa_type = urukhai_sappers
		is_maa_type = urukhai_monstrosity
		is_maa_type = urukhai_berserker
		is_maa_type = siege_tower
		is_maa_type = hunter_orcs_on_fell_wargs
		is_maa_type = gundabad_blackshields
		is_maa_type = gundabad_war_troll
		is_maa_type = goblin_skirmishers
		is_maa_type = goblin_warg_riders
		is_maa_type = hill_troll
		is_maa_type = mountain_troll
		is_maa_type = chosen_of_the_flamesworn
		is_maa_type = obsidian_warriors
		is_maa_type = mordor_uruks
	}
}

is_undead_maa_regiment = {
	OR = {
		is_maa_type = unburied_wights
		is_maa_type = blighted_trappers
		is_maa_type = giant_spiders
		is_maa_type = risen_carrion
	}
}

is_hobbit_maa_regiment = {
	OR = {
		is_maa_type = hobbit_bounders
		is_maa_type = hobbit_hunters
		is_maa_type = hobbit_muster
	}
}