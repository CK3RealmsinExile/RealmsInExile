
#####################################
### CULTURAL AND RELIGIOUS GROUPS ###
#####################################

faith_is_good = {
	custom_description = {
		text = faith_is_good
		OR = {
			religion = { is_in_family = rf_eruhini }
			faith = { has_doctrine = doctrine_echoes_of_the_ainur }
			faith = { has_doctrine = special_doctrine_is_freepeople_faith }
		}
	}
}

faith_is_evil = {
	custom_description = {
		text = faith_is_evil
		OR = {
			religion = { is_in_family = rf_forcesofevil }
			faith = { has_doctrine = doctrine_dominion_of_the_dark }
		}
	}
}

faith_is_neutral = {
	custom_description = {
		text = faith_is_neutral
		faith_is_good = no
		faith_is_evil = no
	}
}

opposite_alignment = { #compares two scopes, example opposite_alignment = { TARGET = scope:target_ruler }
	OR = {
		AND = {
			faith_is_good = yes
			$TARGET$ = { faith_is_evil = yes }
		}
		AND = {
			faith_is_evil = yes
			$TARGET$ = { faith_is_good = yes }
		}
	}
}

same_alignment = { #compares two scopes, example same_alignment = { TARGET = scope:target_ruler }
	OR = {
		AND = {
			faith_is_good = yes
			$TARGET$ = { faith_is_good = yes }
		}
		AND = {
			faith_is_evil = yes
			$TARGET$ = { faith_is_evil = yes }
		}
		AND = {
			faith_is_neutral = yes
			$TARGET$ = { faith_is_neutral = yes }
		}
	}
}

is_lotr_adult = {
	custom_description = {
		text = is_lotr_adult
		age >= majority_age
	}
}

lotr_gets_nicknames_trigger = {	#checks whether char is eligible to get a nickname
	NOR = {
		culture ?= culture:wastelands
		has_character_flag = had_nickname_event
		is_in_valinor = yes
	}
	NOR = {
		cannot_be_killed = yes
		is_ai = yes
	}
}

can_have_tamska_succession_law_trigger = { # Tamska succession laws
	faith = {
		#religious_head = prev
		has_doctrine = doctrine_temporal_head
		has_doctrine_parameter = lotr_tamska_hof
	}
	has_title = title:d_tamska_main
}

lotr_can_become_admin_gov = { # Trigger that checks wether the char should be able to become administrative
	NOR = {
		is_orc = yes
		is_elf = yes
		is_sauron = yes
		is_nazgul = yes
		is_in_valinor = yes
		is_wastelands = yes
		can_have_tamska_succession_law_trigger = yes
	}
}

lotr_has_sauron_faith = { # For destroy mordor religious effects
	OR = {
		faith = faith:lidless_eye
		faith = faith:red_eye_cult
		faith = faith:faith_angmar_evil
	}
}

palace_of_haruzan_cheaper_purchase_mumakil_trigger = {
	is_landed = yes
	any_directly_owned_province = {
		has_building_or_higher = wonder_palace_of_haruzan_01
	}
}

lotr_armies_are_outnumbered = {
	total_enemy_strength > total_ally_strength
}

lotr_chelkar_submission_trigger = {
	title:k_haruzan.holder.max_military_strength > chelkar_military_strength_times_two
}

lotr_at_peace_with_gondor = {
	NOR = {
		any_war_enemy = {
			has_title = title:e_gondor
		}
		any_war_enemy = {
			has_title = title:e_gondor_steward
		}
	}
}

lotr_at_peace_with_rohan = {
	NOT = {
		any_war_enemy = {
			has_title = title:k_rohan
		}
	}
}


########################
### ABRAKHÂN TRIGGERS ##
########################

# Abrakhân
#character_is_valid_for_abrakhan_subjugation_mission_trigger = {		# this trigger checks if you are considered Sauron's Abrakhan
# 	#juke note: should be improved to eventually include "saurons permission" for cases where a not nessecarily sauron aligned power conquers abkrahan (for example, the mission stuff wouldnt make sense. i.e. player-led Ar-Adunai conquerors etc)
# 	custom_tooltip = {
# 		text = character_is_valid_for_abrakhan_subjugation_mission_trigger
# 		faith_is_evil = yes
# 		NOR = {
# 			faith = faith:melkorite
# 			faith = faith:way_of_strength
# 		}
# 		sauron_is_alive = yes

# 		highest_held_title_tier >= tier_kingdom
# 		OR = { 	#juke note: added to avoid situations where sandbox stuff occurs (player-lead independent darsalan kingdom etc)
# 			has_title = title:k_abrakhan
# 			# has_title = title:e_nafarat
# 		}
# 		capital_province = { geographical_region = middleearth_haradwaith_far_abrakhan }
# 	}
# }


character_is_valid_for_nafarati_subjugation_trigger = {	# this trigger checks if you are valid to submit to Abrakhan at  the beginning
	is_available_adult = yes
	culture = culture:nafarati
	martial >= high_skill_rating
	#	AND = {
	#		OR = {
	#			culture = { has_cultural_pillar = heritage_nafarati }
	#			#faith = faith:faith_nafar	#juke note: we can let them be a different faith, if they are in abrakhans court we can assume they are a servant of the golden king
	#		}
	#	}
}
character_is_valid_for_ray_subjugation_trigger = {
	is_available_adult = yes
	# ToDo: is relevant to Ray and has relevant traits.
	stewardship >= high_skill_rating
	AND = {
		OR = {
			culture = { has_cultural_pillar = heritage_southern_apysaic }
			faith = faith:faith_ray
		}
		OR = {
			has_trait = education_stewardship_3
			has_trait = education_stewardship_4
			has_trait = administrator
			has_trait = avaricious
			short_term_gold >= major_gold_value # Matt note: this should check if they have a large amount of income.
		}
	}
}
character_is_valid_for_umbar_subjugation_trigger = {
	is_available_adult = yes
	stewardship >= high_skill_rating
	# ToDo: is relevant to Umbar and has relevant traits.
	#	AND = {
	#		OR = {
	#			lotr_has_numenorean_culture_trigger = yes
	#			faith = faith:faith_kings_men_castamir
	#			faith = faith:faith_corsair
	#			faith = faith:melkorite
	#		}
	#		OR = {
	#			dynasty = { has_dynasty_perk = lotr_black_numenorean_legacy_1 }
	#			has_trait = adventurer
	#			has_trait = varangian
	#		}
	#	}
}

##############################################
### Numenoreans and their successor states ###
##############################################

is_gondor = {
	culture = { has_cultural_pillar = heritage_dunedain }
	OR = {
		has_primary_title = title:e_gondor_steward
		has_primary_title = title:e_gondor
		has_primary_title = title:e_castamir
		has_primary_title = title:e_numenor_in_exile
		has_primary_title = title:e_reunitedkingdom
	}
}

is_steward_of_gondor = {
	culture = { has_cultural_pillar = heritage_dunedain }
	OR = {
		has_primary_title = title:e_gondor_steward
		has_primary_title = title:k_gondor_steward
		AND = {
			highest_held_title_tier = tier_kingdom
			has_title = title:k_gondor_steward
		}
	}
}

is_arnor = {
	culture = { has_cultural_pillar = heritage_dunedain }
	OR = {
		has_primary_title = title:e_arnor
		has_primary_title = title:d_northern_dunedain
		has_primary_title = title:e_numenor_in_exile
		has_primary_title = title:e_reunitedkingdom
	}
}

### Thâni-Hazâd Struggle Triggers ###
balan_lai_united_cunning_trigger = {
	has_title = title:d_balan_lai_leader
	any_balan_lai_member = {
		percent > 0.8
		NOT = { this = ROOT }
		save_temporary_scope_as = char_temp
		calc_true_if = {
			amount >= 2
			opinion = {
				target = root
				value > 80
			}
			# custom_tooltip = {
				# text = lotr_i_have_hook
				root = { has_hook = scope:char_temp }
			# }
			# custom_tooltip = {
				# text = lotr_i_have_strong_hook
				root = { has_strong_hook = scope:char_temp }
			# }
			is_allied_to = root
			# custom_tooltip = {
				# text = lotr_is_tributary_of_me
				scope:char_temp = { is_tributary_of = root }
			# }
			is_vassal_or_below_of = ROOT
			is_spouse_of = ROOT
			# is_adult = No
            #is_imprisoned_by = root
			# custom_tooltip = {
				# text = lotr_is_in_regency
			AND = {
				has_active_diarchy = yes
				has_diarchy_type = regency
			}
			# }
		}
	}
}

balan_lai_united_might_trigger = {
	prestige_level >= 4
	custom_tooltip = {
		text = balan_lai_united_might_region_realm_size_desc
		NOT = {
			any_balan_lai_member = {
				NOT = { this = ROOT }
				is_independent_ruler = yes
				realm_size > ROOT.realm_size
			}
		}
	}
	#custom_tooltip = {
	#	text = balan_lai_united_might_region_control_desc
	#	any_county_in_region = {
	#		region = custom_mannish_thani_hazad
	#		OR = {
	#			holder = { is_vassal_or_below_of = root }
	#			holder = root
	#		}
	#		percent >= 0.30
	#	}
	#}
	dread >= 50
	custom_tooltip = {
		text = balan_lai_united_might_military_strength_min
		current_military_strength >= 5000
	}
	custom_tooltip = {
		text = balan_lai_united_might_greater_military_strength
		current_military_strength > {
			value = 0
			struggle:thani_hazad_struggle ?= {
				every_involved_ruler = {
				    limit = {
						has_trait = balan_lai_member
    			        is_independent_ruler = yes
				    	NOT = { this = root }
    			        NOT = { is_allied_to = root }
				    	NOT = { is_tributary_of = root }
    			        NOT = { is_imprisoned_by = root }
						NOT = { is_vassal_or_below_of = root }
				    }
					add = current_military_strength
				}
			}
			multiply = 0.8
		}
	}
}

### Set Sail Activity Triggers ###

coastal_province_in_realm = {
	any_realm_county = {
		title_province = { is_coastal = yes }
	}
}

owns_a_damaged_boat = {
	OR = {
		has_character_modifier = small_damaged_boat_modifier
		has_character_modifier = medium_damaged_boat_modifier
		has_character_modifier = large_damaged_boat_modifier
	}
}

owns_an_undamaged_boat = {
	OR = {
		has_character_modifier = small_boat_modifier
		has_character_modifier = medium_boat_modifier
		has_character_modifier = large_boat_modifier
	}
}

owns_a_boat = {
	OR = {
		owns_an_undamaged_boat = yes
		owns_a_damaged_boat = yes
	}
}

is_boat_purchased = {
	NOT = {
		has_character_flag =  hired_a_boat
	}
}

can_afford_a_boat = {
	owns_a_boat = no
	gold >= small_boat_hire_cost
}

### War CB ###
can_conduct_slave_expedition = {
	NOT = {
		has_character_flag = successful_slaver_expedition
	}
}

lotr_friends_with_elven_king_trigger = {
	any_independent_ruler = {
		has_relation_friend = root
		is_elf = yes
		is_in_valinor = no
		highest_held_title_tier >= tier_kingdom
	}
}

lotr_friends_with_dwarf_trigger = {
	any_independent_ruler = { 
		has_relation_friend = root
		is_dwarf = yes
	}
}

### Fired for a county scope
is_title_in_valinor = {
	OR = {
		this = title:c_valinor_1
		this = title:c_valinor_2
		this = title:c_valinor_3
		this = title:c_tol_eressea
	}
}

is_in_valinor = {
	OR = {
		has_trait = sailed_west
		has_trait = doom_sundered
		trigger_if = {
			limit = {
				exists = capital_province
			}
			capital_province ?= {
				geographical_region = middleearth_valinor
			}
		}
		trigger_else_if = {
			limit = { exists = liege }
			liege.capital_province ?= {
				geographical_region = middleearth_valinor
			}
		}
		trigger_else_if = {
			limit = { exists = location.province_owner }
			location.province_owner.capital_province ?= {
				geographical_region = middleearth_valinor
			}
		}
		trigger_else_if = {
			limit = { exists = host }
			host.capital_province ?= {
				geographical_region = middleearth_valinor
			}
		}
		trigger_else = {
			OR = { #Only applicable to Elves and Maiar
				is_elf = yes
				is_maiar = yes
			}
		}
	}
}

##########################
## NEW SORCERY TRIGGERS ##
##########################

is_sorcerer = {
	OR = {
		has_trait = sorcerer_1
		has_trait = sorcerer_2
		has_trait = sorcerer_3
	}
}

can_learn_sorcery = {
	AND = {
		piety_level >= 2
		NOT = {
			has_character_flag = learning_sorcery
			has_character_modifier = studying_dark_arts_modifier
			is_sorcerer = yes
			has_trait = nazgul
			is_evil_istari = yes
			has_trait = maiar
		}
		AND = {
			OR = {
				has_trait = intellect_good_3
				has_trait = zealous
				has_trait = lifestyle_mystic
				has_trait = witch
				has_trait = education_intrigue_4
				has_trait = education_learning_4
			}
			religion = { is_in_family = rf_forcesofevil }
		}

		learning >= 16
	}

}

can_learn_sorcery_ai = {
	is_ai = yes
	religion = { is_in_family = rf_forcesofevil }
	NOT = {
		has_character_flag = learning_sorcery
		has_character_modifier = studying_dark_arts_modifier
		is_sorcerer = yes
		has_trait = nazgul
		is_evil_istari = yes
		has_trait = maiar
	}
	AND = {
		calc_true_if = {
			amount >= 2
			piety_level >= 3
			has_trait = intellect_good_3
			has_trait = zealous
			has_trait = schemer
			has_trait = theologian
			has_trait = lifestyle_mystic
			has_trait = witch
			has_trait = education_intrigue_4
			has_trait = education_learning_4
			learning >= 16
		}
	}
}

##########################
##### STORY TRIGGERS #####
##########################

sauron_is_alive = {
	character:lineofsauron = {
		is_alive = yes
	}
}

is_sauron = {
	this = character:lineofsauron
}

is_radagast = {
	this = character:lineofradagast
}

sauron_has_palantir = {
	character:lineofsauron = {
		any_character_artifact = {
			has_variable = palantir
		}
	}
}

aragorn_is_alive = {
	character:lineisildur42 = {
		is_alive = yes
	}
}

elrond_is_alive = {
	character:lineofelrond1 = {
		is_alive = yes
	}
}

arwen_is_alive = {
	character:lineofelrond4 = {
		is_alive = yes
	}
}

denethor_is_alive = {
	character:linesteward38 = {
		is_alive = yes
	}
}

saruman_is_alive = {
	character:lineofsaruman = {
		is_alive = yes
	}
}

saruman_is_evil = {
	character:lineofsaruman = {
		OR = {
			has_character_flag = saruman_accepted_sauron
			religion = {
				is_in_family = rf_forcesofevil
			}
		}
	}
}

saruman_is_defeated = {
	character:lineofsaruman = {
		OR = {
			NOT = { completely_controls = title:d_isengard }
			is_alive = no
		}
		faith_is_evil = yes
	}
}

witch_king_is_alive = {
	character:nazgul1 = {
		is_alive = yes
	}
}

has_vassals = { # Khand
	any_vassal = {
		count > 0
	}
}

##########################
#### FLAVOR DECISIONS ####
##########################

cochineal_industry_requirement = {
	geographical_region = special_cochineal_production_region
}

###############
### TRAITS ####
###############

is_berserker = {	#to unify all three traits for event code
	or = {
		has_trait = berserker
		has_trait = urukhai_berserker
	}
}

###################
### ACTIVITIES ####
###################

RICE_activity_participant_trigger = {
	is_ai = yes
	NOT = { this = root }
	is_alive = yes
	is_imprisoned = no
	is_incapable = no
}

lotr_can_be_activity_guest = {
	NOT = { has_trait = sauron_ringless }
	is_nazgul = no
	is_in_valinor = no
	trigger_if = {
		limit = { exists = scope:host }
		lotr_race_and_alignment_compatibility_trigger = { CHARACTER = scope:host } #Basic race and alignment compatibility
	}

	# Orcs only attend Orcish events
	trigger_if = {
		limit = { scope:host ?= { is_orc = yes } }
		is_orc = yes
	}
	trigger_else = { NOT = { is_orc = yes } }
}

unique_human_archives_trigger = {
	OR = {
		province:199 = this #Minas Tirith
		province:315 = this #Dol Amroth
		province:264 = this #Pelargir
		province:20 = this #Isengard
		has_building = wonder_osgiliath_05
		AND = {
			title:c_minas_ithil = {
				NOR = {
					has_county_modifier = morgul_corruption_modifier
					has_county_modifier = fading_morgul_corruption_modifier
				}
			}
			province:226 = this #Minas Ithil
		}
		has_building = wonder_annuminas_01
		has_building = wonder_annuminas_03
		has_building = wonder_fornost_01
		has_building = wonder_fornost_02
		has_building = wonder_fornost_04
		has_building = wonder_cameth_brin_01
		has_building = wonder_cameth_brin_03
		has_building = wonder_palace_of_ithilien
		has_building = wonder_argond_01
		has_building = wonder_argond_03
		has_building = wonder_tharbad_01
		has_building = wonder_tharbad_02
		has_building = wonder_tharbad_04
		has_building = wonder_lond_daer_01
		has_building = wonder_lond_daer_03
		has_building = wonder_house_of_elrond
		province:2493 = this #Zadan an-Adûn
		province:2513 = this #Kadar an-Kharadûn
		province:819 = this #Umbar
		has_building = wonder_arminalethor_01
		province:1791 = this #Nilulonde
		province:1644 = this #Korlea
		province:1542 = this #Hazaj Tollin
		province:1731 = this #Urezayan
		has_building = wonder_haven_of_inzilloni
		has_building = wonder_mispir
		has_building = wonder_mispir_palace
		has_building = wonder_uruloni
	}
}

unique_elven_archives_trigger = {
	OR = {
		has_building = wonder_caras_galadhon
		has_building = wonder_caras_galadhon_ruined_02
		has_building = wonder_aradhrynd
		has_building = wonder_aradhrynd_ruined_02 
		has_building = wonder_amon_lanc_01
		has_building = wonder_amon_lanc_03
		has_building = wonder_edhellond_01
		has_building = wonder_edhellond_03
		has_building = wonder_amarthrynd_01
		has_building = wonder_amarthrynd_03
		has_building = wonder_house_of_elrond
		has_building = wonder_imladris_ruined_02
		has_building = wonder_mithlond_south_01
		has_building_or_higher = wonder_forlond_01
		has_building = wonder_harlond_01
		has_building = wonder_mirdairond
	}
}

dwarven_ritual_significance_trigger = {
	OR = {
		this = title:c_durins_hall.title_province
		has_building_or_higher = dwarven_hoard_01
		has_building_or_higher = wonder_gundabad_01
		has_building_or_higher = wonder_nogrod_broken
		has_building_or_higher = wonder_belegost_broken
		has_building_or_higher = wonder_nar_agathol
		has_building_or_higher = wonder_azan_zaram_01
		has_building = wonder_mazalabkan
		has_building = wonder_mirrormere
		has_building = wonder_endless_stairs
		has_building = wonder_zelemabkan
		has_building = wonder_sunset_caverns
	}
}

#######################
# WASTELANDS TRIGGERS #
#######################

not_has_county_on_island_region = {
	OR = {
		NOR = {
			any_held_title = {
				target_is_de_jure_liege_or_above = title:d_andunaloni
			}
			any_vassal_or_below = {
				any_held_title = {
					target_is_de_jure_liege_or_above = title:d_andunaloni
				}
			}
		}
		AND = {
			any_held_title = {
				target_is_de_jure_liege_or_above = title:d_andunaloni
				any_county_province = {
					has_holding_type = settlement_holding
				}
			}
			NOT = {
				any_held_title = {
					target_is_de_jure_liege_or_above = title:d_andunaloni
					any_county_province = {
						OR = {
							has_holding_type = castle_holding
							has_holding_type = elven_holding
							has_holding_type = church_holding
							has_holding_type = city_holding
						}
					}
				}
			}
		}
	}
}

maglor_aggresive_gondorian_knight_trigger = {
	is_ruler = no
	NOT = { is_primary_heir_of = scope:$SAVED_SCOPE$ }
	dynasty = scope:$SAVED_SCOPE$.dynasty
}

is_underground_county = {
	any_county_province = {
		terrain = halls
	}
}

has_movie_sountracks = {
	OR = {
		is_elf = yes
		is_dwarf = yes
		is_hobbit = yes
		culture = { has_cultural_pillar = heritage_dunedain } # Gondor music
		culture = { has_cultural_pillar = heritage_hadorim } # Rohan music
		culture = { has_cultural_pillar = heritage_northron } # Dale & Laketown music
		religion = { is_in_family = rf_forcesofevil } # Isengard and Mordor music
		is_orc = yes
	}
}

tom_holds_erebor = {
	title:k_wastelands.holder = {
		has_title = title:c_throne_of_erebor
		has_title = title:c_ravenhill
		has_title = title:c_golddeeps
		has_title = title:c_golden_hall
		has_title = title:c_halls_of_steel
		has_title = title:c_great_foundries
		has_title = title:c_arkenhalls
	}
}

owns_multiple_counties_not_colony = { # Owns more than one county, not including colonies
	custom_description = {
		text = lotr_must_own_more_than_one_county_not_colony
		is_landed = yes
		any_held_county = {
			NOT = { title_province = { has_holding_type = settlement_holding } }
			count > 1 #Don't give away your only title
		}
	}
}

##########################
### Diplomacy Triggers ###
##########################

# Checks whether the ROOT character has a defensive alliance with the RECIPIENT
# Assumes || Character || scope
is_defensive_allied_to = {
	trigger_if = {
		limit = { has_variable_list = defensive_allies }
		is_target_in_variable_list = {
			name = defensive_allies
			target = $RECIPIENT$
		}
	}
	trigger_else = { always = no }
}

has_defensive_alliance = {
	has_variable_list = defensive_allies
}

realms_achievements_enabled = {
	debug_only = no
	any_player = { count < 2 }
}

# Wulf Content Trigger
is_reconsidering_negotion = {
	OR = {
		AND = {
			var:wulf_negotiation_choice = 1
			NOT = { has_character_flag = wulf_rohan_promise_pat_marriage }
		}
		AND = {
			var:wulf_negotiation_choice = 2
			NOT = { has_character_flag = wulf_rohan_promise_mat_marriage }
		}
		AND = {
			var:wulf_negotiation_choice = 3
			NOT = { has_character_flag = wulf_rohan_promise_land }
		}
		AND = {
			var:wulf_negotiation_choice = 4
			NOT = { has_character_flag = wulf_rohan_promise_vassal_contract }
		}
		AND = {
			var:wulf_negotiation_choice = 5
			NOT = { has_character_flag = wulf_rohan_promise_hook }
		}
		AND = {
			var:wulf_negotiation_choice = 6
			NOT = { has_character_flag = wulf_rohan_promise_co_monarch }
		}
		AND = {
			var:wulf_negotiation_choice = 7
			NOT = { has_character_flag = wulf_rohan_promise_independence }
		}
	}
}

# Inviting Dwarves Triggers #
show_gundabad_trigger = {
	AND = {
		completely_controls = title:c_gundalok
		title:c_gundabad.title_province = { has_holding_type = wastelands_holding }
	}
}
show_carn_dum_trigger = {
	AND = {
		completely_controls = title:c_carn_dum
		title:c_barad_madrus.title_province = { has_holding_type = wastelands_holding }
	}
}
show_mount_gram_trigger = {
	AND = {
		completely_controls = title:c_malenhad
		title:c_baruk_zigil.title_province = { has_holding_type = wastelands_holding }
	}
}
show_greydelve_trigger = {
	AND = {
		completely_controls = title:c_twainmantle
		title:c_greydelve.title_province = { has_holding_type = wastelands_holding }
	}
}
show_grey_mountains_trigger = {
	AND = {
		completely_controls = title:c_berafeld
		title:c_thafra_mekh.title_province = { has_holding_type = wastelands_holding }
	}
}
show_erebor_trigger = {
	AND = {
		completely_controls = title:c_dale
		title:c_throne_of_erebor.title_province = { has_holding_type = wastelands_holding }
	}
}
show_iron_hills_trigger = {
	AND = {
		completely_controls = title:c_abkan_nurtad
		title:c_ibriz_idzab.title_province = { has_holding_type = wastelands_holding }
	}
}
show_uldona_spine_trigger = {
	AND = {
		completely_controls = title:c_marzgur
		title:c_falek_dim.title_province = { has_holding_type = wastelands_holding }
	}
}
show_moria_trigger = {
	AND = {
		completely_controls = title:c_dimrill_dale
		title:c_east_hall.title_province = { has_holding_type = wastelands_holding }
	}
}
show_goblin_town_trigger = {
	AND = {
		completely_controls = title:c_astberg
		title:c_goblin_gate.title_province = { has_holding_type = wastelands_holding }
	}
}
show_belegost_trigger = {
	AND = {
		completely_controls = title:c_iznigumuni
		title:c_fahamtekhem.title_province = { has_holding_type = wastelands_holding }
	}
}
show_nogrod_trigger = {
	AND = {
		completely_controls = title:c_bar_ereb
		title:c_urskub.title_province = { has_holding_type = wastelands_holding }
	}
}
show_glittering_caves_trigger = {
	AND = {
		completely_controls = title:c_helmsdeep
		title:c_glittering_caves.title_province = { has_holding_type = wastelands_holding }
	}
}
show_white_mountains_trigger = {
	AND = {
		completely_controls = title:c_emyn_glaur
		title:c_neuaddcarreg.title_province = { has_holding_type = wastelands_holding }
	}
}
show_central_yellows_trigger = {
	AND = {
		completely_controls = title:c_dubanar_ag
		title:c_baraz_arum.title_province = { has_holding_type = wastelands_holding }
	}
}
show_eastern_yellows_trigger = {
	AND = {
		completely_controls = title:c_mbara
		title:c_murb_adad.title_province = { has_holding_type = wastelands_holding }
	}
}
show_southern_yellows_trigger = {
	AND = {
		completely_controls = title:c_rusek_habor
		title:c_mekhemim.title_province = { has_holding_type = wastelands_holding }
	}
}
show_blackflame_trigger = {
	AND = {
		completely_controls = title:c_hailin
		title:c_khebabarsa.title_province = { has_holding_type = wastelands_holding }
	}
}

### Nogrod and Belegost rebuilt trigger ###
has_rebuilt_nogrod_or_belegost_trigger = {
	any_realm_province = {
		OR = {
			has_building_or_higher = wonder_nogrod_rebuilt
			has_building_or_higher = wonder_belegost_rebuilt
		}
	}
}

second_martial_court_position = {
	any_court_position_holder = {
		type = second_marshal_of_rohan_court_position
		aptitude = {
			court_position = second_marshal_of_rohan_court_position
			value >= $VALUE$
		}
	}
}
westmark_martial_court_position = {
	any_court_position_holder = {
		type = marshal_of_the_westmark_court_position
		aptitude = {
			court_position = marshal_of_the_westmark_court_position
			value >= $VALUE$
		}
	}
}
third_martial_court_position = {
	any_court_position_holder = {
		type = third_marshal_of_rohan_court_position
		aptitude = {
			court_position = third_marshal_of_rohan_court_position
			value >= $VALUE$
		}
	}
}
eastmark_martial_court_position = {
	any_court_position_holder = {
		type = marshal_of_the_eastmark_court_position
		aptitude = {
			court_position = marshal_of_the_eastmark_court_position
			value >= $VALUE$
		}
	}
}

lotr_has_different_clothing_gfx = {
	switch = {
		trigger = has_clothing_gfx
		gondorian_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = gondorian_clothing_gfx }
			}
		}
		belfalathrim_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = belfalathrim_clothing_gfx }
			}
		}
		harondorim_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = harondorim_clothing_gfx }
			}
		}
		bellakari_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = bellakari_clothing_gfx }
			}
		}
		northron_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = northron_clothing_gfx }
			}
		}
		gwathiurim_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = gwathiurim_clothing_gfx }
			}
		}
		north_haradrim_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = north_haradrim_clothing_gfx }
			}
		}
		east_haradrim_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = east_haradrim_clothing_gfx }
			}
		}
		variag_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = variag_clothing_gfx }
			}
		}
		nafarati_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = nafarati_clothing_gfx }
			}
		}
		umbar_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = umbar_clothing_gfx }
			}
		}
		numenorean_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = numenorean_clothing_gfx }
			}
		}
		mordor_uruk_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = mordor_uruk_clothing_gfx }
			}
		}
		burgulhai_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = burgulhai_clothing_gfx }
			}
		}
		isengard_uruk_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = isengard_uruk_clothing_gfx }
			}
		}
		rayan_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = rayan_clothing_gfx }
			}
		}
		south_haradrim_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = south_haradrim_clothing_gfx }
			}
		}
		rohirrim_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = rohirrim_clothing_gfx }
			}
		}
		uruk_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = uruk_clothing_gfx }
			}
		}
		vale_woodmen_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = vale_woodmen_clothing_gfx }
			}
		}
		wastelands_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = wastelands_clothing_gfx }
			}
		}
		elven_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = elven_clothing_gfx }
			}
		}
		lasgalendrim_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = lasgalendrim_clothing_gfx }
			}
		}
		rhunnic_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = rhunnic_clothing_gfx }
			}
		}
		dale_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = dale_clothing_gfx }
			}
		}
		dorwinion_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = dorwinion_clothing_gfx }
			}
		}
		hobbit_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = hobbit_clothing_gfx }
			}
		}
		dwarf_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = dwarf_clothing_gfx }
			}
		}
		firebeard_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = firebeard_clothing_gfx }
			}
		}
		broadbeam_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = broadbeam_clothing_gfx }
			}
		}
		goblin_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = goblin_clothing_gfx }
			}
		}
		moria_orc_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = moria_orc_clothing_gfx }
			}
		}
		mountain_orc_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = mountain_orc_clothing_gfx }
			}
		}
		southern_orc_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = southern_orc_clothing_gfx }
			}
		}
		dolguldur_orc_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = dolguldur_orc_clothing_gfx }
			}
		}
		dunedain_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = dunedain_clothing_gfx }
			}
		}
		uialedain_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = uialedain_clothing_gfx }
			}
		}
		thani_hazad_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = thani_hazad_clothing_gfx }
			}
		}
		snow_troll_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = snow_troll_clothing_gfx }
			}
		}
		black_troll_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = black_troll_clothing_gfx }
			}
		}
		circumpolar_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = circumpolar_clothing_gfx }
			}
		}
		honnin_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = honnin_clothing_gfx }
			}
		}
		pel_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = pel_clothing_gfx }
			}
		}
		mag_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = mag_clothing_gfx }
			}
		}
		kirani_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = kirani_clothing_gfx }
			}
		}
		womaw_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = womaw_clothing_gfx }
			}
		}
		noldor_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = noldor_clothing_gfx }
			}
		}
		sindar_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = sindar_clothing_gfx }
			}
		}
		galadhrim_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = galadhrim_clothing_gfx }
			}
		}
		falathrim_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = falathrim_clothing_gfx }
			}
		}
		vanyar_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = vanyar_clothing_gfx }
			}
		}
		arnorian_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = arnorian_clothing_gfx }
			}
		}
		angmarrim_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = angmarrim_clothing_gfx }
			}
		}
		anbalukkhori_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = anbalukkhori_clothing_gfx }
			}
		}
		khailuza_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = khailuza_clothing_gfx }
			}
		}
		muranian_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = muranian_clothing_gfx }
			}
		}
		sirayni_clothing_gfx = {
			NOT = {
				$CHAR$.culture = { has_clothing_gfx = sirayni_clothing_gfx }
			}
		}
	}
}
