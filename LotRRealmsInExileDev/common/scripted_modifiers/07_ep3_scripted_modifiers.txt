@liege_co_emperor_bonus_chance_traits_t3_value = 30
@liege_co_emperor_bonus_chance_traits_t2_value = 20
@liege_co_emperor_bonus_chance_traits_t1_value = 10
@liege_co_emperor_malus_chance_traits_t1_value = -20
@liege_co_emperor_malus_chance_traits_t2_value = -40
@liege_co_emperor_malus_chance_traits_t3_value = -60

##################################################
# # Laamp Modifiers

laamp_improved_learning_contract_success_modifier = {
	modifier = {
		scope:owner.domicile ?= { has_domicile_parameter = camp_improved_learning_contract_success }
		add = laamp_improved_learning_contract_success_value
		desc = domicile_building_parameter_camp_improved_learning_contract_success_desc
	}
}

laamp_improved_tracker_contract_success_modifier = {
	modifier = {
		scope:owner.domicile ?= { has_domicile_parameter = camp_improved_tracker_contract_success }
		add = laamp_improved_tracker_contract_success_value
		desc = domicile_building_parameter_camp_improved_tracker_contract_success_desc
	}
}

laamp_weight_up_minor_chars_modifier = {
	modifier = {
		OR = {
			has_any_relation_trigger = { CHARACTER = root }
			is_consort_of = root
			has_any_court_position = yes
		}
	}
}

##################################################
# # Admin Modifiers

liege_offer_co_emperorship_to_faction_leader_modifier = {
	# Military considerations.
	modifier = {
		add = 100
		scope:faction = { faction_power >= 100 }
	}
	modifier = {
		add = 50
		scope:faction = { faction_power >= 125 }
	}
	modifier = {
		add = 50
		scope:faction = { faction_power >= 150 }
	}
	modifier = {
		add = 50
		scope:faction = { faction_power >= 200 }
	}
	# Traits.
	## +++ Humble
	modifier = {
		add = @liege_co_emperor_bonus_chance_traits_t3_value
		has_trait = humble
	}
	## +++ Content
	modifier = {
		add = @liege_co_emperor_bonus_chance_traits_t3_value
		has_trait = content
	}
	## ++ Forgiving
	modifier = {
		add = @liege_co_emperor_bonus_chance_traits_t2_value
		has_trait = forgiving
	}
	## ++ Trusting
	modifier = {
		add = @liege_co_emperor_bonus_chance_traits_t2_value
		has_trait = trusting
	}
	## ++ Craven
	modifier = {
		add = @liege_co_emperor_bonus_chance_traits_t2_value
		has_trait = craven
	}
	## + Fickle
	modifier = {
		add = @liege_co_emperor_bonus_chance_traits_t1_value
		has_trait = fickle
	}
	## + Eccentric
	modifier = {
		add = @liege_co_emperor_bonus_chance_traits_t1_value
		has_trait = eccentric
	}
	## - Brave
	modifier = {
		add = @liege_co_emperor_malus_chance_traits_t1_value
		has_trait = brave
	}
	## -- Stubborn
	modifier = {
		add = @liege_co_emperor_malus_chance_traits_t2_value
		has_trait = stubborn
	}
	## --- Vengeful
	modifier = {
		add = @liege_co_emperor_malus_chance_traits_t3_value
		has_trait = vengeful
	}
	## --- Paranoid
	modifier = {
		add = @liege_co_emperor_malus_chance_traits_t3_value
		has_trait = paranoid
	}
	## --- Ambitious
	modifier = {
		add = @liege_co_emperor_malus_chance_traits_t3_value
		has_trait = ambitious
	}
	## --- Arrogant
	modifier = {
		add = @liege_co_emperor_malus_chance_traits_t3_value
		has_trait = arrogant
	}
	# Factor for opinion.
	opinion_modifier = { opinion_target = scope:faction_leader }
	# Finally, if the faction isn't particularly strong, we nuke the above.
	modifier = {
		factor = 0
		scope:faction = { faction_power <= 50 }
	}
}

court_position_boon_aptitude_modifier = {
	modifier = {
		add = {
			value = "scope:position_temp.aptitude($POS$_court_position)"
			subtract = 3
		}
	}
}

court_position_boon_aptitude_multi_modifier = {
	modifier = {
		any_court_position_holder = {
			has_court_position = $POS$_court_position
			save_temporary_scope_as = position_temp
		}
		add = {
			value = "scope:position_temp.aptitude($POS$_court_position)"
			subtract = 3
		}
	}
}

demand_admin_acceptance_modifier = {
	opinion_modifier = { # Opinion Factor
		who = scope:recipient
		opinion_target = scope:actor
		multiplier = 0.5
		desc = AI_OPINION_REASON
	}
	ai_value_modifier = {
		ai_rationality = 0.5 	#It's practical
		ai_energy = 1 			#It's a change
		ai_boldness = -0.25		#They might defy you
		ai_sociability = 0.25 	#They wanna please you
	}
	# They are afraid of you
	modifier = {
		scope:recipient = {
			has_dread_level_towards = {
				target = scope:actor
				level = 1
			}
		}
		add = 30
	}
	modifier = {
		scope:recipient = {
			has_dread_level_towards = {
				target = scope:actor
				level = 2
			}
		}
		add = 60
	}
	# Imperial Bureaucracy
	modifier = {
		scope:actor = { has_realm_law = imperial_bureaucracy_0 }
		add = 10
		desc = IMPERIAL_BUREAUCRACY_LOW_AI_REASON_DESC
	}
	modifier = {
		scope:actor = { has_realm_law = imperial_bureaucracy_2 }
		add = -10
		desc = IMPERIAL_BUREAUCRACY_HIGH_AI_REASON_DESC
	}
	modifier = {
		scope:actor = { has_realm_law = imperial_bureaucracy_3 }
		add = -20
		desc = IMPERIAL_BUREAUCRACY_HIGH_AI_REASON_DESC
	}
	# De jure
	modifier = {
		trigger_if = {
			limit = { scope:actor.highest_held_title_tier = tier_empire }
			scope:recipient.primary_title.empire != scope:actor.primary_title
		}
		trigger_else = { scope:recipient.primary_title.kingdom != scope:actor.primary_title }
		desc = demand_admin_not_de_jure_liege_desc
		add = -75
	}
	# Faith hostility
	modifier = {
		faith = {
			faith_hostility_level = {
				target = scope:actor.faith
				value >= faith_astray_level
			}
		}
		add = {
			value = "faith.faith_hostility_level(scope:actor.faith)"
			multiply = -10
		}
		desc = FAITH_HOSTILITY_LEVEL
	}
	modifier = {
		exists = scope:actor.top_liege.primary_title.state_faith
		faith = {
			faith_hostility_level = {
				target = scope:actor.top_liege.primary_title.state_faith
				value >= faith_astray_level
			}
		}
		add = {
			value = "faith.faith_hostility_level(scope:actor.top_liege.primary_title.state_faith)"
			multiply = -5
		}
		desc = FAITH_HOSTILITY_LEVEL_STATE_FAITH
	}
	# Cultural acceptance
	modifier = {
		culture != scope:actor.culture
		"scope:recipient.culture.cultural_acceptance(scope:actor.culture)" < 50
		add = {
			value = 50
			subtract = "scope:recipient.culture.cultural_acceptance(scope:actor.culture)"
			multiply = -0.25
			round = yes
		}
		desc = CULTURAL_ACCEPTANCE
	}
	# Cultural acceptance
	modifier = {
		culture = { has_cultural_pillar = ethos_bureaucratic }
		add = 20
		desc = BUREAUCRATIC_ETHOS_REASON
	}
	# Hereditary province
	modifier = {
		scope:hereditary = yes
		desc = demand_admin_hereditary_reason_desc
		add = {
			value = 0
			every_held_title = {
				limit = {
					tier = scope:recipient.highest_held_title_tier
					is_landless_type_title = no
					is_noble_family_title = no
				}
				add = 25
			}
		}
	}
	# Spend influence
	modifier = {
		desc = INFLUENCE_REASON
		scope:influence = yes
		add = {
			value = 30
			multiply = scope:actor.influence_level
			min = 5
		}
	}
	# HISTORICALLY ADMIN PEOPLES WANT TO BE ADMIN
	modifier = {
		add = 30
		scope:actor = {
			government_has_flag = government_is_administrative
		}
		# scope:recipient = { #LotR
		# 	culture = {
		# 		OR = {
		# 			this = culture:greek
		# 			any_parent_culture_or_above = {
		# 				this = culture:greek
		# 			}
		# 			this = culture:han
		# 			any_parent_culture_or_above = {
		# 				this = culture:han
		# 			}
		# 		}
		# 	}
		# }
		desc = "HISTORICAL_ADMIN_REASON"
	}
	# Warning
	modifier = {
		desc = might_ask_for_something_in_return_warning_line_break
		add = 0
	}
}

ep3_adventurer_ai_contract_find_next_kingdom_modifier = {
	modifier = { # Avoid imprisonment
		factor = {
			value = {
				value = 1
				if = {
					limit = {
						de_jure_liege.holder ?= {
							OR = {
								has_imprisonment_reason = $ADVENTURER$
								has_execute_reason = $ADVENTURER$
								has_banish_reason = $ADVENTURER$
							}
						}
					}
					add = -0.5
				}
				if = {
					limit = {
						holder ?= {
							OR = {
								has_imprisonment_reason = $ADVENTURER$
								has_execute_reason = $ADVENTURER$
								has_banish_reason = $ADVENTURER$
							}
						}
					}
					add = -0.5
				}
				every_in_de_jure_hierarchy = {
					limit = {
						tier >= tier_duchy
						holder ?= {
							OR = {
								has_imprisonment_reason = $ADVENTURER$
								has_execute_reason = $ADVENTURER$
								has_banish_reason = $ADVENTURER$
							}
						}
					}
					add = -0.1
				}
			}
			min = 0.1
		}
	}
	modifier = { # Non-tribals avoid tribal areas
		NOT = {
			$ADVENTURER$.culture.culture_head ?= { government_has_flag = government_is_tribal }
		}
		factor = {
			value = {
				value = 1
				if = {
					limit = {
						de_jure_liege.holder ?= { government_has_flag = government_is_tribal }
					}
					add = -0.25
				}
				if = {
					limit = {
						holder ?= { government_has_flag = government_is_tribal }
					}
					add = -0.25
				}
				every_in_de_jure_hierarchy = {
					limit = {
						tier >= tier_duchy
						holder ?= { government_has_flag = government_is_tribal }
					}
					add = -0.1
				}
			}
			min = 0.25
		}
	}
	modifier = { # Mercenaries try to head to wars
		$ADVENTURER$ = { has_realm_law = camp_purpose_mercenaries }
		de_jure_liege.holder ?= { is_at_war = yes }
		factor = {
			value = {
				value = 1
				if = {
					limit = {
						de_jure_liege.holder ?= { is_at_war = yes }
					}
					add = 0.25
				}
				if = {
					limit = {
						holder ?= { is_at_war = yes }
					}
					add = 0.25
				}
				every_in_de_jure_hierarchy = {
					limit = {
						tier >= tier_duchy
						holder ?= { is_at_war = yes }
					}
					add = 0.1
				}
			}
			max = 2
		}
	}
}
