# The entry should be named in the same way that the elective succession law is named to define it's voter's logic.
# Root scope - Elector, the character voting in the election.
# scope:candidate scope - Candidate, Character considered for the title.
# scope:title scope - Title, The title the nomination is for.
# scope:holder scope - Ruler, The ruler currently holding the title.
# scope:holder_candidate scope - Favored Candidate, The title owner's candidate.
# The voter will vote for the top score candidate calculated from this script.

balan_lai_elective = { #HRE Elective.
	elector_vote_strength = {
		base = 1
		modifier = {
            add = 1
			desc = tooltip_feudal_vote_strength_emperor_tier
            this = scope:holder
        }
		modifier = { # Diplomacy
            add = diplomacy_vote_strength_balan_lai
			desc = tooltip_diplomacy_vote_strength_balan_lai
            trigger = {
                diplomacy_vote_strength_balan_lai > 0
            }
        }
		modifier = { # Intrigue
            add = intrigue_vote_strength_balan_lai
			desc = tooltip_intrigue_vote_strength_balan_lai
            trigger = {
                intrigue_vote_strength_balan_lai > 0
            }
        }
	}
	
	electors = {
		max = 7  #Seven Prince-Electors + 1 Emperor.
		add = holder #The Emperor
		add = {
			type = title_dejure_vassals
			limit = {
				scope:title = { #Either title is higher than Duke-tier, or must be primary.
					OR = {
						tier >= tier_kingdom
						holder = { has_primary_title = prev }
					}
				}
                is_vassal_of = scope:holder
			}
		}
		priority = {
			base = 1
			modifier = { # The Emperor is always picked.
				add = 200
				this = scope:holder
			}
			modifier = { # Refine later, check specifically for Balan-Lai members
				add = 75
				culture = scope:holder.culture
                is_vassal_of = scope:holder
			}

			modifier = { #Fallback Electors
				add = {
					value = 10
					if = { #Slightly favor same faith first.
						limit = {
							faith = scope:holder.faith
						}
						add = 15
					}
					if = { #Or compatible faith at least.
						limit = {
							faith = {
								faith_hostility_level = {
									target = scope:holder.faith
									value = faith_fully_accepted_level
								}
							}
						}
						add = 5
					}
					if = { #Malus for other governments.
						limit = {
							OR = {
								government_has_flag = government_is_tribal
								government_has_flag = government_is_clan
								government_has_flag = government_is_mercenary
								government_has_flag = government_is_holy_order
							    government_has_flag = government_is_republic
							}
						}
						subtract = 4
					}
				}
			}
		}
	}

	candidate_score = {
		base = 0
		#Princely Elective uses very similar behavior to Feudal Elective. The few changes to the modifiers are already accounted for in the scripted_modifiers themselves.
		######################	Elector self-voting pattern	##########################
		elector_self_voting_pattern_feudal_elective_modifier = yes

		##########################	Holder voting pattern	##########################
		holder_voting_pattern_feudal_elective_modifier = yes

		##########################	Elector voting patterns (circumstances)	##########################
		elector_voting_pattern_circumstances_feudal_elective_modifier = yes

		##########################	Elector voting patterns (prestige/piety)	##########################
		elector_voting_pattern_prestige_piety_feudal_elective_modifier = yes

		##########################	Elector voting patterns (traits)	##########################
		elector_voting_pattern_traits_feudal_elective_modifier = yes

		##########################	Elector voting patterns (opinion)	##########################
		elector_voting_pattern_opinion_feudal_elective_modifier = yes
	}
	
	#scope:candidate = Candidate, scope:title = Title, scope:holder_candidate = Candidate currently selected by ruler.
	candidates = { 
		add = { # Only Balan-Lai members are considered | Revise when we add traits representing Balan-Lai members
			type = holder_direct_vassals
			limit = { 
                culture = scope:holder.culture
                highest_held_title_tier >= tier_county
            }
		}
		add = { # Close family members of current holder also available
			type = holder_close_family
			limit = {
				is_close_family_of = scope:holder
				feudal_elective_potential_landless_dynastic_candidate_trigger = yes
            }
		}
	}
}
