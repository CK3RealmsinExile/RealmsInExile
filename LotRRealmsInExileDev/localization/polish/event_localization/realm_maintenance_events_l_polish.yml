l_polish:
 realm_maintenance.1001.t: "Nowy senior"
 realm_maintenance.1001.conquest: "Dzięki prawu podboju [new_liege.GetTitledFirstName] staje się twoim nowym [Concept('liege', 'seniorem')|E]"
 realm_maintenance.1001.conquest_holy_war: "[new_liege.GetTitledFirstName] staje się twoim nowym seniorem po wyzwoleniu twoich ziem spod rządów, jakie sprawował ten [old_liege.Custom2('GetUnbelieverTermAdjective', ROOT.Char)] człowiek, [old_liege.GetTitledFirstName]"
 realm_maintenance.1001.conquest_claim: "$realm_maintenance.1001.conquest$"
 realm_maintenance.1001.conquest_populist: "[new_liege.GetTitledFirstName] staje się twoim nowym seniorem po wyzwoleniu twoich ziem spod rządów, jakie sprawował [old_liege.Custom2('GetUnbelieverAndForeignerTerm', ROOT.Char)], którym jest [old_liege.GetTitledFirstName]"
 realm_maintenance.1001.inheritance: "[new_liege.GetTitledFirstName] zostaje twoim nowym [Concept('liege', 'seniorem')|E] w wyniku odziedziczenia tytułów po osobie znanej jako [old_liege.GetTitledFirstName]"
 realm_maintenance.1001.abdication: "[new_liege.GetTitledFirstName] zostaje twoim nowym [Concept('liege', 'seniorem')|E] po tym, jak wcześniejszy senior, [old_liege.GetTitledFirstName], abdykował"
 realm_maintenance.1001.destroyed: "[new_liege.GetTitledFirstName] zostaje twoim nowym [Concept('liege', 'seniorem')|E] w wyniku zniszczenia [Concept('title', 'tytułu')|E]"
 realm_maintenance.1001.created: "[new_liege.GetTitledFirstName] zostaje twoim nowym [Concept('liege', 'seniorem')|E] w wyniku utworzenia [Concept('title', 'tytułu')|E]"
 realm_maintenance.1001.usurped: "[new_liege.GetTitledFirstName] zostaje twoim nowym [Concept('liege', 'seniorem')|E] w wyniku uzurpacji [Concept('titles', 'tytułów')|E], które należały do osoby znanej jako [old_liege.GetTitledFirstName]"
 realm_maintenance.1001.granted: "[new_liege.GetTitledFirstName] zostaje twoim nowym [Concept('liege', 'seniorem')|E] w wyniku nadania [new_liege.Custom('PL_mu_jej')] [Concept('titles', 'tytułów')|E]"
 realm_maintenance.1001.revoked: "[new_liege.GetTitledFirstName] zostaje twoim nowym [Concept('liege', 'seniorem')|E] po tym, jak osoba znana jako [old_liege.GetTitledFirstName] zostaje pozbawiona tytułów"
 realm_maintenance.1001.election: "Po wygraniu wyborów [new_liege.GetTitledFirstName] zostaje twoim nowym [Concept('liege', 'seniorem')|E] i zastępuje osobę, którą jest [old_liege.GetTitledFirstName]"
 realm_maintenance.1001.independency: "[new_liege.GetTitledFirstName] zostaje twoim nowym [Concept('liege', 'seniorem')|E] w wyniku uzyskania niepodległości"
 realm_maintenance.1001.returned: "[new_liege.GetTitledFirstName] zostaje twoim nowym [Concept('liege', 'seniorem')|E] po tym, jak zwrócono [new_liege.Custom('PL_mu_jej')] tytuły, które przejęła osoba znana jako [old_liege.GetTitledFirstName]"
 realm_maintenance.1001.leased_out: "[new_liege.GetTitledFirstName] zostaje twoim nowym [Concept('liege', 'seniorem')|E] w wyniku wydzierżawienia [Concept('title', 'tytułu')|E] od osoby znanej jako [old_liege.GetTitledFirstName]"
 realm_maintenance.1001.lease_revoked: "[new_liege.GetTitledFirstName] zostaje twoim nowym [Concept('liege', 'seniorem')|E] w wyniku odebrania należących do [old_liege.Custom('PL_niego_niej')] tytułów, które wcześniej dzierżawiła osoba znana jako [old_liege.GetTitledFirstName]"
 realm_maintenance.1001.faction_demand: "[new_liege.GetTitledFirstName] zastępuje osobę znaną jako [old_liege.GetTitledFirstName] i zostaje twoim [Concept('liege', 'seniorem')|E] w wyniku wprowadzenia na to stanowisko przez [Concept('faction', 'frakcję')|E]"
 realm_maintenance.1001.swear_fealty: "Przysięgasz wierność osobie znanej jako [new_liege.GetTitledFirstName], wskutek czego stajesz się jego [Concept('vassal', 'wasalem')|E]"
 realm_maintenance.1001.appointment: "[new_liege.GetTitledFirstName], będąc następnym kandydatem w linii, zastępuje osobę znaną jako [old_liege.GetTitledFirstName] i zostaje twoim [Concept('liege', 'seniorem')|E]"
 realm_maintenance.1001.appointment_succession: "$realm_maintenance.1001.appointment$"
 realm_maintenance.1001.stepped_down: "[new_liege.GetTitledFirstName] zostaje twoim nowym [Concept('liege', 'seniorem')|E] w wyniku ustąpienia osoby znanej jako [old_liege.GetTitledFirstName]"
 realm_maintenance.1001.error: "[new_liege.GetTitledFirstName] zostaje twoim nowym [Concept('liege', 'seniorem')|E], ale nie masz pojęcia, dlaczego tak się stało"
 realm_maintenance.2001.t: "Now[Select_CString( ROOT.Char.IsFemale, 'a', 'y' )] [ROOT.Char.GetTitleAsNameNoTooltip|l]"
 realm_maintenance.2001.desc_murdered: "Kiedy [previous_holder.Custom2('MyCharacterIntroduction', ROOT.Char)] tragicznie i #EMP niefortunnie#! [Select_CString(previous_holder.IsFemale, 'umarła', 'umarł' )], odpowiedzialność za [title.GetTierAsNameNoTooltip|l] i rządzenie nim spadła teraz na moje barki."
 realm_maintenance.2001.desc_dead: "Kiedy [previous_holder.Custom2('MyCharacterIntroduction', ROOT.Char)] [Select_CString(previous_holder.IsFemale, 'odeszła', 'odszedł' )] ze tego świata, odpowiedzialność za [title.GetTierAsNameNoTooltip|l] i rządzenie nim spadła teraz na moje barki."
 realm_maintenance.2001.desc_alive: "Teraz muszę zdecydować, w którą stronę podąży [title.GetTierAsNameNoTooltip|l] oraz rozległe ziemie, które pozostawił[Select_CString(previous_holder.IsFemale, 'a', '' )] po sobie [previous_holder.Custom2('MyCharacterIntroduction', ROOT.Char)]."
 realm_maintenance.2001.desc: "\n\nStaję przed moimi wasalami, zakładam swoją nową koronę i [ROOT.Char.Custom('quirk_pos_personal_present')]. O, rzeczy, których dokonam!"
 realm_maintenance.2001.a: "Niech żyje [ROOT.Char.GetTitleAsNameNoTooltip|l]!"
