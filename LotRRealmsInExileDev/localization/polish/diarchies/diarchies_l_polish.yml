l_polish:
 ##################################################
 ##Misc
 from_diarch_domain_limit_bonus: "Wsparcie od [Concept( 'regent', 'regenta' )|E]"
 from_diarch_monthly_influence_bonus: "Korzyści za [Concept('co_emperor', 'współcesarza')|E]"
 to_diarch_monthly_influence_add_bonus: "Korzyści za [duumvirate|El]"
 from_co_monarch_diplomacy_vassal_opinion: "Korzyści za [Concept('co_monarch', 'współmonarchę')|E]"
 to_co_monarch_monthly_prestige_add_bonus: "Korzyści za [Concept('co_monarchy', 'współmonarchię')|E]"
 imprisonment_would_cause_regency_trigger.tt.imprisoned_abroad: "Jesteś osobą [Concept('imprisoned', 'więzioną')|E] poza granicami państwa"
 DIARCHY_TEMPORARY_OR_DESIGNATED_REGENT_WEDDING_ACCEPTANCE: "Zaufany [regent|El]: $VALUE|=+0$"
 DIARCHY_ENTRENCHED_REGENT_WEDDING_ACCEPTANCE: "[scales_of_power|E]: $VALUE|=+0$"
 remove_strife_per_invited_powerful_vassal_effect.tt: "[host.GetShortUINameNotMe] traci punkty [Concept('strife', 'niezgody')|E] w liczbie #P [host.MakeScope.Var('strife_loss_total').GetValue|0]#! za spotkanie z [Concept('powerful_vassals', 'wasalami wpływowymi')|E] z miejsca znanego jako [host.GetLiege.GetPrimaryTitle.GetBaseName]"
 family_member_is_civil_servant: "[family_member|E] pełni służbę urzędnika państwowego"
 civil_servant_salary_and_corruption: "Ubogacenie urzędnika państwowego"
 regency_for_personal_reasons_trigger.tt.cannot_govern_by_themselves: "Nie może rządzić samodzielnie"
 SPACE4: "    "
 ##################################################
 ##Swing Update Strings
 update_diarchy_swing_with_perspective_effect.preamble: "[liege_loc.GetDiarchyTypeName|U] postaci znanej jako [liege_loc.GetShortUINameNotMe]: [scales_of_power|El] przychylają się o"
 update_diarchy_swing_with_perspective_effect.postamble.diarch: "#![Select_CString( liege_loc.GetDiarchy.GetDiarch.IsLocalPlayer, 'na twoją korzyść', Concatenate('na korzyść postaci ', liege_loc.GetDiarchy.GetDiarch.GetShortUINameNotMe ) )]"
 update_diarchy_swing_with_perspective_effect.postamble.liege: "#!kierunek: [liege_loc.GetShortUINameNotMe]"
 update_diarchy_swing_with_perspective_effect.liege_perspective.miniscule_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.minor_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.medium_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.major_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.massive_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.monumental_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.miniscule_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.minor_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.medium_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.major_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.massive_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.monumental_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.miniscule_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.minor_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.medium_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.major_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.massive_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.monumental_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.miniscule_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0]"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.minor_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0]"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.medium_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0]"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.major_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0]"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.massive_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0]"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.monumental_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0]"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.miniscule_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.minor_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.medium_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.major_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.massive_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.monumental_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.miniscule_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.minor_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.medium_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.major_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.massive_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.monumental_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 ##################################################
 ##Invalid Strings
 ## Nouns
 invalid_child: "dziecko"
 invalid_incapable: "osoba z cechą [GetTrait('incapable').GetName( GetNullCharacter )|l]"
 invalid_helpless: "osoba bezradna"
 ## Possessive Nouns
 invalid_child_possessive: "dziecka"
 invalid_incapable_possessive: "osoby z cechą [GetTrait('incapable').GetName( GetNullCharacter )|l]"
 invalid_helpless_possessive: "osoby bezradnej"
 ##################################################
 ##Diarchy Types
 temporary_regency_diarchy_type: "[regency|E]"
 temporary_regency_diarch_title: "$regency_diarch_title$"
 regency_diarchy_type: "[entrenched_regency|E]"
 regency_diarch_title: "Regent"
 vizierate_diarchy_type: "[vizierate|E]"
 vizierate_diarch_title: "Wezyr"
 junior_emperorship_diarchy_type: "[nominal_duumvirate|E]"
 junior_emperorship_diarch_title: "Współcesarz nominalny"
 co_emperorship_diarchy_type: "[duumvirate|E]"
 co_emperorship_diarch_title: "Współcesarz"
 co_monarchy_diarchy_type: "[co_monarchy|E]"
 co_monarchy_diarch_title: "[co_monarch|E]"
 ##################################################
 ##Mandates
 fill_coffers_mandate: "Zapełniaj skarbiec"
 fill_coffers_mandate_desc: "#BOL Możliwe efekty [Concept('mandate', 'mandatu')|E]:#!\n$EFFECT_LIST_BULLET$ Dodatkowe [gold|El]\n$EFFECT_LIST_BULLET$ Darmowy [development|El] [Concept('domain', 'domeny')|E]\n$EFFECT_LIST_BULLET$ Dostosowanie [Concept('vassal_contracts', 'kontraktów wasalnych')|E] na korzyść [Concept('liege', 'seniora')|E]\n\n#WEAK [regent|E] otrzymuje polecenie zwiększenia przychodów swojego seniora za wszelką cenę.#!"
 swell_armies_mandate: "Wzmacniaj armie"
 swell_armies_mandate_desc: "#BOL Możliwe efekty [Concept( 'mandate', 'mandatu' )|E]:#!\n$EFFECT_LIST_BULLET$ Korzystne [modifiers|El] dla [Concept( 'men_at_arms', 'zbrojnych' )|E]\n$EFFECT_LIST_BULLET$ Korzystne modyfikatory dla [Concept( 'levy', 'poborowych' )|E]\n$EFFECT_LIST_BULLET$ Umiejętni [knights|El]-[courtiers|El]\n\n#WEAK Obecne lub przyszłe kampanie wymagają do walki nowych wojowników, dlatego [liege|El] nakazał swojemu [Concept( 'regent', 'regentowi' )|E], aby ich znalazł.#!"
 promote_authority_mandate: "Zwiększaj autorytet"
 promote_authority_mandate_desc: "#BOL Możliwe efekty [Concept( 'mandate', 'mandatu' )|E]:#!\n$EFFECT_LIST_BULLET$ [characters|E] i [counties|El] opuszczają [factions|El]\n$EFFECT_LIST_BULLET$ Zwiększony [crown_authority|El]\n$EFFECT_LIST_BULLET$ Poprawiona [opinion|El] [Concept( 'councillor', 'radnego' )|E]\n\n#WEAK [liege|E] nakazał swojemu [Concept( 'regent', 'regentowi' )|E], aby skupił się na wzmacnianiu tronu państwa.#!"
 mandate_aptitude.fill_coffers.category: "$fill_coffers_mandate$"
 mandate_aptitude.fill_coffers.primary_skill.stewardship: "[mandate|E] bazuje na [Concept('stewardship', 'zarządzaniu')|E]"
 mandate_aptitude.fill_coffers.secondary_skill.learning: "[mandate|E] wykorzystuje [Concept('learning', 'naukę')|E]"
 mandate_aptitude.fill_coffers.secondary_skill.intrigue: "[mandate|E] wykorzystuje [Concept('intrigue', 'intrygę')|E]"
 mandate_aptitude.fill_coffers.bonus_trait.arbitrary: "[GetTrait('arbitrary').GetName( ROOT.Char )] nie ma sobie równych"
 mandate_aptitude.fill_coffers.bonus_trait.callous: "[GetTrait('callous').GetName( ROOT.Char )] nie ma sobie równych"
 mandate_aptitude.fill_coffers.malus_trait.generous: "[GetTrait('generous').GetName( ROOT.Char )] nie ma odpowiednich umiejętności"
 mandate_aptitude.fill_coffers.malus_trait.greedy: "[GetTrait('greedy').GetName( ROOT.Char )] nie ma odpowiednich umiejętności"
 mandate_aptitude.swell_armies.category: "$swell_armies_mandate$"
 mandate_aptitude.swell_armies.primary_skill.martial: "[mandate|E] bazuje na [Concept('martial', 'walce')|E]"
 mandate_aptitude.swell_armies.secondary_skill.prowess: "[mandate|E] wykorzystuje [prowess|El]"
 mandate_aptitude.swell_armies.secondary_skill.diplomacy: "[mandate|E] wykorzystuje [Concept('diplomacy', 'dyplomację')|E]"
 mandate_aptitude.swell_armies.bonus_trait.arbitrary: "[GetTrait('arbitrary').GetName( ROOT.Char )] nie ma sobie równych"
 mandate_aptitude.swell_armies.bonus_trait.gregarious: "[GetTrait('gregarious').GetName( ROOT.Char )] nie ma sobie równych"
 mandate_aptitude.swell_armies.malus_trait.just: "[GetTrait('just').GetName( ROOT.Char )] nie ma odpowiednich umiejętności"
 mandate_aptitude.swell_armies.malus_trait.shy: "[GetTrait('shy').GetName( ROOT.Char )] nie ma odpowiednich umiejętności"
 mandate_aptitude.promote_authority.category: "$promote_authority_mandate$"
 mandate_aptitude.promote_authority.primary_skill.diplomacy: "[mandate|E] bazuje na [Concept('diplomacy', 'dyplomacji')|E]"
 mandate_aptitude.promote_authority.secondary_skill.martial: "[mandate|E] wykorzystuje [Concept('martial', 'walkę')|E]"
 mandate_aptitude.promote_authority.secondary_skill.learning: "[mandate|E] wykorzystuje [Concept('learning', 'naukę')|E]"
 mandate_aptitude.promote_authority.bonus_trait.calm: "[GetTrait('calm').GetName( ROOT.Char )] nie ma sobie równych"
 mandate_aptitude.promote_authority.bonus_trait.just: "[GetTrait('just').GetName( ROOT.Char )] nie ma sobie równych"
 mandate_aptitude.promote_authority.malus_trait.wrathful: "[GetTrait('wrathful').GetName( ROOT.Char )] nie rokuje żadnych nadziei"
 mandate_aptitude.promote_authority.malus_trait.arbitrary: "[GetTrait('arbitrary').GetName( ROOT.Char )] nie rokuje żadnych nadziei"
 ##################################################
 ##Parameters
 diarchy_is_regency: "[diarchy|E] ma postać [Concept('regency', 'regencji')|E]"
 unlock_diarch_imprison_interaction: "[diarch|E] może próbować [Concept('imprison', 'uwięzić')|E] [Concept('vassals', 'współwasali')|E] i [Concept('courtiers', 'dworzan')|E] wewnątrz [Concept('realm', 'państwa')|E] swojego [Concept('liege', 'seniora')|E]"
 unlock_diarch_revoke_title_interaction: "[diarch|E] może próbować [Concept('revoke', 'odebrać')|E] [titles|El] innym [Concept('vassals', 'wasalom')|E]"
 unlock_diarch_retract_vassal_interaction: "[diarch|E] może próbować [Concept('retract', 'odjąć')|E] wasala [Concept('vassals', 'wasalom')|E] poniżej własnego [Concept('title_tier', 'poziomu')|E]"
 diarch_can_subsidise_liege_authority: "[diarchs|E] mogą zaproponować zwiększenie [Concept('crown_authority', 'autorytetu korony')|E], [Concept('tribal_authority', 'autorytetu władzy plemiennej')|E] lub [Concept('imperial_bureaucracy', 'biurokracji cesarskiej')|E] [Concept('liege', 'seniora')|E], pokrywając koszty i kary do [Concept('opinion', 'opinii')|E]"
 unlock_syphon_treasury_interaction: "[diarch|E] może próbować sprzeniewierzyć [gold|El] swojego [Concept('liege', 'seniora')|E]"
 unlock_shift_privileges_interaction: "[diarch|E] może próbować dawać negatywne [county_modifiers|El] swoim [Concept('vassals', 'współwasalom')|E] i otrzymać [gold|El], jeśli im się powiedzie"
 unlock_legal_meddling_interaction: "[diarch|E] może próbować natychmiast zgłosić [claims|El] do [Concept('titles', 'tytułów')|E] [Concept('vassals', 'współwasali')|E]"
 unlock_entrench_regency_interaction: "[diarch|E] może [entrenched_regency_entrench|El] w swojej [Concept('regency', 'regencji')|E], zdobywając więcej [Concept('diarch_power', 'powierzonej władzy')|E] i stając się trudniejszym do usunięcia"
 unlock_mulct_vizier_interaction: "#P [lieges|E] mogą zmusić swojego [Concept('diarch', 'koregenta')|E] do przekazania im [gold_i] [Concept('gold', 'złota')|E] poprzez [Concept('interaction', 'interakcję')|E] „ukarz wezyra”#!"
 lieges_swing_more_against_diarchs: "[lieges|E] przechylają szale władzy na swoją stronę bardziej niż zazwyczaj #WEAK (w momencie dokonywania [Concept('interaction', 'interakcji')|E])#!"
 regents_can_try_to_overthrow_present_lieges: "[diarch|E] może postawić ultimatum swojemu [Concept('liege', 'seniorowi')|E] i zażądać pełnego przekazania władzy, #EMP jeśli#! uda mu się przekonać do przewrotu większość [Concept('powerful_vassals', 'wpływowych wasali')|E] seniora"
 regents_can_try_to_overthrow_present_lieges_help: "Przewrót można rozpocząć poprzez [Concept('decision', 'decyzję')|E], zaś [Concept('powerful_vassals', 'wpływowych wasali')|E] można do niego zaprosić poprzez [Concept('character_interaction', 'interakcję')|E]"
 liege_pays_currency_surcharge_for_mundane_interactions_mild: "[liege|E] wydaje na [diarch_affected_actions|El] symboliczną wartość [Concept('prestige', 'prestiżu')|E] #WEAK ([prestige_i][EmptyScope.ScriptValue('liege_diarchy_surcharge_interaction_miniscule_value')|0] lub więcej)#!"
 liege_pays_currency_surcharge_for_mundane_interactions_medium: "[liege|E] wydaje na [diarch_affected_actions|El] nieco [Concept('prestige', 'prestiżu')|E] #WEAK ([prestige_i][EmptyScope.ScriptValue('liege_diarchy_surcharge_interaction_minor_value')|0] lub więcej)#!"
 liege_pays_currency_surcharge_for_mundane_interactions_major: "[liege|E] wydaje na [diarch_affected_actions|El] znaczną wartość [Concept('prestige', 'prestiżu')|E] #WEAK ([prestige_i][EmptyScope.ScriptValue('liege_diarchy_surcharge_interaction_medium_value')|0] lub więcej)#!"
 liege_pays_currency_surcharge_for_mundane_interactions_massive: "[liege|E] wydaje na [diarch_affected_actions|El] horrendalnie dużo [Concept('prestige', 'prestiżu')|E] #WEAK ([prestige_i][EmptyScope.ScriptValue('liege_diarchy_surcharge_interaction_major_value')|0] lub więcej)#!"
 can_be_instantly_dismissed: "Tę [Concept('regency', 'regencję')|E] można zakończyć w dowolnym momencie, jeśli tylko [liege|El] jest w pełni zdolny do rządów"
 dismissal_requires_gift: "[Concept('entrenched_regencies', 'Zakorzenionemu regentowi')|E] można wysłać podarunek, aby spróbować go usunąć"
 regency_free_end_below_this_point: "[entrenched_regency|E] może być zakończona tylko za zgodą [regent_possessive|El]"
 regency_cant_be_ended_above_this_point: "[liege|E] nie może próbować pozbyć się swojego [Concept('regent', 'regenta')|E]"
 diarch_gets_a_free_change_on_vassal_contract: "[diarch|E] otrzymuje za darmo dodatkową możliwość zmiany swojego [Concept('vassal_contract', 'kontraktu wasalnego')|E], jeśli jest możliwość jego modyfikacji #WEAK (działa tak samo jak użycie [Concept('hook', 'haka')|E] na seniorze)#!"
 primeminister_dismissal_will_upset_administration: "[diarch|E] może zostać odwołany, ale spowoduje to dodanie #N negatywnych#! [Concept('modifier', 'modyfikatorów')|E] do [Concept('stewardship', 'zarządzania')|E] oraz [Concept('income', 'dochodu')|E] na obecnych [Concept('scales_of_power', 'szalach władzy')|E]"
 primeminister_requires_county: "[diarchy|E] można zakończyć bez negatywnych [Concept('modifier', 'modyfikatorów')|E] poprzez oddanie [Concept('diarch', 'koregentowi')|E] przynajmniej jednego [Concept('county', 'hrabstwa')|E]"
 primeminister_requires_duchy: "[diarchy|E] można zakończyć bez negatywnych [Concept('modifier', 'modyfikatorów')|E] poprzez oddanie [Concept('diarch', 'koregentowi')|E] przynajmniej jednego [Concept('duchy', 'księstwa')|E]"
 primeminister_requires_duchy.tt.blocked_grant: "Obecny stan [Concept('scales_of_power', 'szali władzy')|E] wymusza na tobie oddanie przynajmniej jednego [Concept('title', 'tytułu')|E] do danego [Concept('duchy', 'księstwa')|E] osobie, którą jest [recipient.GetFirstName]"
 grant_titles_interaction.tt.primeminister_title_grant.duchy_sufficient: "Przekazanie [Concept('duchy', 'księstwa')|E] lub ważniejszej terytorialnej części państwa #ENC ZAKOŃCZY#! obecny stan dzielenia władzy ([actor.GetDiarchyTypeName|l])"
 grant_titles_interaction.tt.primeminister_title_grant.county_sufficient: "Przekazanie [Concept('county', 'hrabstwa')|E] lub ważniejszej terytorialnej części państwa #ENC ZAKOŃCZY#! obecny stan dzielenia władzy ([actor.GetDiarchyTypeName|l])"
 grant_titles_interaction.tt.primeminister_title_grant.county_insufficient: "Przekazanie [Concept('county', 'hrabstwa')|E] lub niższej terytorialnej części państwa #XB NIE ZAKOŃCZY#! obecnego stanu dzielenia władzy ([actor.GetDiarchyTypeName|l])"
 grant_titles_interaction.tt.primeminister_title_grant.barony_doesnt_end: "Przekazanie [Concept('barony', 'baronii')|E] #XB NIE ZAKOŃCZY#! obecnego stanu dzielenia władzy ([actor.GetDiarchyTypeName|l])"
 diarch_aptitude_helps_tax_collectors_toggle: "[diarchs|E] zyskują [EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_buffed_by_swing_multiplier_value')|+%0] obecnego wyniku [Concept('scales_of_power', 'szali władzy')|E] w formie dodatkowych [Concept('aptitude', 'kompetencji')|E] [Concept('tax_collector', 'poborcy podatkowego')|E]"
 diarch_aptitude_helps_tax_collectors_postamble: "w formie [Concept('aptitude', 'kompetencji')|E] [Concept('diarch_possessive', 'koregenta')|E] jako premię do własnych kompetencji. #WEAK (bez kumulacji)#!"
 diarch_aptitude_helps_tax_collectors_t1: "#P [tax_collectors|E] zyskują [EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t1_value')|+%0] $diarch_aptitude_helps_tax_collectors_postamble$#!"
 diarch_aptitude_helps_tax_collectors_t2: "#P [tax_collectors|E] zyskują [EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t2_value')|+%0] $diarch_aptitude_helps_tax_collectors_postamble$#!"
 diarch_aptitude_helps_tax_collectors_t3: "#P [tax_collectors|E] zyskują [EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t3_value')|+%0] $diarch_aptitude_helps_tax_collectors_postamble$#!"
 diarch_aptitude_helps_tax_collectors_t4: "#P [tax_collectors|E] zyskują [EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t4_value')|+%0] $diarch_aptitude_helps_tax_collectors_postamble$#!"
 diarch_is_preferred_liege_heir: "[diarch|E] jest [Concept('designated_heir', 'wyznaczonym dziedzicem')|E]"
 diarchy_transition_into_co_emperorship_on_majority: "[diarchy|E] zaczyna obowiązywać, gdy [diarch|El] staje się [Concept('adult', 'postacią dorosłą')|E]"
 half_sop_swing_transfer_over_on_majority: "Przechylenie [Concept('scales_of_power', 'szal władzy')|E] zostaje podzielone na pół, gdy [diarch|El] staje się [Concept('adult', 'postacią dorosłą')|E]"
 liege_may_voluntarily_cede_authority: "[liege|E] może dobrowolnie oddać przechylenie [Concept('scales_of_power', 'szal władzy')|E] swojemu koregentowi #WEAK (pozwoli mu to podjąć próbę uzyskania korzyści dostępnych na dalszym poziomie szal)#!"
 diarch_gain_skill_on_majority_t1: "Gdy [diarch|El] staje się [Concept('adult', 'osobą dorosłą')|E], zyskuje #P [EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t1_primary_value')|0]#! do [Concept('skill', 'umiejętności')|E] powiązanej ze swoją [Concept('education', 'edukacją')|E] oraz #P [EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t1_secondary_value')|0]#! do dwóch innych umiejętności"
 diarch_gain_skill_on_majority_t2: "Gdy [diarch|El] staje się [Concept('adult', 'osobą dorosłą')|E], zyskuje dodatkowo #P [EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t2_primary_diff_value')|0]#! #WEAK (łącznie [EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t2_primary_value')|0])#! do [Concept('skill', 'umiejętności')|E] powiązanej ze swoją [Concept('education', 'edukacją')|E] oraz #P [EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t2_secondary_diff_value')|0]#! #WEAK (łącznie [EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t2_secondary_value')|0])#! do dwóch innych umiejętności"
 diarch_gain_skill_on_majority_t3: "Gdy [diarch|El] staje się [Concept('adult', 'osobą dorosłą')|E], zyskuje dodatkowo #P [EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t3_primary_diff_value')|0]#! #WEAK (łącznie [EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t3_primary_value')|0])#! do [Concept('skill', 'umiejętności')|E] powiązanej ze swoją [Concept('education', 'edukacją')|E] oraz #P [EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t3_secondary_diff_value')|0]#! #WEAK (łącznie [EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t3_secondary_value')|0])#! do dwóch innych umiejętności"
 diarch_gain_skill_on_majority_t4: "Gdy [diarch|El] staje się [Concept('adult', 'osobą dorosłą')|E], zyskuje dodatkowo #P [EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t4_primary_diff_value')|0]#! #WEAK (łącznie [EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t4_primary_value')|0])#! do [Concept('skill', 'umiejętności')|E] powiązanej ze swoją [Concept('education', 'edukacją')|E] oraz #P [EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t4_secondary_diff_value')|0]#! #WEAK (łącznie [EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t4_secondary_value')|0])#! do dwóch innych umiejętności"
 unlock_adjust_imperial_bureaucracy_interaction: "[diarchs|E] mogą domagać się od [Concept('liege', 'seniora')|E] zmiany [Concept('imperial_bureaucracy', 'biurokracji cesarskiej')|E] na jeden z następujących sposobów:\n$SPACE4$$EFFECT_LIST_BULLET$Centralizacja połączona z poniesieniem kosztów i kar do [Concept('opinion', 'opinii')|E]\n$SPACE4$$EFFECT_LIST_BULLET$Decentralizacja połączona ze zmniejszeniem poziomu [Concept('strife', 'niezgody')|E]"
 unlock_scapegoat_counterpart_interaction: "Zarówno [diarch|El], jak i [liege|El] może publicznie zaatakować swojego odpowiednika, korzystając z następujących metod:\n$SPACE4$$EFFECT_LIST_BULLET$Zdobycie [Concept('influence', 'wpływu')|E]\n$SPACE4$$EFFECT_LIST_BULLET$Zrujnowanie [Concept('opinion', 'opinii')|E] na temat odpowiednika\n$SPACE4$$EFFECT_LIST_BULLET$Wzniecenie problemów w [Concept('realm', 'państwie')|E]\n$SPACE4$$EFFECT_LIST_BULLET$Wyrównanie do poziomu [Concept('diplomacy', 'dyplomacji')|E] lub [Concept('intrigue', 'intrygi')|E] odpowiednika"
 unlock_diarch_requests_military_expedition_interaction: "[diarch|E] może domagać się od swojego [Concept('liege', 'seniora')|E] [casus_belli|El] „[imperial_expedition_cb|E]”, aby w ten sposób zdobyć ziemie, które może zatrzymać lub przekazać za wysoką wartość [Concept('influence', 'wpływu')|E]"
 unlock_diarch_demand_kingdom_interaction: "[diarchs|E] na [Concept('title_tier', 'poziomie')|E] [Concept('duchy', 'księstwa')|E] mogą domagać się własnego [Concept('governorship', 'gubernatorstwa')|E] na poziomie [Concept('kingdom', 'królestwa')|E]"
 diarch_more_efficient_administrative_emperor_promotion_candidate_massive: "Promowanie [Concept('co_emperors', 'współcesarzy')|E] na urzędy [Concept('administrative', 'administracyjne')|E] jest o [EmptyScope.ScriptValue('diarch_more_efficient_administrative_emperor_promotion_candidate_massive_value')|%=+0] skuteczniejsze"
 diarch_more_efficient_administrative_emperor_promotion_candidate_major: "Promowanie [Concept('co_emperors', 'współcesarzy')|E] na urzędy [Concept('administrative', 'administracyjne')|E] jest o [EmptyScope.ScriptValue('diarch_more_efficient_administrative_emperor_promotion_candidate_major_value')|%=+0] skuteczniejsze"
 diarch_more_efficient_administrative_emperor_promotion_candidate_medium: "Promowanie [Concept('co_emperors', 'współcesarzy')|E] na urzędy [Concept('administrative', 'administracyjne')|E] jest o [EmptyScope.ScriptValue('diarch_more_efficient_administrative_emperor_promotion_candidate_medium_value')|%=+0] skuteczniejsze"
 diarch_more_efficient_administrative_emperor_promotion_candidate_mild: "Promowanie [Concept('co_emperors', 'współcesarzy')|E] na urzędy [Concept('administrative', 'administracyjne')|E] jest o [EmptyScope.ScriptValue('diarch_more_efficient_administrative_emperor_promotion_candidate_mild_value')|%=+0] skuteczniejsze"
 diarch_more_efficient_administrative_emperor_promotion_candidate_massive.tt.interaction_explanation: "#WEAK $diarch_more_efficient_administrative_emperor_promotion_candidate_massive$ ze względu na bieżące [scales_of_power|El]#!"
 diarch_more_efficient_administrative_emperor_promotion_candidate_major.tt.interaction_explanation: "#WEAK $diarch_more_efficient_administrative_emperor_promotion_candidate_major$ ze względu na bieżące [scales_of_power|El]#!"
 diarch_more_efficient_administrative_emperor_promotion_candidate_medium.tt.interaction_explanation: "#WEAK $diarch_more_efficient_administrative_emperor_promotion_candidate_medium$ ze względu na bieżące [scales_of_power|El]#!"
 diarch_more_efficient_administrative_emperor_promotion_candidate_mild.tt.interaction_explanation: "#WEAK $diarch_more_efficient_administrative_emperor_promotion_candidate_mild$ ze względu na bieżące [scales_of_power|El]#!"
 diarch_children_born_in_purple_if_culturally_appropriate: "Jeśli pozwala na to [culture_tradition|El] – i kontrolowane jest miejsce o nazwie [GetTitleByKey('b_constantinople').GetNameNoTier] – [children|El] [Concept('diarch', 'koregenta')|E] urodzą się z [Concept('trait', 'cechą')|E] [GetTrait('born_in_the_purple').GetName( GetNullCharacter )|l]"
 diarch_can_appoint_self_co_emperor: "[SelectLocalization( IsAdministrativeRuler( GetPlayer ), '', '#WEAK Nieaktywne w przypadku tego rządu: ')][regents|El] mogą mianować siebie samych na [Concept('co_emperor', 'współcesarza')|E][SelectLocalization( IsAdministrativeRuler( GetPlayer ), '', '#!')]"
 ##################################################
 ##Succession Loc
 #Categories.
 diarch_succession_score.category.familial_ties: "Więzy rodzinne"
 diarch_succession_score.category.personal_ties: "Osobiste powiązania"
 diarch_succession_score.category.societal_bonds: "Więzi społeczne"
 diarch_succession_score.category.suitable_servant: "Odpowiedni sługa"
 diarch_succession_score.category.royal_court: "Dwór monarszy"
 diarch_succession_score.category.competence: "Kompetencje"
 diarch_succession_score.category.nepotism: "Nepotyzm"
 diarch_succession_score.category.traits.noble_ambitions: "Cechy #WEAK (ambitny szlachcic)#!"
 diarch_succession_score.category.traits.civil_service: "Cechy #WEAK (urzędnik państwowy)#!"
 diarch_succession_score.category.circumstances: "Okoliczności"
 #Diarchy Specific
 diarch_succession_score.diarchy_specific.regency.close_or_extended_family_of_invalid.ruler: "[extended_family|E] [landed|El] osoby, którą jest [ROOT.Char.GetLiege.Custom('GetChildInvalid')]"
 diarch_succession_score.diarchy_specific.regency.close_or_extended_family_of_invalid.non_ruler: "[extended_family|E] [unlanded|El] osoby, którą jest [ROOT.Char.GetLiege.Custom('GetChildInvalid')]"
 #Familial Ties
 diarch_succession_score.familial_ties.your_parent: "Członek rodziny: [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] (rodzic)"
 diarch_succession_score.familial_ties.your_child: "Członek rodziny: [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] ([child|El])"
 diarch_succession_score.familial_ties.your_sibling: "Członek rodziny: [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] ([ROOT.Char.Custom('SisterBrother')|l])"
 diarch_succession_score.familial_ties.your_grandparent: "Członek rodziny: [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] ([ROOT.Char.GetMotherFather|l] jednego z rodziców)"
 diarch_succession_score.familial_ties.your_grandchild: "Członek rodziny: [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] (wnuczę)"
 diarch_succession_score.familial_ties.your_auntuncle: "Członek rodziny: [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] ([ROOT.Char.Custom('GetAuntUncle')|l])"
 diarch_succession_score.familial_ties.your_nibling: "Członek rodziny: [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] ([ROOT.Char.Custom('GetNieceNephew')|l])"
 diarch_succession_score.familial_ties.your_cousin: "Członek rodziny: [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] (kuzynostwo)"
 diarch_succession_score.familial_ties.your_greatgrandparent: "Członek rodziny: [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] ([ROOT.Char.GetMotherFather|l])"
 diarch_succession_score.familial_ties.yourgreat_grandchild: "Członek rodziny: [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] (prawnuczę)"
 diarch_succession_score.familial_ties.undignified: "Nie zasługuje na [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] szacunek i miano"
 diarch_succession_score.familial_ties.undignified.close_family: "$diarch_succession_score.familial_ties.undignified$ członka [Concept('close_family', 'bliskiej rodziny')|E]"
 diarch_succession_score.familial_ties.undignified.extended_family: "$diarch_succession_score.familial_ties.undignified$ członka [Concept('extended_family', 'dalszej rodziny')|E]"
 diarch_succession_score.familial_ties.undignified.house: "$diarch_succession_score.familial_ties.undignified$ członka [Concept('house', 'rodu')|E]"
 diarch_succession_score.familial_ties.undignified.dynasty: "$diarch_succession_score.familial_ties.undignified$ członka [Concept('dynasty', 'dynastii')|E]"
 #Personal Ties
 diarch_succession_score.personal_ties.your_heir: "[heir|E] ([ROOT.Char.GetLiege.Custom('GetLiegeYour')|l])"
 diarch_succession_score.personal_ties.your_spouse: "[spouse|E] ([ROOT.Char.GetLiege.Custom('GetLiegeYour')|l])"
 diarch_succession_score.personal_ties.your_ward: "[guardian|E] ([ROOT.Char.GetLiege.Custom('GetLiegeYour')|l])"
 diarch_succession_score.personal_ties.your_councillor: "[councillor|E] ([ROOT.Char.GetLiege.Custom('GetLiegeYour')|l])"
 diarch_succession_score.personal_ties.your_powerful_vassal: "[powerful_vassal|E] ([ROOT.Char.GetLiege.Custom('GetLiegeYour')|l])"
 diarch_succession_score.personal_ties.likes_you: "Pozytywna [opinion|El] na [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] temat"
 diarch_succession_score.personal_ties.your_positive_relation: "Stan [Concept('relationship', 'szczególnej relacji')|E] ([ROOT.Char.GetLiege.Custom('GetLiegeYour')|l]) jest pozytywny"
 diarch_succession_score.personal_ties.your_nemesis: "[nemesis|E] ([ROOT.Char.GetLiege.Custom('GetLiegeYour')|l])"
 diarch_succession_score.personal_ties.your_negative_relation: "Stan [Concept('relationship', 'szczególnej relacji')|E] ([ROOT.Char.GetLiege.Custom('GetLiegeYour')|l]) jest negatywny"
 diarch_succession_score.personal_ties.dislikes_you: "Negatywna [opinion|El] na [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] temat"
 #Societal Bonds
 diarch_succession_score.societal_bonds.your_house: "[house|E] ([ROOT.Char.GetLiege.Custom('GetLiegeYour')|l])"
 diarch_succession_score.societal_bonds.your_dynasty: "[ROOT.Char.GetLiege.Custom('GetLiegeYour')|U] "
 diarch_succession_score.societal_bonds.your_faith: "[faith|E] (dogmat – [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l])"
 diarch_succession_score.societal_bonds.your_culture: "[culture|E] (zbiór przekonań – [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l])"
 #Suitable Servant
 diarch_succession_score.suitable_servant.tax_collector: "Jest [Concept('tax_collector', 'poborcą podatkowym')|E]"
 diarch_succession_score.suitable_servant.lowborn: "Jest osobą [Concept('lowborn', 'nisko urodzoną')|E]"
 diarch_succession_score.suitable_servant.landless: "[character|E] bez ziemi"
 diarch_succession_score.suitable_servant.landed: "Na to stanowisko preferowane są osoby bez ziemi"
 diarch_succession_score.suitable_servant.shares_liege_culture: "Wspólny punkt zaczepienia ([ROOT.Char.GetLiege.Custom('GetLiegeYour')|l]) to [culture|El]"
 diarch_succession_score.suitable_servant.shares_liege_faith: "Wspólny punkt zaczepienia ([ROOT.Char.GetLiege.Custom('GetLiegeYour')|l]) to [faith|El]"
 diarch_succession_score.suitable_servant.shares_liege_hof: "Wspólny punkt zaczepienia ([ROOT.Char.GetLiege.Custom('GetLiegeYour')|l]) to [head_of_faith|El]"
 diarch_succession_score.suitable_servant.diff_faith_considers_liege_righteous: "Ocenia [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] pogląd na [Concept('faith', 'wiarę')|E] następująco: $hostility_righteous_tooltippable$"
 diarch_succession_score.suitable_servant.diff_faith_considers_liege_astray: "Ocenia [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] pogląd na [Concept('faith', 'wiarę')|E] następująco: $hostility_astray_tooltippable$"
 diarch_succession_score.suitable_servant.diff_culture_acceptance: "[cultural_acceptance|E]"
 diarch_succession_score.suitable_servant.diff_faith_considers_liege_hostile: "Ocenia [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] pogląd na [Concept('faith', 'wiarę')|E] następująco: $hostility_hostile_tooltippable$"
 diarch_succession_score.suitable_servant.diff_faith_considers_liege_evil: "Ocenia [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] pogląd na [Concept('faith', 'wiarę')|E] następująco: $hostility_evil_tooltippable$"
 #Nepotism
 diarch_succession_score.nepotism.primary_spouse.friend: "[friends|E], których ma [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] [primary_spouse|El]"
 diarch_succession_score.nepotism.consort.friend: "[friends|E], których ma [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] małżonek"
 diarch_succession_score.nepotism.primary_spouse.best_friend: "[best_friends|E], których ma [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] [primary_spouse|El]"
 diarch_succession_score.nepotism.consort.best_friend: "[best_friends|E]"
 diarch_succession_score.nepotism.primary_spouse.rival: "[rivals|E], których ma [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] [primary_spouse|El]"
 diarch_succession_score.nepotism.consort.rival: "[rivals|E], których ma [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] [primary_spouse|El]"
 diarch_succession_score.nepotism.primary_spouse.nemesis: "[nemeses|E], których ma [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] [primary_spouse|El]"
 diarch_succession_score.nepotism.consort.nemesis: "[nemeses|E], których ma [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] [primary_spouse|El]"
 diarch_succession_score.nepotism.any_consort.shares_minority_culture: "Pomniejsza [culture|El], którą podziela [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] małżonek"
 diarch_succession_score.nepotism.any_consort.shares_minority_faith: "Pomniejsza [faith|El], którą podziela [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] małżonek"
 diarch_succession_score.nepotism.sah_child.friend: "[friends|E] [Concept('child', 'dziecka')|E], którego rodzicem jest [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] [courtier|El]"
 diarch_succession_score.nepotism.sah_child.best_friend: "[best_friends|E] [Concept('child', 'dziecka')|E], którego rodzicem jest [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] [courtier|El]"
 diarch_succession_score.nepotism.sah_child.rival: "[rivals|E] [Concept('child', 'dziecka')|E], którego rodzicem jest [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] [courtier|El]"
 diarch_succession_score.nepotism.sah_child.nemesis: "[nemeses|E] [Concept('child', 'dziecka')|E], którego rodzicem jest [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] [courtier|El]"
 diarch_succession_score.nepotism.sah_child.shares_minority_culture: "Pomniejsza [culture|El], którą podziela [child|El] [Concept('courtier', 'dworzanina')|E]"
 diarch_succession_score.nepotism.sah_child.shares_minority_faith: "Pomniejsza [faith|El], którą podziela [child|El], którego rodzicem jest [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l] [courtier|El]"
 diarch_succession_score.nepotism.incumbent_vizier.close_family: "[close_family|E] [Concept( 'vizier', 'wezyra' )|E]"
 diarch_succession_score.nepotism.incumbent_vizier.extended_family: "[extended_family|E] [Concept( 'vizier', 'wezyra' )|E]"
 diarch_succession_score.nepotism.incumbent_vizier.friend: "Wraz z [Concept('vizier', 'wezyrem')|E] są [Concept('friends', 'przyjaciółmi')|E]"
 diarch_succession_score.nepotism.incumbent_vizier.best_friend: "Wraz z [Concept('vizier', 'wezyrem')|E] są [Concept('best_friends', 'najlepszymi przyjaciółmi')|E]"
 diarch_succession_score.nepotism.incumbent_vizier.rival: "Wraz z [Concept('vizier', 'wezyrem')|E] są [Concept('rivals', 'rywalami')|E]"
 diarch_succession_score.nepotism.incumbent_vizier.nemesis: "Wraz z [Concept('vizier', 'wezyrem')|E] są [Concept('nemeses', 'śmiertelnymi wrogami')|E]"
 diarch_succession_score.nepotism.incumbent_vizier.shares_minority_culture: "Podziela pomniejszą [Concept('culture', 'kulturę')|E] z [Concept('vizier', 'wezyrem')|E]"
 diarch_succession_score.nepotism.incumbent_vizier.shares_minority_faith: "Podziela pomniejszą [Concept('faith', 'wiarę')|E] z [Concept('vizier', 'wezyrem')|E]"
 #Traits
 ## Personality
 diarch_succession_score.traits.ambitious: "Osoba z cechą [GetTrait('ambitious').GetName( ROOT.Char )|l]"
 diarch_succession_score.traits.content: "Osoba z cechą [GetTrait('content').GetName( ROOT.Char )|l]"
 diarch_succession_score.traits.diligent: "Osoba z cechą [GetTrait('diligent').GetName( ROOT.Char )|l]"
 diarch_succession_score.traits.lazy: "Osoba z cechą [GetTrait('lazy').GetName( ROOT.Char )|l]"
 diarch_succession_score.traits.arrogant: "Osoba z cechą [GetTrait('arrogant').GetName( ROOT.Char )|l]"
 diarch_succession_score.traits.humble: "Osoba z cechą [GetTrait('humble').GetName( ROOT.Char )|l]"
 diarch_succession_score.traits.patient: "Osoba z cechą [GetTrait('patient').GetName( ROOT.Char )|l]"
 diarch_succession_score.traits.impatient: "Osoba z cechą [GetTrait('impatient').GetName( ROOT.Char )|l]"
 diarch_succession_score.traits.just: "Osoba z cechą [GetTrait('just').GetName( ROOT.Char )|l]"
 diarch_succession_score.traits.greedy: "Osoba z cechą [GetTrait('greedy').GetName( ROOT.Char )|l]"
 diarch_succession_score.traits.generous: "Osoba z cechą [GetTrait('generous').GetName( ROOT.Char )|l]"
 ## Lifestyle
 diarch_succession_score.traits.diplomat: "Osoba z cechą [GetTrait('diplomat').GetName( ROOT.Char )|l]"
 diarch_succession_score.traits.administrator: "Osoba z cechą [GetTrait('administrator').GetName( ROOT.Char )|l]"
 diarch_succession_score.traits.avaricious: "Osoba z cechą [GetTrait('avaricious').GetName( ROOT.Char )|l]"
 diarch_succession_score.traits.schemer: "Osoba z cechą [GetTrait('schemer').GetName( ROOT.Char )|l]"
 #Royal Court
 diarch_succession_score.royal_court.court_type.diplomacy: "[diplomacy|E] na dworze dyplomatów ma wartość #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.court_type.martial: "[martial|E] na dworze wojowników ma wartość #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.court_type.stewardship: "[stewardship|E] na dworze zarządców ma wartość #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.court_type.intrigue: "[intrigue|E] na dworze intrygantów ma wartość #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.court_type.learning: "[learning|E] na dworze uczonych ma wartość #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.court_type.prowess: "[prowess|E] na dworze plemienników ma wartość #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.speaks_court_language: "Używa [Concept('court_language', 'języka dworu')|E], który jest również [ROOT.Char.GetLiege.Custom('GetLiegeYour')]"
 #Competence
 ## Competence varies per diarchy type, so you'll likely want to make different loc keys referencing different thresholds here.
 diarch_succession_score.competence.vizierate.diplomacy: "[diplomacy|E] #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_competence_baseline_value')])#!"
 diarch_succession_score.competence.vizierate.stewardship: "[stewardship|E] #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_competence_baseline_value')])#!"
 diarch_succession_score.competence.vizierate.intrigue: "[intrigue|E] #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_competence_baseline_value')])#!"
 #Circumstances
 diarch_succession_score.circumstances.cripplingly_ill: "Cierpi na wyniszczającą chorobę"
 diarch_succession_score.circumstances.badly_wounded: "Ma paraliżujące rany"
 diarch_succession_score.circumstances.known_criminal: "Znany [criminal|El]"
 diarch_succession_score.circumstances.very_young: "To osoba zbyt młoda"
 diarch_succession_score.circumstances.stressed_out: "To osoba mocno zestresowana"
 diarch_succession_score.circumstances.illegitimate: "Jest nieślubnym dzieckiem"
 diarch_succession_score.circumstances.mildly_ill: "Cierpi na łagodną chorobę"
 diarch_succession_score.circumstances.mildly_wounded: "Ma niegroźne rany"
 diarch_succession_score.circumstances.not_speak_language: "Nie używa głównego [Concept('language', 'języka')|E], który jest również [ROOT.Char.GetLiege.Custom('GetLiegeYour')]"
 #Disqualifiers
 diarch_succession_score.disqualifiers.neither_vassal_nor_courtier: "Nie jest ani [Concept('vassal', 'wasalem')|E], ani [Concept('courtier', 'dworzaninem')|E], który byłby [ROOT.Char.GetLiege.Custom('GetLiegeYour')]"
 diarch_succession_score.disqualifiers.child: "Jest [Concept( 'child', 'dzieckiem' )|E]"
 diarch_succession_score.disqualifiers.imprisoned: "Jest osobą [Concept('imprisoned', 'więzioną')|E]"
 diarch_succession_score.disqualifiers.incapable_or_infirm: "Ma jedną z następujących cech: [GetTrait('incapable').GetName( ROOT.Char )|l] lub [GetTrait('infirm').GetName( ROOT.Char )|l]"
 diarch_succession_score.disqualifiers.right_gendered_for_liege: "Płeć nie odpowiada wymogom [Concept('faith', 'wiary')|E] [Concept('liege', 'seniora')|E]"
 diarch_succession_score.disqualifiers.count_or_above: "Posiada tytuł wyższy niż [barony|E]"
 ##################################################
 ##Loyalty Loc
 diarch_loyalty_score.regency.opinion_of_you: "[opinion|E] o [ROOT.Char.GetLiege.LocalPlayerString( '#V tobie#!', Concept('liege', '#E seniorze#!') )]"
 diarch_loyalty_score.regency.your_positive_relation: "$diarch_succession_score.personal_ties.your_positive_relation$"
 diarch_loyalty_score.regency.your_negative_relation: "$diarch_succession_score.personal_ties.your_negative_relation$"
 diarch_loyalty_score.regency.lazy: "Osoba z cechą [GetTrait('lazy').GetName( ROOT.Char )|l]"
 diarch_loyalty_score.regency.diligent.positive: "[GetTrait('diligent').GetName( ROOT.Char )] i pozytywna [opinion|El]"
 diarch_loyalty_score.regency.diligent.negative: "[GetTrait('diligent').GetName( ROOT.Char )] i niegatywna [opinion|El]"
 diarch_loyalty_score.regency.craven: "Osoba z cechą [GetTrait('craven').GetName( ROOT.Char )|l]"
 diarch_loyalty_score.regency.honest: "Osoba z cechą [GetTrait('honest').GetName( ROOT.Char )|l]"
 diarch_loyalty_score.regency.deceitful: "Osoba z cechą [GetTrait('deceitful').GetName( ROOT.Char )|l]"
 diarch_loyalty_score.regency.content: "Osoba z cechą [GetTrait('content').GetName( ROOT.Char )|l]"
 diarch_loyalty_score.regency.ambitious: "Osoba z cechą [GetTrait('ambitious').GetName( ROOT.Char )|l]"
 diarch_loyalty_score.regency.arbitrary: "Osoba z cechą [GetTrait('arbitrary').GetName( ROOT.Char )|l]"
 diarch_loyalty_score.regency.just: "Osoba z cechą [GetTrait('just').GetName( ROOT.Char )|l]"
 diarch_loyalty_score.regency.disloyal: "Osoba z cechą [GetTrait('disloyal').GetName( ROOT.Char )|l]"
 diarch_loyalty_score.regency.loyal: "Osoba z cechą [GetTrait('loyal').GetName( ROOT.Char )|l]"
 diarch_loyalty_score.regency.humble: "[GetTrait('humble').GetName( ROOT.Char )|l]"
 diarch_loyalty_score.regency.arrogant: "[GetTrait('arrogant').GetName( ROOT.Char )|l]"
 diarch_loyalty_score.regency.patient: "[GetTrait('patient').GetName( ROOT.Char )|l]"
 diarch_loyalty_score.regency.impatient: "[GetTrait('impatient').GetName( ROOT.Char )|l]"
 diarch_loyalty_score.regency.compassion_for_helpless: "[personality|E] czuje współczucie wobec postaci, którą jest [ROOT.Char.GetLiege.Custom('GetChildInvalid')]"
 diarch_loyalty_score.regency.chief_eunuch: "[GetCourtPositionType('chief_eunuch_court_position').GetName()]"
 diarch_loyalty_score.regency.chief_qadi: "[GetCourtPositionType('chief_qadi_court_position').GetName()]"
 diarch_loyalty_score.regency.tradition_fp2_malleable_subjects: "[culture|E] ma tradycję [GetCultureTradition('tradition_fp2_malleable_subjects').GetName]"
 diarch_loyalty_score.regency.tradition_talent_acquisition: "Jest osobą [Concept('lowborn', 'nisko urodzoną')|E], a [culture|El] ma tradycję „[GetCultureTradition('tradition_talent_acquisition').GetName|l]”"
 diarch_loyalty_score.regency.tradition_astute_diplomats.positive: "[opinion|E] jest pozytywna, a [culture|El] ma tradycję „[GetCultureTradition('tradition_astute_diplomats').GetName|l]”"
 diarch_loyalty_score.regency.tradition_astute_diplomats.negative: "[opinion|E] jest negatywna, a [culture|El] ma tradycję „[GetCultureTradition('tradition_astute_diplomats').GetName|l]”"
 diarch_loyalty_score.regency.tradition_ruling_caste: "[culture|E] [Concept('liege', 'seniora')|E] ma tradycję „[GetCultureTradition('tradition_ruling_caste').GetName|l]”"
 diarch_loyalty_score.regency.tradition_family_entrepreneurship: "Jest osobą z [Concept('extended_family', 'dalszej rodziny')|E], a [culture|El] ma tradycję „[GetCultureTradition('tradition_family_entrepreneurship').GetName|l]”"
 diarch_loyalty_score.regency.tradition_hereditary_hierarchy: "[culture|E] ma tradycję [GetCultureTradition('tradition_hereditary_hierarchy').GetName]"
 diarch_loyalty_score.regency.tradition_tribe_unity: "Ten sam [house|El], a [culture|El] ma tradycję „[GetCultureTradition('tradition_tribe_unity').GetName|l]”"
 diarch_loyalty_score.regency.tradition_strong_kinship: "Ten sam [house|El], a [culture|El] ma tradycję „[GetCultureTradition('tradition_strong_kinship').GetName|l]”"
 diarch_loyalty_score.regency.tradition_chivalry.gain: "[liege|E] to osoba honorowa, a [culture|El] ma tradycję „[GetCultureTradition('tradition_chivalry').GetName|l]”"
 diarch_loyalty_score.regency.tradition_chivalry.loss: "[liege|E] to osoba niehonorowa, a [culture|El] ma tradycję „[GetCultureTradition('tradition_chivalry').GetName|l]”"
 diarch_loyalty_score.regency.tradition_philosopher_culture: "[learning|E] i [education|El], a [culture|El] ma tradycję „[GetCultureTradition('tradition_philosopher_culture').GetName|l]”"
 diarch_loyalty_score.regency.tradition_vegetarianism: "Obrzydliwy gust kulinarny ([ROOT.Char.GetLiege.Custom('GetLiegeYour')])"
 diarch_loyalty_score.regency.tradition_eye_for_an_eye: "[culture|E] ma tradycję [GetCultureTradition('tradition_eye_for_an_eye').GetName]"
 diarch_loyalty_score.regency.tradition_byzantine_succession: "[culture|E] ma tradycję [GetCultureTradition('tradition_byzantine_succession').GetName]"
 diarch_loyalty_score.regency.tradition_warrior_culture: "[education|E] nieoparta o etos [Concept('martial', 'walki')|E] ([ROOT.Char.GetLiege.Custom('GetLiegeYour')]), a [culture|El] ma tradycję „[GetCultureTradition('tradition_warrior_culture').GetName|l]”"
 diarch_loyalty_score.regency.tradition_practiced_pirates: "[culture|E] ma tradycję [GetCultureTradition('tradition_practiced_pirates').GetName]"
 diarch_loyalty_score.regency.tradition_faith_bound: "Inna [faith|E], a [culture|El] ma tradycję „[GetCultureTradition('tradition_faith_bound').GetName|l]”"
 diarch_loyalty_score.regency.tyranny: "Rząd [Concept('tyranny', 'tyranii')|E] ([ROOT.Char.GetLiege.Custom('GetLiegeYour')])"
 diarch_loyalty_score.regency.temporary_regency.dread: "[dreadful|E] [liege|El] wkrótce powróci"
 diarch_loyalty_score.regency.override_negated: "Minimalna [opinion|El] osłabia najwyższą lojalność"
 diarch_loyalty_score.regency.loyalty_hook.self: "[hook|E] dotyczący lojalności"
 diarch_loyalty_score.regency.loyalty_hook.predecessor: "[hook|E] dotyczący lojalności wobec poprzednika"
 diarch_loyalty_score.regency.ai_honour: "[personality|E] jest niezwykle honorowa"
 diarch_loyalty_score_power_at_home_perk: "[GetPerk('power_at_home_perk').GetName( GetNullCharacter )]"
 diarch_loyalty_score.co_rule.co_emperorship.dread: "[dreadful|E]"
 diarch_loyalty_score.co_rulership.designated_heir: "[designated_heir|E]"
 diarch_loyalty_score.co_rulership.years_waiting: "Lata oczekiwania"
 diarch_loyalty_score.co_rulership.age_difference: "Czas sprzyja młodym"
 diarch_loyalty_score.co_rulership.just_die_already: "#BOL Umrzyj wreszcie#!"
 diarch_loyalty_score.co_rulership.your_time_is_up: "#EMP Czas ([ROOT.Char.GetLiege.Custom('GetLiegeYour')|l]) się kończy#!"
 diarch_loyalty_score.co_rulership.you_are_too_fit: "Mimo starości, [ROOT.Char.GetLiege.GetWomanMan] jest w zbyt dobrym [Concept('health', 'zdrowiu')|E]"
 diarch_loyalty_score.co_rulership.showing_no_signs_of_slowing: "Wiek ([ROOT.Char.GetLiege.Custom('GetLiegeYou')|l]) nie daje się we znaki"
 raise_diarch_opinion_with_loyalty_update_effect.tt.self_interested.overflow_edgecase: "[diarch_loyalty|E] twojego [Concept('diarch', 'koregenta')|E] prawdopodobnie pozostanie sytuacyjna"
 raise_diarch_opinion_with_loyalty_update_effect.tt.self_interested.remains_static: "[diarch_loyalty|E] twojego [Concept('diarch', 'koregenta')|E] pozostanie interesowna"
 raise_diarch_opinion_with_loyalty_update_effect.tt.self_interested.to_selfless: "[diarch_loyalty|E] twojego [Concept('diarch', 'koregenta')|E] zmieni status z sytuacyjnej na bezinteresowną"
 raise_diarch_opinion_with_loyalty_update_effect.tt.self_interested.to_situational: "[diarch_loyalty|E] twojego [Concept('diarch', 'koregenta')|E] zmieni status z interesownej na sytuacyjną"
 raise_diarch_opinion_with_loyalty_update_effect.tt.situational.to_selfless: "[diarch_loyalty|E] twojego [Concept('diarch', 'koregenta')|E] zmieni status z sytuacyjnej na bezinteresowną"
 raise_diarch_opinion_with_loyalty_update_effect.tt.situational.to_self_interested: "[diarch_loyalty|E] twojego [Concept('diarch', 'koregenta')|E] zmieni status z sytuacyjnej na interesowną"
 raise_diarch_opinion_with_loyalty_update_effect.tt.situational.remains_static: "[diarch_loyalty|E] twojego [Concept('diarch', 'koregenta')|E] pozostanie sytuacyjna"
 raise_diarch_opinion_with_loyalty_update_effect.tt.selfless.overflow_edgecase: "[diarch_loyalty|E] twojego [Concept('diarch', 'koregenta')|E] prawdopodobnie pozostanie bezinteresowna"
 raise_diarch_opinion_with_loyalty_update_effect.tt.selfless.remains_static: "[diarch_loyalty|E] twojego [Concept('diarch', 'koregenta')|E] pozostanie bezinteresowna"
 raise_diarch_opinion_with_loyalty_update_effect.tt.selfless.to_self_interested: "[diarch_loyalty|E] twojego [Concept('diarch', 'koregenta')|E] zmieni status z bezinteresownej na interesowną"
 raise_diarch_opinion_with_loyalty_update_effect.tt.selfless.to_situational: "[diarch_loyalty|E] twojego [Concept('diarch', 'koregenta')|E] zmieni status z bezinteresownej na sytuacyjną"
 ##################################################
 ##Tax Collection
 diarchy_tax_collector_boost.scales_of_power: "[scales_of_power|E]"
 diarchy_tax_collector_boost.diarch_aptitude.t1: "#V +#![EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t1_value')|%V0] [Concept('aptitude', 'kompetencji')|E] [Concept('diarch', 'koregenta')|E]"
 diarchy_tax_collector_boost.diarch_aptitude.t2: "#V +#![EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t2_value')|%V0] [Concept('aptitude', 'kompetencji')|E] [Concept('diarch', 'koregenta')|E]"
 diarchy_tax_collector_boost.diarch_aptitude.t3: "#V +#![EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t3_value')|%V0] [Concept('aptitude', 'kompetencji')|E] [Concept('diarch', 'koregenta')|E]"
 diarchy_tax_collector_boost.diarch_aptitude.t4: "#V +#![EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t4_value')|%V0] [Concept('aptitude', 'kompetencji')|E] [Concept('diarch', 'koregenta')|E]"
 ##################################################
 ##Schemes
 overthrow_regent_scheme_interaction_actor_stress_effect.tt.loyal.remove_loyal: "#WEAK [GetTrait('loyal').GetName(actor)]: [recipient.GetTitledFirstName] dobrze służy osobie, którą jest [actor.GetLiege.GetTitledFirstName] i musi zostać#!"
 overthrow_regent_scheme_interaction_actor_stress_effect.tt.loyal.remove_disloyal: "#WEAK [GetTrait('loyal').GetName(actor)]:[recipient.GetTitledFirstName] zachowuje się niczym zbój i musi opuścić królestwo dla ogólnego dobra#!"
 overthrow_regent_scheme_interaction_actor_stress_effect.tt.disloyal.remove_loyal: "#WEAK [GetTrait('disloyal').GetName(actor)]: [recipient.GetTitledFirstName] to pochlebca i musi odejść#!"
 overthrow_regent_scheme_interaction.tt.cannot_release: "Nie można podjąć żadnych działań, które spowodowałyby zwolnienie byłego [Concept('regent', 'regenta')|E], jeśli urząd sprawuje obecny regent"
 ##################################################
 ##Vizier Candidates
 vizier_candidate_has_studied_recently_modifier: "Intensywna nauka"
 vizier_candidate_has_studied_recently_modifier_desc: "Ta postać podjęła niedawno ogromny wysiłek, aby poprawić swoje umiejętności na stanowisku urzędnika państwowego. Wyniki mówią same za siebie – podobnie jak koszty."
 vizier_extravagance_treasure_title: "Skarby"
 vizier_extravagance_activities_title: "Aktywności"
 vizier_extravagance_property_title: "Włości"
 vizier_extravagance_charity_title: "Darowizny"
 vizier_extravagance_t1_title: "Znacząca"
 vizier_extravagance_t1_treasure_modifier: "Znaczące skarby"
 vizier_extravagance_t1_treasure_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T1_Treasure')]"
 vizier_extravagance_t1_treasure_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T1_Treasure')]"
 vizier_extravagance_t1_activities_modifier: "Znaczące aktywności"
 vizier_extravagance_t1_activities_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T1_Activities')]"
 vizier_extravagance_t1_activities_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T1_Activities')]"
 vizier_extravagance_t1_property_modifier: "Znaczące włości"
 vizier_extravagance_t1_property_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T1_Property')]"
 vizier_extravagance_t1_property_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T1_Property')]"
 vizier_extravagance_t1_charity_modifier: "Znaczące darowizny"
 vizier_extravagance_t1_charity_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T1_Charity')]"
 vizier_extravagance_t1_charity_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T1_Charity')]"
 vizier_extravagance_t2_title: "Imponująca"
 vizier_extravagance_t2_treasure_modifier: "Imponujące skarby"
 vizier_extravagance_t2_treasure_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T2_Treasure')]"
 vizier_extravagance_t2_treasure_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T2_Treasure')]"
 vizier_extravagance_t2_activities_modifier: "Imponujące aktywności"
 vizier_extravagance_t2_activities_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T2_Activities')]"
 vizier_extravagance_t2_activities_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T2_Activities')]"
 vizier_extravagance_t2_property_modifier: "Imponujące włości"
 vizier_extravagance_t2_property_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T2_Property')]"
 vizier_extravagance_t2_property_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T2_Property')]"
 vizier_extravagance_t2_charity_modifier: "Imponujące darowizny"
 vizier_extravagance_t2_charity_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T2_Charity')]"
 vizier_extravagance_t2_charity_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T2_Charity')]"
 vizier_extravagance_t3_title: "Słynna"
 vizier_extravagance_t3_treasure_modifier: "Słynne skarby"
 vizier_extravagance_t3_treasure_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T3_Treasure')]"
 vizier_extravagance_t3_treasure_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T3_Treasure')]"
 vizier_extravagance_t3_activities_modifier: "Słynne aktywności"
 vizier_extravagance_t3_activities_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T3_Activities')]"
 vizier_extravagance_t3_activities_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T3_Activities')]"
 vizier_extravagance_t3_property_modifier: "Słynne włości"
 vizier_extravagance_t3_property_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T3_Property')]"
 vizier_extravagance_t3_property_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T3_Property')]"
 vizier_extravagance_t3_charity_modifier: "Słynne darowizny"
 vizier_extravagance_t3_charity_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T3_Charity')]"
 vizier_extravagance_t3_charity_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T3_Charity')]"
 vizier_extravagance_t4_title: "Wybitna"
 vizier_extravagance_t4_treasure_modifier: "Wybitne skarby"
 vizier_extravagance_t4_treasure_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T4_Treasure')]"
 vizier_extravagance_t4_treasure_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T4_Treasure')]"
 vizier_extravagance_t4_activities_modifier: "Wybitne aktywności"
 vizier_extravagance_t4_activities_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T4_Activities')]"
 vizier_extravagance_t4_activities_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T4_Activities')]"
 vizier_extravagance_t4_property_modifier: "Wybitne włości"
 vizier_extravagance_t4_property_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T4_Property')]"
 vizier_extravagance_t4_property_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T4_Property')]"
 vizier_extravagance_t4_charity_modifier: "Wybitne darowizny"
 vizier_extravagance_t4_charity_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T4_Charity')]"
 vizier_extravagance_t4_charity_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T4_Charity')]"
 viz_extravagance.t1.treasure.hankerchiefs: "Ta postać zużywa niezliczoną liczbę chusteczek lnianych – dziesięć dziennie w lecie, a mimo to wyrzuca każdą z nich po użyciu."
 viz_extravagance.t1.treasure.cosmetics: "Ta postać z pewnością ma dostęp do niezwykle dużego magazynu doskonałych perfum, maści i kosmetyków jak na kogoś o jej pozycji."
 viz_extravagance.t1.treasure.jewellery: "Tej postaci nigdy nie brakuje świecidełek, którymi może się ozdobić; jej twarz i [ROOT.Char.GetDiarchy.GetDiarch.Custom('HandHands')] zawsze lśnią blaskiem złota, srebra i drogocennych kamieni szlachetnych."
 viz_extravagance.t1.treasure.furniture: "Meble tej postaci zawsze są wykonane z najlepszych importowanych gatunków drewna i kruszców z zagranicy – wymienianych tak często, jak pozwala na to moda, podyktowana dobrym gustem."
 viz_extravagance.t1.treasure.clothing: "Garderoba tej postaci to niemal worek bez dna – pełno tu eleganckich ubiorów zgodnych z najnowszymi trendami, a także mnóstwo elementów do tworzenia własnych trendów"
 viz_extravagance.t1.treasure.hats: "Ta postać rzadko nosi ten sam kapelusz dłużej niż tydzień lub dwa. W końcu po co się ograniczać, skoro każdego roku pojawia się ogrom nowych i wyższych wariantów?"
 viz_extravagance.t1.treasure.relics: "Postać ta jest znana z posiadania niewielkiej, ale zacnej kolekcji świętych relikwii."
 viz_extravagance.t1.treasure.drugs: "Szafki tej postaci skrywają bogatą kolekcję egzotycznych leków, napojów i płynów – wiele z nich należy do grupy substancji, które w miejscu znanym jako [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] są rzadkością."
 viz_extravagance.t1.treasure.game_pieces: "Ta postać ma kopię każdej gry planszowej znanej w tym zakątku świata; elementy gier wyrzeźbiono z najróżniejszych materiałów – od kamieni szlachetnych aż po kości legendarnych bestii."
 viz_extravagance.t1.treasure.hourglasses: "Ta postać jest w posiadaniu jednych z najbardziej precyzyjnych klepsydr na świecie – dla urzędnika państwowego nie ma chyba bardziej luksusowego narzędzia."
 viz_extravagance.t1.activities.parades: "Ta postać uwielbia organizować parady, podczas których rozdaje się potrzebującym monety i jedzenie – zawsze na jej własny koszt i w jej własnym imieniu."
 viz_extravagance.t1.activities.festivals: "Ta postać lubi udostępniać ogrody i dolne sale swoich prywatnych rezydencji na małe uroczystości, pozwalając zwykłym ludziom choć przez chwilę poczuć szlachetny smak przepychu."
 viz_extravagance.t1.activities.auctions: "Ta postać regularnie organizuje aukcje charytatywne, na których sprzedaje część zgromadzonych skarbów. Zebrane pieniądze trafiają do najuboższych w królestwie."
 viz_extravagance.t1.activities.feasts: "Ta postać lubi regularnie gościć miejscową szlachtę na prywatnych ucztach. Krążą pogłoski, że niektórzy za zaproszenie płacą przelaną krwią."
 viz_extravagance.t1.activities.board_game_tourneys: "Ta postać uwielbia organizować dla wyższych sfer turnieje gier planszowych, podczas których możni z miejsca o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] mają okazję ogrywać ich najnowsze wersje."
 viz_extravagance.t1.activities.pigeon_racing: "Postać ta przejawia nieco żenującą fascynację wyścigami gołębi; posiada nawet własny spory gołębnik."
 viz_extravagance.t1.activities.orgies: "Wiadomo, że postać ta organizuje #EMP dyskretne#! spotkania z mieszkańcami lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] o nieco… rozwiązłym trybie życia."
 viz_extravagance.t1.activities.feasts.weekly: "Ta postać uwielbia organizować cotygodniowe ogromne bankiety. Pomniejsza szlachta z miejsca o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] polega na nich w kwestii wyżywienia."
 viz_extravagance.t1.activities.exhibitions: "Postać ta przejawia zamiłowanie do sztuki i działa zarówno jako jej patron, jak również organizator wystaw, czasami nawet dla najskromniejszych członków społeczeństwa."
 viz_extravagance.t1.activities.feasts.commoners: "Ta postać lubi regularnie organizować obfite uczty, ale stara się zapraszać na nie jedynie najznamienitszych obywateli miejsca o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], nie bacząc na ich status społeczny."
 viz_extravagance.t1.property.townhouse: "Ta postać mieszka w bogato wyposażonym, choć odpowiednio skromnym miejskim domku w lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t1.property.minor_businesses: "Postać ta prowadzi liczne i różnorodne biznesy – od małych warsztatów aż po pomniejsze gildie i posiadłości na terenie całej stolicy."
 viz_extravagance.t1.property.small_arena: "Ta postać jest właścicielem małej prywatnej areny do wyścigów konnych. Hazard jest tu oczywiście drobną poboczną korzyścią…"
 viz_extravagance.t1.property.manse: "Ta postać posiada prywatną rezydencję tuż za murami lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], która jest położona wystarczająco daleko skupisk ludzkich, by zapewnić dyskrecję, ale też odpowiednio blisko, aby zachować wygodę."
 viz_extravagance.t1.property.toll_road: "Ta postać jest jedynym właścicielem szczególnie dochodowej płatnej drogi prowadzącej do lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]. Sposób, w jaki weszła ona w posiadanie tego odcinka oraz dzień ustanowienia opłat pozostają przedmiotem wielu spekulacji."
 viz_extravagance.t1.property.agent_network: "Ta postać utrzymuje na terenie państwa sieć agentów monitorujących i dbających o interesy biznesowe nawet w najbardziej oddalonych placówkach."
 viz_extravagance.t1.property.rooftop_garden: "Ta postać płaci za utrzymanie rozległego wiszącego ogrodu w lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]… ku wielkiemu zdumieniu ludzi mieszkających poniżej."
 viz_extravagance.t1.property.market_officials_on_payroll: "Ta postać ma w kieszeni każdego inspektora i urzędnika celnego jednego z kluczowych targowisk stolicy – wszystko oczywiście po to, aby zachować integralność państwa."
 viz_extravagance.t1.property.hostel: "Ta postać jest właścicielem taniego hostelu w lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], celowo przeznaczonego dla najbiedniejszych i najmniej uprzywilejowanych członków społeczeństwa."
 viz_extravagance.t1.property.gangers: "Ta postać #EMP rzekomo#! opłaca jeden z największych gangów grasujących w lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]. Nikt nie wie, dlaczego porządny urzędnik państwowy współpracuje z bandą okrutnych bandytów."
 viz_extravagance.t1.charity.orphans: "Ta postać płaci publiczne świadczenia, aby móc każdego roku przyjmować i kształcić określoną liczbę sierot. Młodzież taka otrzymuje odpowiednie wykształcenie, wyżywienie i zakwaterowanie oraz jest uczona etyki aż do osiągnięcia pełnoletności."
 viz_extravagance.t1.charity.building_repair: "Ta postać wpłaca kwoty na niewielki fundusz dla obywateli stolicy, których budynki uległy zniszczeniu – dotacja przyznawana jest ofiarom, które nie są w stanie pokryć napraw z własnej kieszeni."
 viz_extravagance.t1.charity.feasts.religious: "Ta postać dofinansowuje szereg dorocznych wydarzeń religijnych dla prostych mieszkańców lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t1.charity.widowers: "Ta postać wypłaca stypendia niektórym ubogim wdowcom ze stolicy."
 viz_extravagance.t1.charity.widows: "Ta postać wypłaca stypendia niektórym ubogim wdowom ze stolicy."
 viz_extravagance.t1.charity.beggars: "Ta postać wpłaca kwoty na fundusz zapewniający wyżywienie i odzież żebrakom i biedocie w lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] – jest to niezbędne źródło utrzymania dla społecznego marginesu państwa."
 viz_extravagance.t1.charity.awkward_children: "Ta postać finansuje akcję zakupu zapasowych dzbanków na wodę dla małych dzieci, które rozbiją swoje w trakcie porannego marszu po wodę. W ten sposób nikt z domowników dzieci nie wie o ich małych wypadkach."
 viz_extravagance.t1.charity.civil_service.guard: "Ta postać opłaca utrzymanie małego posterunku strażniczego i dyżurnego wartownika przed jednym z ważniejszych budynków administracyjnych w lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t1.charity.birds: "Ta postać opłaca regularne wysiewanie nasion dla ptaków w określonych alejkach stolicy – wszakże tylko barbarzyńca pozwala zwierzętom cierpieć i głodować."
 viz_extravagance.t1.charity.monastery: "Ta postać opłaciła założenie odizolowanej społeczności religijnej żyjącej z dala od grzechów codziennego życia, a także zapewnia jej utrzymanie."
 viz_extravagance.t1.charity.judges: "Ta postać płaci niektórym zawodowym sędziom, aby poświęcali więcej czasu na rozpatrywanie spraw i doglądanie życia na wyznaczonych terytoriach."
 viz_extravagance.t1.charity.kitchens: "Ta postać opłaca szereg małych kuchni, w których bezpłatnie karmi się wdzięcznych biedaków zamieszkujących lokalizację o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t2.treasure.cabinet_of_curiosities: "Ta postać ma komnatę poświęconą egzotycznym dziwactwom i niecodziennym przedmiotom z dalekich krajów. Choć pomieszczenie to nie ma praktycznego zastosowania, jest #EMP uwielbiane#! przez gości."
 viz_extravagance.t2.treasure.gems: "Ta postać, jak głosi plotka, posiada całe worki drogocennych kamieni. Nieliczni, którym dane było ujrzeć tę kolekcję, twierdzą, że każdy worek jest poświęcony innej grupie tych szlachetnych błyskotek."
 viz_extravagance.t2.treasure.sculpture: "Postać ta jest wielkim miłośnikiem sztuki, a w jej rezydencjach często można natrafić na posągi odlane z metali szlachetnych lub wyciosane z najbardziej błyszczących drogich kamieni."
 viz_extravagance.t2.treasure.decorative_martial_gear: "Ta postać lubi dekoracyjną broń i zbroje, a jej rezydencje wypełniają niepraktyczne i bogato zdobione akcesoria wojskowe – od złotych mieczy po inkrustowane klejnotami tarcze."
 viz_extravagance.t2.treasure.bezoar_cutlery: "Ta postać jest właścicielem zestawu niezwykle drogich sztućców z bezoaru: te tajemne kamienie rzekomo spowalniają, neutralizują, a nawet odwracają efekty nawet najgroźniejszych trucizn, co czyni te utensylia niezwykle stylowymi #EMP oraz#! praktycznymi narzędziami."
 #Narrator's note: bezoars do not, in fact, stop poison. Le big RIP.
 viz_extravagance.t2.treasure.fly_stones: "Ta postać posiada małą kolekcję kamieni na muchy – mistycznych głazów, które w niewielkim promieniu od siebie rzekomo skutecznie odstraszają muchy, komary i inne brzęczące szkodniki. To niezwykle cenione ozdoby każdego stołu."
 #Narrator's note: fly stones are sadly fictional.
 viz_extravagance.t2.treasure.indexed_bribes: "Postać ta słynie z drobiazgowo organizowanych i wielopoziomowych łapówek. Ich regularność i przewidywalność jest tak duża, że domniema się, iż postać ta nosi przy sobie przynajmniej sto worków w różnych rozmiarach i odliczoną liczbą monet w środku."
 viz_extravagance.t2.treasure.map_of_world: "Ta postać jest właścicielem mapy całego znanego świata, w którą często wpatruje się, tonąc w myślach. Powiadają, że ten pokrywający całą ścianę kawałek materiału oddaje ułożenie terenu najdokładniej ze wszystkich jemu podobnych w królestwie."
 viz_extravagance.t2.treasure.horse_armour: "Ta postać ma wiele wierzchowców, które rzadko można zobaczyć bez drogocennych ozdób i ekstrawaganckich dekoracji – od zdobiących siodła pereł aż po srebrne wodze. Konie są równie strojne, co ich właściciel."
 viz_extravagance.t2.treasure.crockery: "Ta postać regularnie chwali się, że w kuchni ma jedne z największych garnków i patelni wykonanych z najrzadszych materiałów, jakie można zdobyć w lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t2.activities.feasts.pool: "Ta postać uwielbia organizować uroczystości wokół swego przestronnego i drogiego basenu w jednej z jej prywatnych rezydencji. Zbiornik ten otaczają pluszowe poduszki, kanapy i odgłosy nalewanych napojów."
 viz_extravagance.t2.activities.gambling.horse: "Ta postać jest niezwykle dumna z posiadania całej stajni wyścigowych ogierów. Niemal wszystkie z nich to zagraniczne wierzchowce najczystszej krwi."
 viz_extravagance.t2.activities.feasts.interactive: "Ta postać znana jest z uczt pełnych interaktywnych ciekawostek. Na gości czekają ukryte w jedzeniu woreczki z monetami, leżące w wychodku akty własności ziemskich, na których wystarczy podpisać się imieniem i nazwiskiem, rzeźby, które otwierają się, odsłaniając cenny klejnot pierwszej osobie, która rozwiąże ich tajemnice… i nie tylko."
 viz_extravagance.t2.activities.feasts.long: "Ta postać głęboko wierzy, że przyjęcie trwa dopóki, dopóty nie wyczerpią się zapasy w spiżarni gospodarza – w związku z tym znana jest z uczt, które trwały tydzień, a nawet dłużej."
 viz_extravagance.t2.activities.concerts: "Ta postać ceni muzykę nad inne sztuki, uważając jej brak za najprawdziwszą tragedię. Wiele z jej uroczystości to w zasadzie duże koncerty – czasami wyprawiane z takim rozmachem, że znajdują się miejsca także dla gawiedzi."
 viz_extravagance.t2.activities.theatre: "Ta postać kocha teatr, aktorstwo i ekwilibrystykę jak mało kto. Na jej ucztach pojawia się nieproporcjonalnie duża liczba wędrownych wykonawców, a powszechnym elementem każdej imprezy jest odświeżanie klasycznych dzieł."
 viz_extravagance.t2.activities.poetry: "Ta postać uważa się za wielkiego poetę i kocha wyprawiać wystawne uczty, na których odczytuje swoje dzieła. Zaproszenia są bardzo pożądane, niezależnie od opinii uczestników co do samego repertuaru."
 viz_extravagance.t2.activities.amnesties: "Ta postać głęboko wierzy, że na przebaczenie zasługuje każdy, kto tylko okaże skruchę i naprawi wyrządzone krzywdy, zatem wykorzystuje swoje stanowisko, aby regularnie ułaskawiać przestępców wykazujących należytą skruchę."
 viz_extravagance.t2.activities.animal_baiting: "Ta postać ponad wszystko kocha nękać psy i dzikie stworzenia – zarówno te egzotyczne, jak i znane. Odgłosy chrząknięć, warczenia i wrzasków dzikiej bestii walczącej podczas większości organizowanych uczt sprawiają jej niewysłowioną radość."
 viz_extravagance.t2.activities.sermons: "Ta postać swoją religijnością wykracza poza granice przyzwoitości i dba o to, aby uroczystości były wypełnione kazaniami i obecnością kapłanów, jakimi zwykle okazują się [ROOT.Char.GetDiarchy.GetDiarch.GetFaith.PriestNeuterPlural]."
 viz_extravagance.t2.property.monopoly: "Ta postać może poszczycić się monopolem na sprzedaż określonych artykułów pierwszej potrzeby w obrębie murów lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]. Fakt, że kontroluje ona urząd odpowiedzialny za przyznawanie takiego monopolu, prawdopodobnie jest czystą koincydencją."
 viz_extravagance.t2.property.exotic_market: "Ta postać jest właścicielem jednego z najsłynniejszych targowisk z egzotycznymi towarami w lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], z którego pobiera zresztą pokaźny podatek."
 viz_extravagance.t2.property.mine: "Ta postać jest właścicielem położonej niedaleko stolicy dochodowej kopalni stanowiącej ważne źródło metali pospolitych wykorzystywanych do użytku domowego i handlu."
 viz_extravagance.t2.property.warehouses: "Ta postać jest właścicielem licznych magazynów ukrytych w pobliżu handlowego centrum stolicy. Kompleks jest tak dobrze zaopatrzony w egzotyczne towary handlowe, że miejscowi określają go mianem „skarbca”."
 viz_extravagance.t2.property.messenger_network: "Ta postać korzysta z usług rozległej sieci dyskretnych (i co ważniejsze – #EMP lojalnych#!) posłańców, którzy przekazują nakazy i instrukcje do każdej placówki w państwie."
 viz_extravagance.t2.property.workshops: "Postać ta jest właścicielem niemal każdego warsztatu, jaki znajduje się na jednej z alejek lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] słynącej z różnorodnych i pięknych towarów."
 viz_extravagance.t2.property.personal_temple: "Ta postać posiada na własność osobisty i dość okazały dom modlitwy, jakim jest [ROOT.Char.GetDiarchy.GetDiarch.GetFaith.HouseOfWorship], z którego może korzystać tylko ona, jej rodzina i najbliżsi sojusznicy."
 viz_extravagance.t2.property.fort: "Ta postać jest właścicielem małego fortu w bliskiej odległości od świętego kompleksu, który zamieszkują [ROOT.Char.GetDiarchy.GetDiarch.GetFaith.PriestNeuterPlural]. Choć jego utrzymanie jest drogie, to polowanie na szeroki wachlarz zamieszkujących te tereny bestii stanowi lukratywne zajęcie."
 viz_extravagance.t2.property.treasury: "Skarbiec tej postaci jest tak duży, że stanowi ufortyfikowany kompleks w sercu lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], gdzie wszelkie monety z pewnością pozostają bezpieczne."
 viz_extravagance.t2.property.defensible_palace: "Ta postać utrzymuje w lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] niewielki, ale ufortyfikowany pałac. Jak głoszą plotki, jest on podobno najeżony ukrytymi tunelami i drogami ucieczki."
 viz_extravagance.t2.charity.schools: "Ta postać osobiście finansuje szereg szkół poświęconych nauczaniu małych dzieci, które w przeciwnym razie nie miałyby najmniejszych szans na edukację."
 viz_extravagance.t2.charity.hospitals: "Ta postać osobiście finansuje kilka znanych szpitali w miejscu o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], które leczą najbiedniejszych członków społeczeństwa, ale polegają wyłącznie na hojności ich dobroczyńcy."
 viz_extravagance.t2.charity.poor_funerals: "Ta postać osobiście finansuje w lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] pogrzeby zmarłych nie mających funduszy, rodziny, przyjaciół i możliwości odejścia z godnością."
 viz_extravagance.t2.charity.scholars.philosophical: "Ta postać osobiście finansuje działalność wielu ważnych filozofów i instytucji, których celem jest dogłębne badanie aspektów tego świata."
 viz_extravagance.t2.charity.scholars.legal: "Ta postać osobiście finansuje pracę najwybitniejszych prawników, jurystów i duchownych w państwie, przyczyniając się do lepszego wyjaśniania i egzekwowania uczciwego i sprawiedliwego prawa dla wszystkich."
 viz_extravagance.t2.charity.civil_service.extra_positions: "Ta postać osobiście finansuje kluczowe stanowiska służby cywilnej, wielokrotnie zwiększając tym samym potęgę biurokracji poprzez zapewnienie środków tam, gdzie są one najbardziej potrzebne."
 viz_extravagance.t2.charity.police: "Ta postać w lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] osobiście finansuje lojalną grupę konstabli i funkcjonariuszy, którzy dbają o przestrzeganie prawa zgodnie z wolą wezyra."
 viz_extravagance.t2.charity.scholars.theological: "Ta postać osobiście finansuje działalność najsłynniejszych teologów w państwie, inwestując tym samym w imieniu innych wiernych w rozwój poprawnej teorii wiary."
 viz_extravagance.t2.charity.scholars.mystical: "Ta postać osobiście finansuje szereg znanych mistyków, ezoteryków i ekstatyków, którzy dzielą się swoją dziwną wiedzą na dworach lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t2.charity.circumcision: "Ta postać osobiście finansuje każdego roku obrzezanie i edukację religijną określonej liczby chłopców-sierot pochodzących z ulic lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t2.charity.preachers: "Ta postać osobiście finansuje kapłanów, którzy pod postacią żebraka wędrują po kraju, pomagając potrzebującym wiernym i oferując duchowe porady mniejszym grupom religijnym."
 viz_extravagance.t3.treasure.mirrors: "Ta postać jest właścicielem dziesiątek najczystszych luster, jakie tylko można kupić, zapewniając sobie niemal nieprzyzwoity poziom próżnego luksusu, o jakim może pomarzyć niewielu szlachciców."
 viz_extravagance.t3.treasure.parasols: "Ta postać zdaje się posiadać parasol na każdy dzień w roku: w zbiorach można natknąć się na okazy haftowane złotem, srebrem, jedwabiem, adamaszkiem… Niektóre z nich wysadzane są rubinami, niektóre szmaragdami… O przepychu tych parasoli można by mówić godzinami."
 viz_extravagance.t3.treasure.silk_bigtop: "Ta postać jest właścicielem podróżnego namiotu mieszczącego grupę składającą się z ponad pięćdziesięciu osób; każdy jego segment jest wykonany z najdroższego jedwabiu i bogato haftowany, a maszty wykonano z cennego metalu lub pokryto drogim lakierem."
 viz_extravagance.t3.treasure.fabrics: "Ta postać szczyci się posiadaniem ogromnych ilości najbardziej luksusowych tkanin na świecie: jedwabi, adamaszków, aksamitów, cienkich brokatów, misternie pikowanych tkanin oraz niemal nieskończonej kolekcji ich rzadkich i regionalnych odmian."
 viz_extravagance.t3.treasure.exotic_pets: "Ta postać oczarowuje i jednocześnie przeraża gości swoją kolekcją egzotycznych zwierząt. Jej osobistą menażerię zdobią lwy, tygrysy, dziwne zagraniczne jelenie i inne niezwykłe stworzenia."
 viz_extravagance.t3.treasure.carpets: "Postać ta posiada szczególnie słynny dywan – ma on sto łokci długości i pięćdziesiąt szerokości, utkany został z muliny jedwabnej i zszyty złotą nicią, a zdobią go srebrzyste satynowe podszewki i ozdobne hafty przedstawiające sceny religijne i historyczne, rzekomo opowiadające całą historię świata."
 viz_extravagance.t3.treasure.gold_mattress: "Postać ta posiada materac, który podobno wykonano wyłącznie ze złotych nici. Jeśli wierzyć podaniom, zdobił on łoża niektórych z najsłynniejszych postaci najnowszej historii."
 viz_extravagance.t3.treasure.birth_control: "Ta postać posiada tabletki, pigułki oraz inne, bardziej egzotyczne środki zapewniające bezpieczną, szczęśliwą i bezowocną kopulację."
 viz_extravagance.t3.treasure.sculpture.articulated: "Ta postać dumna jest z posiadania wieloczęściowej rzeźby przedstawiającej ją samą. Pozę i ubiór można dowolnie zmieniać według woli wezyra."
 viz_extravagance.t3.treasure.plants: "Ta postać jest posiadaczem słynnej kolekcji rzadkich roślin, mchów i ziół. Każdy okaz rośnie w jednej z pięciuset kryształowych donic."
 viz_extravagance.t3.activities.feasts.surprise: "Postać ta słynie z wydawania uczt, na których zasłużonym gościom wręcza się niespodziewane prezenty: dowcipny żart może zostać nagrodzony dziesięcioma tysiącami sztuk bydła, oszałamiający strój – pałacem i służbą, a fascynująca rozmowa – szatą z farbowanego jedwabiu."
 viz_extravagance.t3.activities.aid: "Ta postać rozpieszcza szlachciców mieszkających w jej posiadłościach poprzez okazjonalne drobne podarki. Setka luksusowych dywanów, trzy tysiące zdobionych siodeł, dwanaście garnków ambry, dziesięć tysięcy solidnych włóczni to tylko niektóre z fanaberii."
 viz_extravagance.t3.activities.scholars.debates: "Ta postać zaprasza na swoje spotkania uczonych wszelkiej maści z całego znanego świata i rozkoszuje się rozmowami prowadzonymi przez największe umysły epoki siedzące przy tym samym stole."
 viz_extravagance.t3.activities.feasts.give_away: "Ta postać lubi organizować uczty dla swoich wiernych sojuszników, zwolenników i przyjaciół – zupełnie przypadkowo podczas takich wydarzeń goście nader często otrzymują okup w postaci drogich dóbr, a mimo to za każdym razem wydaje się, że w zanadrzu czekają jeszcze bardziej niesamowite prezenty."
 viz_extravagance.t3.activities.land_and_livestock_grants: "Według lokalnych legend postać ta posiada liczne stada zwierząt gospodarskich, a liczba ich sztuk rozdawanych w nagrodę za dobrą służbę lub w ramach rekompensaty charytatywnej zamyka się w dziesiątkach tysięcy rocznie."
 viz_extravagance.t3.activities.feasts.spectacle: "Ta postać podczas wyprawianych uczt przykłada wielką wagę do szczegółów: w końcu jeśli nie pojawi się na nich #EMP przynajmniej#! akrobata balansujący drążkiem, na czubku którego podskakuje dziecko żonglujące rozżarzonymi węglami, to jaki sens w ogóle zasiadać do stołu?"
 viz_extravagance.t3.activities.feasts.coin_shower: "Ta postać lubi demonstrować na ucztach swe bogactwo w zachwycający, chociaż dosłowny sposób: regularnie obsypuje swoich ulubionych gości deszczem setek, a nawet tysięcy monet."
 viz_extravagance.t3.activities.gambling.palanquin: "Ta postać twierdzi, że wymyśliła, a następnie opanowała do perfekcji osobliwy sport: wyścigi palankinów, podczas których uczestnicy starają się dotrzeć ze swoim palankinem do określonej części miejsca o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] w jak najlepszym czasie."
 viz_extravagance.t3.activities.orgies: "Ta postać wydaje uczty otwarcie kładące nacisk na rozkosze cielesne. Podczas nich goście są rozpieszczani i obsługiwani na najwyższym, a także w najbardziej śliskim stopniu."
 viz_extravagance.t3.activities.parades: "Ta postać wierzy, że bogactwo – jeśli ukryte – jest bezużyteczne. Fascynuje ją organizowanie regularnych parad ulicami miejsca o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], na których prezentuje swoje egzotyczne zwierzęta, piękne konie, zadbanych służących i drogie ubrania."
 viz_extravagance.t3.property.pool.cushions: "Ta postać posiada wielki basen wyłożony poduszkami. W końcu kąpiel nie powinna być przyczynkiem do braku luksusu."
 viz_extravagance.t3.property.businesses: "Ta postać prowadzi interesy na bardzo zawiłym i skomplikowanych poziomie: to swoista plątanina powiązanych ze sobą szlaków handlowych, monopoli, patronatów i majątków."
 viz_extravagance.t3.property.palace.huge: "Ta postać utrzymuje pałac, który oficjalnie jest tylko #EMP nieznacznie#! mniejszy od tego, który posiada [ROOT.Char.GetTitleAsNameNoTooltip]. Ci, którzy widzieli go osobiście, zazwyczaj śmią wątpić w tę wersję."
 viz_extravagance.t3.property.bathhouse: "Ta postać utrzymuje dla siebie i swoich najbliższych sojuszników bogato wyposażoną prywatną łaźnię, będącą politycznym centrum wszelkich najobrzydliwszych, choć lśniąco czystych oszustw w lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t3.property.stables: "Ta postać posiada kolosalną stajnię, w której znajdują się setki najlepszych rumaków w państwie."
 viz_extravagance.t3.property.pool.gold: "Ta postać jest właścicielem basenu, którego dno pokrywa gruba warstwa złotych monet – jaki jest sens bogactwa, skoro nie można w nim pływać?"
 viz_extravagance.t3.property.fleet.commercial: "Ta postać jest właścicielem kilkudziesięciu prywatnych statków handlowych – prawdziwej floty jednostek pływających po całym świecie."
 viz_extravagance.t3.property.business.stolen: "Ta postać wydaje się nieustannie wchodzić w posiadanie pomniejszych przedsiębiorstw, które nie spłacają swoich długów – niezależnie od tego, czy wierzycielem jest pożyczkodawca, czy same państwo. Wielu wstrzymuje się od komentowania tego zjawiska – dla własnego dobra."
 viz_extravagance.t3.property.tycoon: "Ta postać jest właścicielem niemalże ćwierci powierzchni miejsca znanego jako [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], a w skład jej prywatnych posiadłości wchodzą nawet całe dystrykty tego terytorium."
 viz_extravagance.t3.property.den_of_vice: "Ta postać jest według plotek właścicielem jednego z najbardziej znanych miejsc występku w lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] – zakładu, w którym można nabyć dowolną miksturę egzotycznych substancji. Oczywiście, jeśli ma się wystarczająco dużo srebra."
 viz_extravagance.t3.charity.observatories: "Ta postać jest mecenasem dużego obserwatorium, w którym spogląda w niebo i zapisuje ruchy gwiazd."
 viz_extravagance.t3.charity.universities: "Ta postać finansuje kilka małych, ale prestiżowych lokalnych uniwersytetów, promując w ich imieniu stypendia i działalność naukową."
 viz_extravagance.t3.charity.libraries: "Ta postać wydaje swoje monety na konstrukcję, rozbudowę i ochronę wybranej liczby bibliotek, kopiowanie wielkich dzieł i szerzenia wiedzy wśród szlachty."
 viz_extravagance.t3.charity.bathhouses: "Ta postać zbudowała i utrzymuje dużą publiczną łaźnię w lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]. Miejsce stało się popularne wśród zwykłych ludzi, którzy bez niego nie mogliby pozwolić sobie na luksus kąpieli."
 viz_extravagance.t3.charity.hospitals.equipment: "Ta postać poświęca czas nie tylko na finansowanie lokalnych szpitali, ale także na zaopatrywanie ich w najnowocześniejsze medykamenty, narzędzia chirurgiczne i rozmaite ezoteryczne przyrządy medyczne."
 viz_extravagance.t3.charity.civil_service.expansion: "Ta postać zapewnia wynagrodzenie osobom sprawującym szeroki zakres funkcji administracyjnych, dzięki czemu codzienne obowiązki są rozłożone bardziej równomiernie, a na głowie państwa ciąży mniejsza presja."
 viz_extravagance.t3.charity.watermills: "Ta postać finansuje budowę komunalnych młynów wodnych w ubogich wioskach i innych obszarach wiejskich, co znacznie poprawia jakość życia mieszkańców."
 viz_extravagance.t3.charity.beggar_spies: "Ta postać cierpi na paranoję, która zdążyła już obrosnąć legendą: opłaca ona połowę żebraków i włóczęgów z państwa, zapewniając im od czasu do czasu jedzenie i schronienie w zamian za to, co wywąchają."
 viz_extravagance.t3.charity.hajj_water_tanks: "Ta postać osobiście płaci za budowę i napełnianie zbiorników wodnych poza świętą Mekką. Ta woda pomoże utrzymać przy życiu spragnionych pielgrzymów odbywających sprawiedliwy hadżdż."
 viz_extravagance.t3.charity.holy_warrior_gear: "Ta postać regularnie dostarcza broń i zbroje żołnierzom służącym różnym świętym sprawom – niezależnie od tego, czy będzie to napad na wrogów wiary, czy straż przy jej wyznawcach."
 viz_extravagance.t4.treasure.cushions: "Ta postać posiada tysiące poduszek. Ta niemal niekończąca się lawina kaskad tafty i jedwabiu sprawia, że ​każda komnata staje się idealnym miejscem na odpoczynek (lub małą drzemkę)."
 viz_extravagance.t4.treasure.martial_gear: "Ta postać kocha militaria aż do przesady. Prawdopodobnie posiada więcej dekoracyjnych broni i pancerzy, niż [ROOT.Char.GetTitleAsNameNoTooltip] ma ich #EMP prawdziwych.#!"
 viz_extravagance.t4.treasure.cosmetics: "Ta postać ma w posiadaniu cesarski okup w postaci perfum: drogocennych ambr w słoiku, perfumowanych wód różanych, pachnącej ghaliyi, proszku piżmowego, ekstraktu z aloesu i oczywiście szafranu – wszystko w ilościach i pojemnikach, których wartość łączna mogłaby pokryć koszty utrzymania sporej armii."
 viz_extravagance.t4.treasure.office: "Ta postać przyozdobiła swój gabinet wezyra rzeźbami i meblami wysadzanymi drogimi metalami, kamieniami oraz szkłem, przez co panuje w nim atmosfera stonowanych, ale stanowczych rządów."
 viz_extravagance.t4.treasure.crockery.historic: "Ta postać przechowuje pełen zestaw zastawy stołowej i sztućców, a każdy z nich – jeśli wierzyć legendom – należał kiedyś do władcy egzotycznego, obcego królestwa lub starożytnego, martwego imperium."
 viz_extravagance.t4.treasure.precious_orchard: "Ta postać słynie z dziedzińca, na którym powstał piękny sad wypełniony sztucznymi drzewami ze złota i srebra, rodzącymi rozmaite owoce wyrzeźbione z kamieni szlachetnych."
 viz_extravagance.t4.treasure.fleet.personal: "Ta postać słynie z charakterystycznej barki, a także z licznych mniejszych statków i łodzi pływających po wodach miejsca znanego jako [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], sławiąc imię patrona floty."
 viz_extravagance.t4.treasure.massive_sword: "Ta postać słynie z tego, że posiada ozdobny miecz o długości równej trzem żołnierzom ustawionym jeden na drugim pod jedną z szerokich ścian jej ulubionej sali."
 viz_extravagance.t4.treasure.mystic_ingredients: "Ta postać ma podobno w posiadaniu kolekcję egzotycznych składników alchemicznych: dziwnych i obcych roślin, nietypowych rud z samych głębin ziemi oraz proszków otrzymywanych z mięsa i kości legendarnych stworzeń."
 viz_extravagance.t4.treasure.sensible_investments_for_smart_adults: "Ta postać jest właścicielem pojedynczego iluminowanego manuskryptu z nieestetycznym wizerunkiem małpy – podobno dzieło to jest niezwykle drogie, ale przyczyna tej wartości nie jest jasna."
 viz_extravagance.t4.activities.feasts.pool.rose: "Ta postać słynie z wydawania przyjęć, podczas których basen wypełniany jest kwiatami wartymi dziesiątki tysięcy monet, tworząc swoisty pachnący spektakl na skalę unikatową dla większości gości."
 viz_extravagance.t4.activities.give_aways: "Ta postać rozdaje za sprawą kaprysu drogocenne prezenty. Podarki te przyćmiewają fortunę, jaką w ciągu swojego życia mógłby zbić nawet najszczęśliwszy kupiec."
 viz_extravagance.t4.activities.feasts.big: "Ta postać wyprawia „prywatne uczty dla grona najbliższych przyjaciół”, ale większość ludzi określa je mianem „ogromnych festiwali, jakie zdarzają się raz na dekadę”."
 viz_extravagance.t4.activities.menagerie: "Ta postać posiada menażerię, w której aż głośno od syczących gadów, kolorowych ptaków, ogromnych ssaków i praktycznie każdych innych gatunków, jakie ma do zaoferowania świat."
 viz_extravagance.t4.activities.aid: "Ta postać jest tak hojna, że szczodrość kupowanych przez nią pakietów pomocowych zmusza niektórych rzekomych „szlachciców” do całkowitego polegania na tej jałmużnie, aby zachować pozory godnego życia."
 viz_extravagance.t4.activities.host: "Ta postać uważa, że goszczenie zagranicznych dyplomatów jest sprawą najwyższej wagi – jedyną ważniejszą rzeczą jest jedynie wydawanie ogromnych ilości monet. Dowodzi to niewątpliwie słabości zagranicznych królestw."
 viz_extravagance.t4.activities.gambling.xtra_xtreme: "Ta postać stawia na szali losu monety, zwierzęta, ziemie… nawet życie i wszystko inne, co wpadnie jej do głowy. Wszystko w tak ogromnych ilościach, że wielu nadaje #EMP temu#! rangę cudu."
 viz_extravagance.t4.activities.masquerade: "Ta postać regularnie organizuje imprezy kostiumowe, na które goście – czerpiąc inspiracje z historii i mitów – szykują stroje o wartości równoważnej co najmniej miesięcznemu dochodowi."
 viz_extravagance.t4.activities.plants.ever_changing: "Ta postać wierzy, że różnorodność przypraw to sól życia. Z tego powodu pielęgnuje wypełniony najrozmaitszymi zapachami ogród, w którym hoduje rośliny i egzotyczne zioła kwitnące i owocujące o różnych porach roku i w różnych warunkach."
 viz_extravagance.t4.activities.feasts.cannibal: "Ta postać, co przyznaje ogół, organizuje jedne z najpyszniejszych uczt, jakie kiedykolwiek widziano w królestwie. Można na nich spróbować soczystych kawałków mięsa, choć niewielu wie, jakiego są pochodzenia."
 viz_extravagance.t4.property.palace.pool: "Ta postać utrzymuje oddzielny pałac, w którym mieści się ogromny basen. Mieszkając na co dzień w innym miejscu, może ona całkowicie oddzielić swoje życie publiczne wśród gabinetów od wygód życia prywatnego w gronie znajomych gości."
 viz_extravagance.t4.property.palace.spa: "Ta postać jest właścicielem przestronnego wiejskiego domu na obrzeżach lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], położonego z dala od zgiełku miasta, gdzie panuje spokój zapewniany przez hektary okolicznych posiadłości."
 viz_extravagance.t4.property.army: "Ta postać utrzymuje prywatną armię bandytów i rzezimieszków, gotowych narzucić swoją wolę na ulicach lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t4.property.livestock: "Ta postać utrzymuje ogromne stada rumaków i zwierząt jucznych na znacznej części terytorium państwa."
 viz_extravagance.t4.property.palace.guest: "Ta postać posiada prywatny pałac przeznaczony wyłącznie dla odwiedzających gości – to oznaka bogactwa i władzy, której nie sposób nie zauważyć."
 viz_extravagance.t4.property.spire: "Ta postać prowadzi większość swoich interesów związanych z urzędem wezyra z ponurej iglicy wznoszącej się wysoko nad większością budynków lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]. Podobno z jej licznych okien widać każdą alejkę i każdy zakamarek."
 viz_extravagance.t4.property.palace.monthly: "Ta postać utrzymuje w miejscu znanym jako [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] kilkanaście pałaców, które zmienia co miesiąc jak rękawiczki."
 viz_extravagance.t4.property.bordello: "Ta postać prowadzi prywatny burdel, gdzie jej ulubieni artyści regularnie oddają się najbardziej rozpustnym rozkoszom."
 viz_extravagance.t4.property.gaol: "Ta postać jest właścicielem prywatnego więzienia dla dłużników, gdzie trafiają co biedniejsi przedstawiciele gminu niezdolni spłacić wezyrowi długów. Kara trwa, dopóki rodzina nieszczęśnika nie zgromadzi odpowiednich środków."
 viz_extravagance.t4.property.palace.torture: "Ta postać utrzymuje legendarny ogród dziwnych rozkoszy, pełen przerażających narzędzi. To tu dokonuje się okrutnych czynów na wrogach i rywalach, co zaowocowało nadaniem temu miejscu nazwy „Czeluści piekielnych”."
 viz_extravagance.t4.charity.waystations: "Ta postać płaci za rozsiane po całym królestwie stacje i karawanseraje obsługujące mniejsze grupy i samotnych podróżników."
 viz_extravagance.t4.charity.bridges: "Ta postać słynie z wydawania pieniędzy na budowę i utrzymanie nowych mostów w całym państwie, co jest oznaką najwyższego prestiżu dla każdego urzędnika państwowego."
 viz_extravagance.t4.charity.dole: "Ta postać sponsoruje prywatne dostawy żywności dla najbardziej potrzebujących obywateli lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]. Dopóki ma pieniądze, nikt nie będzie chodził głodny."
 viz_extravagance.t4.charity.housing: "Ta postać finansuje budowę małych kamienic w pustych częściach lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] lub tuż przy jej murach – wszystko dla tych, którzy najbardziej potrzebują schronienia."
 viz_extravagance.t4.charity.gardens: "Ta postać płaci za utrzymanie dużego publicznego ogrodu – małej ostoi spokoju i wyciszenia w tym czasami nazbyt okrutnym świecie."
 viz_extravagance.t4.charity.civil_service.fire: "Ta postać osobiście odpowiada za utrzymanie straży pożarnej w lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]. Jest to ewenement na skalę światową."
 viz_extravagance.t4.charity.aqueducts: "Ta postać jest odpowiedzialna za budowę i utrzymanie kilku niedługich akweduktów doprowadzających świeżą wodę do lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], zyskując tym samym wdzięczność wielu najuboższych członków społeczeństwa."
 viz_extravagance.t4.charity.festivals: "Ta postać finansuje doroczny wielki festiwal dla wszystkich mieszkańców lokalizacji o nazwie [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]. Miasto czeka na to wydarzenie przez cały rok."
 viz_extravagance.t4.charity.pilgrimage: "Ta postać prowadzi fundusz charytatywny zapewniający ludziom pożyczki, odpowiedni sprzęt i wiedzę podróżniczą, aby ci mogli wyruszyć na upragnioną pielgrzymkę."
 viz_extravagance.t4.charity.loans: "Ta postać prowadzi fundusz charytatywny zajmujący się organizowaniem przekazów pieniężnych na poczet pokrywania pożyczek i długów (zgodnych z prawem lub nie) zaciąganych przez biednych mieszkańców państwa."
 diarch_loyalty_score.regency.tradition_ep3_palace_politics: "[culture|E] ma tradycję „[GetCultureTradition('tradition_ep3_palace_politics').GetName]”"
