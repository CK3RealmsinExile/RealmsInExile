namespace = lotr_war_events

lotr_war_events.0001 = {
	content_source = realms_dlc
	type = letter_event
	opening = lotr_war_events.0001.t
	desc = lotr_war_events.0001.desc
	sender = scope:defender

    immediate = {
        scope:defender = {
            random_character_war = {
                limit = { primary_attacker = scope:attacker }
                save_scope_as = interested_war
            }
        }
    }

    option = { # Join the war on the side of the defender
        name = lotr_war_events.0001.a

        scope:interested_war = {
			hidden_effect = { set_called_to = root }
            add_defender = root
        }

		ai_chance = {
			base = 100
			
            modifier = { # Defender isn't an involved ruler in Struggle of TH
                add = 100
                
                NOT = { 
                    scope:attacker = {
                        any_character_struggle = { 
                            is_struggle_type = thani_hazad_struggle 
                            involvement = involved
                            is_struggle_phase = struggle_thani_hazad_phase_confederation
                        } 
                    }
                }
            }

            modifier = { # If Attackers Realms Size > Defenders Realm Size; Both are involved
                scope:defender = {
                    any_character_struggle = { 
                        is_struggle_type = thani_hazad_struggle 
                        involvement = involved
                        is_struggle_phase = struggle_thani_hazad_phase_confederation
                    } 
                }
                scope:attacker = {
                    any_character_struggle = { 
                        is_struggle_type = thani_hazad_struggle 
                        involvement = involved
                        is_struggle_phase = struggle_thani_hazad_phase_confederation
                    } 
                }
                add = 30
            }

            modifier = { # If you're allied with the attackers, don't join
                OR = {
                    is_allied_to = scope:attacker
                    is_defensive_allied_to = { RECIPIENT = scope:attacker }
                    scope:interested_war = { any_war_attacker = { this = root } }
                }
                factor = 0
            }

            modifier = { # If the defender is an involved ruler and their troops already outweigh the attacker
                scope:interested_war = {
                    war_attacker_total_strength_value < war_defender_total_strength_value
                }

                factor = 0
            }
		}
    }

    option = { # Don't join the war of the defender
        name = lotr_war_events.0001.b

		ai_chance = { base = 10 }
    }
}

# Hidden event to stop defensive allies from raiding each other
lotr_war_events.0002 = { 
	hidden = yes
	scope = army

    trigger = {
		exists = scope:barony
        scope:raider = { is_defensive_allied_to = { RECIPIENT = scope:county.holder } }
    }

    immediate = {
		scope:raider = {
			add_truce_both_ways = {
				character = scope:county.holder.top_liege
				years = 10
				name = TRUCE_TRADE_DEAL
			}
		}
    }
}

# Mispir pleads for aid from Balan-Lai rulers
lotr_war_events.0003 = { 
    type = letter_event
	sender = scope:recipient

	opening = {
		desc = lotr_war_events.0003.opening
	}

	desc = lotr_war_events.0003.desc
 
    immediate = {
        scope:defender = {
            random_character_war = {
                limit = { primary_attacker = scope:attacker }
                save_scope_as = interested_war
            }
        }
    }

	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = lotr_war_events.0003
			days = 1
		}
	}

	option = { # Join war as DEFENDER
		name = lotr_war_events.0003.a

        scope:interested_war = {
			hidden_effect = { set_called_to = root }
            add_defender = root
        }
        
		ai_chance = { base = 100 }
	}

	option = { # Can't help, sorry
		name = lotr_war_events.0003.b
        
		ai_chance = { base = 10 }
	}
}

scripted_effect spawn_valinorian_army_effect = {
	$REBEL_LEADER$ = { # 
		start_war = {
	 		cb = lotr_valinor_invasion_cb
	 		target = character:lineofsauron
	 	}
	}
	# Setup event troops.
	$REBEL_LEADER$ = { # 
	 	spawn_army = {
	 		levies = 0
	 		men_at_arms = {
	 			type = high_elven_pikemen
	 			stacks = host_of_valinor_special_troop_amount
	 		}
	 		men_at_arms = {
	 			type = high_elven_archers
	 			stacks = host_of_valinor_special_troop_amount
	 		}
	 		men_at_arms = {
	 			type = high_elven_heavy_cavalry
	 			stacks = host_of_valinor_special_troop_amount
	 		}
	 		men_at_arms = {
	 			type = high_elven_skirmishers
	 			stacks = host_of_valinor_special_troop_amount
	 		}
	 		men_at_arms = {
	 			type = high_elven_light_cavalry
	 			stacks = host_of_valinor_special_troop_amount
	 		}
	 		men_at_arms = {
	 			type = high_elven_heavy_infantry
	 			stacks = host_of_valinor_special_troop_amount
	 		}
	 		men_at_arms = {
	 			type = song_smiths
	 			stacks = host_of_valinor_special_troop_amount.div2
	 		}
	 		location = $TARGET_COUNTY$.title_province
	 		origin = $TARGET_COUNTY$.title_province
	 		inheritable = yes
            uses_supply = no
	 		name = valinorian_invasion_army_name
	 	}
	}
}

# Hidden event spawning Valinorian invasion
lotr_war_events.0004 = {

    trigger = {
        trigger_if = {
            limit = { has_game_rule = default_invasion_delay }
            any_county_in_region = {
                region = middleearth
                OR = {
                    holder = character:lineofsauron # Sauron
                    holder = title:k_wastelands.holder # Tom Bombadil
                    holder = { is_vassal_or_below_of = character:lineofsauron } # Sauron
                    holder = { is_vassal_or_below_of = title:k_wastelands.holder } # Tom Bombadil
                    trigger_if = { # Tributary
                        limit = { holder = { has_variable = my_suzerain } }
                        OR = {
                            holder.var:my_suzerain = character:lineofsauron
                            holder.var:my_suzerain = { is_vassal_or_below_of = character:lineofsauron }
                        }
                    }
                }
                percent >= 0.70
            }
        } 
        trigger_else_if = {
            limit = { has_game_rule = early_invasion_delay }
            any_county_in_region = {
                region = middleearth
                OR = {
                    holder = character:lineofsauron # Sauron
                    holder = title:k_wastelands.holder # Tom Bombadil
                    holder = { is_vassal_or_below_of = character:lineofsauron } # Sauron
                    holder = { is_vassal_or_below_of = title:k_wastelands.holder } # Tom Bombadil
                    trigger_if = { # Tributary
                        limit = { holder = { has_variable = my_suzerain } }
                        OR = {
                            holder.var:my_suzerain = character:lineofsauron
                            holder.var:my_suzerain = { is_vassal_or_below_of = character:lineofsauron }
                        }
                    }
                }
                percent >= 0.50
            }
        }
        trigger_else_if = {
            limit = { has_game_rule = late_invasion_delay }
            any_county_in_region = {
                region = middleearth
                OR = {
                    holder = character:lineofsauron # Sauron
                    holder = title:k_wastelands.holder # Tom Bombadil
                    holder = { is_vassal_or_below_of = character:lineofsauron } # Sauron
                    holder = { is_vassal_or_below_of = title:k_wastelands.holder } # Tom Bombadil
                    trigger_if = { # Tributary
                        limit = { holder = { has_variable = my_suzerain } }
                        OR = {
                            holder.var:my_suzerain = character:lineofsauron
                            holder.var:my_suzerain = { is_vassal_or_below_of = character:lineofsauron }
                        }
                    }
                }
                percent >= 0.90
            }
        }
        trigger_else = { always = no }
    }

    immediate = {
        character:lineofeonwe = { save_scope_as = invader_scope }
        character:lineofsauron = { save_scope_as = sauron_scope }

        title:e_lindon = { # Lindon
            ordered_in_de_jure_hierarchy = { # Check the main harbours first
                limit = {
                    tier = tier_county
                    is_coastal_county = yes
                    OR = {
                        holder = character:lineofsauron
                        holder = { is_vassal_or_below_of = character:lineofsauron }
                        is_tributary_of = { SUZERAIN = character:lineofsauron TRIBUTARY = holder }
                    }
                }
                order_by = {
                    value = 1
                    if = {
                        limit = { 
                            OR = {
                                title_province = { has_building_or_higher = wonder_mithlond_north_01 }
                                title_province = { has_building_or_higher = wonder_mithlond_south_01 }
                            }
                        }
                        add = 200
                    }
                    if = {
                        limit = { 
                            OR = {
                                title_province = { has_building_or_higher = wonder_harlond_01 }
                                title_province = { has_building_or_higher = wonder_forlond_01 }
                                title_province = { has_building_or_higher = wonder_forlond_02 }
                            }
                        }
                        add = 100
                    }
                }
                save_scope_as = landing_county
            }
        }
        if = { # Tharbad
            limit = {
                NOT = { exists = scope:landing_county }
                title:c_tharbad.holder = {
                    OR = {
                        this = character:lineofsauron
                        this = { is_vassal_or_below_of = character:lineofsauron }
                        is_tributary_of = { SUZERAIN = character:lineofsauron TRIBUTARY = this }
                    }
                }
            }
            title:c_tharbad = { save_scope_as = landing_county }
        }
        if = { # Edhellond
            limit = {
                NOT = { exists = scope:landing_county }
                title:c_edhellond.holder = {
                    OR = {
                        this = character:lineofsauron
                        this = { is_vassal_or_below_of = character:lineofsauron }
                        is_tributary_of = { SUZERAIN = character:lineofsauron TRIBUTARY = this }
                    }
                }
            }
            title:c_edhellond = { save_scope_as = landing_county }
        }
        if = { # Pelargir
            limit = {  NOT = { exists = scope:landing_county } }
            title:k_lebennin = {
                ordered_in_de_jure_hierarchy = {
                    limit = {
                        tier = tier_county
                        is_coastal_county = yes
                        OR = {
                            holder = character:lineofsauron
                            holder = { is_vassal_or_below_of = character:lineofsauron }
                            holder = { is_tributary_of = { SUZERAIN = character:lineofsauron TRIBUTARY = holder } }
                        }
                    }
                    order_by = {
                        value = 1
                        if = {
                            limit = { 
                                title_province = { has_building_or_higher = wonder_port_of_pelargir_01 }
                            }
                            add = 200
                        }
                    }
                    save_scope_as = landing_county
                }
            }
        }
        if = { # Umbar
            limit = {  NOT = { exists = scope:landing_county } }
            title:k_umbar = {
                ordered_in_de_jure_hierarchy = {
                    limit = {
                        tier = tier_county
                        is_coastal_county = yes
                        OR = {
                            holder = character:lineofsauron
                            holder = { is_vassal_or_below_of = character:lineofsauron }
                            holder = { is_tributary_of = { SUZERAIN = character:lineofsauron TRIBUTARY = holder } }
                        }
                    }
                    order_by = {
                        value = 1
                        if = {
                            limit = { 
                                title_province = { has_building_or_higher = wonder_umbar_01 }
                            }
                            add = 200
                        }
                    }
                    save_scope_as = landing_county
                }
            }
        }

        if = {
            limit = {
                OR = {
                    scope:landing_county.holder = character:lineofsauron
                    scope:landing_county.holder = { is_vassal_or_below_of = character:lineofsauron }
                }
            }
            create_title_and_vassal_change = {
                type = independency
                save_scope_as = change
            }
            scope:landing_county = {
                every_county_province = { set_holding_type = castle_holding }
                change_title_holder = {
                    holder = scope:invader_scope
                    change = scope:change
                }
            }
	        resolve_title_and_vassal_change = scope:change

            scope:invader_scope = {
                create_title_and_vassal_change = {
                    type = independency
                    save_scope_as = independent_change
                }
                becomes_independent = {
                    change = scope:independent_change
                }
                resolve_title_and_vassal_change = scope:independent_change
            }
        }

        scope:landing_county = {
            set_county_faith = faith:faith_eldar
            set_county_culture = culture:noldor
        }
        scope:invader_scope = {
            add_piety_level = 5
            add_prestige_level = 5
            add_legitimacy = 3000
            add_prestige = 5000
            add_piety = 5000
            add_gold = 1500
            get_title = title:e_eonwe_host
            set_variable = invasion_cb_unlock
        }

 		spawn_valinorian_army_effect = {
 			TARGET_COUNTY = scope:landing_county
 			REBEL_LEADER = scope:invader_scope
 		}

        # Global News Event
		if = {
			limit = { # Major News
				NOT = { has_game_rule = no_news }
			}
			every_player = { #Global News Announcement
				trigger_event = news_event.0034
			}
		}
    }

    option = {
        name = "a"
    }
}