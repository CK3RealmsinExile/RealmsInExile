namespace = travel_destinations

travel_destinations.1000 = {
	type = character_event
	title = travel_destinations.1000.t
	desc = travel_destinations.1000.desc
	theme = travel
	#override_background = { reference = fp4_legendary_oasis }
	orphan = yes

	left_portrait = {
		character = root
		animation = happiness
	}

	#right_portrait = {
	#	character = scope:local_character
	#	animation = toast_goblet
	#}
	
	trigger = {
		#is_available_travelling_adult = yes
		#is_landed = yes
		#is_location_valid_for_travel_event_on_land = yes
		#location = {
		#	has_special_building = yes
		#}
	}

	immediate = {
		#mp_delay_travel_plan = { DAYS = 90 }
		random_living_character = { save_scope_as = local_character }
		random_province = {
			limit = {
				has_special_building = yes
				NOR = {
					has_variable = no_province1
					# has_building_or_higher = generic_university #LotR
					# has_building_or_higher = hall_of_heroes_01 #LotR
					# has_building_or_higher = hall_of_heroes_02 #LotR
					# has_building_or_higher = hall_of_heroes_03 #LotR
					# has_building_or_higher = hall_of_heroes_04 #LotR
					# has_building_or_higher = hall_of_heroes_05 #LotR
					# has_building_or_higher = special_greenhouse_01 #LotR
					# has_building_or_higher = holy_site_cathedral_01 #LotR
					# has_building_or_higher = holy_site_mosque_01 #LotR
					# has_building_or_higher = holy_site_fire_temple_01 #LotR
					# has_building_or_higher = holy_site_pagan_grand_temple_01 #LotR
					# has_building_or_higher = holy_site_indian_grand_temple_01 #LotR
					# has_building_or_higher = holy_site_other_grand_temple_01 #LotR
					# has_building_or_higher = event_tower_of_silence_01 #LotR
				}
			}
			set_variable = {
				name = no_province1
				years = 1
			}
			save_scope_as = location
		}
		#location = {
		#	save_scope_as = location
		#}
	}

	option = {
		name = debug
		
		stress_impact = {
			ambitious = minor_stress_impact_loss
			lazy = minor_stress_impact_gain
			content = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = lazy
					has_trait = content
				}
			}
		}
	}

	after = {
		#mp_resume_travel_plan = yes
		#if = { # Cleanup
		#	limit = {
		#		root = {
		#			is_ai = yes
		#		}
		#		scope:local_character = {
		#			has_character_flag = silently_disappear_me
		#		}
		#	}
		#	scope:local_character = {
		#		silent_disappearance_effect = yes
		#	}
		#}
	}
}