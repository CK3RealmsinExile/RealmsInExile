namespace = travel_events_oltner_2

#########################################################
# New Travel Events										#
# travel_events_oltner_2 - 1000-1999					#
# by Alexander Oltner								 	#
#########################################################

# Mirage of the Cultivated Sands
# Triggered by Desert Agriculture/Orchards/Al-Yamnat
travel_events_oltner_2.1000 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1000.t
	desc = travel_events_oltner_2.1000.desc
	theme = travel
	override_background = { reference = ce1_legendary_oasis }

	left_portrait = {
		character = root
		animation = happiness
	}

	right_portrait = {
		character = scope:local_character
		animation = toast_goblet
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		location = {
			OR = {
				has_building_or_higher = plantations_01
				has_building_or_higher = orchards_01
				county ?= {
					has_county_modifier = fertile_desert_mountains_modifier
				}
			}
			OR = { #LotR - Vanilla triggers for this event make no sense
				terrain = desert
				terrain = desert_mountains
				terrain = oasis
				terrain = drylands
				terrain = red_desert
				terrain = dune_sea
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		wayfarer_storyteller_fame_effect = { VALUE = roaming_reward_fame_very_small }
		mp_delay_travel_plan = { DAYS = 90 }
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					culture = root.location.culture
					is_available_healthy_ai_adult = yes
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					culture = root.location.culture
					is_available_healthy_ai_adult = yes
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = pool_repopulate_stewardship
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1000.option.a
		
		capital_county ?= {
			change_development_progress_with_overflow = 30
		}
		
		stress_impact = {
			ambitious = minor_stress_impact_loss
			lazy = minor_stress_impact_gain
			content = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = lazy
					has_trait = content
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1000.option.b
		current_travel_plan = {
			add_destination_progress = { days = 5 }
		}

		stress_impact = {
			impatient = minor_stress_impact_loss
			patient = minor_stress_impact_gain
			gregarious = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = impatient
					has_trait = gregarious
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1000.option.c
		add_character_modifier = {
			modifier = travel_well_fed_modifier
			years = 1
		}
		
		current_travel_plan = {
			every_entourage_character = {
				custom = every_entourage_tt
				stress_impact = {
					base = minor_stress_impact_loss
				}
				add_character_modifier = {
					modifier = travel_well_fed_modifier
					years = 1
				}
			}
		}
		
		stress_impact = {
			base = minor_stress_impact_loss
			greedy = minor_stress_impact_loss
			generous = minor_stress_impact_gain
			gluttonous = minor_stress_impact_loss
			temperate = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = gluttonous
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1000.option.d
		
		trigger = {
			NOT = {
				culture = scope:location.culture
			}
		}
		
		scope:location.culture = {
			change_cultural_acceptance = {
				target = root.culture
				value = 1
				desc = cultural_acceptance_gain_travel_stories
			}
		}
		
		stress_impact = {
			compassionate = minor_stress_impact_loss
			callous = minor_stress_impact_gain
			curious = minor_stress_impact_loss
			cynical = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = callous
					has_trait = cynical
				}
			}
		}
	}

	after = {
		mp_resume_travel_plan = yes
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# Hospitable Hospices
# Triggered by Hospices
travel_events_oltner_2.1010 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1010.t
	desc = travel_events_oltner_2.1010.desc
	theme = travel
	
	override_background = { reference = holy_site_generic }

	left_portrait = {
		character = root
		animation = thinking
	}

	right_portrait = {
		character = scope:local_character
		animation = physician
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		location = {
			has_building_or_higher = hospices_01
		}
	}

	cooldown = { years = 10 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					culture = root.location.culture
					is_available_healthy_ai_adult = yes
					aptitude = {
						court_position = court_physician_court_position
						value >= 3
					}
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					culture = root.location.culture
					is_available_healthy_ai_adult = yes
					aptitude = {
						court_position = court_physician_court_position
						value >= 3
					}
				}
				weight = {
					base = 1
					modifier = {
						add = 10
						aptitude = {
							court_position = court_physician_court_position
							value >= 4
						}
					}
					modifier = {
						add = 100
						aptitude = {
							court_position = court_physician_court_position
							value >= 5
						}
					}
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = physician_excellent_character_template
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
		
		if = {
			limit = {
				any_court_position_holder = {
					type = court_physician_court_position
				}
			}
			random_court_position_holder = {
				type = court_physician_court_position
				save_scope_as = current_physician
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1010.b
		
		random_list = {
			99 = {
				if = {
					limit = {
						has_character_modifier = travel_mild_frostbite_modifier
					}
					remove_character_modifier = travel_mild_frostbite_modifier
				}
				else_if = {
					limit = {
						has_character_modifier = travel_severe_frostbite_modifier
					}
					remove_character_modifier = travel_severe_frostbite_modifier
				}
				else_if = {
					limit = {
						has_character_modifier = drained_by_mosquitoes_modifier
					}
					remove_character_modifier = drained_by_mosquitoes_modifier
				}
				else_if = {
					limit = {
						has_character_modifier = emaciated_modifier
					}
					remove_character_modifier = emaciated_modifier
				}
				else_if = {
					limit = {
						has_character_modifier = travel_touched_poisonous_plant_modifier
					}
					remove_character_modifier = travel_touched_poisonous_plant_modifier
				}
				else_if = {
					limit = {
						has_character_modifier = travel_ate_poisonous_plant_modifier
					}
					remove_character_modifier = travel_ate_poisonous_plant_modifier
				}
				else_if = {
					limit = {
						has_character_modifier = travel_choke_on_a_bone_modifier
					}
					remove_character_modifier = travel_choke_on_a_bone_modifier
				}
				else = {
					add_character_modifier = {
						modifier = invigorated_modifier
						years = 10
					}
				}
			}
			1 = {
				death = { killer = scope:local_character death_reason = death_poison }
			}
		}

		stress_impact = {
			paranoid = massive_stress_impact_gain
			craven = minor_stress_impact_gain
			stubborn = minor_stress_impact_gain
			trusting = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = craven
					has_trait = stubborn
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1010.c
		
		custom_tooltip = local_character_aptitude_physician
		
		scope:local_character = {
			add_to_court_and_entourage_effect = yes
		}
		
		if = {
			limit = {
				can_employ_court_position_type = court_physician_court_position
				NOT = { has_court_position = court_physician_court_position }
			}
			employ_character_as_position_in_current_scope_court_effect = {
				CHARACTER = scope:local_character
				POSITION = court_physician
			}
		}
		else_if = {
			limit = {
				scope:local_character.aptitude:court_physician_court_position > scope:current_physician.aptitude:court_physician_court_position
			}
			replace_court_position = {
				recipient = scope:local_character
				holder = scope:current_physician
				court_position = court_physician_court_position
			}
		}
		
		stress_impact = {
			callous = minor_stress_impact_gain
			generous = minor_stress_impact_gain
			content = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = callous
					has_trait = generous
					has_trait = content
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1010.d
		
		add_piety = major_piety_value
		
		pay_short_term_gold = {
			target = scope:local_character
			gold = minor_gold_value
		}
		
		if = {
			limit = {
				scope:location = {
					NOT = {
						has_province_modifier = well_funded_hospices_modifier
					}
				}
			}
			scope:location = {
				add_province_modifier = {
					modifier = well_funded_hospices_modifier
					years = 20
				}
			}
		}
		
		stress_impact = {
			greedy = medium_stress_impact_gain
			cynical = minor_stress_impact_gain
			deceitful = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = cynical
					has_trait = deceitful
				}
			}
		}
	}

	after = {
		mp_resume_travel_plan = yes
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					is_courtier = no
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# The Camel Herder's Feast
# Triggered by Camel Farms
travel_events_oltner_2.1020 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1020.t
	desc = travel_events_oltner_2.1020.desc
	theme = travel

	left_portrait = {
		character = root
		animation = happiness
	}

	right_portrait = {
		character = scope:local_character
		animation = shawm_idle
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		location = {
			has_building_or_higher = camel_farms_01
		}
	}

	cooldown = { years = 10 }

	immediate = {
		wayfarer_storyteller_fame_effect = { VALUE = roaming_reward_fame_small }
		mp_delay_travel_plan = { DAYS = 90 }
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					culture = root.location.culture
					is_available_healthy_ai_adult = yes
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					culture = root.location.culture
					is_available_healthy_ai_adult = yes
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = pool_repopulate_stewardship
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1020.a
		
		current_travel_plan = {
			every_entourage_character = {
				custom = every_entourage_tt
				stress_impact = {
					base = medium_stress_impact_loss
				}
			}
		}
		
		stress_impact = {
			base = medium_stress_impact_loss
			paranoid = medium_stress_impact_gain
			gregarious = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_trait = paranoid
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1020.b
		
		trigger = {
			NOT = {
				current_travel_plan = {
					has_travel_plan_modifier = travel_hardy_camels_modifier
				}
			}
		}
		
		pay_short_term_gold = {
			target = scope:local_character
			gold = minor_gold_value
		}
		current_travel_plan = {
			add_travel_plan_modifier = travel_hardy_camels_modifier
		}

		stress_impact = {
			impatient = minor_stress_impact_loss
			patient = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = patient
					short_term_gold < medium_gold_value
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1020.c
		
		trigger = {
			NOT = {
				has_character_modifier = war_camel_modifier
			}
			number_maa_regiments_of_base_type = {
				type = camel_cavalry
				value > 0
			}
		}
		pay_short_term_gold = {
			target = scope:local_character
			gold = minor_gold_value
		}
		
		add_character_modifier = {
			modifier = war_camel_modifier
			years = 30
		}
		
		stress_impact = {
			brave = minor_stress_impact_loss
			greedy = minor_stress_impact_gain
			content = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = content
					short_term_gold < medium_gold_value
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1020.d
		
		current_travel_plan = {
			add_destination_progress = { days = 3 }
		}
		
		stress_impact = {
			generous = minor_stress_impact_gain
			gregarious = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = generous
					has_trait = gregarious
				}
			}
		}
	}

	after = {
		mp_resume_travel_plan = yes
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# The Caravan's Passage
# Triggered by Camel Farms
travel_events_oltner_2.1030 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1030.t
	desc = travel_events_oltner_2.1030.desc
	theme = travel

	left_portrait = {
		character = root
		animation = thinking
	}

	right_portrait = {
		character = scope:local_character
		animation = steward
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		OR = {
			location.culture = { has_cultural_tradition = tradition_caravaneers }
			location = {
				has_building_or_higher = camel_farms_01
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					culture = root.location.culture
					is_available_healthy_ai_adult = yes
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					culture = root.location.culture
					is_available_healthy_ai_adult = yes
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = pool_repopulate_stewardship
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
		save_scope_as = new_trinket # Purely for error suppression
	}

	option = {
		name = travel_events_oltner_2.1030.a
		pay_short_term_gold = {
			target = scope:local_character
			gold = minor_gold_value
		}
		hidden_effect = {
			scope:local_character = {
				generate_trinket_effect = {
					TRINKET_RECEIVER = root
					TRINKET_GIVER = scope:local_character
					GRAB_ALL_TRINKETS = yes
					HISTORY_TYPE = created
				}
			}
		}
		send_interface_toast = {
			title = artifact_purchased
			left_icon = scope:local_character
			right_icon = scope:new_trinket
			scope:new_trinket = {
				set_owner = root
			}
		}
		custom_tooltip = purchase_artifact_trinket_tt
		
		stress_impact = {
			paranoid = medium_stress_impact_gain
			impatient = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = impatient
					short_term_gold < medium_gold_value
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1030.b
		
		current_travel_plan = {
			add_travel_plan_modifier = {
				modifier = traveling_with_camel_merchants_modifier
				months = 1
			}
		}

		stress_impact = {
			paranoid = major_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = arrogant
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1030.c
		
		pay_short_term_gold = {
			target = scope:local_character
			gold = major_gold_value
		}
		hidden_effect = {
			scope:local_character = {
				save_scope_value_as = {
					name = quality
					value = 70
				}
				save_scope_value_as = {
					name = wealth
					value = 70
				}
				
				random_list = {
					10 = {
						create_artifact_weapon_effect = {
							OWNER = scope:local_character
							CREATOR = scope:local_character
							SET_WEAPON_TYPE = flag:no
						}
					}
					10 = {
						create_artifact_armor_effect = {
							OWNER = scope:local_character
							CREATOR = scope:local_character
							SET_ARMOR_TYPE = flag:no
						}
					}
					10 = {
						create_artifact_regalia_effect = {
							OWNER = scope:local_character
							SMITH = scope:local_character
						}
					}
					10 = {
						create_artifact_crown_effect = {
							OWNER = scope:local_character
							SMITH = scope:local_character
						}
					}
					10 = {
						create_artifact_brooch_effect = {
							OWNER = scope:local_character
							SMITH = scope:local_character
						}
					}
					10 = {
						create_artifact_book_effect = {
							OWNER = scope:local_character 
							CREATOR = scope:local_character
							SET_SUBJECT = flag:no
							SET_TOPIC = flag:no
						}
					}
				}
			}
		}
		send_interface_toast = {
			title = artifact_purchased
			left_icon = scope:local_character
			right_icon = scope:newly_created_artifact
			scope:newly_created_artifact = {
				set_owner = root
			}
		}
		custom_tooltip = purchase_artifact_famed_tt
		
		stress_impact = {
			greedy = medium_stress_impact_gain
			paranoid = medium_stress_impact_gain
			impatient = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = paranoid
					has_trait = impatient
					short_term_gold < massive_gold_value
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1030.d
		
		stress_impact = {
			generous = minor_stress_impact_gain
			gregarious = minor_stress_impact_gain
			paranoid = medium_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = generous
					has_trait = gregarious
				}
			}
		}
	}

	after = {
		mp_resume_travel_plan = yes
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# Oasis of Tranquility
# Triggered by Camel Farms
travel_events_oltner_2.1040 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1040.t
	desc = travel_events_oltner_2.1040.desc
	theme = travel
	override_background = { reference = ce1_legendary_oasis }

	left_portrait = {
		character = root
		animation = drink
	}

	right_portrait = {
		character = scope:local_character
		animation = personality_compassionate
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		location = {
			OR = {
				has_building_or_higher = camel_farms_01
				terrain = oasis
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					culture = root.location.culture
					age >= 65
					stewardship >= 16
					is_available_healthy_ai_adult = yes
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					culture = root.location.culture
					age >= 65
					stewardship >= 16
					is_available_healthy_ai_adult = yes
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = pool_repopulate_stewardship
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				age = 65
				save_scope_as = local_character
			}
			scope:local_character = {
				hidden_effect = {
					add_stewardship_skill = 6
					force_character_skill_recalculation = yes
				}
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1040.a
		
		current_travel_plan = { delay_travel_plan = { days = 7 } }
		current_travel_plan = {
			every_entourage_character = {
				custom = every_entourage_tt
				stress_impact = {
					base = medium_stress_impact_loss
				}
			}
		}

		stress_impact = {
			base = medium_stress_impact_loss
			impatient = major_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					stress <= 10
					has_trait = paranoid
					has_trait = impatient
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1040.b
		
		pay_short_term_gold = {
			target = scope:local_character
			gold = minor_gold_value
		}
		
		random = {
			chance = 25
			send_interface_toast = {
				title = skill_increased
				left_icon = root
				add_stewardship_skill = 1
			}
		}
		capital_county ?= {
			change_development_progress_with_overflow = 25
		}
		scope:local_character = {
			add_to_court_and_entourage_effect = yes
		}

		stress_impact = {
			arrogant = minor_stress_impact_gain
			impatient = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = arrogant
					has_trait = impatient
					short_term_gold < medium_gold_value
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1040.c
		
		add_gold = minor_gold_value
		
		stress_impact = {
			greedy = minor_stress_impact_loss
			impatient = minor_stress_impact_gain
			generous = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = impatient
					has_trait = generous
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1040.d
		
		current_travel_plan = {
			add_destination_progress = { days = 3 }
		}
		
		stress_impact = {
			patient = minor_stress_impact_gain
			calm = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = patient
					has_trait = calm
				}
			}
		}
	}

	after = {
		mp_resume_travel_plan = yes
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					is_courtier = no
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# Equine Emissaries
# Triggered by Stables/Horse Herds
travel_events_oltner_2.1050 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1050.t
	desc = travel_events_oltner_2.1050.desc
	theme = travel

	left_portrait = {
		character = scope:local_character_2
		animation = jockey_idle
		camera = camera_event_horse_left
	}

	right_portrait = {
		character = scope:local_character
		animation = jockey_lance_tilted
		camera = camera_event_horse_right
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		location = {
			OR = {
				has_building_or_higher = stables_01
				has_building_or_higher = horse_pastures_01
			}
			NOT = {
				county.holder ?= root
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		wayfarer_storyteller_fame_effect = { VALUE = roaming_reward_fame_small }
		mp_delay_travel_plan = { DAYS = 90 }
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					culture = root.location.culture
					martial >= 12
					prowess >= 12
					is_available_healthy_ai_adult = yes
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					culture = root.location.culture
					martial >= 12
					prowess >= 12
					is_available_healthy_ai_adult = yes
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = new_warrior_character
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					culture = root.location.culture
					martial >= 12
					prowess >= 12
					NOT = { this = scope:local_character }
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					culture = root.location.culture
					martial >= 12
					prowess >= 12
					NOT = { this = scope:local_character }
				}
				save_scope_as = local_character_2
			}
		}
		else = {
			create_character = {
				template = new_warrior_character
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character_2
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
		hidden_effect = {
			scope:local_character = {
				add_prowess_skill = 4
				force_character_skill_recalculation = yes
			}
			scope:local_character_2 = {
				add_prowess_skill = 4
				force_character_skill_recalculation = yes
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1050.a

		stress_impact = {
			base = medium_stress_impact_loss
			impatient = minor_stress_impact_gain
		}
		
		current_travel_plan = {
			delay_travel_plan = {
				days = 3 
			}
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					stress <= 90 # The AI delaying their travels shouldn't be common
					has_trait = impatient
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1050.b
		
		trigger = {
			NOR = {
				has_character_flag = had_warhorse_story
				any_owned_story = {
					story_type = story_cycle_martial_lifestyle_warhorse
					exists = var:story_cycle_horse_name
				}
			}
		}
		
		pay_short_term_gold = {
			target = scope:local_character
			gold = medium_gold_value
		}
		
		start_warhorse_story_cycle_effect = yes

		stress_impact = {
			content = medium_stress_impact_gain
			humble = medium_stress_impact_gain
			greedy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = content
					has_trait = humble
					has_trait = greedy
					short_term_gold < major_gold_value
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1050.c
		
		pay_short_term_gold = {
			target = scope:local_character
			gold = tiny_gold_value
		}
		
		scope:local_character = {
			add_to_court_and_entourage_effect = yes
		}
		
		if = {
			limit = {
				can_add_hook = {
					type = loyalty_hook
					target = scope:local_character 
				}
			}
			add_hook = {
				type = loyalty_hook
				target = scope:local_character 
			}
		}
		
		pay_short_term_gold = {
			target = scope:local_character_2
			gold = tiny_gold_value
		}
		
		scope:local_character_2 = {
			add_to_court_and_entourage_effect = yes
		}
		
		if = {
			limit = {
				can_add_hook = {
					type = loyalty_hook
					target = scope:local_character_2 
				}
			}
			add_hook = {
				type = loyalty_hook
				target = scope:local_character_2
			}
		}
		
		stress_impact = {
			greedy = minor_stress_impact_gain
			craven = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = craven
					has_trait = paranoid
					short_term_gold < minor_gold_value
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1050.d
		
		stress_impact = {
			impatient = medium_stress_impact_loss
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					is_courtier = no
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# Steward of the Stables
# Triggered by Stables/Horse Herds
travel_events_oltner_2.1060 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1060.t
	desc = travel_events_oltner_2.1060.desc
	theme = travel
	override_background = { reference = market }

	left_portrait = {
		character = root
		animation = thinking
	}

	right_portrait = {
		character = scope:local_character
		animation = jockey_idle
		camera = camera_event_horse_right
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		location = {
			OR = {
				has_building_or_higher = stables_01
				has_building_or_higher = horse_pastures_01
			}
			NOT = {
				county.holder ?= root
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					culture = root.location.culture
					is_available_healthy_ai_adult = yes
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					culture = root.location.culture
					is_available_healthy_ai_adult = yes
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = new_warrior_character
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1060.a
		
		trigger = {
			NOT = {
				current_travel_plan = {
					has_travel_plan_modifier = swift_horse_modifier
				}
			}
		}
		
		pay_short_term_gold = {
			target = scope:local_character
			gold = tiny_gold_value
		}
		
		current_travel_plan = {
			add_travel_plan_modifier = swift_horse_modifier
		}

		stress_impact = {
			arrogant = medium_stress_impact_loss
			patient = minor_stress_impact_gain
			content = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = patient
					has_trait = content
					short_term_gold < minor_gold_value
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1060.b
		trigger = {
			NOT = {
				has_character_modifier = swift_horses_modifier
			}
		}
		pay_short_term_gold = {
			target = scope:local_character
			gold = medium_gold_value
		}
		
		add_character_modifier = {
			modifier = swift_horses_modifier
			years = 25
		}

		stress_impact = {
			arrogant = medium_stress_impact_loss
			patient = medium_stress_impact_gain
			content = medium_stress_impact_gain
			greedy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = patient
					has_trait = content
					has_trait = greedy
					short_term_gold < major_gold_value
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1060.c
		
		trigger = {
			NOT = {
				current_travel_plan = {
					has_travel_plan_modifier = sold_horses_modifier
				}
			}
		}
		
		current_travel_plan = {
			add_travel_plan_modifier = sold_horses_modifier
		}
		
		add_gold = minor_gold_value
		
		stress_impact = {
			greedy = medium_stress_impact_loss
			impatient = minor_stress_impact_gain
			generous = minor_stress_impact_gain
		}

		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				OR = {
					has_trait = impatient
					has_trait = generous
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1060.d
		
		stress_impact = {
			impatient = medium_stress_impact_loss
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					is_courtier = no
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# The Horse Healer
# Triggered by Stables/Horse Herds
travel_events_oltner_2.1070 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1070.t
	desc = travel_events_oltner_2.1070.desc
	theme = travel
	override_effect_2d = {
		trigger = {
			location_has_winter_trigger = no
		}
		reference = rain	
	}

	widgets = {
		widget = {
			is_shown = {
				location = {
					roaming_activity_winter_trigger = yes
				}
			}
			gui = "event_window_widget_vfx_snow"
			container = "foreground_shader_vfx_container"
		}
	}

	left_portrait = {
		character = root
		animation = thinking
	}

	right_portrait = {
		character = scope:local_character
		animation = physician
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		location = {
			OR = {
				has_building_or_higher = stables_01
				has_building_or_higher = horse_pastures_01
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		wayfarer_storyteller_fame_effect = { VALUE = roaming_reward_fame_small }
		mp_delay_travel_plan = { DAYS = 90 }
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					culture = root.location.culture
					is_available_healthy_ai_adult = yes
					age >= 30
					aptitude = {
						court_position = master_of_horse_court_position
						value >= 3
					}
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					culture = root.location.culture
					is_available_healthy_ai_adult = yes
					age >= 30
					aptitude = {
						court_position = master_of_horse_court_position
						value >= 3
					}
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = new_warrior_character
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
		hidden_effect = {
			scope:local_character = {
				add_trait = overseer
				add_prowess_skill = 6
				add_martial_skill = 6
				add_learning_skill = 6
				
				if = {
					limit = {
						prowess < 14
					}
					add_prowess_skill = 6
				}
				
				if = {
					limit = {
						martial < 14
					}
					add_martial_skill = 6
				}
				force_character_skill_recalculation = yes
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1070.a
		
		pay_short_term_gold = {
			target = scope:local_character
			gold = tiny_gold_value
		}
		
		add_piety = minor_piety_value

		stress_impact = {
			humble = medium_stress_impact_loss
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
			arbitrary = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = callous
					has_trait = sadistic
					has_trait = arbitrary
					short_term_gold < minor_gold_value
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1070.b
		
		trigger = {
			can_employ_court_position_type = master_of_horse_court_position
			NOT = { 
				any_court_position_holder = {
					type = master_of_horse_court_position 
				}
			}
		}
		
		scope:local_character = {
			add_to_court_and_entourage_effect = yes
			add_character_flag = free_master_of_horse
		}
		
		employ_character_as_position_in_current_scope_court_effect = {
			CHARACTER = scope:local_character
			POSITION = master_of_horse
		}
		
		custom_tooltip = master_of_the_horse_free

		stress_impact = {
			paranoid = medium_stress_impact_gain
			trusting = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1070.c
		
		trigger = {
			NOT = {
				has_character_modifier = swift_horses_modifier
			}
		}
		
		pay_short_term_gold = {
			target = scope:local_character
			gold = minor_gold_value
		}
		
		add_character_modifier = {
			modifier = excellent_horse_care_modifier
		}
		
		stress_impact = {
			impatient = medium_stress_impact_gain
			arrogant = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
		}

		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				OR = {
					has_trait = impatient
					has_trait = arrogant
					has_trait = sadistic
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1070.d
		
		stress_impact = {
			impatient = medium_stress_impact_loss
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					is_courtier = no
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# Pungent Prodigy
# Triggered by Camel Farms
travel_events_oltner_2.1080 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1080.t
	desc = travel_events_oltner_2.1080.desc
	theme = travel
	
	left_portrait = {
		character = root
		animation = stress
	}

	right_portrait = {
		character = scope:local_character
		animation = shame
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		location = {
			has_building_or_higher = camel_farms_01
		}
	}

	cooldown = { years = 10 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					culture = root.location.culture
					is_available_healthy_ai_adult = yes
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					culture = root.location.culture
					is_available_healthy_ai_adult = yes
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = generic_peasant_character
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1080.a
		
		add_prestige = medium_prestige_gain

		stress_impact = {
			humble = minor_stress_impact_gain
			content = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = humble
					has_trait = content
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1080.b
		
		trigger = {
			NOT = {
				current_travel_plan = {
					has_travel_plan_modifier = exchange_camel_sturdy_modifier
				}
			}
		}
		
		current_travel_plan = {
			add_travel_plan_modifier = exchange_camel_sturdy_modifier
		}

		stress_impact = {
			impatient = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = impatient
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1080.c
		
		trigger = {
			NOT = {
				current_travel_plan = {
					has_travel_plan_modifier = exchange_camel_fast_modifier
				}
			}
		}
		
		current_travel_plan = {
			add_travel_plan_modifier = exchange_camel_fast_modifier
		}
		
		stress_impact = {
			patient = minor_stress_impact_gain
			calm = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = patient
					has_trait = calm
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1080.d
		
		scope:local_character = {
			pay_short_term_gold = {
				target = root
				gold = root.tiny_gold_value
			}
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					is_courtier = no
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# Sentry of the Silent Dunes
# Triggered by Watchtowers
travel_events_oltner_2.1090 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1090.t
	desc = travel_events_oltner_2.1090.desc
	theme = travel
	
	left_portrait = {
		character = root
		animation = happiness
	}

	right_portrait = {
		character = scope:local_character
		animation = throne_room_one_handed_passive_2
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		location = {
			has_building_or_higher = watchtowers_01
		}
	}

	cooldown = { years = 10 }

	immediate = {
		wayfarer_storyteller_fame_effect = { VALUE = roaming_reward_fame_very_small }
		mp_delay_travel_plan = { DAYS = 90 }
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					is_available_healthy_ai_adult = yes
					can_be_warrior_trigger = { ARMY_OWNER = root }
					prowess >= 10
					has_no_particular_noble_roots_trigger = yes
					culture = root.location.culture #LotR - PDX forgot to add this trigger
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					is_available_healthy_ai_adult = yes
					can_be_warrior_trigger = { ARMY_OWNER = root }
					prowess >= 10
					has_no_particular_noble_roots_trigger = yes
					culture = root.location.culture #LotR - PDX forgot to add this trigger
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = new_warrior_character
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
		hidden_effect = {
			scope:local_character = {
				if = {
					limit = {
						NOT = {
							has_trait = desert_warrior
						}
					}
					add_trait = desert_warrior
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1090.a

		stress_impact = {
			base = minor_stress_impact_loss
			impatient = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_trait = impatient
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1090.b
		
		trigger = {
			NOT = {
				current_travel_plan = {
					has_travel_plan_modifier = watchtower_guidance_modifier
				}
			}
		}
		
		current_travel_plan = {
			add_travel_plan_modifier = watchtower_guidance_modifier
		}

		stress_impact = {
			paranoid = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = arrogant
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1090.c
		
		trigger = {
			NOT = {
				current_travel_plan = {
					has_travel_plan_modifier = watchman_guidance_modifier
				}
			}
		}
		
		add_prestige = minor_prestige_gain
		
		current_travel_plan = {
			add_travel_plan_modifier = watchman_guidance_modifier
		}
		
		pay_short_term_gold = {
			target = scope:local_character
			gold = minor_gold_value
		}
		
		scope:local_character = {
			add_to_court_and_entourage_effect = yes
		}
		
		stress_impact = {
			greedy = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}

		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = paranoid
					short_term_gold < medium_gold_value
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1090.d
		
		current_travel_plan = {
			add_destination_progress = { days = 5 }
		}
		
		stress_impact = {
			patient = minor_stress_impact_gain
			craven = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = patient
					has_trait = craven
				}
			}
		}
	}

	after = {
		mp_resume_travel_plan = yes
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					is_courtier = no
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# Bovine Bounty
# Triggered by Cattle Pastures
travel_events_oltner_2.1100 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1100.t
	desc = travel_events_oltner_2.1100.desc
	theme = travel
	
	left_portrait = {
		character = root
		animation = happiness
	}

	right_portrait = {
		character = scope:local_character
		animation = lute_active
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		location = {
			has_building_or_higher = pastures_01
		}
	}

	cooldown = { years = 10 }

	immediate = {
		wayfarer_storyteller_fame_effect = { VALUE = roaming_reward_fame_very_small }
		mp_delay_travel_plan = { DAYS = 90 }
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					is_available_healthy_ai_adult = yes
					can_be_warrior_trigger = { ARMY_OWNER = root }
					has_no_particular_noble_roots_trigger = yes
					culture = root.location.culture #LotR - PDX forgot to add this trigger
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					is_available_healthy_ai_adult = yes
					can_be_warrior_trigger = { ARMY_OWNER = root }
					has_no_particular_noble_roots_trigger = yes
					culture = root.location.culture #LotR - PDX forgot to add this trigger
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = peasant_character
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1100.a
		
		trigger = {
			exists = capital_county
		}
		
		capital_county ?= {
			add_county_modifier = {
				modifier = herding_insights_modifier
				years = 10
			}
		}

		stress_impact = {
			content = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
			diligent = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = content
					has_trait = lazy
					has_trait = arrogant
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1100.b
		
		trigger = {
			NOT = {
				current_travel_plan = {
					has_travel_plan_modifier = extra_supplies_modifier
				}
			}
		}
		
		current_travel_plan = {
			add_travel_plan_modifier = extra_supplies_modifier
		}
		
		hidden_effect = {
			change_current_weight = 20
		}
		if = {
			limit = {
				has_character_modifier = emaciated_modifier
			}
			remove_character_modifier = emaciated_modifier
		}
		else = {
			add_character_modifier = {
				modifier = travel_well_fed_modifier
				years = 1
			}
		}
		current_travel_plan = {
			every_entourage_character = {
				custom = every_entourage_tt
				if = {
					limit = {
						has_character_modifier = emaciated_modifier
					}
					remove_character_modifier = emaciated_modifier
				}
				else = {
					add_character_modifier = {
						modifier = travel_well_fed_modifier
						years = 1
					}
				}
				hidden_effect = {
					change_current_weight = 20
				}
			}
		}

		stress_impact = {
			paranoid = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			temperate = medium_stress_impact_gain
			gluttonous = medium_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = humble
					has_trait = temperate
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1100.c
		
		create_artifact = {
			name = fp2_cheese_artifact
			description = fp2_cheese_artifact_desc
			modifier = artifact_health_gain_1_modifier
			modifier = artifact_attraction_opinion_negative_1_modifier
			type = miscellaneous
			visuals = pouch
			save_scope_as = newly_created_artifact
		}

		scope:newly_created_artifact = {
			flag_as_trash_artifact = yes
			set_variable = has_cheese_artifact
			save_scope_as = cheese_artifact
		}
		
		stress_impact = {
			temperate = minor_stress_impact_gain
			gluttonous = minor_stress_impact_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				OR = {
					has_trait = temperate
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1100.d
		
		current_travel_plan = {
			add_destination_progress = { days = 3 }
		}
		
		stress_impact = {
			impatient = minor_stress_impact_loss
		}

		ai_chance = {
			base = 25
		}
	}

	after = {
		mp_resume_travel_plan = yes
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					is_courtier = no
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# The Smith's Clangor
# Triggered by Blacksmiths/Smiths
travel_events_oltner_2.1110 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1110.t
	desc = travel_events_oltner_2.1110.desc
	theme = travel
	override_background = { reference = market }
	
	override_effect_2d = {
		reference = smoke	
	}
	
	left_portrait = {
		character = root
		animation = thinking
	}

	right_portrait = {
		character = scope:local_character
		animation = throne_room_one_handed_passive_3
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		location = {
			OR = {
				has_building_or_higher = blacksmiths_01
				has_building_or_higher = smiths_01
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					is_available_healthy_ai_adult = yes
					culture = root.location.culture
					can_be_warrior_trigger = { ARMY_OWNER = root }
					has_no_particular_noble_roots_trigger = yes
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					is_available_healthy_ai_adult = yes
					culture = root.location.culture
					can_be_warrior_trigger = { ARMY_OWNER = root }
					has_no_particular_noble_roots_trigger = yes
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = peasant_character
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
		scope:local_character = { add_character_flag = peasant_outfit }
	}

	option = {
		name = travel_events_oltner_2.1110.a
		
		pay_short_term_gold = {
			target = scope:local_character
			gold = minor_gold_value
		}
		
		custom_tooltip = purchase_artifact_common_armor_tt
		
		create_artifact_armor_effect = {
			OWNER = this
			CREATOR = scope:local_character
			SET_ARMOR_TYPE = flag:no
		}

		stress_impact = {
			greedy = minor_stress_impact_gain
			generous = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					short_term_gold < medium_gold_value
					has_trait = greedy
					any_equipped_character_artifact = {
						artifact_slot_type = armor
					}
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1110.b
		
		pay_short_term_gold = {
			target = scope:local_character
			gold = minor_gold_value
		}
		
		custom_tooltip = purchase_artifact_common_weapon_tt
		
		create_artifact_weapon_effect = {
			OWNER = this
			CREATOR = scope:local_character
			SET_WEAPON_TYPE = flag:no
		}

		stress_impact = {
			greedy = minor_stress_impact_gain
			generous = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					short_term_gold < medium_gold_value
					has_trait = greedy
					any_equipped_character_artifact = {
						artifact_slot_type = primary_armament
					}
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1110.c
		
		trigger = {
			has_royal_court = yes
			exists = house
		}
		
		pay_short_term_gold = {
			target = scope:local_character
			gold = minor_gold_value
		}
		
		custom_tooltip = purchase_artifact_common_shield_tt
		
		create_artifact_wall_shield_effect = {
			OWNER = this
			CREATOR = scope:local_character
			TARGET = root.house
		}
		
		stress_impact = {
			greedy = minor_stress_impact_gain
			generous = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					short_term_gold < medium_gold_value
					has_trait = greedy
					any_equipped_character_artifact = {
						count >= 3
						artifact_slot_type = wall_small
					}
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1110.d
		
		stress_impact = {
			impatient = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					is_courtier = no
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# A Broken Blacksmith
# Triggered by Blacksmiths/Smiths
travel_events_oltner_2.1120 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1120.t
	desc = travel_events_oltner_2.1120.desc
	theme = travel
	override_background = { reference = market }
	
	override_effect_2d = {
		reference = smoke	
	}
	
	left_portrait = {
		character = root
		animation = worry
	}

	right_portrait = {
		character = scope:local_character
		animation = wailing
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		location = {
			OR = {
				has_building_or_higher = blacksmiths_01
				has_building_or_higher = smiths_01
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					is_available_healthy_ai_adult = yes
					culture = root.location.culture
					can_be_warrior_trigger = { ARMY_OWNER = root }
					has_no_particular_noble_roots_trigger = yes
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					is_available_healthy_ai_adult = yes
					culture = root.location.culture
					can_be_warrior_trigger = { ARMY_OWNER = root }
					has_no_particular_noble_roots_trigger = yes
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = peasant_character
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
		hidden_effect = {
			scope:local_character = {
				add_character_flag = peasant_outfit
				if = {
					limit = {
						NOT = {
							has_trait = eccentric
						}
					}
					add_trait = eccentric
				}
				if = {
					limit = {
						martial <= 16
					}
					add_martial_skill = 12
				}
				if = {
					limit = {
						prowess <= 12
					}
					add_prowess_skill = 8
				}
				force_character_skill_recalculation = yes
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1120.a
		
		pay_short_term_gold = {
			target = scope:local_character
			gold = tiny_gold_value
		}
		
		add_piety = medium_piety_gain
		
		scope:local_character = {
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 50
			}
		}

		stress_impact = {
			greedy = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
			callous = medium_stress_impact_gain
			sadistic = medium_stress_impact_gain
			generous = minor_stress_impact_loss
			humble = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					short_term_gold < minor_gold_value
					has_trait = greedy
					has_trait = arrogant
					has_trait = callous
					has_trait = sadistic
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1120.b
		
		scope:local_character = {
			add_to_court_and_entourage_effect = yes
			create_inspiration = weapon_inspiration
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 50
			}
			custom_tooltip = becomes_inspired
		}

		stress_impact = {
			paranoid = medium_stress_impact_gain
			gregarious = minor_stress_impact_loss
			trusting = minor_stress_impact_loss
		}

		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1120.c
		
		stress_impact = {
			impatient = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					is_courtier = no
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# The Sentinel Hills
# Triggered by Hill Forts
travel_events_oltner_2.1130 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1130.t
	desc = travel_events_oltner_2.1130.desc
	theme = travel
	#override_background = { reference = market }
	
	override_effect_2d = {
		reference = fog	
	}
	
	left_portrait = {
		character = root
		animation = lantern
	}

	right_portrait = {
		character = scope:local_character
		animation = throne_room_one_handed_passive_3
	}
	
	lower_center_portrait = {
		character = scope:holder_scope
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		location = {
			has_building_or_higher = hill_forts_01
			NOT = {
				county.holder ?= root
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		save_scope_as = player_scope
		location = {
			save_scope_as = location
			barony.holder = { save_scope_as = holder_scope }
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					is_available_healthy_ai_adult = yes
					culture = root.location.culture
					can_be_warrior_trigger = { ARMY_OWNER = root }
					has_no_particular_noble_roots_trigger = yes
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					is_available_healthy_ai_adult = yes
					culture = root.location.culture
					can_be_warrior_trigger = { ARMY_OWNER = root }
					has_no_particular_noble_roots_trigger = yes
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = new_warrior_character
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
		hidden_effect = {
			scope:local_character = {
				add_character_flag = wear_armor 
				if = {
					limit = {
						prowess <= 16
					}
					add_prowess_skill = 12
				}
				if = {
					limit = {
						NOT = {
							has_trait = strong
						}
					}
					add_trait = strong
				}
				force_character_skill_recalculation = yes
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1130.a
		
		trigger = {
			NOT = {
				current_travel_plan = {
					has_travel_plan_modifier = hill_fort_guards_modifier
				}
			}
		}
		
		scope:holder_scope = {
			send_interface_toast = {
				title = toll_payed
				left_icon = scope:player_scope
				right_icon = scope:location.barony
				scope:player_scope = {
					pay_short_term_gold = {
						target = scope:holder_scope
						gold = tiny_gold_value
					}
				}
			}
		}
		current_travel_plan = {
			add_travel_plan_modifier = hill_fort_guards_modifier
		}

		stress_impact = {
			greedy = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					short_term_gold < minor_gold_value
					has_trait = greedy
					has_trait = arrogant
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1130.b
		
		
		scope:holder_scope = {
			send_interface_toast = {
				title = toll_payed
				left_icon = scope:player_scope
				right_icon = scope:location.barony
				scope:player_scope = {
					pay_short_term_gold = {
						target = scope:holder_scope
						gold = tiny_gold_value
					}
				}
			}
		}
		
		scope:local_character = {
			add_to_court_and_entourage_effect = yes
		}
		if = {
			limit = {
				can_add_hook = {
					type = loyalty_hook
					target = scope:local_character 
				}
			}
			add_hook = {
				type = loyalty_hook
				target = scope:local_character 
			}
		}

		stress_impact = {
			paranoid = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					short_term_gold < minor_gold_value
					has_trait = paranoid
					has_trait = shy
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1130.c
		
		trigger = {
			NOT = {
				current_travel_plan = {
					has_travel_plan_modifier = hill_fort_guards_modifier
				}
			}
		}
		
		add_prestige = minor_prestige_gain
		
		scope:holder_scope = {
			send_interface_toast = {
				title = toll_payed
				left_icon = scope:player_scope
				right_icon = scope:location.barony
				scope:player_scope = {
					pay_short_term_gold = {
						target = scope:holder_scope
						gold = minor_gold_value
					}
				}
			}
		}
		current_travel_plan = {
			add_travel_plan_modifier = hill_fort_guards_modifier
		}
		
		scope:local_character = {
			add_to_court_and_entourage_effect = yes
		}
		if = {
			limit = {
				can_add_hook = {
					type = loyalty_hook
					target = scope:local_character 
				}
			}
			add_hook = {
				type = loyalty_hook
				target = scope:local_character 
			}
		}
		
		stress_impact = {
			greedy = medium_stress_impact_gain
			content = minor_stress_impact_gain
			humble = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					short_term_gold < medium_gold_value
					has_trait = greedy
					has_trait = content
					has_trait = humble
				}
			}
			
		}
	}

	option = {
		name = travel_events_oltner_2.1130.d
		
		current_travel_plan = { delay_travel_plan = { days = 3 } }
		
		stress_impact = {
			generous = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
		scope:local_character = {
			remove_character_flag = wear_armor
		}
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					is_courtier = no
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# Diminutive Defenders
# Triggered by Hill Forts
travel_events_oltner_2.1140 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1140.t
	desc = travel_events_oltner_2.1140.desc
	theme = travel
	
	left_portrait = {
		character = root
		animation = laugh
	}

	right_portrait = {
		character = scope:local_character
		animation = wooden_sword_coup_degrace
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		location = {
			has_building_or_higher = hill_forts_01
		}
	}

	cooldown = { years = 10 }

	immediate = {
		wayfarer_storyteller_fame_effect = { VALUE = roaming_reward_fame_very_small }
		mp_delay_travel_plan = { DAYS = 90 }
		save_scope_as = player_scope
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					is_available_healthy_ai_child = yes
					age <= 12
					age >= 6
					has_no_particular_noble_roots_trigger = yes
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					is_available_healthy_ai_child = yes
					age <= 12
					age >= 6
					has_no_particular_noble_roots_trigger = yes
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = peasant_young_child_character
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1140.a
		
		add_prestige = minor_prestige_gain
		
		if = {
			limit = {
				scope:location = {
					NOT = {
						has_province_modifier = famous_visit_modifier
					}
				}
			}
			scope:location = {
				add_province_modifier = {
					modifier = famous_visit_modifier
					years = 10
				}
			}
		}

		stress_impact = {
			content = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			calm = minor_stress_impact_gain
			arrogant = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = content
					has_trait = humble
					has_trait = calm
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1140.b
		
		random_list = {
			75 = {
				send_interface_toast = {
					title = travel_hastened
					left_icon = scope:local_character
					current_travel_plan = {
						add_destination_progress = { days = 10 }
						if = {
							limit = {
								NOT = {
									has_travel_plan_modifier = child_scouts_modifier
								}
							}
							add_travel_plan_modifier = child_scouts_modifier
						}
					}
				}
			}
			25 = {
				send_interface_toast = {
					title = travel_delayed
					left_icon = scope:local_character
					current_travel_plan = {
						delay_travel_plan = { days = 5 }
					}
				}
			}
		}

		stress_impact = {
			patient = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = patient
					has_trait = shy
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1140.c
		
		add_dread = minor_dread_gain
		
		if = {
			limit = {
				scope:location = {
					NOT = {
						has_province_modifier = extra_patrols_modifier
					}
				}
			}
			scope:location = {
				add_province_modifier = {
					modifier = extra_patrols_modifier
					years = 10
				}
			}
		}
		
		stress_impact = {
			compassionate = medium_stress_impact_gain
			forgiving = minor_stress_impact_gain
			sadistic = major_stress_impact_loss
			callous = medium_stress_impact_loss
			arbitrary = medium_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = compassionate
					has_trait = forgiving
				}
			}
			
		}
	}

	option = {
		name = travel_events_oltner_2.1140.d
		
		stress_impact = {
			impatient = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
		scope:local_character = {
			remove_character_flag = wear_armor
		}
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					is_courtier = no
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# The Echo of Horns
# Triggered by Hill Forts
travel_events_oltner_2.1150 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1150.t
	desc = travel_events_oltner_2.1150.desc
	theme = travel
	
	left_portrait = {
		character = scope:local_character_2
		animation = celebrate_sword
	}

	right_portrait = {
		character = scope:local_character
		animation = hunting_horn
	}
	
	lower_center_portrait = {
		character = scope:retinue_member
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		location = {
			has_building_or_higher = hill_forts_01
		}
	}

	cooldown = { years = 10 }

	immediate = {
		wayfarer_storyteller_fame_effect = { VALUE = roaming_reward_fame_small }
		mp_delay_travel_plan = { DAYS = 90 }
		save_scope_as = player_scope
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					culture = root.location.culture
					martial >= 12
					prowess >= 12
					can_be_warrior_trigger = { ARMY_OWNER = root }
					is_available_healthy_ai_adult = yes
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					culture = root.location.culture
					martial >= 12
					prowess >= 12
					can_be_warrior_trigger = { ARMY_OWNER = root }
					is_available_healthy_ai_adult = yes
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = new_warrior_character
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					can_be_warrior_trigger = { ARMY_OWNER = root }
					is_available_healthy_ai_adult = yes
					NOT = { this = scope:local_character }
					culture = root.location.culture #LotR - PDX forgot to add this trigger
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					can_be_warrior_trigger = { ARMY_OWNER = root }
					is_available_healthy_ai_adult = yes
					NOT = { this = scope:local_character }
					culture = root.location.culture #LotR - PDX forgot to add this trigger
				}
				save_scope_as = local_character_2
			}
		}
		else = {
			create_character = {
				template = new_warrior_character
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character_2
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
		hidden_effect = {
			scope:local_character = {
				add_character_flag = wear_armor 
				add_prowess_skill = 4
				force_character_skill_recalculation = yes
			}
			scope:local_character_2 = {
				add_character_flag = peasant_outfit
				add_trait = one_eyed
			}
		}
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					is_adult = yes
					NOT = { 
						this = root
					}
				}
				weight = {
					base = 1
					modifier = {
						has_any_bad_relationship_with_root_trigger = yes
						add = 500
					}
					modifier = {
						add = prowess
					}
				}
				save_scope_as = retinue_member
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1150.a
		duel = {
			skill = prowess
			target = scope:local_character_2
			75 = {
				desc = travel_events_oltner_2.1150.a.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				send_interface_toast = {
					title = travel_events_oltner_2.1150.a.success 
					left_icon = root 
					right_icon = scope:local_character_2
					add_prestige = major_prestige_gain
					scope:local_character_2 = {
		    			death = {
							death_reason = death_fight_killer
							killer = root
						}
    				}
				}
			}
			25 = {
				desc = travel_events_oltner_2.1150.a.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				send_interface_toast = {
					title = travel_events_oltner_2.1150.a.failure
					left_icon = root 
					right_icon = scope:local_character_2
					add_prestige = minor_prestige_gain
					increase_wounds_no_death_effect = { REASON = battle }
					scope:local_character = {
		    			death = {
							death_reason = death_fight_killer
							killer = scope:local_character_2
						}
    				}
				}
			}
		}
		
		if = {
			limit = {
				NOT = {
					root.culture = scope:location.culture
				}
			}
			scope:location.culture = {
				change_cultural_acceptance = {
					target = root.culture
					value = 5
					desc = cultural_acceptance_gain_assisted_battle
				}
			}
		}

		stress_impact = {
			craven = major_stress_impact_gain
			calm = minor_stress_impact_gain
			brave = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = craven
					has_trait = calm
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1150.b
		
		random_list = {
			50 = {
				desc = travel_events_oltner_2.1150.b.success
				send_interface_toast = {
					title = travel_events_oltner_2.1150.b.success
					left_icon = scope:local_character 
					right_icon = scope:local_character_2
					scope:local_character_2 = {
		    			death = {
							death_reason = death_fight_killer
							killer = scope:local_character
						}
    				}
					add_gold = minor_gold_value
				}
			}
			50 = {
				desc = travel_events_oltner_2.1150.b.failure
				send_interface_toast = {
					title = travel_events_oltner_2.1150.b.failure
					left_icon = scope:local_character_2
					right_icon = scope:local_character
					scope:local_character = {
		    			death = {
							death_reason = death_fight_killer
							killer = scope:local_character_2
						}
    				}
					add_gold = tiny_gold_value
				}
			}
		}

		stress_impact = {
			brave = major_stress_impact_gain
			generous = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = brave
					has_trait = generous
					has_trait = compassionate
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1150.c
		
		trigger = {
			exists = scope:retinue_member
		}
		scope:retinue_member = {
			duel = {
				skill = prowess
				target = scope:local_character_2
				50 = {
					desc = travel_events_oltner_2.1150.c.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
						min = -49
					}
					root = {
						send_interface_toast = {
							title = travel_events_oltner_2.1150.c.success 
							left_icon = scope:retinue_member 
							right_icon = scope:local_character_2
							scope:retinue_member = {
								add_prestige = major_prestige_gain
							}
							scope:local_character_2 = {
								death = {
									death_reason = death_fight_killer
									killer = scope:retinue_member
								}
							}
						}
					}
				}
				50 = {
					desc = travel_events_oltner_2.1150.c.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					root = {
						send_interface_toast = {
							title = travel_events_oltner_2.1150.c.failure
							left_icon = scope:retinue_member 
							right_icon = scope:local_character_2
							scope:retinue_member = {
								death = {
									death_reason = death_fight_killer
									killer = scope:local_character_2
								}
							}
							root = {
								if = {
									limit = {
										has_relation_rival = scope:retinue_member 
									}
									add_stress = massive_stress_loss
								}
							}
						}
					}
				}
			}
		}
		
		stress_impact = {
			compassionate = minor_stress_impact_gain
			forgiving = medium_stress_impact_gain
			brave = medium_stress_impact_gain
			sadistic = medium_stress_impact_loss
			callous = medium_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = compassionate
					has_trait = forgiving
				}
			}
			
		}
	}

	option = {
		name = travel_events_oltner_2.1150.d
		
		stress_impact = {
			brave = medium_stress_impact_gain
			impatient = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
		if = {
			limit = {
				scope:local_character = { is_alive = yes }
			}
			scope:local_character = {
				remove_character_flag = wear_armor
			}
		}
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					is_courtier = no
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# Trailside Bond
# Triggered by Entourage
travel_events_oltner_2.1160 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1160.t
	desc = travel_events_oltner_2.1160.desc
	theme = travel
	
	left_portrait = {
		character = scope:entourage_member_1
		animation = hero_flex
		camera = camera_event_very_left
	}

	right_portrait = {
		character = scope:entourage_member_2
		animation = wrestling_victory
		camera = camera_event_very_left
	}
	
	trigger = {
		static_group_filter = {
			group = travel_events_oltner_2.1160
			match = 0.50
		}
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		current_travel_plan = {
			any_entourage_character = {
				NOT = { this = root }
				is_available_travelling_adult = yes
				save_temporary_scope_as = first_entourage
			}
			any_entourage_character = {
				is_available_travelling_adult = yes
				NOR = { 
					this = root 
					this = scope:first_entourage
					has_relation_friend = scope:first_entourage
					has_any_bad_relationship_with_character_trigger = { 
						CHARACTER = scope:first_entourage 
					}
				}
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		wayfarer_storyteller_fame_effect = { VALUE = roaming_reward_fame_very_small }
		mp_delay_travel_plan = { DAYS = 90 }
		save_scope_as = player_scope
		location = {
			save_scope_as = location
		}
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					is_available_travelling_adult = yes
					save_temporary_scope_as = first_entourage_limit
					current_travel_plan = {
						any_entourage_character = {
							NOT = { this = root }
							NOT = { this = scope:first_entourage_limit }
							NOT = { has_relation_friend = scope:first_entourage_limit }
							is_available_travelling_adult = yes
							NOT = { has_any_bad_relationship_with_character_trigger = { CHARACTER = scope:first_entourage_limit } }
						}
					}
				}
				weight = {
					base = 1
					modifier = {
						add = 50
						is_of_major_interest_to_root_trigger = yes
					}
					modifier = {
						add = 5
						is_of_minor_interest_to_root_trigger = yes
					}
				}
				save_scope_as = entourage_member_1
			}
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					NOT = { this = scope:entourage_member_1 }
					NOT = { has_relation_friend = scope:entourage_member_1 }
					is_available_travelling_adult = yes
					NOT = { has_any_bad_relationship_with_character_trigger = { CHARACTER = scope:entourage_member_1 } }
				}
				weight = {
					base = 1
					modifier = {
						add = 5
						number_of_traits_in_common = { target = scope:entourage_member_1 value >= 1 }
					}
					modifier = {
						add = 10
						number_of_traits_in_common = { target = scope:entourage_member_1 value >= 2 }
					}
					modifier = {
						add = 50
						number_of_traits_in_common = { target = scope:entourage_member_1 value >= 3 }
					}
					modifier = {
						add = 10
						is_of_major_interest_to_root_trigger = yes
					}
					modifier = {
						add = 5
						is_of_minor_interest_to_root_trigger = yes
					}
				}
				save_scope_as = entourage_member_2
			}
		}
		scope:entourage_member_1 = {
			set_relation_friend = {
				target = scope:entourage_member_2
				involved_character = root
				reason = friend_bonded_on_the_road
				province = root.location
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1160.a
		
		scope:entourage_member_1 = {
			add_prestige = medium_prestige_gain
			if = {
				limit = {
					stress > 0
				}
				add_stress = major_stress_impact_loss
			}
		}
		
		scope:entourage_member_2 = {
			add_prestige = medium_prestige_gain
			if = {
				limit = {
					stress > 0
				}
				add_stress = major_stress_impact_loss
			}
		}

		stress_impact = {
			arrogant = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
			arbitrary = minor_stress_impact_gain
			callous = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = arrogant
					has_trait = sadistic
					has_trait = arbitrary
					has_trait = callous
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1160.b
		trigger = {
			OR = {
				scope:entourage_member_1 = {
					OR = {
						is_close_or_extended_family_of = root
						is_consort_of = root
					}
				}
				scope:entourage_member_2 = {
					OR = {
						is_close_or_extended_family_of = root
						is_consort_of = root
					}
				}
			}
			OR = {
				scope:entourage_member_1 = { has_no_particular_noble_roots_trigger = yes }
				scope:entourage_member_2 = { has_no_particular_noble_roots_trigger = yes }
			}
		}
		reason = family
		
		add_prestige = medium_prestige_gain
		
		scope:entourage_member_1 = {
			remove_relation_friend = scope:entourage_member_2
		}
		
		scope:entourage_member_1 = {
			add_stress = medium_stress_impact_gain
		}
		
		scope:entourage_member_2 = {
			add_stress = medium_stress_impact_gain
		}

		stress_impact = {
			callous = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
			arrogant = minor_stress_impact_loss
			compassionate = minor_stress_impact_gain
			just = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = compassionate
					has_trait = just
					has_trait = forgiving
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1160.c
		
		current_travel_plan = {
			add_destination_progress = { days = 5 }
		}
		
		stress_impact = {
			impatient = medium_stress_impact_loss
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
	}
}

# Path of Rivalry
# Triggered by Entourage
travel_events_oltner_2.1170 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1170.t
	desc = travel_events_oltner_2.1170.desc
	theme = travel
	override_effect_2d = {
		reference = rain	
	}
	
	left_portrait = {
		character = scope:entourage_member_1
		animation = rage
	}

	right_portrait = {
		character = scope:entourage_member_2
		animation = eyeroll
	}
	
	trigger = {
		static_group_filter = {
			group = travel_events_oltner_2.1170
			match = 0.50
		}
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		current_travel_plan = {
			any_entourage_character = {
				NOT = { this = root }
				is_available_travelling_adult = yes
				ai_boldness > 0
				save_temporary_scope_as = first_entourage
			}
			any_entourage_character = {
				NOT = { this = root }
				NOT = { this = scope:first_entourage }
				NOT = { has_relation_rival = scope:first_entourage }
				is_available_travelling_adult = yes
				ai_boldness <= 0
				OR = {
					number_of_traits_in_common = { target = scope:first_entourage value <= 0 }
					has_relation_potential_rival = scope:first_entourage
					has_trait = wrathful
				}
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		save_scope_as = player_scope
		location = {
			save_scope_as = location
		}
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					is_available_travelling_adult = yes
					ai_boldness > 0
					save_temporary_scope_as = first_entourage_limit
					current_travel_plan = {
						any_entourage_character = {
							NOT = { this = root }
							NOT = { this = scope:first_entourage_limit }
							NOT = { has_relation_rival = scope:first_entourage_limit }
							is_available_travelling_adult = yes
							ai_boldness <= 0
							OR = {
								number_of_traits_in_common = { target = scope:first_entourage_limit value <= 0 }
								has_relation_potential_rival = scope:first_entourage_limit
								has_trait = wrathful
							}
						}
					}
				}
				weight = {
					base = 1
					modifier = {
						add = 50
						is_of_major_interest_to_root_trigger = yes
					}
					modifier = {
						add = 5
						is_of_minor_interest_to_root_trigger = yes
					}
				}
				save_scope_as = entourage_member_1
			}
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					NOT = { this = scope:entourage_member_1 }
					NOT = { has_relation_rival = scope:entourage_member_1 }
					is_available_travelling_adult = yes
					ai_boldness <= 0
					OR = {
						number_of_traits_in_common = { target = scope:entourage_member_1 value <= 0 }
						has_relation_potential_rival = scope:entourage_member_1
						has_trait = wrathful
					}
				}
				weight = {
					base = 1
					modifier = {
						add = 50
						number_of_traits_in_common = { target = scope:entourage_member_1 value <= 0 }
					}
					modifier = {
						add = 10
						is_of_major_interest_to_root_trigger = yes
					}
					modifier = {
						add = 5
						is_of_minor_interest_to_root_trigger = yes
					}
				}
				save_scope_as = entourage_member_2
			}
		}
		scope:entourage_member_1 = {
			set_relation_rival = {
				target = scope:entourage_member_2
				involved_character = root
				reason = rival_conflict_on_the_road
				province = root.location
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1170.a
		
		trigger = { diplomacy >= high_skill_rating } 
		show_as_unavailable = { diplomacy < high_skill_rating }
		skill = diplomacy
		
		add_prestige = major_prestige_gain
		current_travel_plan = {
			add_destination_progress = { days = 10 }
			add_travel_plan_modifier = {
				modifier = safe_routes_modifier
				months = 1
			}
		}
		
		scope:entourage_member_1 = {
			remove_relation_rival = scope:entourage_member_2
		}

		stress_impact = {
			sadistic = minor_stress_impact_gain
			arbitrary = minor_stress_impact_gain
			callous = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = sadistic
					has_trait = arbitrary
					has_trait = callous
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1170.b
		
		scope:entourage_member_1 = {
			add_opinion = {
				modifier = grateful_opinion
				opinion = 30
				target = root
			}
			duel = {
				skills = { prowess martial }
				value = 10
				75 = {
					desc = travel_events_oltner_2.1170.a.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
						min = -49
					}
					root = {
						send_interface_toast = {
							title = travel_events_oltner_2.1170.a.success 
							left_icon = scope:entourage_member_1
							add_prestige = medium_prestige_gain
							current_travel_plan = {
								add_destination_progress = { days = 10 }
							}
						}
					}
				}
				25 = {
					desc = travel_events_oltner_2.1170.a.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					root = {
						send_interface_toast = {
							title = travel_events_oltner_2.1170.a.failure
							left_icon = scope:entourage_member_1
							scope:entourage_member_1 = {
								increase_wounds_effect = { REASON = accident }
							}
							scope:entourage_member_2 = {
								increase_wounds_effect = { REASON = accident }
							}
						}
					}
				}
			}
		}

		stress_impact = {
			arrogant = minor_stress_impact_gain
			patient = minor_stress_impact_gain
		}

		ai_chance = {
			base = 1
			modifier = {
				factor = 0
				OR = {
					has_trait = arrogant
					has_trait = patient
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1170.c
		
		scope:entourage_member_2 = {
			add_opinion = {
				modifier = grateful_opinion
				opinion = 30
				target = root
			}
			duel = {
				skills = { learning intrigue }
				value = 10
				75 = {
					desc = travel_events_oltner_2.1170.c.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
						min = -49
					}
					root = {
						send_interface_toast = {
							title = travel_events_oltner_2.1170.c.success 
							left_icon = scope:entourage_member_2
							add_prestige = medium_prestige_gain
							current_travel_plan = {
								add_travel_plan_modifier = {
									modifier = safe_routes_modifier
									months = 1
								}
							}
						}
					}
				}
				25 = {
					desc = travel_events_oltner_2.1170.c.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					root = {
						send_interface_toast = {
							title = travel_events_oltner_2.1170.c.failure
							left_icon = scope:entourage_member_2
							current_travel_plan = { delay_travel_plan = { days = 3 } }
						}
					}
				}
			}
		}
		
		stress_impact = {
			arrogant = minor_stress_impact_gain
			impatient = minor_stress_impact_gain
		}

		ai_chance = {
			base = 1
		}
	}

	option = {
		name = travel_events_oltner_2.1170.d
		flavor = do_it_yourself
		
		current_travel_plan = {
			add_destination_progress = { days = 2 }
		}
		
		stress_impact = {
			arrogant = medium_stress_impact_loss
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
	}
}

# Moonlit Confessions
# Triggered by Entourage
travel_events_oltner_2.1180 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1180.t
	desc = travel_events_oltner_2.1180.desc
	theme = travel
	
	override_background = { reference = bp1_bonfire }
	
	left_portrait = {
		character = scope:entourage_member_1
		animation = flirtation_left
	}

	right_portrait = {
		character = scope:entourage_member_2
		animation = love
	}
	
	trigger = {
		static_group_filter = {
			group = travel_events_oltner_2.1180
			match = 0.50
		}
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		current_travel_plan = {
			any_entourage_character = {
				NOT = { this = root }
				is_available_travelling_adult = yes
				might_cheat_on_every_partner_trigger = yes
				NOR = {
					has_trait = chaste
					has_trait = celibate
					any_consort = { this = root }
				}
				save_temporary_scope_as = first_entourage
			}
			any_entourage_character = {
				NOT = { this = root }
				NOT = { this = scope:first_entourage }
				NOT = { has_relation_lover = scope:first_entourage }
				is_available_travelling_adult = yes
				might_cheat_on_every_partner_trigger = yes
				NOR = {
					has_trait = chaste
					has_trait = celibate
					any_consort = { this = root }
				}
				age <= scope:first_entourage.age_plus_10
				age >= scope:first_entourage.age_minus_10
				can_set_relation_lover_trigger = { CHARACTER = scope:first_entourage }
				would_attempt_to_seduce_trigger = { CHARACTER = scope:first_entourage }
				scope:first_entourage = { would_attempt_to_seduce_trigger = { CHARACTER = prev } }
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		save_scope_as = player_scope
		location = {
			save_scope_as = location
		}
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					is_available_travelling_adult = yes
					might_cheat_on_every_partner_trigger = yes
					NOR = {
						has_trait = chaste
						has_trait = celibate
						any_consort = { this = root }
					}
					save_temporary_scope_as = first_entourage_limit
					root.current_travel_plan = {
						any_entourage_character = {
							NOT = { this = root }
							NOT = { this = scope:first_entourage_limit }
							NOT = { has_relation_lover = scope:first_entourage_limit }
							is_available_travelling_adult = yes
							might_cheat_on_every_partner_trigger = yes
							NOR = {
								has_trait = chaste
								has_trait = celibate
								any_consort = { this = root }
							}
							age <= scope:first_entourage_limit.age_plus_10
							age >= scope:first_entourage_limit.age_minus_10
							can_set_relation_lover_trigger = { CHARACTER = scope:first_entourage_limit }
							would_attempt_to_seduce_trigger = { CHARACTER = scope:first_entourage_limit }
							scope:first_entourage_limit = { would_attempt_to_seduce_trigger = { CHARACTER = prev } }
						}
					}
				}
				weight = {
					base = 1
					modifier = {
						add = 50
						is_of_major_interest_to_root_trigger = yes
					}
					modifier = {
						add = 5
						is_of_minor_interest_to_root_trigger = yes
					}
				}
				save_scope_as = entourage_member_1
			}
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					NOT = { this = scope:entourage_member_1 }
					NOT = { has_relation_lover = scope:entourage_member_1 }
					is_available_travelling_adult = yes
					might_cheat_on_every_partner_trigger = yes
					NOR = {
						has_trait = chaste
						has_trait = celibate
						any_consort = { this = root }
					}
					age <= scope:entourage_member_1.age_plus_10
					age >= scope:entourage_member_1.age_minus_10
					can_set_relation_lover_trigger = { CHARACTER = scope:entourage_member_1 }
					would_attempt_to_seduce_trigger = { CHARACTER = scope:entourage_member_1 }
					scope:entourage_member_1 = { would_attempt_to_seduce_trigger = { CHARACTER = prev } }
				}
				weight = {
					base = 1
					modifier = {
						add = 10
						is_of_major_interest_to_root_trigger = yes
					}
					modifier = {
						add = 5
						is_of_minor_interest_to_root_trigger = yes
					}
				}
				save_scope_as = entourage_member_2
			}
		}
		scope:entourage_member_1 = {
			set_relation_lover = {
				target = scope:entourage_member_2
				involved_character = root
				reason = lover_moonlit_evening_on_the_road
				province = root.location
			}
			if = {
				limit = {
					any_secret = {
						secret_type = secret_lover
						secret_target = {
							this = scope:entourage_member_2
						}
						NOT = { is_known_by = root }
					}
				}
				random_secret = {
					limit = {
						secret_type = secret_lover
						secret_target = {
							this = scope:entourage_member_2
						}
						NOT = { is_known_by = root }
					}
					save_scope_as = secret
				}
			}
		}
		if = {
			limit = {
				scope:entourage_member_1 = {
					can_set_relation_lover_trigger = { CHARACTER = root }
					is_attracted_to_gender_of = root
					root = { is_attracted_to_gender_of = prev }
					NOT = {
						relation_with_character_is_incestuous_in_faith_trigger = {
							FAITH = scope:entourage_member_1.faith
							CHARACTER = root
						}
					}
				}
			}
			scope:entourage_member_1 = { save_scope_as = seduced_entourage }
		}
		else_if = {
			limit = {
				scope:entourage_member_2 = {
					can_set_relation_lover_trigger = { CHARACTER = root }
					is_attracted_to_gender_of = root
					root = { is_attracted_to_gender_of = prev }
					NOT = {
						relation_with_character_is_incestuous_in_faith_trigger = {
							FAITH = scope:entourage_member_2.faith
							CHARACTER = root
						}
					}
				}
			}
			scope:entourage_member_2 = { save_scope_as = seduced_entourage }
		}
	}

	option = {
		name = travel_events_oltner_2.1180.a
		
		trigger = {
			has_trait = seducer
			exists = scope:seduced_entourage
		} 
		trait = seducer
		
		add_intrigue_skill = 1
		
		if = {
			limit = {
				scope:seduced_entourage = scope:entourage_member_1
			}
			scope:entourage_member_1 = {
				remove_relation_lover = scope:entourage_member_2
			}
			reverse_add_opinion = {
				target = scope:entourage_member_2
				modifier = took_my_lover_opinion
				opinion = -30
			}
		}
		else = {
			scope:entourage_member_2 = {
				remove_relation_lover = scope:entourage_member_1
			}
			reverse_add_opinion = {
				target = scope:entourage_member_1
				modifier = took_my_lover_opinion
				opinion = -30
			}
		}
		
		set_relation_lover = {
			target = scope:seduced_entourage
			involved_character = root
			reason = lover_moonlit_evening_on_the_road
			province = root.location
		}
		
		stress_impact = {
			base = major_stress_impact_loss
			chaste = major_stress_impact_gain
			compassionate = minor_stress_impact_gain
			just = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = chaste
					has_trait = compassionate
					has_trait = just
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1180.b
		
		flavor = i_saw_nothing
		
		random = {
			chance = 25
			scope:entourage_member_1 = {
				remove_relation_lover = scope:entourage_member_2
			}
		}
		
		reverse_add_opinion = {
			target = scope:entourage_member_1 
			modifier = annoyed_opinion
			opinion = -10
		}
		
		reverse_add_opinion = {
			target = scope:entourage_member_2 
			modifier = annoyed_opinion
			opinion = -10
		}

		stress_impact = {
			shy = minor_stress_impact_gain
			patient = minor_stress_impact_gain
		}

		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = shy
					has_trait = patient
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1180.c
		
		add_intrigue_skill = 1
		
		scope:secret = { reveal_to = root }
		scope:secret = {
			expose_secret = root
		}
		
		stress_impact = {
			arrogant = minor_stress_impact_gain
			impatient = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
		}
	}

	option = {
		name = travel_events_oltner_2.1180.d
		
		scope:secret = { reveal_to = root }
		
		stress_impact = {
			compassionate = medium_stress_impact_loss
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
	}
}

# A Stolen Keepsake
# Triggered by Entourage
travel_events_oltner_2.1190 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1190.t
	desc = travel_events_oltner_2.1190.desc
	theme = travel
	override_effect_2d = {
		reference = fog	
	}
	
	left_portrait = {
		character = scope:entourage_member_1
		animation = celebrate_mace
	}

	right_portrait = {
		character = scope:entourage_member_2
		animation = eyeroll
	}
	
	trigger = {
		static_group_filter = {
			group = travel_events_oltner_2.1190
			match = 0.50
		}
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		current_travel_plan = {
			any_entourage_character = {
				NOT = { this = root }
				is_available_travelling_adult = yes
				ai_greed > 0
				save_temporary_scope_as = first_entourage
			}
			any_entourage_character = {
				NOT = { this = root }
				NOT = { this = scope:first_entourage }
				NOT = { has_relation_rival = scope:first_entourage }
				is_available_travelling_adult = yes
				ai_greed <= 0
				OR = {
					number_of_traits_in_common = { target = scope:first_entourage value <= 0 }
					has_relation_potential_rival = scope:first_entourage
					has_trait = wrathful
				}
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		save_scope_as = player_scope
		location = {
			save_scope_as = location
		}
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					is_available_travelling_adult = yes
					ai_greed > 0
					save_temporary_scope_as = first_entourage_limit
					current_travel_plan = {
						any_entourage_character = {
							NOT = { this = root }
							NOT = { this = scope:first_entourage_limit }
							NOT = { has_relation_rival = scope:first_entourage_limit }
							is_available_travelling_adult = yes
							ai_greed <= 0
							OR = {
								number_of_traits_in_common = { target = scope:first_entourage_limit value <= 0 }
								has_relation_potential_rival = scope:first_entourage_limit
								has_trait = wrathful
							}
						}
					}
				}
				weight = {
					base = 1
					modifier = {
						add = 50
						is_of_major_interest_to_root_trigger = yes
					}
					modifier = {
						add = 5
						is_of_minor_interest_to_root_trigger = yes
					}
				}
				save_scope_as = entourage_member_1
			}
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					NOT = { this = scope:entourage_member_1 }
					NOT = { has_relation_rival = scope:entourage_member_1 }
					is_available_travelling_adult = yes
					ai_greed <= 0
					OR = {
						number_of_traits_in_common = { target = scope:entourage_member_1 value <= 0 }
						has_relation_potential_rival = scope:entourage_member_1
						has_trait = wrathful
					}
				}
				weight = {
					base = 1
					modifier = {
						add = 50
						number_of_traits_in_common = { target = scope:entourage_member_1 value <= 0 }
					}
					modifier = {
						add = 10
						is_of_major_interest_to_root_trigger = yes
					}
					modifier = {
						add = 5
						is_of_minor_interest_to_root_trigger = yes
					}
				}
				save_scope_as = entourage_member_2
			}
		}
		scope:entourage_member_1 = {
			set_relation_rival = {
				target = scope:entourage_member_2
				involved_character = root
				reason = rival_stole_on_the_road
				province = root.location
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1190.a
		
		reverse_add_opinion = {
			target = scope:entourage_member_1 
			modifier = feast_sided_with_me_in_my_fight_opinion
			years = 15
			opinion = 30
		}
		
		reverse_add_opinion = {
			target = scope:entourage_member_2 
			modifier = feast_sided_against_me_in_my_fight_opinion
			years = 15
			opinion = -30
		}
		
		scope:entourage_member_1 = {
			add_gold = root.medium_gold_value
		}

		stress_impact = {
			arbitrary = minor_stress_impact_loss
			trusting = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = trusting
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1190.b
		
		reverse_add_opinion = {
			target = scope:entourage_member_2 
			modifier = feast_sided_with_me_in_my_fight_opinion
			years = 15
			opinion = 30
		}
		
		reverse_add_opinion = {
			target = scope:entourage_member_1 
			modifier = feast_sided_against_me_in_my_fight_opinion
			years = 15
			opinion = -30
		}
		
		scope:entourage_member_2 = {
			add_gold = root.medium_gold_value
		}

		stress_impact = {
			arbitrary = minor_stress_impact_loss
			trusting = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = trusting
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1190.c
		
		reverse_add_opinion = {
			target = scope:entourage_member_1 
			modifier = fp3_stole_from_me
			years = 15
			opinion = -50
		}
		
		reverse_add_opinion = {
			target = scope:entourage_member_2 
			modifier = fp3_stole_from_me
			years = 15
			opinion = -50
		}
		
		add_gold = medium_gold_value
		
		stress_impact = {
			greedy = minor_stress_impact_loss
			generous = medium_stress_impact_gain
			just = medium_stress_impact_gain
			trusting = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = generous
					has_trait = just
					has_trait = trusting
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1190.d
		
		random_list = {
			50 = {
				send_interface_toast = {
					type = event_generic_good
					title = travel_events_oltner_2.1190.d.1
					left_icon = scope:entourage_member_2
					right_icon = scope:entourage_member_1

					scope:entourage_member_2 = {
						add_gold = root.medium_gold_value
					}
					scope:entourage_member_1 = { increase_wounds_effect = { REASON = fight } }
				}
			}
			50 = {
				send_interface_toast = {
					type = event_generic_good
					title = travel_events_oltner_2.1190.d.1
					left_icon = scope:entourage_member_1
					right_icon = scope:entourage_member_2

					scope:entourage_member_1 = {
						add_gold = root.medium_gold_value
					}
					scope:entourage_member_2 = { increase_wounds_effect = { REASON = fight } }
				}
			}
		}
		
		current_travel_plan = {
			add_destination_progress = { days = 2 }
		}
		
		stress_impact = {
			impatient = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
	}
}

# Guardian Angel
# Triggered by Entourage
travel_events_oltner_2.1200 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1200.t
	desc = travel_events_oltner_2.1200.desc
	theme = travel
	
	left_portrait = {
		character = scope:entourage_member_1
		animation = hero_flex
		camera = camera_event_very_left
	}

	right_portrait = {
		character = scope:entourage_member_2
		animation = shock
	}
	
	trigger = {
		static_group_filter = {
			group = travel_events_oltner_2.1200
			match = 0.50
		}
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		current_travel_plan = {
			any_entourage_character = {
				NOT = { this = root }
				is_available_travelling_adult = yes
				prowess >= 8
				save_temporary_scope_as = first_entourage
			}
			any_entourage_character = {
				NOT = { this = root }
				NOT = { this = scope:first_entourage }
				NOT = { has_trait = arrogant }
				prowess < 8
				NOT = { has_relation_friend = scope:first_entourage }
				is_available_travelling_adult = yes
				NOT = { has_any_bad_relationship_with_character_trigger = { CHARACTER = scope:first_entourage } }
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		save_scope_as = player_scope
		location = {
			save_scope_as = location
		}
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					is_available_travelling_adult = yes
					prowess >= 8
					save_temporary_scope_as = first_entourage_limit
					current_travel_plan = {
						any_entourage_character = {
							NOT = { this = root }
							NOT = { this = scope:first_entourage_limit }
							NOT = { has_trait = arrogant }
							prowess < 8
							NOT = { has_relation_friend = scope:first_entourage_limit }
							is_available_travelling_adult = yes
							NOT = { has_any_bad_relationship_with_character_trigger = { CHARACTER = scope:first_entourage_limit } }
						}
					}
				}
				weight = {
					base = 1
					modifier = {
						add = 50
						is_of_major_interest_to_root_trigger = yes
					}
					modifier = {
						add = 5
						is_of_minor_interest_to_root_trigger = yes
					}
				}
				save_scope_as = entourage_member_1
			}
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					NOT = { this = scope:entourage_member_1 }
					NOT = { has_trait = arrogant }
					prowess < 8
					NOT = { has_relation_friend = scope:entourage_member_1 }
					is_available_travelling_adult = yes
					NOT = { has_any_bad_relationship_with_character_trigger = { CHARACTER = scope:entourage_member_1 } }
				}
				weight = {
					base = 1
					modifier = {
						add = 5
						prowess < scope:entourage_member_1.prowess
					}
					modifier = {
						add = 10
						prowess <= 4
					}
					modifier = {
						add = 50
						prowess <= 2
					}
					modifier = {
						add = 50
						OR = {
							has_trait = physique_bad
							has_trait = weak
						}
					}
					modifier = {
						add = 10
						is_of_major_interest_to_root_trigger = yes
					}
					modifier = {
						add = 5
						is_of_minor_interest_to_root_trigger = yes
					}
				}
				save_scope_as = entourage_member_2
			}
		}
		scope:entourage_member_1 = {
			set_relation_friend = {
				target = scope:entourage_member_2
				involved_character = root
				reason = friend_bonded_on_the_road
				province = root.location
			}
			if = {
				limit = {
					can_add_hook = {
						type = saved_my_life_hook
						target = scope:entourage_member_2 
					}
				}
				add_hook = {
					type = saved_my_life_hook
					target = scope:entourage_member_2 
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1200.a
		
		scope:entourage_member_1 = {
			add_prestige = medium_prestige_gain
		}
		
		progress_towards_friend_effect = {
			REASON = friend_praised
			CHARACTER = scope:entourage_member_1
			OPINION = 0
		}
		
		reverse_add_opinion = {
			target = scope:entourage_member_1
			modifier = spouse_praised_me_opinion
		}

		stress_impact = {
			arrogant = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = arrogant
					has_trait = callous
					has_trait = paranoid
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1200.b
		
		reverse_add_opinion = {
			target = scope:entourage_member_2
			modifier = relieved_opinion
			opinion = 50
		}
		
		scope:entourage_member_1 = {
			add_opinion = {
				target = root
				modifier = annoyed_opinion
				opinion = -20
			}
			remove_hook = { target = scope:entourage_member_2 }
		}

		stress_impact = {
			just = minor_stress_impact_gain
			generous = minor_stress_impact_gain
			gregarious = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = just
					has_trait = generous
					has_trait = gregarious
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1200.c
		
		trigger = {
			NOT = {
				current_travel_plan = {
					has_travel_plan_modifier = avoiding_traps_modifier
				}
			}
		}
		current_travel_plan = {
			add_travel_plan_modifier = {
				modifier = avoiding_traps_modifier
				months = 2
			}
		}
		
		stress_impact = {
			impatient = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
			brave = minor_stress_impact_gain
		}

		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = impatient
					has_trait = wrathful
					has_trait = brave
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1200.d
		
		stress_impact = {
			impatient = medium_stress_impact_loss
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
	}
}

# Nighttime Serenade
# Triggered by Entourage
travel_events_oltner_2.1210 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1210.t
	desc = travel_events_oltner_2.1210.desc
	theme = travel
	
	override_background = { reference = bp1_bonfire }
	
	left_portrait = {
		character = scope:entourage_member_2
		animation = instrument_active
	}

	right_portrait = {
		character = scope:entourage_member_1
		animation = admiration
	}
	
	trigger = {
		static_group_filter = {
			group = travel_events_oltner_2.1210
			match = 0.50
		}
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		current_travel_plan = {
			any_entourage_character = {
				NOT = { this = root }
				is_available_travelling_adult = yes
				might_cheat_on_every_partner_trigger = yes
				NOR = {
					has_trait = chaste
					has_trait = celibate
					any_consort = { this = root }
				}
				save_temporary_scope_as = first_entourage
			}
			any_entourage_character = {
				NOT = { this = root }
				NOT = { this = scope:first_entourage }
				NOT = { has_relation_lover = scope:first_entourage }
				is_available_travelling_adult = yes
				might_cheat_on_every_partner_trigger = yes
				NOR = {
					has_trait = chaste
					has_trait = celibate
					any_consort = { this = root }
				}
				age <= scope:first_entourage.age_plus_10
				age >= scope:first_entourage.age_minus_10
				can_set_relation_lover_trigger = { CHARACTER = scope:first_entourage }
				would_attempt_to_seduce_trigger = { CHARACTER = scope:first_entourage }
				scope:first_entourage = { would_attempt_to_seduce_trigger = { CHARACTER = prev } }
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		save_scope_as = player_scope
		location = {
			save_scope_as = location
		}
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					is_available_travelling_adult = yes
					might_cheat_on_every_partner_trigger = yes
					NOR = {
						has_trait = chaste
						has_trait = celibate
						any_consort = { this = root }
					}
					save_temporary_scope_as = first_entourage_limit
					root.current_travel_plan = {
						any_entourage_character = {
							NOT = { this = root }
							NOT = { this = scope:first_entourage_limit }
							NOT = { has_relation_lover = scope:first_entourage_limit }
							is_available_travelling_adult = yes
							might_cheat_on_every_partner_trigger = yes
							NOR = {
								has_trait = chaste
								has_trait = celibate
								any_consort = { this = root }
							}
							age <= scope:first_entourage_limit.age_plus_10
							age >= scope:first_entourage_limit.age_minus_10
							can_set_relation_lover_trigger = { CHARACTER = scope:first_entourage_limit }
							would_attempt_to_seduce_trigger = { CHARACTER = scope:first_entourage_limit }
							scope:first_entourage_limit = { would_attempt_to_seduce_trigger = { CHARACTER = prev } }
						}
					}
				}
				weight = {
					base = 1
					modifier = {
						add = 50
						is_of_major_interest_to_root_trigger = yes
					}
					modifier = {
						add = 5
						is_of_minor_interest_to_root_trigger = yes
					}
				}
				save_scope_as = entourage_member_1
			}
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					NOT = { this = scope:entourage_member_1 }
					NOT = { has_relation_lover = scope:entourage_member_1 }
					is_available_travelling_adult = yes
					might_cheat_on_every_partner_trigger = yes
					NOR = {
						has_trait = chaste
						has_trait = celibate
						any_consort = { this = root }
					}
					age <= scope:entourage_member_1.age_plus_10
					age >= scope:entourage_member_1.age_minus_10
					can_set_relation_lover_trigger = { CHARACTER = scope:entourage_member_1 }
					would_attempt_to_seduce_trigger = { CHARACTER = scope:entourage_member_1 }
					scope:entourage_member_1 = { would_attempt_to_seduce_trigger = { CHARACTER = prev } }
				}
				weight = {
					base = 1
					modifier = {
						add = 10
						is_of_major_interest_to_root_trigger = yes
					}
					modifier = {
						add = 5
						is_of_minor_interest_to_root_trigger = yes
					}
				}
				save_scope_as = entourage_member_2
			}
		}
		hidden_effect = {
			scope:entourage_member_2 = {
				set_relation_lover = {
					target = scope:entourage_member_1
					involved_character = root
					reason = lover_serenaded_on_the_road
					province = root.location
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1210.a
		
		reverse_add_opinion = {
			target = scope:entourage_member_1
			modifier = annoyed_opinion
			opinion = -10
		}
		
		reverse_add_opinion = {
			target = scope:entourage_member_2
			modifier = annoyed_opinion
			opinion = -10
		}
		
		show_as_tooltip = {
			duel = {
				skill = intrigue
				target = scope:entourage_member_2
				50 = {
					desc = travel_events_oltner_2.1210.a.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
						min = -49
					}
					send_interface_toast = {
						title = travel_events_oltner_2.1210.a.success 
						left_icon = root 
						right_icon = scope:entourage_member_2
						custom_tooltip = something_happens
						hidden_effect = {
							scope:entourage_member_2 = {
								if = {
									limit = {
										any_secret = {
											secret_type = secret_lover
											secret_target = {
												this = scope:entourage_member_1
											}
											NOT = { is_known_by = root }
										}
									}
									random_secret = {
										limit = {
											secret_type = secret_lover
											secret_target = {
												this = scope:entourage_member_1
											}
											NOT = { is_known_by = root }
										}
										reveal_to = root
									}
								}
							}
						}
					}
				}
				50 = {
					desc = travel_events_oltner_2.1210.a.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					send_interface_toast = {
						title = travel_events_oltner_2.1210.a.failure
						left_icon = root 
						right_icon = scope:entourage_member_2
					}
				}
			}	
		}
		hidden_effect = {
			duel = {
				skill = intrigue
				target = scope:entourage_member_2
				50 = {
					desc = travel_events_oltner_2.1210.a.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
						min = -49
					}
					send_interface_toast = {
						title = travel_events_oltner_2.1210.a.success 
						left_icon = root 
						right_icon = scope:entourage_member_2
						scope:entourage_member_2 = {
							if = {
								limit = {
									any_secret = {
										secret_type = secret_lover
										secret_target = {
											this = scope:entourage_member_1
										}
										NOT = { is_known_by = root }
									}
								}
								random_secret = {
									limit = {
										secret_type = secret_lover
										secret_target = {
											this = scope:entourage_member_1
										}
										NOT = { is_known_by = root }
									}
									reveal_to = root
								}
							}
						}
					}
				}
				50 = {
					desc = travel_events_oltner_2.1210.a.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					send_interface_toast = {
						title = travel_events_oltner_2.1210.a.failure
						left_icon = root 
						right_icon = scope:entourage_member_2
					}
				}
			}
		}
		
		stress_impact = {
			trusting = major_stress_impact_gain
			calm = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = trusting
					has_trait = calm
					has_trait = compassionate
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1210.b
		
		scope:entourage_member_2 = {
			add_diplomacy_skill = 2
			add_prestige = medium_prestige_gain
		}

		stress_impact = {
			compassionate = medium_stress_impact_loss
			forgiving = medium_stress_impact_loss
			generous = medium_stress_impact_loss
			honest = medium_stress_impact_loss
			impatient = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = impatient
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1210.c
		
		scope:entourage_member_2 = {
			duel = {
				skill = diplomacy
				target = root
				50 = {
					desc = travel_events_oltner_2.1210.c.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
						min = -49
					}
					root = {
						send_interface_toast = {
							title = travel_events_oltner_2.1210.c.success 
							left_icon = root 
							right_icon = scope:entourage_member_2
							add_diplomacy_skill = 1
						}
					}
				}
				50 = {
					desc = travel_events_oltner_2.1210.c.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					root = {
						send_interface_toast = {
							title = travel_events_oltner_2.1210.c.failure
							left_icon = root 
							right_icon = scope:entourage_member_2
						}
					}
				}
			}
		}
		
		stress_impact = {
			lazy = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = lazy
					has_trait = arrogant
					has_trait = shy
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1210.d
		
		stress_impact = {
			base = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
	}
}

# Rivals' End
# Triggered by Entourage
travel_events_oltner_2.1220 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1220.t
	desc = travel_events_oltner_2.1220.desc
	theme = travel
	override_effect_2d = {
		reference = rain	
	}
	
	override_background = { reference = bp1_bonfire }
	
	left_portrait = {
		character = scope:entourage_member_1
		animation = assassin
		camera = camera_event_very_left
	}

	right_portrait = {
		character = scope:entourage_member_2
		animation = fear
	}

	cooldown = { years = 10 }
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_location_valid_for_travel_event_on_land = yes
		NOT = { has_character_flag = murder_on_the_road }
		current_travel_plan = {
			any_entourage_character = {
				NOT = { this = root }
				has_personality_malicious_trigger = yes
				is_available_travelling_adult = yes
				save_temporary_scope_as = entourage_rival_check
				cannot_be_killed = no #LotR
				current_travel_plan = {
					any_entourage_character = {
						cannot_be_killed = no #LotR
						NOT = { this = root }
						is_physically_able = yes
						NOR = {
							has_trait = giant
							has_trait = strong
							has_trait = physique_good
						}
						has_relation_rival = scope:entourage_rival_check
					}
				}
			}
		}
	}

	immediate = {
		add_character_flag = { flag = murder_on_the_road years = 10 }
		mp_delay_travel_plan = { DAYS = 90 }
		save_scope_as = player_scope
		location = {
			save_scope_as = location
		}
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					has_personality_malicious_trigger = yes
					is_available_travelling_adult = yes
					save_temporary_scope_as = entourage_rival_check_2
					current_travel_plan = {
						any_entourage_character = {
							NOT = { this = root }
							is_physically_able = yes
							NOR = {
								has_trait = giant
								has_trait = strong
								has_trait = physique_good
							}
							has_relation_rival = scope:entourage_rival_check_2
						}
					}
				}
				weight = {
					base = 1
					modifier = {
						add = 50
						is_of_major_interest_to_root_trigger = yes
					}
					modifier = {
						add = 5
						is_of_minor_interest_to_root_trigger = yes
					}
				}
				save_scope_as = entourage_member_1
			}
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					is_physically_able = yes
					NOR = {
						has_trait = giant
						has_trait = strong
						has_trait = physique_good
					}
					has_relation_rival = scope:entourage_member_1
				}
				weight = {
					base = 1
					modifier = {
						add = 10
						is_of_major_interest_to_root_trigger = yes
					}
					modifier = {
						add = 5
						is_of_minor_interest_to_root_trigger = yes
					}
				}
				save_scope_as = entourage_member_2
			}
		}
		location = {
			set_variable = {
				name = entourage_1
				value = scope:entourage_member_1
			}
			set_variable = {
				name = entourage_2
				value = scope:entourage_member_2
			}
			set_variable = {
				name = player_1
				value = scope:player_scope
			}
		}
		
		hidden_effect = {
			scope:entourage_member_2 = {
				increase_wounds_no_death_effect = { REASON = fight }
				increase_wounds_no_death_effect = { REASON = fight }
			}
		}
		
		unknown_murder_effect = {
			VICTIM = scope:entourage_member_2
			MURDERER = scope:entourage_member_1
			REASON = death_murder
		}
		
		scope:entourage_member_1 = {
			if = {
				limit = {
					any_secret = {
						secret_type = secret_murder
						secret_target = {
							this = scope:entourage_member_2
						}
						NOT = { is_known_by = root }
					}
				}
				random_secret = {
					limit = {
						secret_type = secret_murder
						secret_target = {
							this = scope:entourage_member_2
						}
						NOT = { is_known_by = root }
					}
					save_scope_as = secret
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1220.a
		
		trigger = {
			OR = {
				has_trait = schemer
				has_trait = arbitrary
				has_trait = sadistic
				has_trait = callous
				has_trait = deceitful
				has_trait = vengeful
			}
		}
		
		trait = schemer
		trait = arbitrary
		trait = sadistic
		trait = callous
		trait = deceitful
		trait = vengeful
		
		add_intrigue_skill = 2
		
		scope:secret = { reveal_to = root }
		
		trigger_event = {
			id = travel_events_oltner_2.1230
			days = 1
		}
		
		stress_impact = {
			compassionate = major_stress_impact_gain
			forgiving = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = compassionate
					has_trait = forgiving
					has_trait = trusting
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1220.b
		
		scope:secret = { reveal_to = root }
		scope:secret = {
			expose_secret = root
		}
		
		rightfully_imprison_character_effect = {
			TARGET = scope:entourage_member_1
			IMPRISONER = root
		}

		stress_impact = {
			just = medium_stress_impact_loss
			arbitrary = minor_stress_impact_gain
			craven = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = arbitrary
					has_trait = craven
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1220.c
		
		scope:secret = { reveal_to = root }
		
		trigger_event = {
			id = travel_events_oltner_2.1230
			days = 1
		}
		
		stress_impact = {
			just = minor_stress_impact_gain
			brave = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = just
					has_trait = brave
				}
			}
		}
	}

	after = {
		location = {
			remove_variable = entourage_1
			remove_variable = entourage_2
			remove_variable = player_1
		}
		mp_resume_travel_plan = yes
	}
}

# Rivals' End, followup
# Triggered by Entourage
travel_events_oltner_2.1230 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1230.t
	desc = travel_events_oltner_2.1230.desc
	theme = travel
	override_effect_2d = {
		reference = rain	
	}
	
	left_portrait = {
		character = scope:entourage_member_1
		animation = schadenfreude
	}

	right_portrait = {
		character = scope:corpse_finder
		animation = shock
	}
	
	lower_center_portrait = {
		character = scope:entourage_member_2
	}
	
	trigger = {
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_location_valid_for_travel_event_on_land = yes
		
		scope:entourage_member_1 ?= {
			is_alive = yes
		}
		exists = scope:entourage_member_2
		
		current_travel_plan = {
			any_entourage_character = {
				NOT = { this = root }
				is_available_travelling_adult = yes
				NOR = {
					this = scope:entourage_member_1
					this = scope:entourage_member_2
				}
			}
		}
	}

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		save_scope_as = player_scope
		location = {
			save_scope_as = location
		}
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					is_available_travelling_adult = yes
					NOR = {
						this = scope:entourage_member_1
						this = scope:entourage_member_2
					}
				}
				weight = {
					base = 1
					modifier = {
						add = 50
						root = { has_any_bad_relationship_with_character_trigger = { CHARACTER = prev } }
					}
				}
				save_scope_as = corpse_finder
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1230.a
		
		trigger = {
			OR = {
				has_trait = sadistic
				has_trait = callous
				has_trait = eccentric
			}
			can_set_relation_friend_trigger = { CHARACTER = scope:entourage_member_1 }
		}
		trait = sadistic
		trait = callous
		trait = eccentric
		
		add_intrigue_skill = 1
		
		set_relation_friend = { reason = friend_fellow_deviant target = scope:entourage_member_1 }
		
		scope:corpse_finder = {
			death = {
				death_reason = death_execution
				killer = scope:entourage_member_1
			}
		}
		
		stress_impact = {
			base = massive_stress_impact_loss
			forgiving = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
		}

		ai_chance = {
			base = 500
			modifier = {
				factor = 0
				OR = {
					has_trait = compassionate
					has_trait = forgiving
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1230.b
		
		reverse_add_opinion = {
			target = scope:entourage_member_1
			modifier = relieved_opinion
			opinion = 60
		}
		
		rightfully_imprison_character_effect = {
			TARGET = scope:corpse_finder
			IMPRISONER = root
		}

		stress_impact = {
			just = massive_stress_impact_gain
			honest = massive_stress_impact_gain
			forgiving = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
			humble = minor_stress_impact_gain
			brave = minor_stress_impact_gain
		}

		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				OR = {
					has_trait = just
					has_trait = honest
					has_trait = forgiving
					has_trait = compassionate
					has_trait = humble
					has_trait = brave
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1230.c
		
		reverse_add_opinion = {
			target = scope:corpse_finder
			modifier = suspicion_opinion
			opinion = -30
		}
		
		reverse_add_opinion = {
			target = scope:entourage_member_1
			modifier = relieved_opinion
			opinion = 60
		}
		
		random = {
			chance = 50
			send_interface_toast = {
				title = skill_increased
				left_icon = root
				add_intrigue_skill = 1
			}
		}
		
		stress_impact = {
			just = medium_stress_impact_gain
			honest = medium_stress_impact_gain
			forgiving = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}

		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				OR = {
					has_trait = just
					has_trait = honest
					has_trait = forgiving
					has_trait = compassionate
					has_trait = humble
					has_trait = brave
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1230.d
		flavor = might_strike_again 
		
		remove_character_flag = murder_on_the_road
		
		stress_impact = {
			impatient = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		mp_resume_travel_plan = yes
	}
}

# The Travelling Troupe
# Triggered by Entourage
travel_events_oltner_2.1240 = {
	type = character_event
	content_source = dlc_015
	title = travel_events_oltner_2.1240.t
	desc = travel_events_oltner_2.1240.desc
	theme = travel
	
	override_background = { reference = ep2_tournament }
	
	left_portrait = {
		character = scope:entourage_member_1
		animation = throne_room_cheer_1
	}

	right_portrait = {
		character = scope:local_character
		animation = alto_flute_active
	}
	
	trigger = {
		static_group_filter = {
			group = travel_events_oltner_2.1240
			match = 0.50
		}
		has_bp3_dlc_trigger = yes
		is_available_travelling_adult = yes
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes
		current_travel_plan = {
			any_entourage_character = {
				is_close_or_extended_family_of = root
				is_adult = no
				age >= 4
				is_physically_able = yes
			}
		}
	}

	cooldown = { years = 10 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		save_scope_as = player_scope
		location = {
			save_scope_as = location
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					culture = root.location.culture
					has_no_particular_noble_roots_trigger = yes
					is_available_healthy_ai_adult = yes
					aptitude = {
						court_position = court_jester_court_position
						value >= 3
					}
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					culture = root.location.culture
					has_no_particular_noble_roots_trigger = yes
					is_available_healthy_ai_adult = yes
					aptitude = {
						court_position = court_jester_court_position
						value >= 3
					}
				}
				save_scope_as = local_character
			}
		}
		else = {
			create_character = {
				template = court_jester_court_position_template
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = local_character
			}
			scope:local_character = {
				add_character_flag = {
					flag = silently_disappear_me
					years = 1
				}
			}
		}
		scope:local_character = {
			add_character_flag = jester_outfit
		}
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					is_close_or_extended_family_of = root
					is_adult = no
					age >= 4
					is_physically_able = yes
				}
				weight = {
					base = 1
					modifier = {
						add = 50
						is_player_heir_of = root
					}
					modifier = {
						add = 5
						is_child_of = root
					}
				}
				save_scope_as = entourage_member_1
			}
		}
		if = {
			limit = {
				any_court_position_holder = {
					type = court_jester_court_position
				}
			}
			random_court_position_holder = {
				type = court_jester_court_position
				save_scope_as = current_jester
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1240.a
		
		if = {
			limit = {
				can_set_relation_friend_trigger = { CHARACTER = scope:entourage_member_1 }
			}
			set_relation_friend = {
				target = scope:entourage_member_1
				reason = friend_travel_child_bonded_entertainers
				province = root.location
			}
		}
		
		reverse_add_opinion = {
			target = scope:entourage_member_1
			modifier = happy_opinion
			opinion = 30
		}
		
		stress_impact = {
			compassionate = major_stress_impact_loss
			sadistic = minor_stress_impact_gain
			callous = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = sadistic
					has_trait = callous
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1240.b
		trigger = {
			can_employ_court_position_type = court_jester_court_position
		}
		
		hidden_effect = {
			scope:local_character = {
				add_to_court_and_entourage_effect = yes
			}
		}
		
		if = {
			limit = {
				can_employ_court_position_type = court_jester_court_position
				NOT = { has_court_position = court_jester_court_position }
			}
			show_as_tooltip = {
				appoint_court_position = {
					recipient = scope:local_character
					court_position = court_jester_court_position
				}
			}
			employ_character_as_position_in_current_scope_court_effect = {
				CHARACTER = scope:local_character
				POSITION = court_jester
			}
			custom_tooltip = will_have_excellent_aptitude
		}
		else_if = {
			limit = {
				exists = scope:current_jester
				scope:local_character.aptitude:court_jester_court_position > scope:current_jester.aptitude:court_jester_court_position
			}
			replace_court_position = {
				recipient = scope:local_character
				holder = scope:current_jester
				court_position = court_jester_court_position
			}
			custom_tooltip = will_have_excellent_aptitude
		}
		else = {
			show_as_tooltip = {
				scope:local_character = {
					add_to_court_and_entourage_effect = yes
				}
			}
		}
		
		root = {
			custom_tooltip = obligation_hook_tt
			add_hook = {
				type = obligation_hook
				target = scope:local_character
			}
		}
		
		reverse_add_opinion = {
			target = scope:entourage_member_1
			modifier = happy_opinion
			opinion = 30
		}

		stress_impact = {
			compassionate = medium_stress_impact_loss
			generous = medium_stress_impact_loss
			paranoid = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = sadistic
				}
			}
		}
	}

	option = {
		name = travel_events_oltner_2.1240.c
		
		stress_impact = {
			base = minor_stress_impact_loss
			lazy = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0.1
				stress <= 0
			}
		}
	}

	after = {
		mp_resume_travel_plan = yes
		scope:local_character = {
			remove_character_flag = jester_outfit
		}
		if = { # Cleanup
			limit = {
				root = {
					is_ai = yes
				}
				scope:local_character = {
					is_courtier = no
					has_character_flag = silently_disappear_me
				}
			}
			scope:local_character = {
				silent_disappearance_effect = yes
			}
		}
	}
}
