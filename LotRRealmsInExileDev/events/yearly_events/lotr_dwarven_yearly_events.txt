@dwarven_yearly_0213_cheap_cost		= 50
@dwarven_yearly_0213_mid_cost		= 75
@dwarven_yearly_0213_high_cost		= 100
@dwarven_yearly_0213_mithril_cost	= 500

namespace = dwarven_yearly

### Dwarven Yearly Events ###
#			dwarven_yearly.0001		Hazardous Quaffing
#			dwarven_yearly.0002 - A Hunting Rivalry by Vaelar 
#			dwarven_yearly.0003 - Book of Grudges by Jaco_Daan
#			dwarven_yearly.0004 - A New Cavern multystage by Sakkar	
#			dwarven_yearly.0006 - Beautifull Sight
#			dwarven_yearly.0007 - Dwarf in need
#			dwarven_yearly.0008 - Goblins!
#			dwarven_yearly.0005 - Wandering in the Dark	
#			dwarven_yearly.0009 - The ‘Knockers by Jaco_Daan
#			dwarven_yearly.0010 - Mischievous Sprites by Jaco_Daan
#			dwarven_yearly.0011 - The Sweet Smell of Death by Jaco_Daan
#		dwarven_yearly.0200-0231 - Random Events adapted from RICE Pamir

###################################################################
### dwarven_yearly.0001 - Hazardous Quaffing by Brice Underhill ###
###################################################################

dwarven_yearly.0001 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0001.t
	desc = dwarven_yearly.0001.desc
	theme = party
	
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:steward
		animation = toast
	}
	
	trigger = {
		is_dwarf = yes 
	}
	
	immediate = {
		cp:councillor_steward ?= { save_scope_as = steward }
	}
	
	option = { #Import luxury tankards
		name = dwarven_yearly.0001.a
		remove_short_term_gold = medium_gold_value
		add_prestige = medium_prestige_gain
		
		if = {
			limit = { amenity_level = { type = court_food_quality value = 1 } }
			set_amenity_level = { type = court_food_quality value = 2 }
		}
		else_if = {
			limit = { amenity_level = { type = court_food_quality value = 2 } }
			set_amenity_level = { type = court_food_quality value = 3 }
		}
		else_if = {
			limit = { amenity_level = { type = court_food_quality value = 3 } }
			set_amenity_level = { type = court_food_quality value = 4 }
		}
		else_if = {
			limit = { amenity_level = { type = court_food_quality value = 4 } }
			set_amenity_level = { type = court_food_quality value = 5 }
		}
		else = {
			add_prestige = minor_prestige_gain
		}
		
		every_vassal = {
			custom = every_courtly_vassal
			limit = {
				has_vassal_stance = courtly
			}
			add_opinion = {
				modifier = impressed_opinion
				opinion = 15
				target = root
			}
		}
		ai_chance = {
			base = 0
			ai_value_modifier = {
				ai_greed = -2
				ai_boldness = 1
				ai_honor = 1
			}
		}
	}
	
	option = { #Commission local ones
		name = dwarven_yearly.0001.b
		
		remove_short_term_gold = minor_gold_value
		
		every_vassal = {
			custom = every_courtly_vassal
			limit = {
				has_vassal_stance = courtly
			}
			add_opinion = {
				modifier = disappointed_opinion
				opinion = -10
				target = root
			}
		}
		
		ai_chance = {
			base = 0
			ai_value_modifier = {
				ai_greed = -1
				ai_boldness = 0.5
				ai_honor = 0.5
				ai_rationality = 1
			}
		}
	}
	
	option = { #Just learn to drink properly
		name = dwarven_yearly.0001.c
		
		every_vassal = {
			custom = every_courtly_vassal
			limit = {
				has_vassal_stance = courtly
			}
			add_opinion = {
				modifier = angry_opinion
				opinion = -30
				target = root
			}
		}
		
		if = {
			limit = { amenity_level = { type = court_fashion value = max_amenity_level } }
			set_amenity_level = { type = court_fashion value = very_high_amenity_level }
		}
		else_if = {
			limit = { amenity_level = { type = court_fashion value = very_high_amenity_level } }
			set_amenity_level = { type = court_fashion value = high_amenity_level }
		}
		else_if = {
			limit = { amenity_level = { type = court_fashion value = high_amenity_level } }
			set_amenity_level = { type = court_fashion value = medium_amenity_level }
		}
		else_if = {
			limit = { amenity_level = { type = court_fashion value = medium_amenity_level } }
			set_amenity_level = { type = court_fashion value = low_amenity_level }
		}
		else = {
			add_prestige = minor_prestige_loss
		}
		
		ai_chance = {
			base = 0
			ai_value_modifier = {
				ai_greed = 2
				ai_boldness = -1
				ai_honor = -1
			}
		}
	}
}

##################################################################
### dwarven_yearly.0002 - A Hunting Rivalry by Vaelar          ###
##################################################################

dwarven_yearly.0002 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0002.t
	desc = dwarven_yearly.0002.desc
	theme = hunt_activity
	
	left_portrait = {
		character = root
		animation = disbelief
	}
	lower_center_portrait = {
		character = scope:dwarven_hunter_character
		animation = vengeful
	}
	lower_right_portrait = {
		character = scope:dale_hunter
		animation = dismissal
	}

	trigger = {
		NOT = { employs_court_position = master_of_hunt_court_position }
		is_dwarf = yes
		OR = {
			culture = culture:longbeards
			capital_county = { culture = culture:longbeards }
			capital_province = {
				OR = {
					geographical_region = middleearth_iron_mountains_grey_mountains
					geographical_region = middleearth_iron_mountains_iron_hills
					geographical_region = middleearth_iron_mountains_erebor
				}
			}
		}
	}

	immediate = {
		create_character = {
			location = capital_province
			age = { 50 200 }
			culture = culture:longbeards
			faith = location.county.faith
			gender_female_chance = 15
			dynasty = none
			trait = lifestyle_hunter
			random_traits = yes
			save_scope_as = dwarven_hunter_character
		}
		create_character = {
			location = root.capital_province
			template = pool_repopulate_prowess
			culture = culture:dalemen
			faith = faith:faith_dale
			trait = lifestyle_hunter
			save_scope_as = dale_hunter
		}
	}		

	option = { # Dwarves are clearly better hunters!
		name = dwarven_yearly.0002.b
		add_prestige = medium_prestige_gain

		scope:dale_hunter = {
			add_opinion = {
				modifier = angry_opinion
				opinion = -25
				target = root
			}
		}
		
		every_vassal = {
		 limit = { is_dwarf = yes }
			add_opinion = {
				modifier = friendly_interaction
				opinion = 10
				target = root
			}
		}
	}

	option = { # I'm not so sure if he's wrong or not...
		name = dwarven_yearly.0002.c
		add_prestige = medium_prestige_loss

		scope:dale_hunter = {
			add_opinion = {
				modifier = friendly_interaction
				opinion = 10
				target = root
			}
		}
		
		every_vassal = {
		 limit = { is_dwarf = yes }
			add_opinion = {
				modifier = angry_opinion
				opinion = -25
				target = root
			}
		}
	}
}

###########################################################
### dwarven_yearly.0003 - Book of Grudges by Jaco_Daan  ###
###########################################################

dwarven_yearly.0003 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0003.t
	desc = dwarven_yearly.0003.desc
	theme = stewardship_duty_focus
	override_background = { reference = throne_room_dwarf }
	
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = { 
				OR = {
					has_trait = callous
					has_trait = sadistic
					has_trait = arbitrary
					has_trait = deceitful
				}
			}
			animation = personality_dishonorable
		}
		triggered_animation = {
			trigger = {
				OR = {
					has_trait = honest
					has_trait = gregarious
					has_trait = just
					has_trait = compassionate
				}
			}
			animation = personality_rational
		}
		animation = idle
	}

	right_portrait = { character ?= scope:dwarven_char }

	artifact = {
		position = lower_center_portrait
		target = scope:newly_created_artifact
		trigger = { exists = scope:newly_created_artifact }
	}

	trigger = {
		is_dwarf = yes
	}

	immediate = {
		if = {
			limit = {
				any_vassal_or_below = { has_trait = vengeful is_ai = yes is_dwarf = yes }
			}
			every_vassal_or_below = {
				limit = { has_trait = vengeful is_ai = yes is_dwarf = yes }
				add_to_list = dwarven_characters
			}
		}
		random_in_list = {
			list = dwarven_characters
			save_scope_as = dwarven_char
		}

		if = {
			limit = { NOT = { exists = scope:dwarven_char } }
			create_character = {
				location = root.capital_province
				gender_female_chance = 25
				culture = root.culture
				faith = root.faith
				random_traits_list = {
					count = 2
					brave = {}
					just = {}
					lustful = {}
					chaste = {}
					wrathful = {}
					arrogant = {}
					impatient = {}
					patient = {}
					humble = {}
					calm = {}
					honest = {}
					ambitious = {}
					cynical = {}
					zealous = {}
					compassionate = {}
					stubborn = {}
					generous = {}
					sadistic = {}
				}
				save_scope_as = dwarven_char
					
				after_creation = {
					set_employer = root
					if = {
						limit = { is_elf = yes }
						change_age = { 100 6950 }
						replace_unelven_traits = yes
					}
					if = {
						limit = { is_dwarf = yes }
						change_age = { 65 180 }
					}
				}
			}
			scope:dwarven_char = { add_trait = vengeful }
		}
		hidden_effect = {
			scope:dwarven_char = {
				create_artifact = {
					name = dwarven_yearly.0003.grudge_book.name
					type = miscellaneous
					creator = scope:dwarven_char
					description = dwarven_yearly.0003.grudge_book.desc
					visuals = book
					modifier = artifact_monthly_minor_prestige_2_modifier
					save_scope_as = newly_created_artifact
					wealth = 10
					quality = 10
				}
			}

			scope:newly_created_artifact = {
				set_variable = book_of_grudges
			}
		}
	}

	option = {
		name = dwarven_yearly.0003.a

		scope:dwarven_char = {
			add_opinion = {
				modifier = pleased_opinion
				opinion = 20
				target = root
			}
		}
	}
	option = {
		name = dwarven_yearly.0003.b

		duel = {
			skill = diplomacy 
			value = 30
			80 = { # win skill duel
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
				}
				set_relation_friend = { target = scope:dwarven_char reason = dwarven_yearly.0003.befriend_reason }
				random = {
					chance = 70
					scope:dwarven_char = {
						remove_trait = vengeful
						add_trait = compassionate
					}
				}
			}
			20 = { # lose skill duel
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
				}
				send_interface_toast = {
					title = dwarven_yearly.0003.fail_befriend_title
					left_icon = root
					right_icon = scope:dwarven_char
					add_prestige = -75
					add_piety = -75
				}
			}
		}
	}
	option = {
		name = dwarven_yearly.0003.c
		
		duel = {
			skill = intrigue 
			value = 30
			desc = dwarven_yearly.0003.intrigue_skill.desc
			80 = { # win skill duel
				desc = dwarven_yearly.0003.intrigue_skill_win.desc
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
				}
				send_interface_toast = {
					title = dwarven_yearly.0003.steal_book_success_title
					left_icon = root
					right_icon = scope:newly_created_artifact
					scope:newly_created_artifact = {
						set_owner = root
						add_artifact_history = {
							type = given
							recipient = root
						}
					}
				}
				scope:dwarven_char = { add_personal_artifact_claim = scope:newly_created_artifact }
			}
			20 = { # lose skill duel
				desc = dwarven_yearly.0003.intrigue_skill_loss.desc
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
				}
				send_interface_toast = {
					title = dwarven_yearly.0003.steal_book_success_title
					left_icon = scope:dwarven_char
					right_icon = root
					scope:dwarven_char = {
						add_opinion = {
							modifier = disappointed_opinion
							opinion = -40
							target = root
						}
					}
				}
			}
		}
	}
}

#######################################################
### dwarven_yearly.0004 - A New Cavern by Sakkar  ###
#######################################################

dwarven_yearly.0004 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0004.t
	desc = dwarven_yearly.0004.desc
	theme = stewardship_duty_focus
	override_background = { reference = throne_room_dwarf }
	
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = { 
				has_trait = greedy
			}
			animation = personality_greedy
		}
		animation = steward
	}

	right_portrait = { character ?= scope:dwarven_char }

	trigger = {
		is_dwarf = yes
	}

	immediate = {
		if = {
			limit = {
				any_vassal_or_below = { is_ai = yes is_dwarf = yes }
			}
			every_vassal_or_below = {
				limit = { is_ai = yes is_dwarf = yes }
				add_to_list = dwarven_characters
			}
		}
		random_in_list = {
			list = dwarven_characters
			save_scope_as = dwarven_char
		}

		if = {
			limit = { NOT = { exists = scope:dwarven_char } }
			create_character = {
				location = root.capital_province
				gender_female_chance = 25
				culture = root.culture
				faith = root.faith
				save_scope_as = dwarven_char
					
				after_creation = {
					set_employer = root
					if = {
						limit = { is_elf = yes }
						change_age = { 100 6950 }
						replace_unelven_traits = yes
					}
					if = {
						limit = { is_dwarf = yes }
						change_age = { 65 180 }
					}
				}
			}
		}
	}

	option = {
		name = dwarven_yearly.0004.a

		stress_impact = {
			compassionate = medium_stress_gain
			greedy = minor_stress_loss
		}

		scope:dwarven_char = {
			add_opinion = {
				modifier = disappointed_opinion
				opinion = -20
				target = root
			}
			
		}
		random_list = {
			70 = {
				desc = dwarven_yearly.0004.a.success
				add_gold = 40
				scope:dwarven_char = {
					add_gold = 10
				}	
			}
			30 = {
				desc = dwarven_yearly.0004.a.failure
				add_prestige = -100
				scope:dwarven_char = {
					increase_wounds_effect ={ REASON = wild_animal }
					add_opinion = {
						modifier = disappointed_opinion
						opinion = -20
						target = root
					}
				}	
				stress_impact = {
					compassionate = major_stress_gain
					callous = minor_stress_loss
					sadistic = minor_stress_loss
				}
			}
		}
	}
	option = {
		name = dwarven_yearly.0004.b

		stress_impact = {
			craven = major_stress_gain
			brave = minor_stress_loss
			greedy = minor_stress_loss
		}
		scope:dwarven_char = {
			add_opinion = {
				modifier = pleased_opinion
				opinion = 20
				target = root
			}
		}	
		random_list = {
			70 = {
				desc = dwarven_yearly.0004.b.success
				add_gold = 50
				add_prestige = 100
			}
			30 = {
				desc = dwarven_yearly.0004.b.failure
				add_prestige = -100
				increase_wounds_effect ={ REASON = wild_animal }
			}	
		}
	}
	option = {
		name = dwarven_yearly.0004.c
	}
}

#######################################################
### dwarven_yearly.0005 - Wandering in the Dark  ###
#######################################################

# Wandering in the dark (Cross road)
dwarven_yearly.0005 = {  
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0005.t
	desc = dwarven_yearly.0005.desc
	theme = travel
	override_background = { reference = halls }
	
	right_portrait = {
		character = root
		triggered_animation = {
			trigger = { 
				has_trait = brave
			}
			animation = personality_bold
		}
		triggered_animation = {
			trigger = { 
				has_trait = craven
			}
			animation = personality_coward
		}
		animation = lantern
	}
	trigger = {
		is_dwarf = yes
	}

	option = {
		trigger = { is_ai = no }
		name = dwarven_yearly.0005.a

		stress_impact = {
			craven = major_stress_gain
			brave = minor_stress_loss
		}

		random_list = {
			25 = {
				trigger_event = dwarven_yearly.0006
			}	
			
			50 = {
				trigger_event = dwarven_yearly.0007
			}

			25 = {
				trigger_event = dwarven_yearly.0008
			}
		}
	}

	option = {
		trigger = { is_ai = yes }
		name = dwarven_yearly.0005.a

		stress_impact = {
			craven = major_stress_gain
			brave = minor_stress_loss
		}

		random_list = {
			50 = {
				trigger_event = dwarven_yearly.0006
			}	
			50 = {
				trigger_event = dwarven_yearly.0008
			}
		}
	}

	option = {
		name = dwarven_yearly.0005.b
	}
}

##########################################################
### dwarven_yearly.0006 - Beautifull Sight  ###
##########################################################

# Beautifull Sight
dwarven_yearly.0006 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0006.t
	desc = dwarven_yearly.0006.desc
	theme = recovery
	override_background = { reference = halls }
	
	right_portrait = {
		character = root
		animation = happiness
	}
	trigger = {
		is_dwarf = yes
	}
	option = {
		name = dwarven_yearly.0006.a

		add_prestige = 50
		add_piety = 100
		stress_impact = { 
			base = major_stress_impact_loss
		}
	}
}

######################################################
### dwarven_yearly.0007 - Dwarf in need ###
######################################################

# Dwarf in need
dwarven_yearly.0007 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0007.t
	desc = dwarven_yearly.0007.desc
	theme = medicine
	override_background = { reference = halls }
	
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = { 
				has_trait = brave
			}
			animation = personality_bold
		}
		triggered_animation = {
			trigger = { 
				has_trait = craven
			}
			animation = personality_coward
		}
		triggered_animation = {
			trigger = { 
				has_trait = callous
				has_trait = sadistic
				has_trait = greedy
			}
			animation = greedy
		}
		animation = lantern
	}

	right_portrait = { 
		character ?= scope:dwarven_char 
		animation = pain
	}

	trigger = {
		is_dwarf = yes
	}

	immediate = {
		create_character = {
			location = root.capital_province
			culture = root.culture
			faith = root.faith
			trait = education_martial_3
			gender_female_chance = 25
			random_traits_list = {
				count = 3
				wrathful = {}
				arrogant = {}
				impatient = {}
				vengeful = {}
				zealous = {}
				ambitious = {}
				brave = {}
				stubborn = {}
			}
			save_scope_as = dwarven_char
					
			after_creation = {
				set_employer = root
				if = {
					limit = { is_elf = yes }
					change_age = { 100 6950 }
					replace_unelven_traits = yes
				}
				if = {
					limit = { is_dwarf = yes }
					change_age = { 65 180 }
				}
			}
		}
		scope:dwarven_char = {
			add_trait = adventurer
			add_trait = wounded_1
			add_trait = strong
			add_prowess_skill = 10
		}
	}
	

	option = {
		name = dwarven_yearly.0007.a
		duel = {
			skill = learning
			value = average_skill_rating
			60 = {
				desc = dwarven_yearly.0007.a.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 2
				}
				add_piety = 100
				add_prestige = 100
				add_learning_lifestyle_xp = 150

				# set_relation_friend = { target = scope:dwarven_char reason = dwarven_yearly.0007.befriend_reason }	# caused errors
				set_relation_friend = { target = scope:dwarven_char reason = friend_saved_life }
				
				scope:dwarven_char = {
					remove_trait = wounded_1
					add_trait = scarred
				}
			}
			40 = {
				desc = dwarven_yearly.0007.a.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -2
				}
				add_prestige = -100
				scope:dwarven_char = { # Throwing errors
					death = {
						death_reason = death_battle
					}
				}
			}
		}
	}
	option = {
		name = dwarven_yearly.0007.b

		stress_impact = {
			base = medium_stress_impact_gain
			compassionate = major_stress_impact_gain
			forgiving = medium_stress_impact_gain
			just = minor_stress_impact_gain
			sadistic = major_stress_impact_loss
			callous = medium_stress_impact_loss
			greedy = medium_stress_impact_loss
			arbitrary = minor_stress_impact_loss
		}		

		add_gold = 50
		add_piety = -100

		unknown_murder_effect = {
			MURDERER = root
			VICTIM = scope:dwarven_char
			REASON = death_duel
		}
	}
}

#################################################
### dwarven_yearly.0007 - Goblins! ###
#################################################

# Goblins!
dwarven_yearly.0008 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0008.t
	desc = dwarven_yearly.0008.desc
	theme = martial_strategy_focus
	override_background = { reference = halls }
	
	right_portrait = {
		character = root
		triggered_animation = {
			trigger = { 
				has_trait = craven
			}
			animation = fear
		}
		animation = aggressive_axe
	}

	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
	}

	option = {
		name = dwarven_yearly.0008.a

		skill = prowess
		duel = {
			skill = prowess
			value = 16
			20 = {
				desc = dwarven_yearly.0008.a.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
				}
				show_as_tooltip = {
					add_prestige = 100
					add_piety = 100
					add_gold = 75
					add_martial_lifestyle_xp = 100
				}
			}

			20 = {
				desc = dwarven_yearly.0008.a.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
				}
				show_as_tooltip = {
					add_prestige = -100
				}
				increase_wounds_no_death_effect = { REASON = wild_animal }
			}
		}
		stress_impact = {
			craven = major_stress_gain
			arrogant = minor_stress_loss
			brave = minor_stress_loss
		}

	}

		option = {
		name = dwarven_yearly.0008.b

		add_prestige = -100
		stress_impact = { 
			brave = major_stress_gain
			arrogant = minor_stress_impact_gain
			craven = minor_stress_loss
		}
	}
}

#########################################################
### dwarven_yearly.0009 - The ‘Knockers by Jaco_Daan  ###
#########################################################

dwarven_yearly.0009 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0009.t
	desc = dwarven_yearly.0009.desc
	theme = stewardship_duty_focus

	left_portrait = {
		character = root
		animation = worry
	}
	
	right_portrait = {
		character = scope:root
		animation = marshal
	}

	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
	}

	immediate = {
		cp:councillor_marshal ?= { save_scope_as = marshal }
	}

	option = {
		name = dwarven_yearly.0009.a
		
		random = {
			chance = {
				value = 60
				subtract = martial.mult2.neg
			}
			add_character_modifier = {
				modifier = lotr_harrowing_tales
				years = 1
			}
			custom_tooltip = dwarven_yearly.0009.a.tt
		}
	}

	option = {
		name = dwarven_yearly.0009.b

		random = {
			chance = {
				value = 60
				subtract = scope:marshal.martial.mult2.neg
			}
			scope:marshal = {
				add_character_modifier = {
					modifier = lotr_harrowing_tales
					years = 1
				}
			}
			add_character_modifier = {
				modifier = lotr_harrowing_tales
				years = 1
			}
			custom_tooltip = dwarven_yearly.0009.b.tt
		}
	}
}

###############################################################
### dwarven_yearly.0010 - Mischievous Sprites by Jaco_Daan  ###
###############################################################

dwarven_yearly.0010 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0010.t
	desc = dwarven_yearly.0010.desc
	theme = stewardship_duty_focus

	left_portrait = {
		character = root
		animation = worry
	}
	
	right_portrait = {
		character = scope:loremaster
		animation = marshal
	}
	
	lower_center_portrait = { 
		character = scope:spymaster
	}

	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
	}

	immediate = {
		cp:councillor_court_chaplain ?= { save_scope_as = loremaster }
		cp:councillor_spymaster ?= { save_scope_as = spymaster }
	}

	option = {
		name = dwarven_yearly.0010.a
		add_piety = -150

		random = {
			chance = {
				value = 40
				add = scope:loremaster.learning.mult2
			}
			add_character_modifier = {
				modifier = lotr_sprite_driven_away
				years = 1
			}
		}
	}

	option = {
		name = dwarven_yearly.0010.b
		add_prestige = -150
		
		random = {
			chance = {
				value = 40
				add = scope:spymaster.intrigue.mult2
			}
			add_character_modifier = {
				modifier = lotr_sprite_driven_away
				years = 1
			}
		}
	}

	option = {
		name = dwarven_yearly.0010.c
		add_prestige = -50
		add_piety = -50

		add_character_modifier = {
			modifier = lotr_sprite_in_mines
			years = 1
		}
	}
}

####################################################################
### dwarven_yearly.0011 - The Sweet Smell of Death by Jaco_Daan  ###
####################################################################

dwarven_yearly.0011 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0011.t
	desc = dwarven_yearly.0011.desc
	theme = stewardship_duty_focus

	left_portrait = {
		character = root
		animation = paranoia
	}
	
	right_portrait = {
		character = scope:selected_rival
		animation = marshal
	}

	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
		any_held_county = {
			title_province = {
				OR = {
					has_building_or_higher = iron_mines_01
					has_building_or_higher = tin_mines_01
					has_building_or_higher = copper_mines_01
					has_building_or_higher = lead_mines_01
					has_building_or_higher = silver_mines_01
					has_building_or_higher = gold_mines_01
					has_building_or_higher = mithril_mines_01
					has_building_or_higher = quartz_mines_01
					has_building_or_higher = peridot_mines_01
					has_building_or_higher = onyx_mines_01
					has_building_or_higher = amethyst_mines_01
					has_building_or_higher = ruby_mines_01
					has_building_or_higher = sapphire_mines_01
					has_building_or_higher = emerald_mines_01
					has_building_or_higher = diamond_mines_01
				}
			}
		}
	}

	immediate = {
		random_held_county = {
			limit = {
				title_province = {
					OR = {
						has_building_or_higher = iron_mines_01
						has_building_or_higher = tin_mines_01
						has_building_or_higher = copper_mines_01
						has_building_or_higher = lead_mines_01
						has_building_or_higher = silver_mines_01
						has_building_or_higher = gold_mines_01
						has_building_or_higher = mithril_mines_01
						has_building_or_higher = quartz_mines_01
						has_building_or_higher = peridot_mines_01
						has_building_or_higher = onyx_mines_01
						has_building_or_higher = amethyst_mines_01
						has_building_or_higher = ruby_mines_01
						has_building_or_higher = sapphire_mines_01
						has_building_or_higher = emerald_mines_01
						has_building_or_higher = diamond_mines_01
					}
				}
			}
			title_province = { save_scope_as = selected_province }
		}

		random_relation = {
			type = rival
			limit = { exists = this }
			save_scope_as = selected_rival
		}
	}

	option = {
		name = dwarven_yearly.0011.a
		add_prestige = 50
	}

	option = {
		name = dwarven_yearly.0011.b
		trigger = { exists = scope:selected_rival }
		random = {
			chance = {
				value = 35
				add = scope:selected_rival.age
			}
			scope:selected_rival = {
				add_character_modifier = {
					modifier = lotr_death_flower
					years = 5
				}
			}
		}
	}

	option = {
		name = dwarven_yearly.0011.c
		
		duel = {
			skill = learning 
			value = 30
			desc = dwarven_yearly.0011.learning_skill.desc
			80 = { # win skill duel
				desc = dwarven_yearly.0011.learning_skill_win.desc
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
				}
				send_interface_toast = {
					title = dwarven_yearly.0011.flower_success
					left_icon = root
					scope:selected_province.county = {
						add_county_modifier = {
							modifier = lotr_homegrown_food
							years = 3
						}
					}
				}
			}
			20 = { # lose skill duel
				desc = dwarven_yearly.0011.learning_skill_loss.desc
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
				}
				send_interface_toast = {
					title = dwarven_yearly.0011.flower_failure
					left_icon = root
					add_character_modifier = {
						modifier = lotr_death_flower
						years = 5
					}
				}
			}
		}
	}
}

dwarven_yearly.0012 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0012.t
	desc = dwarven_yearly.0012.desc
	theme = feast_activity 
	

	override_background = {
		reference = feast 
	}

	right_portrait = {
		character = root
		animation = disapproval
	}

	left_portrait = {
		character = scope:drunkdwarf
		animation = drink 
	}

	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
	}

	immediate = {
		random_pool_character = {
			province = root.location
			limit = {
				is_available_ai_adult = yes
				cannot_be_killed = no
				is_dwarf = yes
			}
			weight = {
				base = 10
				modifier = {
					has_trait = drunkard
					has_trait = arrogant
					add = 100
				}
				modifier = {
					has_trait = temperate
					add = -100
				}
			}
			save_scope_as = drunkdwarf
		}
		if = { #As a backup create the character
			limit = {
				NOT = { exists = scope:drunkdwarf }
			}
			create_character = {
				template = generic_peasant_character
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				save_scope_as = drunkdwarf
			}
			scope:drunkdwarf = {
				move_to_pool = yes
			}
		}
	}

	option = { # Leave me alone 
		name = dwarven_yearly.0012.a
		add_prestige = -350

		ai_chance = {
			base = 33
			modifier = {
				add = 50 
				OR = {
					has_trait = temperate
					has_trait = shy
				}
			}
		}

		stress_impact = {
			brave = major_stress_impact_gain
			drunkard = major_stress_impact_gain
			stubborn = minor_stress_impact_gain
		}
	}

	option = { # Drink! 
		name = dwarven_yearly.0012.b
		
		duel = {
			skill = prowess
			target = scope:drunkdwarf
			50 = {
				desc = dwarven_yearly.0012.b.success.desc
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					
				}
				send_interface_toast = {
					title = dwarven_yearly.0012.b.success
					left_icon = root
					right_icon = scope:drunkdwarf
					custom_tooltip = dwarven_yearly.0012.b.success.desc
					add_prestige = 750
				}

			}
			50 = {
				desc = dwarven_yearly.0012.b.failure.desc
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					
				}
				send_interface_toast = {
					title = dwarven_yearly.0012.b.failure
					left_icon = root
					right_icon = scope:drunkdwarf
					custom_tooltip = dwarven_yearly.0012.b.failure.desc
					add_prestige = -750
				}
			}
		}

		ai_chance = {
			base = 33
			modifier = {
				add = 50
				OR = {
					has_trait = brave
					has_trait = drunkard
					has_trait = gluttonous
					has_trait = humble
				}
			}
			modifier = {
				add = -50
				OR = {
					has_trait = temperate
					has_trait = craven
					has_trait = shy
				}
			}
		}

		stress_impact = {
			temperate = major_stress_impact_gain
			craven = medium_stress_impact_gain
			shy = major_stress_impact_gain
			drunkard = major_stress_impact_loss
		}
	}

	option = { # To the dungeon !
		name = dwarven_yearly.0012.c
		
		add_dread = minor_dread_gain
		add_tyranny = 100
		imprison = {
			target = scope:drunkdwarf
			type = dungeon
		}

		ai_chance = {
			base = 33
			modifier = {
				add = 50
				OR = {
					has_trait = wrathful
					has_trait = sadistic
					has_trait = callous
					has_trait = vengeful
					has_trait = arrogant

				}
			}
			modifier = {
				add = -50
				OR = {
					has_trait = compassionate
					has_trait = just
					has_trait = forgiving
					has_trait = brave
				}
			}
		}

		stress_impact = {
			compassionate = major_stress_impact_gain
			just = medium_stress_impact_gain
			forgiving = major_stress_impact_gain
			brave = medium_stress_impact_gain
		}
	}
}


###########################################
### ADAPTED FROM RICE (Pamir Expansion) ###
###########################################

# Fresh Mountain Air
dwarven_yearly.0200 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0200.t
	desc = dwarven_yearly.0200.desc
	theme = stewardship_duty_focus
	override_background = { reference = eaves_of_lorien }
	
	left_portrait = {
		character = root
		animation = happiness
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = -0.2
			has_trait = lazy
		}
		modifier = {
			add = 0.2
			has_trait = diligent
		}
		modifier = {
			add = 0.2
			has_trait = zealous
		}
		modifier = {
			add = -0.2
			has_trait = cynical
		}
		modifier = {
			add = 0.2
			has_trait = fickle
		}
		modifier = {
			add = -0.2
			has_trait = stubborn
		}
	}

	option = { # Ok
		name = dwarven_yearly.0200.a
		add_character_modifier = {
			modifier = lotr_dwarven_flavor_fresh_air_modifier
			years = 3
		}
	}
}


# Two Dwarves argue and ask you to resolve argument
dwarven_yearly.0201 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0201.t
	desc = dwarven_yearly.0201.desc
	theme = realm
	override_background = { reference = halls }
	
	left_portrait = {
		character = root
		animation = bored
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
	}

	option = { # Ok
		name = dwarven_yearly.0201.a
		random_list = {
			10 = { add_prestige = 30 }
			10 = { add_piety = -30 }
		}
	}
	
	option = { # Ok
		name = dwarven_yearly.0201.b
		random_list = {
			10 = { add_piety = 30 }
			10 = { add_prestige = -30 }
		}
	}
	
	option = { # Ok
		name = dwarven_yearly.0201.c
		trigger = {
			has_trait = paranoid
		}
		trait = paranoid
		add_tyranny = 5
		add_gold = medium_gold_value
	}
	
	option = { # Ok
		name = dwarven_yearly.0201.d
		add_dread = 5
		stress_impact = {
			humble = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			just = minor_stress_impact_gain
			lazy = minor_stress_impact_loss
			arbitrary = minor_stress_impact_loss
		}
	}
}


# Gift of lapis lazuli from locals
dwarven_yearly.0202 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0202.t
	desc = dwarven_yearly.0202.desc
	theme = realm
	override_background = { reference = underground_caverns_02 }
	
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
	}

	option = { # Ok
		name = dwarven_yearly.0202.a
		add_gold = 25
		add_prestige = 50
	}
}


# Miners complain about harsh taskmasters
dwarven_yearly.0203 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0203.t
	desc = dwarven_yearly.0203.desc
	theme = realm
	override_background = { reference = mining_activity }
	
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
		any_held_county = {
			title_province = {
				OR = {
					has_building_or_higher = iron_mines_01
					has_building_or_higher = tin_mines_01
					has_building_or_higher = copper_mines_01
					has_building_or_higher = lead_mines_01
					has_building_or_higher = silver_mines_01
					has_building_or_higher = gold_mines_01
					has_building_or_higher = mithril_mines_01
					has_building_or_higher = quartz_mines_01
					has_building_or_higher = peridot_mines_01
					has_building_or_higher = onyx_mines_01
					has_building_or_higher = amethyst_mines_01
					has_building_or_higher = ruby_mines_01
					has_building_or_higher = sapphire_mines_01
					has_building_or_higher = emerald_mines_01
					has_building_or_higher = diamond_mines_01
				}
			}
		}
	}

	immediate = {
		random_held_county = {
			limit = {
				title_province = {
					OR = {
						has_building_or_higher = iron_mines_01
						has_building_or_higher = tin_mines_01
						has_building_or_higher = copper_mines_01
						has_building_or_higher = lead_mines_01
						has_building_or_higher = silver_mines_01
						has_building_or_higher = gold_mines_01
						has_building_or_higher = mithril_mines_01
						has_building_or_higher = quartz_mines_01
						has_building_or_higher = peridot_mines_01
						has_building_or_higher = onyx_mines_01
						has_building_or_higher = amethyst_mines_01
						has_building_or_higher = ruby_mines_01
						has_building_or_higher = sapphire_mines_01
						has_building_or_higher = emerald_mines_01
						has_building_or_higher = diamond_mines_01
					}
				}
			}
			title_province = { save_scope_as = selected_province }
		}
	}

	option = { # Taskmasters are wrong
		name = dwarven_yearly.0203.a
		add_piety = 50
		stress_impact = {
			diligent = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
		}
		scope:selected_province = {
			add_province_modifier = {
				modifier = lotr_dwarven_flavor_reduced_mine_profits_modifier
				years = 10
			}
		}
		
		ai_chance = {
			base = 70
			modifier = {
				add = 20
				has_trait = compassionate
			}
			modifier = {
				add = 20
				has_trait = forgiving
			}
		}
	}
	option = { # Miners are wrong
		name = dwarven_yearly.0203.b
		add_prestige = 50
		stress_impact = {
			compassionate = minor_stress_impact_gain
			generous = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}
		scope:selected_province = {
			add_province_modifier = {
				modifier = lotr_dwarven_flavor_continued_mine_riots_modifier
				years = 10
			}
		}

		ai_chance = {
			base = 30
			modifier = {
				add = 30
				has_trait = greedy
			}
			modifier = {
				add = 20
				has_trait = callous
			}
			modifier = {
				add = 20
				has_trait = sadistic
			}
			modifier = {
				add = 20
				has_trait = arrogant
			}
		}
	}
	option = { # Negotiate an agreement
		name = dwarven_yearly.0203.c
		trigger = {
			diplomacy >= high_skill_rating
		}
		skill = diplomacy
		remove_short_term_gold = medium_gold_value

		ai_chance = {
			base = 30
			modifier = {
				add = 200
				gold > 200
			}
		}
	}
}


# Miners accused of smuggling
dwarven_yearly.0205 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0205.t
	desc = dwarven_yearly.0205.desc
	theme = realm
	override_background = { reference = mining_activity }
	
	left_portrait = {
		character = root
		animation = personality_irrational
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
		any_held_county = {
			title_province = {
				OR = {
					has_building_or_higher = iron_mines_01
					has_building_or_higher = tin_mines_01
					has_building_or_higher = copper_mines_01
					has_building_or_higher = lead_mines_01
					has_building_or_higher = silver_mines_01
					has_building_or_higher = gold_mines_01
					has_building_or_higher = mithril_mines_01
					has_building_or_higher = quartz_mines_01
					has_building_or_higher = peridot_mines_01
					has_building_or_higher = onyx_mines_01
					has_building_or_higher = amethyst_mines_01
					has_building_or_higher = ruby_mines_01
					has_building_or_higher = sapphire_mines_01
					has_building_or_higher = emerald_mines_01
					has_building_or_higher = diamond_mines_01
				}
			}
		}
	}

	immediate = {
		random_held_county = {
			limit = {
				title_province = {
					OR = {
						has_building_or_higher = iron_mines_01
						has_building_or_higher = tin_mines_01
						has_building_or_higher = copper_mines_01
						has_building_or_higher = lead_mines_01
						has_building_or_higher = silver_mines_01
						has_building_or_higher = gold_mines_01
						has_building_or_higher = mithril_mines_01
						has_building_or_higher = quartz_mines_01
						has_building_or_higher = peridot_mines_01
						has_building_or_higher = onyx_mines_01
						has_building_or_higher = amethyst_mines_01
						has_building_or_higher = ruby_mines_01
						has_building_or_higher = sapphire_mines_01
						has_building_or_higher = emerald_mines_01
						has_building_or_higher = diamond_mines_01
					}
				}
			}
			title_province = { save_scope_as = selected_province }
		}
	}

	option = { # Trying to feed families, let them go
		name = dwarven_yearly.0205.a
		add_piety = 50
		random = {
			chance = 50
			scope:selected_province = {
				add_province_modifier = {
					modifier = lotr_dwarven_flavor_reduced_mine_profits_modifier
					years = 10
				}
			}
		}
		stress_impact = {
			vengeful = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
			callous = minor_stress_impact_gain
		}

		ai_chance = {
			base = 30
			modifier = {
				add = 30
				has_trait = compassionate
			}
			modifier = {
				add = 30
				has_trait = forgiving
			}
			modifier = {
				add = 10
				has_trait = fickle
			}
		}
	}
	option = { # Imprison them for their crimes
		name = dwarven_yearly.0205.b
		add_dread = 5
		random = {
			chance = 25
			scope:selected_province = {
				add_province_modifier = {
					modifier = lotr_dwarven_flavor_reduced_mine_profits_modifier
					years = 10
				}
			}
		}
		stress_impact = {
			forgiving = minor_stress_impact_gain
			generous = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}

		ai_chance = {
			base = 70
			modifier = {
				add = 20
				has_trait = just
			}
		}
	}
	option = { # Execute them for this
		name = dwarven_yearly.0205.c
		add_dread = 10
		add_tyranny = 5
		random = {
			chance = 10
			scope:selected_province = {
				add_province_modifier = {
					modifier = lotr_dwarven_flavor_reduced_mine_profits_modifier
					years = 10
				}
			}
		}
		stress_impact = {
			forgiving = medium_stress_impact_gain
			generous = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
			patient = miniscule_stress_impact_gain
			calm = miniscule_stress_impact_gain
		}

		ai_chance = {
			base = 0
			modifier = {
				add = 100
				has_trait = callous
			}
			modifier = {
				add = 100
				has_trait = sadistic
			}
			modifier = {
				add = 50
				faith_is_evil = yes
			}
		}
	}
}


# Trip to underground hot spring
dwarven_yearly.0207 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0207.t
	desc = dwarven_yearly.0207.desc
	theme = stewardship_duty_focus
	override_background = { reference = underground_caverns_01 }
	
	left_portrait = {
		character = root
		animation = personality_content
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.2
			has_trait = lazy
		}
		modifier = {
			add = -0.2
			has_trait = diligent
		}
		modifier = {
			add = 0.2
			has_trait = shy
		}
		modifier = {
			add = -0.2
			has_trait = gregarious
		}
		modifier = {
			add = 0.3
			has_trait = beardless
		}
		modifier = {
			add = 0.5
			has_trait = black_breath
		}
	}

	option = { # Ok
		name = dwarven_yearly.0207.a
		stress_impact = {
			base = medium_stress_impact_loss
			calm = minor_stress_impact_loss
			lazy = minor_stress_impact_loss
			content = minor_stress_impact_loss
			patient = minor_stress_impact_loss
		}		
	}

	option = { # Ok
		name = dwarven_yearly.0207.b
		trigger = {
			OR = {
				has_trait = beardless
				has_trait = wounded
				has_trait = ill
				has_trait = black_breath
			}
		}
		random_list = {
			90 = {
				custom_tooltip = dwarven_yearly.0207.b.toast.nothing
				send_interface_toast = {
					type = event_toast_effect_good
					left_icon = ROOT
					title = dwarven_yearly.0207.b.toast.nothing
				}
			}
			10 = {
				custom_tooltip = dwarven_yearly.0207.b.toast.good
				send_interface_toast = {
					type = event_toast_effect_good
					left_icon = ROOT
					title = dwarven_yearly.0207.b.toast.good
					if = {
						limit = {
							has_trait = black_breath
						}
						remove_trait = black_breath
					}
					else_if = {
						limit = {
							has_trait = beardless
						}
						remove_trait = beardless
					}
					else_if = {
						limit = {
							has_trait = ill
						}
						remove_trait = ill
					}
					else_if = {
						limit = {
							has_trait = wounded
						}
						if = {
							limit = { has_trait = wounded_1 }
							remove_trait = wounded_1
							random = {
								chance = 0.6
								add_trait = scarred
							}
						}
						else_if = {
							limit = { has_trait = wounded_2 }
							remove_trait = wounded_2 #We do it like this so you can see the trait you've lost
							add_trait = wounded_1
						}
						else_if = {
							limit = { has_trait = wounded_3 }
							remove_trait = wounded_3
							add_trait = wounded_2
						}
					}
				}
			}
		}
	}
}


# Beautiful Subterranean Lake
dwarven_yearly.0208 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0208.t
	desc = dwarven_yearly.0208.desc
	theme = stewardship_duty_focus
	override_background = { reference = underground_caverns_01 }
	
	left_portrait = {
		character = root
		animation = personality_content
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
	}

	option = { # Ok
		name = dwarven_yearly.0208.a
		add_piety = 25
		stress_impact = {
			base = minor_stress_impact_loss
			calm = miniscule_stress_impact_loss
			humble = miniscule_stress_impact_loss
			content = miniscule_stress_impact_loss
			diligent = miniscule_stress_impact_gain
			ambitious = miniscule_stress_impact_gain
			impatient = miniscule_stress_impact_gain
		}
	}

	option = { # Time to fish!
		name = dwarven_yearly.0208.b
		stress_impact = {
			diligent = minor_stress_impact_loss
			ambitious = minor_stress_impact_loss
			brave = miniscule_stress_impact_loss
		}
		add_character_modifier = {
			modifier = budding_fisherman
			years = 5
		}
	}

	option = { # Who knows what lurks in the dark!
		name = dwarven_yearly.0208.c
		trigger = {
			has_trait = paranoid
		}
		trait = paranoid
		add_character_modifier = {
			modifier = watchful_modifier
			years = 1
		}
		stress_impact = {
			base = minor_stress_impact_gain
		}
	}
}


# Find ancient Dwarven carvings
dwarven_yearly.0209 = {
	content_source = realms_dlc
	type = character_event
	title = {
		first_valid = {
			triggered_desc = {
				trigger = {
					culture = {
						OR = {
							has_cultural_pillar = heritage_longbeard
							has_cultural_pillar = heritage_firebeard
							has_cultural_pillar = heritage_broadbeam
						}
					}
				}
				desc = dwarven_yearly.0209.t # Had elven influence - Cirth
			}
			desc = dwarven_yearly.0209.picto.t # No elven influence - pictograms
		}
	}
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					culture = {
						OR = {
							has_cultural_pillar = heritage_longbeard
							has_cultural_pillar = heritage_firebeard
							has_cultural_pillar = heritage_broadbeam
						}
					}
				}
				desc = dwarven_yearly.0209.cirth.desc # Had elven influence - Cirth
			}
			desc = dwarven_yearly.0209.picto.desc # No elven influence - pictograms
		}
	}
	theme = stewardship_duty_focus
	override_background = { reference = durins_door }
	
	right_portrait = {
		character = root
		animation = personality_rational
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
	}

	option = { # Ok
		name = dwarven_yearly.0209.a
		add_piety = 25
		stress_impact = {
			scholar = miniscule_stress_impact_loss
			education_learning_3 = miniscule_stress_impact_loss
			education_learning_4 = miniscule_stress_impact_loss
		}		
	}
}


# Visit dwarven workshops
dwarven_yearly.0210 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0210.t
	desc = dwarven_yearly.0210.desc
	theme = realm
	override_background = { reference = market_dwarven }
	
	left_portrait = {
		character = root
		animation = personality_rational
	}

	right_portrait = {
		character = scope:dwarven_char
		animation = personality_honorable
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
		any_held_county = {
			OR = {
				title_province = { has_building_or_higher = dwarven_toolmaker_guild_01 }
				title_province = { has_building_or_higher = dwarven_crafts_01 }
				title_province = { has_building_or_higher = dwarven_siege_workshop_01 }
				title_province = { has_building_or_higher = dwarven_surface_workshop_01 }
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.5
			has_lifestyle = crafting_lifestyle
		}
		modifier = {
			add = 0.5
			has_trait = lifestyle_artifact_crafting
		}
	}

	immediate = {
		random_held_county = {
			limit = {
				OR = {
					title_province = { has_building_or_higher = dwarven_toolmaker_guild_01 }
					title_province = { has_building_or_higher = dwarven_crafts_01 }
					title_province = { has_building_or_higher = dwarven_siege_workshop_01 }
					title_province = { has_building_or_higher = dwarven_surface_workshop_01 }
				}
			}
			title_province = { save_scope_as = selected_province }
		}
		create_character = {
			template = peasant_character
			location = scope:selected_province
			gender_female_chance = 25
			culture = scope:selected_province.culture
			faith = scope:selected_province.faith
			stewardship = { 5 10 }
			random_traits_list = {
				count = 1
				education_learning_2 = {}
				education_learning_3 = {}
				education_learning_4 = {}
				education_stewardship_2 = {}
				education_stewardship_3 = {}
				education_stewardship_4 = {}
				education_stewardship_5 = {}
			}
			save_scope_as = dwarven_char
				
			after_creation = {
				if = {
					limit = { is_dwarf = yes }
					change_age = { 65 180 }
				}
				add_trait = lifestyle_artifact_crafting
				random_list = {
					5 = {
						add_trait_xp = {
							trait = lifestyle_artifact_crafting
							track = weapon_smith
							value = { 5 15 }
						}
					}
					5 = {
						add_trait_xp = {
							trait = lifestyle_artifact_crafting
							track = armor_smith
							value = { 5 15 }
						}
					}
					3 = {
						add_trait_xp = {
							trait = lifestyle_artifact_crafting
							track = jewel_smith
							value = { 5 15 }
						}
					}
					1 = {
						add_trait_xp = {
							trait = lifestyle_artifact_crafting
							track = enchanting_smith
							value = { 5 15 }
						}
					}
				}
			}
		}
	}

	option = { # Learn something
		name = dwarven_yearly.0210.a
		trigger = {
			has_trait = lifestyle_artifact_crafting
		}
		trait = lifestyle_artifact_crafting
		random_list ={
			1 = {
				add_trait_xp = {
					trait = lifestyle_artifact_crafting
					track = weapon_smith
					value = { 3 12 }
				}
			}
			1 = {
				add_trait_xp = {
					trait = lifestyle_artifact_crafting
					track = armour_smith
					value = { 3 12 }
				}
			}
			1 = {
				trigger = {
					has_trait_xp = {
						trait = lifestyle_artifact_crafting
						track = jewel_smith
						value >= 10
					}
				}
				add_trait_xp = {
					trait = lifestyle_artifact_crafting
					track = jewel_smith
					value = { 3 12 }
				}
			}
			1 = {
				trigger = {
					has_trait_xp = {
						trait = lifestyle_artifact_crafting
						track = enchanting_smith
						value >= 10
					}
				}
				add_trait_xp = {
					trait = lifestyle_artifact_crafting
					track = enchanting_smith
					value = { 3 12 }
				}
			}
			1 = {
				add_crafting_lifestyle_xp = 300
			}
		}

		ai_chance = {
			base = 80
		}
	}

	option = { # Learn something
		name = dwarven_yearly.0210.b
		trigger = {
			has_lifestyle = crafting_lifestyle
			NOT = {
				has_trait = lifestyle_artifact_crafting
			}
		}
		add_crafting_lifestyle_xp = 300
		
		ai_chance = {
			base = 80
		}
	}

	option = { # Recruit the worker
		name = dwarven_yearly.0210.c
		remove_short_term_gold = minor_gold_value
		add_courtier = scope:dwarven_char
		add_character_flag = recruited_dwarven_worker
		stress_impact = {
			generous = minor_stress_impact_loss
			gregarious = miniscule_stress_impact_loss
			humble = miniscule_stress_impact_loss
		}
		
		ai_chance = {
			base = 0
			modifier = {
				add = 20
				gold > 100
			}
		}
	}

	option = { # Get back to work
		name = dwarven_yearly.0210.d
		add_prestige = 25
		stress_impact = {
			arrogant = minor_stress_impact_loss
			wrathful = miniscule_stress_impact_loss
			impatient = miniscule_stress_impact_loss
			greedy = miniscule_stress_impact_loss
		}
		
		ai_chance = {
			base = 20
		}
	}

	after = {
		hidden_effect = {
			if = {
				limit = {
					has_character_flag = recruited_dwarven_worker
				}
				remove_character_flag = recruited_dwarven_worker
			}
			else = {
				scope:dwarven_char = { silent_disappearance_effect = yes }
			}
		}
	}
}


# Mine profits are up/down
dwarven_yearly.0211 = {
	content_source = realms_dlc
	type = character_event
	title = {
		first_valid = {
			triggered_desc = {
				trigger = { has_character_flag = mining_profits_down_flag }
				desc = dwarven_yearly.0211.down.t
			}
			desc = dwarven_yearly.0211.up.t
		}
	}
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { has_character_flag = mining_profits_down_flag }
				desc = dwarven_yearly.0211.down.desc
			}
			desc = dwarven_yearly.0211.up.desc
		}
	}
	theme = realm
	override_background = { reference = mining_activity }
	
	left_portrait = {
		character = root
		animation = personality_rational
	}

	right_portrait = {
		character = scope:mining_informant_char
		animation = steward
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
		any_held_county = {
			title_province = {
				OR = {
					has_building_or_higher = iron_mines_01
					has_building_or_higher = tin_mines_01
					has_building_or_higher = copper_mines_01
					has_building_or_higher = lead_mines_01
					has_building_or_higher = silver_mines_01
					has_building_or_higher = gold_mines_01
					has_building_or_higher = mithril_mines_01
					has_building_or_higher = quartz_mines_01
					has_building_or_higher = peridot_mines_01
					has_building_or_higher = onyx_mines_01
					has_building_or_higher = amethyst_mines_01
					has_building_or_higher = ruby_mines_01
					has_building_or_higher = sapphire_mines_01
					has_building_or_higher = emerald_mines_01
					has_building_or_higher = diamond_mines_01
				}
			}
			title_province = {
				NOR = {
					has_province_modifier = lotr_dwarven_flavor_improved_mine_profits_modifier
					has_province_modifier = lotr_dwarven_flavor_reduced_mine_profits_modifier
					has_province_modifier = lotr_dwarven_flavor_continued_mine_riots_modifier
				}
			}
		}
	}

	immediate = {
		random_held_county = {
			limit = {
				title_province = {
					OR = {
						has_building_or_higher = iron_mines_01
						has_building_or_higher = tin_mines_01
						has_building_or_higher = copper_mines_01
						has_building_or_higher = lead_mines_01
						has_building_or_higher = silver_mines_01
						has_building_or_higher = gold_mines_01
						has_building_or_higher = mithril_mines_01
						has_building_or_higher = quartz_mines_01
						has_building_or_higher = peridot_mines_01
						has_building_or_higher = onyx_mines_01
						has_building_or_higher = amethyst_mines_01
						has_building_or_higher = ruby_mines_01
						has_building_or_higher = sapphire_mines_01
						has_building_or_higher = emerald_mines_01
						has_building_or_higher = diamond_mines_01
					}
				}
				title_province = {
					NOR = {
						has_province_modifier = lotr_dwarven_flavor_improved_mine_profits_modifier
						has_province_modifier = lotr_dwarven_flavor_reduced_mine_profits_modifier
						has_province_modifier = lotr_dwarven_flavor_continued_mine_riots_modifier
					}
				}
			}
			title_province = { save_scope_as = selected_province }
		}
		if = {
			limit = {
				employs_court_position = stone_singer_court_position
				any_court_position_holder = {
					type = stone_singer_court_position
					is_available_ai_adult = yes
				}
			}
			random_court_position_holder = {
				type = stone_singer_court_position
				limit = {
					is_available_ai_adult = yes
				}
				save_scope_as = mining_informant_char
				court_event_character_flag_effect = yes
			}
		}
		else_if = {
			limit = {
				employs_court_position = overseer_of_the_mines_court_position
				any_court_position_holder = {
					type = overseer_of_the_mines_court_position
					is_available_ai_adult = yes
				}
			}
			random_court_position_holder = {
				type = overseer_of_the_mines_court_position
				limit = {
					is_available_ai_adult = yes
				}
				save_scope_as = mining_informant_char
				court_event_character_flag_effect = yes
			}
		}
		else = { # Fallback
			cp:councillor_steward ?= {
				save_scope_as = mining_informant_char
			}
		}
		random = { # Flip a coin wether profits are up or down!
			chance = 50
			add_character_flag = mining_profits_down_flag
		}

		if = {
			limit = {
				has_character_flag = mining_profits_down_flag
			}
			scope:selected_province = {
				add_province_modifier = {
					modifier = lotr_dwarven_flavor_reduced_mine_profits_modifier
					years = 10
				}
			}
		}
		else = {
			scope:selected_province = {
				add_province_modifier = {
					modifier = lotr_dwarven_flavor_improved_mine_profits_modifier
					years = 10
				}
			}
		}
	}

	option = { # Ok
		name = dwarven_yearly.0211.a
		trigger = {
			has_character_flag = mining_profits_down_flag
		}
		stress_impact = {
			base = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
		}
	}

	option = { # Ok
		name = dwarven_yearly.0211.b
		trigger = {
			NOT = { has_character_flag = mining_profits_down_flag }
		}
		stress_impact = {
			base = miniscule_stress_impact_loss
			greedy = miniscule_stress_impact_loss
		}
	}

	after = {
		if = {
			limit = {
				has_character_flag = mining_profits_down_flag
			}
			remove_character_flag = mining_profits_down_flag
		}
	}
}


# Giant Bat Migration into county
dwarven_yearly.0212 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0212.t
	desc = dwarven_yearly.0212.desc
	theme = stewardship_duty_focus
	override_background = {
		reference = underground_caverns_02
	}
	
	left_portrait = {
		character = root
		animation = disapproval
	}
	
	trigger = {
		any_held_county = {
			title_province = { terrain = halls }
			NOR = {
				has_county_modifier = lotr_dwarven_flavor_bat_migration_good
				has_county_modifier = lotr_dwarven_flavor_bat_migration_bad
			}
		}
	}
	
	immediate = {
		random_held_county = {
			limit = {
				title_province = { terrain = halls }
				NOR = {
					has_county_modifier = lotr_dwarven_flavor_bat_migration_good
					has_county_modifier = lotr_dwarven_flavor_bat_migration_bad
				}
			}
			save_scope_as = bat_county
		}
	}

	option = { # Ok
		name = dwarven_yearly.0212.a
		random_list = {
			10 = {
				send_interface_toast = {
					type = event_toast_effect_good
					left_icon = ROOT
					title = dwarven_yearly.0212.toast.good
					scope:bat_county = {
						add_county_modifier = {
							modifier = lotr_dwarven_flavor_bat_migration_good
							years = 10
						}
					}
				}				
			}
			10 = {
				send_interface_toast = {
					type = event_toast_effect_bad
					left_icon = ROOT
					title = dwarven_yearly.0212.toast.bad
					scope:bat_county = {
						add_county_modifier = {
							modifier = lotr_dwarven_flavor_bat_migration_bad
							years = 10
						}
					}
				}				
			}
		}
	}
}

# Merchant offers you rare resource artifact
scripted_effect merchant_resource_pick_material_effect = {
	### Resource Costs
	# iron		50
	# tin		50
	# copper	50
	# lead		50
	# silver	75
	# gold		75
	# mithril	500
	# quartz	50
	# peridot	50
	# onyx		50
	# amethyst	75
	# ruby		75
	# sapphire	100
	# emerald	100
	# diamond	100

	random_list = {
		25 = { # iron
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_iron_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:iron
					}
				}
			}
			merchant_resource_create_artifact_effect = {
				METAL = iron
				COST = @dwarven_yearly_0213_cheap_cost
			}
		}
		25 = { # tin
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_tin_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:tin
					}
				}
			}
			merchant_resource_create_artifact_effect = {
				METAL = tin
				COST = @dwarven_yearly_0213_cheap_cost
			}
		}
		25 = { # copper
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_copper_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:copper
					}
				}
			}
			merchant_resource_create_artifact_effect = {
				METAL = copper
				COST = @dwarven_yearly_0213_cheap_cost
			}
		}
		25 = { # lead
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_lead_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:lead
					}
				}
			}
			merchant_resource_create_artifact_effect = {
				METAL = lead
				COST = @dwarven_yearly_0213_cheap_cost
			}
		}
		15 = { # silver
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_silver_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:silver
					}
				}
			}
			merchant_resource_create_artifact_effect = {
				METAL = silver
				COST = @dwarven_yearly_0213_mid_cost
			}
		}
		15 = { # gold
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_gold_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:gold
					}
				}
			}
			create_metal_gem_artifact = {
				METAL = gold
				MODIFIER = artifact_monthly_minor_prestige_1_modifier
			}
			merchant_resource_create_artifact_effect = {
				METAL = gold
				COST = @dwarven_yearly_0213_mid_cost
			}
		}
		5 = { # mithril
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_mithril_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:mithril
					}
				}
			}
			merchant_resource_create_artifact_effect = {
				METAL = mithril
				COST = @dwarven_yearly_0213_mithril_cost
			}
		}
		25 = { # quartz
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_quartz_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:quartz
					}
				}
			}
			merchant_resource_create_artifact_effect = {
				METAL = quartz
				COST = @dwarven_yearly_0213_cheap_cost
			}
		}
		25 = { # peridot
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_peridot_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:peridot
					}
				}
			}
			merchant_resource_create_artifact_effect = {
				METAL = peridot
				COST = @dwarven_yearly_0213_cheap_cost
			}
		}
		25 = { # onyx
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_onyx_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:onyx
					}
				}
			}
			merchant_resource_create_artifact_effect = {
				METAL = onyx
				COST = @dwarven_yearly_0213_cheap_cost
			}
		}
		15 = { # amethyst
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_amethyst_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:amethyst
					}
				}
			}
			merchant_resource_create_artifact_effect = {
				METAL = amethyst
				COST = @dwarven_yearly_0213_mid_cost
			}
		}
		15 = { # ruby
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_ruby_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:ruby
					}
				}
			}
			merchant_resource_create_artifact_effect = {
				METAL = ruby
				COST = @dwarven_yearly_0213_mid_cost
			}
		}
		10 = { # sapphire
			trigger = {
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:sapphire
					}
				}
			}
			merchant_resource_create_artifact_effect = {
				METAL = sapphire
				COST = @dwarven_yearly_0213_high_cost
			}
		}
		10 = { # emerald
			trigger = {
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:emerald
					}
				}
			}
			merchant_resource_create_artifact_effect = {
				METAL = emerald
				COST = @dwarven_yearly_0213_high_cost
			}
		}
		10 = { # diamond
			trigger = {
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:diamond
					}
				}
			}
			merchant_resource_create_artifact_effect = {
				METAL = diamond
				COST = @dwarven_yearly_0213_high_cost
			}
		}
	}
}
scripted_effect merchant_resource_create_artifact_effect = {
	scope:merchant_character_scope = {
		create_metal_gem_artifact = {
			METAL = $METAL$
			MODIFIER = artifact_monthly_minor_prestige_1_modifier
		}
	}

	# Juke note: We cant use set_metal_gem_variable here since we dont want to increase the variable counter on ROOT until they buy the material
	scope:newly_created_artifact = { # Manually assign the proper material var to the artifact itself
		set_variable = $METAL$
	}

	set_variable = { # Save the material for the new artifact (for use in the event)
		name = newly_created_artifact_metal
		value = flag:$METAL$
	}
	set_variable = { # Save the cost for the new artifact (for use in the event)
		name = newly_created_artifact_cost
		value = $COST$
	}
	add_to_variable_list = { # Update the used metals list so theres no duplicates
		name = res_artifacts_used_metals
		target = flag:$METAL$
	}
}
dwarven_yearly.0213 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0213.t
	desc = dwarven_yearly.0213.desc
	theme = realm
	override_background = { reference = market }
	
	left_portrait = {
		character = root
		animation = personality_rational
	}

	right_portrait = {
		character = scope:merchant_character_scope
		animation = steward
	}

	artifact = {
		target = scope:res_artifact_1
		position = lower_left_portrait
	}

	artifact = {
		target = scope:res_artifact_2
		position = lower_center_portrait
	}

	artifact = {
		target = scope:res_artifact_3
		position = lower_right_portrait
	}
	
	cooldown = { years = 10 }

	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		faith_is_evil = no
		is_orc = no
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 2
			has_trait = lifestyle_artifact_crafting
		}
		modifier = {
			add = 1
			has_lifestyle = crafting_lifestyle
		}
		modifier = { # Elves dont have mines so they get a few more traders
			add = 3
			is_elf = yes
			OR = {
				has_trait = lifestyle_artifact_crafting
				has_lifestyle = crafting_lifestyle
			}
		}
	}
	
	immediate = {
		# Find appropriate dwarven merchant culture and faith!
		random_list = {
			10 = { # A Longbeard
				trigger = {
					ROOT.capital_province = {
						OR = { # Any one of these places
							geographical_region = middleearth_west
							geographical_region = middleearth_beleriand
							geographical_region = middleearth_forodwaith
							geographical_region = middleearth_rhun
							geographical_region = middleearth_blue_mountains
							geographical_region = middleearth_misty_mountains
							geographical_region = middleearth_iron_mountains
							geographical_region = middleearth_orrostar_noldoro
						}
					}
				}
				culture:longbeards = { save_scope_as = merchant_culture }
				faith:faith_khazad = { save_scope_as = merchant_faith }
			}
			10 = { # A Broadbeam
				trigger = {
					ROOT.capital_province = {
						OR = { # Any one of these places
							geographical_region = middleearth_west
							geographical_region = middleearth_beleriand
							geographical_region = middleearth_forodwaith
							geographical_region = middleearth_rhun
							geographical_region = middleearth_blue_mountains
							geographical_region = middleearth_misty_mountains
							geographical_region = middleearth_iron_mountains
							geographical_region = middleearth_orrostar_noldoro
						}
					}
				}
				culture:broadbeams = { save_scope_as = merchant_culture }
				faith:faith_broadbeams = { save_scope_as = merchant_faith }
			}
			10 = { # A Firebeard
				trigger = {
					ROOT.capital_province = {
						OR = { # Any one of these places
							geographical_region = middleearth_west
							geographical_region = middleearth_beleriand
							geographical_region = middleearth_forodwaith
							geographical_region = middleearth_rhun
							geographical_region = middleearth_blue_mountains
							geographical_region = middleearth_misty_mountains
							geographical_region = middleearth_iron_mountains
							geographical_region = middleearth_orrostar_noldoro
						}
					}
				}
				culture:firebeards = { save_scope_as = merchant_culture }
				faith:faith_khazad = { save_scope_as = merchant_faith }
			}
			10 = { # A Stiffbeard
				trigger = {
					ROOT.capital_province = {
						NOR = { # None of these places
							geographical_region = middleearth_west
							geographical_region = middleearth_beleriand
							geographical_region = middleearth_forodwaith
							geographical_region = middleearth_rhun
							geographical_region = middleearth_blue_mountains
							geographical_region = middleearth_misty_mountains
							geographical_region = middleearth_iron_mountains
							geographical_region = middleearth_orrostar_noldoro
							
							geographical_region = middleearth_haradwaith
							geographical_region = middleearth_utter_south
							geographical_region = middleearth_yellow_mountains
						}
					}
				}
				culture:stiffbeards = { save_scope_as = merchant_culture }
				faith:faith_stiffbeards = { save_scope_as = merchant_faith }
			}
			10 = { # An Ironfist
				trigger = {
					ROOT.capital_province = {
						NOR = { # None of these places
							geographical_region = middleearth_west
							geographical_region = middleearth_beleriand
							geographical_region = middleearth_forodwaith
							geographical_region = middleearth_rhun
							geographical_region = middleearth_blue_mountains
							geographical_region = middleearth_misty_mountains
							geographical_region = middleearth_iron_mountains
							geographical_region = middleearth_orrostar_noldoro
							
							geographical_region = middleearth_haradwaith
							geographical_region = middleearth_utter_south
							geographical_region = middleearth_yellow_mountains
						}
					}
				}
				culture:ironfists = { save_scope_as = merchant_culture }
				faith:faith_khazad = { save_scope_as = merchant_faith }
			}
			10 = { # A Blacklock
				trigger = {
					ROOT.capital_province = {
						NOR = { # None of these places
							geographical_region = middleearth_west
							geographical_region = middleearth_beleriand
							geographical_region = middleearth_forodwaith
							geographical_region = middleearth_rhun
							geographical_region = middleearth_blue_mountains
							geographical_region = middleearth_misty_mountains
							geographical_region = middleearth_iron_mountains
							geographical_region = middleearth_orrostar_noldoro
						}
					}
				}
				culture:blacklocks = { save_scope_as = merchant_culture }
				faith:faith_blacklocks = { save_scope_as = merchant_faith }
			}
			10 = { # A Stonefoot
				trigger = {
					ROOT.capital_province = {
						NOR = { # None of these places
							geographical_region = middleearth_west
							geographical_region = middleearth_beleriand
							geographical_region = middleearth_forodwaith
							geographical_region = middleearth_rhun
							geographical_region = middleearth_blue_mountains
							geographical_region = middleearth_misty_mountains
							geographical_region = middleearth_iron_mountains
							geographical_region = middleearth_orrostar_noldoro
						}
					}
				}
				culture:stonefoots = { save_scope_as = merchant_culture }
				faith:faith_khazad = { save_scope_as = merchant_faith }
			}
		}

		# Fallback for culture/faith
		if = {
			limit = {
				NOT = { exists = scope:merchant_culture }
			}
			culture:longbeards = { save_scope_as = merchant_culture }
			faith:faith_khazad = { save_scope_as = merchant_faith }
		}

		# Create the Merchant!
		create_character = {
			template = generic_peasant_character
			location = root.location
			culture = scope:merchant_culture
			faith = scope:merchant_faith
			stewardship = { 5 15 }
			#Set up the scope
			save_scope_as = merchant_character_scope
			gender_female_chance = 0
			after_creation = {
				change_age = { 65 180 }
				add_trait = avaricious
			}
		}

		# Create the Resource Artifacts!
		hidden_effect = {
			# Create Artifact 1
			merchant_resource_pick_material_effect = yes
			scope:newly_created_artifact = { save_scope_as = res_artifact_1 }
			set_variable = {
				name = res_artifact_1_metal
				value = var:newly_created_artifact_metal
			}
			set_variable = {
				name = res_artifact_1_cost
				value = var:newly_created_artifact_cost
			}

			# Create Artifact 2
			merchant_resource_pick_material_effect = yes
			scope:newly_created_artifact = { save_scope_as = res_artifact_2 }
			set_variable = {
				name = res_artifact_2_metal
				value = var:newly_created_artifact_metal
			}
			set_variable = {
				name = res_artifact_2_cost
				value = var:newly_created_artifact_cost
			}

			# Create Artifact 3
			merchant_resource_pick_material_effect = yes
			scope:newly_created_artifact = { save_scope_as = res_artifact_3 }
			set_variable = {
				name = res_artifact_3_metal
				value = var:newly_created_artifact_metal
			}
			set_variable = {
				name = res_artifact_3_cost
				value = var:newly_created_artifact_cost
			}
		}
	}

	option = { # Buy first one
		name = dwarven_yearly.0213.a
		pay_short_term_gold = {
			target = scope:merchant_character_scope
			gold = {
				value = var:res_artifact_1_cost
			}
		}
		
		# Get the mats
		scope:res_artifact_1 = { set_owner = root }
		increase_variable = { # Actually increase the material variable on the character now
			NAME = res_artifact_1_metal
			AMOUNT = 1
		}
		
		# Remove the rest
		hidden_effect = {
			scope:res_artifact_2 = { destroy_artifact = this }
			scope:res_artifact_3 = { destroy_artifact = this }
		}
		
		ai_chance = {
			base = 5
			modifier = {
				add = 20
				gold > 150
				has_trait = lifestyle_artifact_crafting
			}
		}
	}

	option = { # Buy second one
		name = dwarven_yearly.0213.b
		pay_short_term_gold = {
			target = scope:merchant_character_scope
			gold = {
				value = var:res_artifact_2_cost
			}
		}
		
		# Get the mats
		scope:res_artifact_2 = { set_owner = root }
		increase_variable = { # Actually increase the material variable on the character now
			NAME = res_artifact_2_metal
			AMOUNT = 1
		}

		# Remove the rest
		hidden_effect = {
			scope:res_artifact_1 = { destroy_artifact = this }
			scope:res_artifact_3 = { destroy_artifact = this }
		}
		
		ai_chance = {
			base = 5
			modifier = {
				add = 20
				gold > 150
				has_trait = lifestyle_artifact_crafting
			}
		}
	}

	option = { # Buy third one
		name = dwarven_yearly.0213.c
		pay_short_term_gold = {
			target = scope:merchant_character_scope
			gold = {
				value = var:res_artifact_3_cost
			}
		}

		# Get the mats
		scope:res_artifact_3 = { set_owner = root }
		increase_variable = { # Actually increase the material variable on the character now
			NAME = res_artifact_3_metal
			AMOUNT = 1
		}

		# Remove the rest
		hidden_effect = {
			scope:res_artifact_1 = { destroy_artifact = this }
			scope:res_artifact_2 = { destroy_artifact = this }
		}
		
		ai_chance = {
			base = 5
			modifier = {
				add = 20
				gold > 150
				has_trait = lifestyle_artifact_crafting
			}
		}
	}

	option = { # Buy all three!
		name = dwarven_yearly.0213.d
		pay_short_term_gold = {
			target = scope:merchant_character_scope
			gold = {
				value = var:res_artifact_1_cost
				add = var:res_artifact_2_cost
				add = var:res_artifact_3_cost
			}
		}

		# Get the mats
		scope:res_artifact_1 = { set_owner = root }
		increase_variable = { # Actually increase the material variable on the character now
			NAME = res_artifact_1_metal
			AMOUNT = 1
		}
		# Get the mats
		scope:res_artifact_2 = { set_owner = root }
		increase_variable = { # Actually increase the material variable on the character now
			NAME = res_artifact_2_metal
			AMOUNT = 1
		}
		# Get the mats
		scope:res_artifact_3 = { set_owner = root }
		increase_variable = { # Actually increase the material variable on the character now
			NAME = res_artifact_3_metal
			AMOUNT = 1
		}
		
		ai_chance = {
			base = 1
			modifier = {
				add = 40
				gold > 500
				has_trait = lifestyle_artifact_crafting
			}
		}
	}

	option = { # Begone, peasant
		name = dwarven_yearly.0213.e
		
		# Remove the rest
		hidden_effect = {
			scope:res_artifact_1 = { destroy_artifact = this }
			scope:res_artifact_2 = { destroy_artifact = this }
			scope:res_artifact_3 = { destroy_artifact = this }
		}
		
		ai_chance = {
			base = 85
			modifier = {
				add = -50
				gold > 0
				has_trait = lifestyle_artifact_crafting
			}
		}
	}

	after = {
		hidden_effect = {
			scope:merchant_character_scope = { silent_disappearance_effect = yes }
		}
	}
}


# Goat herder gifts a bowl made from the horn of the Iron Hills goat
dwarven_yearly.0214 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0214.t
	desc = dwarven_yearly.0214.desc
	theme = stewardship_duty_focus
	override_background = { reference = rhudaur }
	
	right_portrait = root
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		any_realm_province = {
			geographical_region = middleearth_iron_mountains_iron_hills
		}
		is_orc = no
		#is_dwarf = yes # Also available to humans etc in the iron mountains
	}

	option = { # Ok
		name = dwarven_yearly.0214.a
		add_character_modifier = {
			modifier = lotr_dwarven_flavor_horny_bowls
			years = 10
		}
	}
}


# Mushroom farms growing wild
dwarven_yearly.0215 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0215.t
	desc = dwarven_yearly.0215.desc
	theme = stewardship_duty_focus
	override_background = { reference = underground_caverns_02 }
	
	left_portrait = {
		character = root
		animation = disapproval
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
		any_held_county = {
			title_province = { has_building_or_higher = dwarven_fungal_farm_01 }
		}
	}

	immediate = {
		random_held_county = {
			limit = {
				title_province = { has_building_or_higher = dwarven_fungal_farm_01 }
			}
			title_province = { save_scope_as = selected_province }
			add_county_modifier = {
				modifier = lotr_dwarven_flavor_weird_fungi_modifier
				years = 10
			}
		}
	}

	option = { # Ok
		name = dwarven_yearly.0215.a
		add_learning_lifestyle_xp = minor_lifestyle_xp
	}
}


# Feud between two dwarven families
dwarven_yearly.0216 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0216.t
	desc = dwarven_yearly.0216.desc
	theme = martial_strategy_focus
	override_background = { reference = halls }
	
	left_portrait = {
		character = root
		animation = boredom
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
		any_held_county = {
			culture = { is_dwarf_culture = yes }
			NOT = { has_county_modifier = lotr_dwarven_flavor_family_feud }
		}
	}
	
	immediate = {
		random_held_county = {
			limit = {
				culture = { is_dwarf_culture = yes }
				NOT = { has_county_modifier = lotr_dwarven_flavor_family_feud }
			}
			title_province = { save_scope_as = selected_province }
		}
	}

	option = { # Can't we do something?
		name = dwarven_yearly.0216.a
		random_list = {
			65 = {
				modifier = {
					add = 5
					has_trait = arbitrary
				}	
				modifier = {
					add = -5
					has_trait = just
				}	
				modifier = {
					add = 5
					has_trait = lazy
				}	
				modifier = {
					add = -5
					has_trait = diligent
				}	
				modifier = {
					add = 5
					has_trait = trusting
				}	
				modifier = {
					add = -5
					has_trait = sadistic
				}	
				send_interface_toast = {
					type = event_toast_effect_bad
					left_icon = ROOT
					title = dwarven_yearly.0216.toast.bad
					scope:selected_province.county = {
						add_county_modifier = {
							modifier = lotr_dwarven_flavor_family_feud
							years = 10
						}		
					}
				}			
			}
			35 = {	
				send_interface_toast = {
					type = event_toast_effect_good
					left_icon = ROOT
					title = dwarven_yearly.0216.toast.good
					add_prestige = 100
				}			
			}
		}
		
		ai_chance = {
			base = 30
		}
	}

	option = { # Use diplomacy to resolve (best)
		name = dwarven_yearly.0216.b
		trigger = {
			diplomacy >= decent_skill_rating
		}
		skill = diplomacy
		random_list = {
			20 = {
				modifier = {
					add = 3
					has_trait = arbitrary
				}	
				modifier = {
					add = -3
					has_trait = just
				}	
				modifier = {
					add = 3
					has_trait = lazy
				}	
				modifier = {
					add = -5
					has_trait = diligent
				}	
				modifier = {
					add = 3
					has_trait = shy
				}	
				modifier = {
					add = -3
					has_trait = gregarious
				}		
				modifier = {
					add = 3
					has_trait = deceitful
				}	
				modifier = {
					add = -3
					has_trait = honest
				}		
				modifier = {
					add = 3
					has_trait = wrathful
				}	
				modifier = {
					add = -3
					has_trait = calm
				}
				send_interface_toast = {
					type = event_toast_effect_bad
					left_icon = ROOT
					title = dwarven_yearly.0216.toast.bad
					scope:selected_province.county = {
						add_county_modifier = {
							modifier = lotr_dwarven_flavor_family_feud
							years = 10
						}
					}
				}
			}
			80 = {
				send_interface_toast = {
					type = event_toast_effect_good
					left_icon = ROOT
					title = dwarven_yearly.0216.toast.good
					add_prestige = 100
				}
			}
		}
		
		ai_chance = {
			base = 10
			modifier = {
				add = 50
				diplomacy > 12
			}
		}
	}

	option = { # Use cunning and trickery (okay)
		name = dwarven_yearly.0216.c
		trigger = {
			intrigue >= decent_skill_rating
		}
		skill = intrigue
		random_list = {
			30 = {
				modifier = {
					add = 3
					has_trait = arbitrary
				}	
				modifier = {
					add = -3
					has_trait = just
				}	
				modifier = {
					add = 3
					has_trait = lazy
				}	
				modifier = {
					add = -3
					has_trait = diligent
				}	
				modifier = {
					add = 3
					has_trait = honest
				}	
				modifier = {
					add = -3
					has_trait = deceitful
				}		
				modifier = {
					add = 3
					has_trait = impatient
				}	
				modifier = {
					add = -3
					has_trait = patient
				}		
				modifier = {
					add = 3
					has_trait = wrathful
				}	
				modifier = {
					add = -3
					has_trait = calm
				}
				send_interface_toast = {
					type = event_toast_effect_bad
					left_icon = ROOT
					title = dwarven_yearly.0216.toast.bad
					scope:selected_province.county = {
						add_county_modifier = {
							modifier = lotr_dwarven_flavor_family_feud
							years = 10
						}		
					}
				}			
			}
			70 = {	
				send_interface_toast = {
					type = event_toast_effect_good
					left_icon = ROOT
					title = dwarven_yearly.0216.toast.good
					add_prestige = 100
				}			
			}
		}
		
		ai_chance = {
			base = 10
			modifier = {
				add = 50
				intrigue > 15
			}
		}
	}

	option = { # Use military threats (worst)
		name = dwarven_yearly.0216.d
		trigger = {
			martial >= decent_skill_rating
		}
		skill = martial
		random_list = {
			40 = {
				modifier = {
					add = 3
					has_trait = lazy
				}	
				modifier = {
					add = -3
					has_trait = diligent
				}	
				modifier = {
					add = 3
					has_trait = deceitful
				}	
				modifier = {
					add = -3
					has_trait = honest
				}		
				modifier = {
					add = 3
					has_trait = craven
				}	
				modifier = {
					add = -3
					has_trait = brave
				}		
				modifier = {
					add = 3
					has_trait = cynical
				}	
				modifier = {
					add = -3
					has_trait = zealous
				}		
				modifier = {
					add = 3
					has_trait = forgiving
				}	
				modifier = {
					add = -3
					has_trait = vengeful
				}
				send_interface_toast = {
					type = event_toast_effect_bad
					left_icon = ROOT
					title = dwarven_yearly.0216.toast.bad
					scope:selected_province.county = {
						add_county_modifier = {
							modifier = lotr_dwarven_flavor_family_feud
							years = 10
						}		
					}
				}			
			}
			60 = {	
				send_interface_toast = {
					type = event_toast_effect_good
					left_icon = ROOT
					title = dwarven_yearly.0216.toast.good
					add_prestige = 100
				}			
			}
		}
		
		ai_chance = {
			base = 10
			modifier = {
				add = 50
				martial > 15
			}
		}
	}
}


# Luxurious beard grooming session
dwarven_yearly.0217 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0217.t
	desc = dwarven_yearly.0217.desc
	theme = stewardship_duty_focus
	override_background = { reference = throne_room_dwarf }
	
	left_portrait = {
		character = root
		animation = personality_rational
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
		NOT = { has_trait = beardless }
		NOR = {
			has_character_modifier = lotr_dwarven_flavor_beard_soap_modifier
			has_character_modifier = lotr_dwarven_flavor_beard_braid_modifier
			has_character_modifier = lotr_dwarven_flavor_beard_rings_modifier
			has_character_modifier = lotr_dwarven_flavor_beard_oil_modifier
			has_character_modifier = lotr_dwarven_flavor_beard_trim_modifier
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.2
			has_trait = arrogant
		}
		modifier = {
			add = 0.2
			has_trait = patient
		}
	}

	option = { # Soap - Diplomacy
		name = dwarven_yearly.0217.a
		add_piety = {
			value = minor_piety_value
			multiply = -1.0
		}
		add_character_modifier = {
			modifier = lotr_dwarven_flavor_beard_soap_modifier
			years = 10
		}
	}

	option = { # Braid - Martial
		name = dwarven_yearly.0217.b
		add_prestige = {
			value = minor_prestige_value
			multiply = -1.0
		}
		add_character_modifier = {
			modifier = lotr_dwarven_flavor_beard_braid_modifier
			years = 10
		}
	}

	option = { # Rings - Stewardship
		name = dwarven_yearly.0217.c
		remove_short_term_gold = minor_gold_value
		add_character_modifier = {
			modifier = lotr_dwarven_flavor_beard_rings_modifier
			years = 10
		}
	}

	option = { # Oil - Intrigue
		name = dwarven_yearly.0217.d
		add_piety = {
			value = minor_piety_value
			multiply = -1.0
		}
		add_character_modifier = {
			modifier = lotr_dwarven_flavor_beard_oil_modifier
			years = 10
		}
	}
	
	option = { # Trim - Learning
		name = dwarven_yearly.0217.e
		add_prestige = {
			value = minor_prestige_value
			multiply = -1.0
		}
		add_character_modifier = {
			modifier = lotr_dwarven_flavor_beard_trim_modifier
			years = 10
		}
	}
}


# Squeeze out extra short term profits from the mine
dwarven_yearly.0218 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0218.t
	desc = dwarven_yearly.0218.desc
	theme = stewardship_duty_focus
	override_background = { reference = mining_activity }
	
	left_portrait = {
		character = root
		animation = personality_rational
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
		any_held_county = {
			title_province = {
				OR = {
					has_building_or_higher = iron_mines_01
					has_building_or_higher = tin_mines_01
					has_building_or_higher = copper_mines_01
					has_building_or_higher = lead_mines_01
					has_building_or_higher = silver_mines_01
					has_building_or_higher = gold_mines_01
					has_building_or_higher = mithril_mines_01
					has_building_or_higher = quartz_mines_01
					has_building_or_higher = peridot_mines_01
					has_building_or_higher = onyx_mines_01
					has_building_or_higher = amethyst_mines_01
					has_building_or_higher = ruby_mines_01
					has_building_or_higher = sapphire_mines_01
					has_building_or_higher = emerald_mines_01
					has_building_or_higher = diamond_mines_01
				}
				NOR = {
					has_province_modifier = lotr_dwarven_flavor_improved_mine_profits_modifier
					has_province_modifier = lotr_dwarven_flavor_reduced_mine_profits_modifier
					has_province_modifier = lotr_dwarven_flavor_continued_mine_riots_modifier
				}
			}
		}
	}

	immediate = {
		random_held_county = {
			limit = {
				title_province = {
					OR = {
						has_building_or_higher = iron_mines_01
						has_building_or_higher = tin_mines_01
						has_building_or_higher = copper_mines_01
						has_building_or_higher = lead_mines_01
						has_building_or_higher = silver_mines_01
						has_building_or_higher = gold_mines_01
						has_building_or_higher = mithril_mines_01
						has_building_or_higher = quartz_mines_01
						has_building_or_higher = peridot_mines_01
						has_building_or_higher = onyx_mines_01
						has_building_or_higher = amethyst_mines_01
						has_building_or_higher = ruby_mines_01
						has_building_or_higher = sapphire_mines_01
						has_building_or_higher = emerald_mines_01
						has_building_or_higher = diamond_mines_01
					}
					NOR = {
						has_province_modifier = lotr_dwarven_flavor_improved_mine_profits_modifier
						has_province_modifier = lotr_dwarven_flavor_reduced_mine_profits_modifier
						has_province_modifier = lotr_dwarven_flavor_continued_mine_riots_modifier
					}
				}
			}
			title_province = { save_scope_as = selected_province }
		}
	}

	option = { # Squeeze out extra profit short term
		name = dwarven_yearly.0218.a
		add_gold = medium_gold_value
		scope:selected_province = {
			random = {
				chance = 40
				add_province_modifier = {
					modifier = lotr_dwarven_flavor_reduced_mine_profits_modifier
					years = 10
				}
			}
		}
		stress_impact = {
			greedy = minor_stress_impact_loss
			arbitrary = minor_stress_impact_loss
			fickle = minor_stress_impact_loss
			profligate = minor_stress_impact_loss
			improvident = minor_stress_impact_loss

			generous = medium_stress_impact_gain
			patient = minor_stress_impact_gain
			just = minor_stress_impact_gain
		}

		ai_chance = {
			base = 10
			modifier = {
				add = 50
				has_trait = greedy
			}
			modifier = {
				add = 20
				has_trait = arbitrary
			}
			modifier = {
				add = 20
				has_trait = fickle
			}
			modifier = { # In debt
				add = 100
				gold < 0
			}
			modifier = { # At War
				add = 100
				is_at_war = yes
				gold < 300
			}
		}
	}
	option = { # Let's not...
		name = dwarven_yearly.0218.b
		add_prestige = 50
		stress_impact = {
			patient = minor_stress_impact_loss
			temperate = minor_stress_impact_loss
			content = minor_stress_impact_loss
			
			greedy = medium_stress_impact_gain
			profligate = minor_stress_impact_gain
		}

		ai_chance = {
			base = 90
		}
	}
}

# Get some basic crafting supplies
scripted_effect create_cheap_crafting_resource = {
	random_list = {
		25 = { # iron
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_iron_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:iron
					}
				}
			}
			create_metal_gem_artifact = {
				METAL = iron
				MODIFIER = artifact_monthly_minor_prestige_1_modifier
			}
			set_metal_gem_variable = { METAL = iron }
			add_to_variable_list = { # Update the used metals list so theres no duplicates
				name = res_artifacts_used_metals
				target = flag:iron
			}
		}
		25 = { # tin
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_tin_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:tin
					}
				}
			}
			create_metal_gem_artifact = {
				METAL = tin
				MODIFIER = artifact_monthly_minor_prestige_1_modifier
			}
			set_metal_gem_variable = { METAL = tin }
			add_to_variable_list = { # Update the used metals list so theres no duplicates
				name = res_artifacts_used_metals
				target = flag:tin
			}
		}
		25 = { # copper
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_copper_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:copper
					}
				}
			}
			create_metal_gem_artifact = {
				METAL = copper
				MODIFIER = artifact_monthly_minor_prestige_1_modifier
			}
			set_metal_gem_variable = { METAL = copper }
			add_to_variable_list = { # Update the used metals list so theres no duplicates
				name = res_artifacts_used_metals
				target = flag:copper
			}
		}
		25 = { # lead
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_lead_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:lead
					}
				}
			}
			create_metal_gem_artifact = {
				METAL = lead
				MODIFIER = artifact_monthly_minor_prestige_1_modifier
			}
			set_metal_gem_variable = { METAL = lead }
			add_to_variable_list = { # Update the used metals list so theres no duplicates
				name = res_artifacts_used_metals
				target = flag:lead
			}
		}
		25 = { # quartz
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_quartz_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:quartz
					}
				}
			}
			create_metal_gem_artifact = {
				METAL = quartz
				MODIFIER = artifact_monthly_minor_prestige_1_modifier
			}
			set_metal_gem_variable = { METAL = quartz }
			add_to_variable_list = { # Update the used metals list so theres no duplicates
				name = res_artifacts_used_metals
				target = flag:quartz
			}
		}
		25 = { # peridot
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_peridot_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:peridot
					}
				}
			}
			create_metal_gem_artifact = {
				METAL = peridot
				MODIFIER = artifact_monthly_minor_prestige_1_modifier
			}
			set_metal_gem_variable = { METAL = peridot }
			add_to_variable_list = { # Update the used metals list so theres no duplicates
				name = res_artifacts_used_metals
				target = flag:peridot
			}
		}
		25 = { # onyx
			trigger = {
				NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_onyx_province_modifier } }
				NOT = {
					any_in_list = {
						variable = res_artifacts_used_metals
						this = flag:onyx
					}
				}
			}
			create_metal_gem_artifact = {
				METAL = onyx
				MODIFIER = artifact_monthly_minor_prestige_1_modifier
			}
			set_metal_gem_variable = { METAL = onyx }
			add_to_variable_list = { # Update the used metals list so theres no duplicates
				name = res_artifacts_used_metals
				target = flag:onyx
			}
		}
	}
}
dwarven_yearly.0219 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0219.t
	desc = dwarven_yearly.0219.desc
	theme = stewardship_duty_focus
	override_background = { reference = market }
	
	left_portrait = {
		character = root
	}
	
	right_portrait = {
		character = scope:steward
	}

	artifact = {
		target = scope:res_artifact_1
		position = lower_left_portrait
	}

	artifact = {
		target = scope:res_artifact_2
		position = lower_center_portrait
	}

	# artifact = {
	# 	target = scope:res_artifact_3
	# 	position = lower_right_portrait
	# }
	
	cooldown = { years = 30 }

	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		OR = {
			has_trait = lifestyle_artifact_crafting
			has_lifestyle = crafting_lifestyle
		}
		calc_true_if = { # Cant have all that many basic resources
			amount >= 3
			NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_iron_province_modifier } }
			NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_tin_province_modifier } }
			NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_copper_province_modifier } }
			NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_lead_province_modifier } }
			NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_quartz_province_modifier } }
			NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_peridot_province_modifier } }
			NOT = { contains_prospecting_modifier = { PROSPECTING_MODIFIER = mining_onyx_province_modifier } }
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = { # Dwarves are more likely to have access to such ressources
			add = 0.5
			is_dwarf = yes
		}
		modifier = { # Elves dont have mines so they get a few more opportunities to get resources
			add = 2
			is_elf = yes
		}
	}

	immediate = {
		cp:councillor_steward = {
			save_scope_as = steward
		}
		hidden_effect = {
			# Create Artifact 1
			create_cheap_crafting_resource = yes
			scope:newly_created_artifact = { save_scope_as = res_artifact_1 }
			# Create Artifact 2
			create_cheap_crafting_resource = yes
			scope:newly_created_artifact = { save_scope_as = res_artifact_2 }
			# # Create Artifact 3
			# create_cheap_crafting_resource = yes
			# scope:newly_created_artifact = { save_scope_as = res_artifact_3 }
		}
	}

	option = { # Ok
		name = dwarven_yearly.0219.a
		
		pay_short_term_gold = minor_gold_value
		scope:res_artifact_1 = { set_owner = root }
		scope:res_artifact_2 = { set_owner = root }
		# scope:res_artifact_3 = { set_owner = root }

		stress_impact = {
			base = miniscule_stress_impact_gain
			lazy = miniscule_stress_impact_gain
			gluttonous = minor_stress_impact_gain
		}
	}
}


# Mason teaches you sculpting
scripted_effect get_miner_xp_effect = {
	custom_tooltip = dwarven_yearly.0220.miner
	add_crafting_lifestyle_xp = 300
	if = {
		limit = {
			has_trait = lifestyle_miner
		}
		add_trait_xp = {
			trait = lifestyle_miner
			track = hewer
			value = { 5 15 }
		}
	}
}
dwarven_yearly.0220 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0220.t
	desc = dwarven_yearly.0220.desc
	theme = stewardship_duty_focus
	override_background = { reference = mining_activity }
	
	left_portrait = {
		character = root
		animation = personality_rational
	}
	
	right_portrait = {
		trigger = {
			exists = scope:cultural_dorfdad
			OR = {
				has_trait = humble
				has_trait = honest
			}
		}
		character = scope:cultural_dorfdad
		animation = dead
	}

	lower_left_portrait = {
		trigger = {
			exists = scope:friend
			OR = {
				has_trait = generous
				has_trait = gregarious
			}
		}
		character = scope:friend
	}

	lower_center_portrait = {
		trigger = {
			exists = scope:lover
			has_trait = lustful
		}
		character = scope:lover
	}

	lower_right_portrait = {
		trigger = {
			exists = scope:rival
			OR = {
				has_trait = vengeful
				has_trait = sadistic
				has_trait = forgiving
				has_trait = fickle
			}
		}
		character = scope:rival
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
		any_held_county = {
			title_province = {
				has_building_or_higher = dwarven_quarry_01
			}
		}
	}

	immediate = {
		random_held_county = {
			limit = {
				title_province = {
					has_building_or_higher = dwarven_quarry_01
				}
			}
			title_province = { save_scope_as = selected_province }
		}

		# Grab a rival
		if = {
			limit = {
				any_relation = {
					type = rival
				}
			}
			random_relation = {
				type = rival
				save_scope_as = rival
			}
		}
		else_if = {
			limit = {
				any_relation = {
					type = potential_rival
				}
			}
			random_relation = {
				type = potential_rival
				save_scope_as = rival
			}
		}
		else = {
			random_courtier = {
				limit = {
					is_a_minor = no
					opinion = {
						target = root
						value < -10
					}
				}
				alternative_limit = {
					is_a_minor = no
				}
				save_scope_as = rival
				weight = {
					base = 10
					modifier = {
						opinion = {
							target = root
							value < -40
						}
						factor = 5
					}
				}
			}
		}

		
		# Grab a friend
		if = {
			limit = {
				any_relation = {
					type = friend
				}
			}
			random_relation = {
				type = friend
				save_scope_as = friend
			}
		}
		else_if = {
			limit = {
				any_relation = {
					type = potential_friend
				}
			}
			random_relation = {
				type = potential_friend
				save_scope_as = friend
			}
		}
		else = {
			random_courtier = {
				limit = {
					is_a_minor = no
					opinion = {
						target = root
						value >= 10
					}
				}
				alternative_limit = {
					is_a_minor = no
				}
				save_scope_as = friend
			}
		}

		
		# Grab a lover
		if = {
			limit = {
				any_relation = {
					type = lover
				}
			}
			random_relation = {
				type = lover
				save_scope_as = lover
			}
		}
		else_if = {
			limit = {
				any_relation = {
					type = potential_lover
				}
			}
			random_relation = {
				type = potential_lover
				save_scope_as = lover
			}
		}
		else_if = {
			limit = {
				any_concubine = {
					exists = this
				}
			}
			random_concubine = {
				save_scope_as = lover
			}
		}
		else_if = {
			limit = {
				any_spouse = {
					exists = this
				}
			}
			random_spouse = {
				save_scope_as = lover
			}
		}
		else = {
			random_courtier = {
				limit = {
					is_a_minor = no
					can_set_relation_lover_trigger = { CHARACTER = ROOT }
				}
				save_scope_as = lover
			}
		}

		# Grab a legend if there is one
		if = {
			limit = {
				has_dlc_feature = legends
				promoted_legend ?= {
					legend_owner = root
					legend_protagonist = root
				}
			}
			promoted_legend = { save_scope_as = promoted_legend }
		}
	
		# Grab my dwarven father
		scope_my_culture_dorfdad_effect = yes
	}
	
	option = { # A sculpture of me, slaying a dragon
		name = dwarven_yearly.0220.dragon
		trigger = {
			OR = {
				has_trait = brave
				has_trait = wrathful
			}
		}
		trait = brave
		trait = wrathful
		remove_short_term_gold = 30
		add_prestige = 75
		scope:promoted_legend ?= {
			change_legend_quality_effect = {
				VALUE = minor_legend_quality_increase
			}
		}
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of an impenetrable fortress (to hide in)
		name = dwarven_yearly.0220.fortress
		trigger = {
			OR = {
				has_trait = craven
				has_trait = paranoid
			}
		}
		trait = craven
		trait = paranoid
		remove_short_term_gold = 30
		stress_impact = {
			base = minor_stress_impact_loss
		}
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of a serene garden
		name = dwarven_yearly.0220.garden
		trigger = {
			OR = {
				has_trait = patient
				has_trait = calm
			}
		}
		trait = patient
		trait = calm
		remove_short_term_gold = 30
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of a delicate flower
		name = dwarven_yearly.0220.flower
		trigger = {
			OR = {
				has_trait = chaste
				has_trait = temperate
			}
		}
		trait = chaste
		trait = temperate
		remove_short_term_gold = 30
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of lover in a seductive pose
		name = dwarven_yearly.0220.lover
		trigger = {
			has_trait = lustful
			exists = scope:lover
		}
		trait = lustful
		remove_short_term_gold = 30
		progress_towards_lover_effect = {
			REASON = lotr_made_sculpture
			CHARACTER = scope:lover
			OPINION = 30
		}
		add_piety = -25
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of an honorable duel
		name = dwarven_yearly.0220.duel
		trigger = {
			OR = {
				has_trait = diligent
				has_trait = just
			}
		}
		trait = diligent
		trait = just
		remove_short_term_gold = 30
		add_legitimacy = 25
		scope:promoted_legend ?= {
			change_legend_quality_effect = {
				VALUE = minor_legend_quality_increase
			}
		}
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of me stabbing rival
		name = dwarven_yearly.0220.rival
		trigger = {
			OR = {
				has_trait = vengeful
				has_trait = sadistic
			}
			exists = scope:rival
		}
		trait = vengeful
		trait = sadistic
		remove_short_term_gold = 30
		progress_towards_rival_effect = {
			REASON = lotr_made_sculpture
			CHARACTER = scope:rival
			OPINION = -30
		}
		add_prestige = 100
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of me shaking hands with rival
		name = dwarven_yearly.0220.handshake
		trigger = {
			OR = {
				has_trait = forgiving
				has_trait = fickle
			}
			exists = scope:rival
		}
		trait = forgiving
		trait = fickle
		remove_short_term_gold = 30
		random = {
			chance = {
				value = 50
				if = {
					limit = {
						scope:rival = { has_trait = forgiving }
					}
					add = 40
				}
				if = {
					limit = {
						scope:rival = { has_trait = vengeful }
					}
					add = -40
				}
				if = {
					limit = {
						scope:rival = { has_trait = fickle }
					}
					add = 20
				}
				if = {
					limit = {
						scope:rival = { has_trait = stubborn }
					}
					add = -20
				}
			}
			progress_towards_friend_effect = {
				REASON = lotr_made_sculpture
				CHARACTER = scope:rival
				OPINION = 30
			}
		}
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of me on a huge throne
		name = dwarven_yearly.0220.throne
		trigger = {
			OR = {
				has_trait = arrogant
				has_trait = ambitious
			}
		}
		trait = arrogant
		trait = ambitious
		remove_short_term_gold = 30
		add_legitimacy = 50
		add_piety = -50
		scope:promoted_legend ?= {
			change_legend_quality_effect = {
				VALUE = minor_legend_quality_increase
			}
		}
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of my friend
		name = dwarven_yearly.0220.friend
		trigger = {
			OR = {
				has_trait = generous
				has_trait = gregarious
			}
			exists = scope:friend
		}
		trait = generous
		trait = gregarious
		remove_short_term_gold = 30
		progress_towards_friend_effect = {
			REASON = lotr_made_sculpture
			CHARACTER = scope:friend
			OPINION = 30
		}
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of a sealed treasure vault
		name = dwarven_yearly.0220.sealed
		trigger = {
			has_trait = shy
		}
		trait = shy
		remove_short_term_gold = 30
		add_piety = 25
		add_prestige = 25
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of my dwarven father
		name = {
			text = {
				first_valid = {
					#triggered_desc = {
					#	trigger = { 
					#		culture = { has_cultural_pillar = heritage_longbeard }
					#	}
					#	desc = dwarven_yearly.0220.dorfdad.longbeard
					#}
					#triggered_desc = {
					#	trigger = { 
					#		culture = { has_cultural_pillar = heritage_firebeard }
					#	}
					#	desc = dwarven_yearly.0220.dorfdad.firebeard
					#}
					#triggered_desc = {
					#	trigger = { 
					#		culture = { has_cultural_pillar = heritage_broadbeam }
					#	}
					#	desc = dwarven_yearly.0220.dorfdad.broadbeam
					#}
					#triggered_desc = {
					#	trigger = { 
					#		culture = { has_cultural_pillar = heritage_blacklock }
					#	}
					#	desc = dwarven_yearly.0220.dorfdad.blacklock
					#}
					#triggered_desc = {
					#	trigger = { 
					#		culture = { has_cultural_pillar = heritage_ironfist }
					#	}
					#	desc = dwarven_yearly.0220.dorfdad.ironfist
					#}
					#triggered_desc = {
					#	trigger = { 
					#		culture = { has_cultural_pillar = heritage_stiffbeard }
					#	}
					#	desc = dwarven_yearly.0220.dorfdad.stiffbeard
					#}
					#triggered_desc = {
					#	trigger = { 
					#		culture = { has_cultural_pillar = heritage_stonefoot }
					#	}
					#	desc = dwarven_yearly.0220.dorfdad.stonefoot
					#}
					triggered_desc = {
						trigger = { 
							exists = scope:cultural_dorfdad
						}
						desc = dwarven_yearly.0220.dorfdad
					}
					desc = dwarven_yearly.0220.dorfdad.fallback
				}
			}
		}
		trigger = {
			OR = {
				has_trait = humble
				has_trait = honest
			}
			exists = scope:cultural_dorfdad
		}
		trait = humble
		trait = honest
		remove_short_term_gold = 30
		dynasty = { add_dynasty_prestige = 50 }
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of a huge feast
		name = dwarven_yearly.0220.feast
		trigger = {
			has_trait = gluttonous
		}
		trait = gluttonous
		remove_short_term_gold = 30
		stress_impact = {
			base = minor_stress_impact_loss
		}
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of HighGod
		name = dwarven_yearly.0220.highgod
		trigger = {
			OR = {
				has_trait = zealous
				has_trait = trusting
			}
		}
		trait = zealous
		trait = trusting
		remove_short_term_gold = 30
		add_piety = 100
		add_prestige = -25
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of a hammer, smashing seven pebbles
		name = dwarven_yearly.0220.hammer
		trigger = {
			OR = {
				has_trait = cynical
				has_trait = callous
			}
		}
		trait = cynical
		trait = callous
		remove_short_term_gold = 30
		add_piety = -50
		stress_impact = {
			base = minor_stress_impact_loss
		}
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of a humble worker
		name = dwarven_yearly.0220.worker
		trigger = {
			has_trait = compassionate
		}
		trait = compassionate
		remove_short_term_gold = 30
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of a stalwart column
		name = dwarven_yearly.0220.column
		trigger = {
			OR = {
				has_trait = stubborn
				has_trait = content
			}
		}
		trait = stubborn
		trait = content
		remove_short_term_gold = 30
		add_prestige = 50
		add_legitimacy = 10
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of the Great Deceiver
		name = dwarven_yearly.0220.deceiver
		trigger = {
			has_trait = deceitful
		}
		trait = deceitful
		remove_short_term_gold = 30
		add_dread = 20
		get_miner_xp_effect = yes
	}
	option = { # A sculpture that can be sold at a profit
		name = dwarven_yearly.0220.profit
		trigger = {
			has_trait = greedy
		}
		trait = greedy
		remove_short_term_gold = 30
		duel = {
			skill = stewardship 
			value = 12
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 2
					max = 15
				}
				add_gold = {
					value = 30
					add = tiny_gold_value
				}
			}
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -2
					min = -25
				}
				add_gold = 10
			}
		}
		get_miner_xp_effect = yes
	}
	option = { # A crude sculpture of something unrecognizable
		name = dwarven_yearly.0220.crude
		trigger = {
			has_trait = impatient
		}
		trait = impatient
		remove_short_term_gold = 30
		stress_impact = {
			base = minor_stress_impact_loss
		}
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of an unsculpted granite block
		name = dwarven_yearly.0220.block
		trigger = {
			has_trait = lazy
		}
		trait = lazy
		remove_short_term_gold = 30
		stress_impact = {
			base = minor_stress_impact_loss
		}
		get_miner_xp_effect = yes
	}
	option = { # A sculpture of me sculpting a tinier sculpture of me scul-
		name = dwarven_yearly.0220.sculptception
		trigger = {
			has_trait = eccentric
		}
		trait = eccentric
		remove_short_term_gold = 30
		add_prestige = -25
		add_piety = -25
		add_learning_lifestyle_xp = 150
		stress_impact = {
			base = medium_stress_impact_loss
		}
		get_miner_xp_effect = yes
	}
	option = { # You know what? Statues are overrated anyways.
		name = dwarven_yearly.0220.overrated
	}
}


# Stone hammering ritual at the start of construction project
scripted_effect swing_the_hammer_effect = {
	duel = {
		skills = { diplomacy intrigue prowess }
		value = 11
		25 = {
			compare_modifier = {
				value = scope:duel_value
				multiplier = 2
			}
			desc = dwarven_yearly.0221.toast.good
			ROOT = {
				send_interface_toast = {
					type = event_toast_effect_good
					left_icon = scope:steward
					title = dwarven_yearly.0221.toast.good
					add_legitimacy = 25
					add_piety = 100
					scope:selected_province.county = {
						add_county_modifier = {
							modifier = lotr_dwarven_flavor_lucky_construction_modifier
							years = 10
						}
					}
				}
			}
		}
		50 = {
			compare_modifier = {
				value = scope:duel_value
				multiplier = -2
			}
			desc = dwarven_yearly.0221.toast.neutral
			ROOT = {
				send_interface_toast = {
					type = event_toast_effect_neutral
					left_icon = ROOT
					title = dwarven_yearly.0221.toast.neutral
					add_piety = 50
				}
			}
		}
		25 = {
			compare_modifier = {
				value = scope:duel_value
				multiplier = -2
			}
			desc = dwarven_yearly.0221.toast.bad
			ROOT = {
				send_interface_toast = {
					type = event_toast_effect_bad
					left_icon = ROOT
					title = dwarven_yearly.0221.toast.bad
					add_legitimacy = -25
					add_piety = -100
					scope:selected_province.county = {
						add_county_modifier = {
							modifier = lotr_dwarven_flavor_unlucky_construction_modifier
							years = 10
						}
					}
				}
			}
		}
	}
}
dwarven_yearly.0221 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0221.t
	desc = dwarven_yearly.0221.desc
	theme = realm
	override_background = {
		reference = market_dwarven
	}
	
	left_portrait = {
		character = root
		animation = personality_honorable
	}

	right_portrait = {
		trigger = { exists = scope:steward }
		character = scope:steward
		animation = steward
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
		any_held_county = {
			culture = { is_dwarf_culture = yes }
			NOR = {
				has_county_modifier = lotr_dwarven_flavor_lucky_construction_modifier
				has_county_modifier = lotr_dwarven_flavor_unlucky_construction_modifier
			}
		}
		faith.religion = religion:dwarven_religion
	}

	immediate = {
		random_held_county = {
			limit = {
				culture = { is_dwarf_culture = yes }
				NOR = {
					has_county_modifier = lotr_dwarven_flavor_lucky_construction_modifier
					has_county_modifier = lotr_dwarven_flavor_unlucky_construction_modifier
				}
			}
			title_province = { save_scope_as = selected_province }
		}

		### Get a potential person whos better at swinging hammers!
		
		if = {
			limit = {
				employs_court_position = seneschal_court_position
			}
			random_court_position_holder = {
				type = seneschal_court_position
				add_to_list = potential_official_list
			}
		}
		if = {
			limit = {
				employs_court_position = high_almoner_court_position
			}
			random_court_position_holder = {
				type = high_almoner_court_position
				add_to_list = potential_official_list
			}
		}
		if = {
			limit = {
				employs_court_position = champion_court_position
			}
			random_court_position_holder = {
				type = champion_court_position
				add_to_list = potential_official_list
			}
		}
		if = {
			limit = {
				employs_court_position = royal_architect_court_position
			}
			random_court_position_holder = {
				type = royal_architect_court_position
				add_to_list = potential_official_list
			}
		}
		if = {
			limit = {
				employs_court_position = champion_court_position
			}
			random_court_position_holder = {
				type = champion_court_position
				add_to_list = potential_official_list
			}
		}
		
		every_councillor = {
			add_to_list = potential_official_list
		}

		if = {
			limit = {
				exists = designated_diarch
			}
			designated_diarch = {
				add_to_list = potential_official_list
			}
		}
		random_in_list = {
			list = potential_official_list
			limit = {
				is_dwarf = yes
				is_available_ai_adult = yes
				is_female = no
			}
			alternative_limit = {
				is_adult = yes
			}
			weight = {
				base = 1
				modifier = {
					add = diplomacy
				}
				modifier = {
					add = intrigue
				}
				modifier = {
					add = prowess
				}
			}
			save_scope_as = steward
		}
	}

	option = { # Ok
		name = dwarven_yearly.0221.a
		swing_the_hammer_effect = yes
		ai_chance = {
			base = 1
			modifier = {
				add = diplomacy
				add = intrigue
				add = prowess
			}
		}
	}

	option = { # Steward do it
		name = dwarven_yearly.0221.b
		trigger = { exists = scope:steward }
		scope:steward = {
			swing_the_hammer_effect = yes
		}
		ai_chance = {
			base = 1
			modifier = {
				add = scope:steward.diplomacy
				add = scope:steward.intrigue
				add = scope:steward.prowess
			}
		}
	}
}


# Ponder natural beauty of cave system
dwarven_yearly.0222 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0222.t
	desc = dwarven_yearly.0222.desc
	theme = stewardship_duty_focus
	override_background = {
		reference = underground_caverns_02
	}
	
	left_portrait = {
		character = root
		animation = personality_honorable
	}

	right_portrait = {
		trigger = { exists = scope:impressed_courtier }
		character = scope:impressed_courtier
		animation = personality_content
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
		faith_is_good = yes # Mention of Mahal
		any_courtier = {
			is_available_ai_adult = yes
			is_dwarf = yes
			faith_is_good = yes # Mention of Mahal
		}
		any_held_county = {
			title_province = { terrain = halls }
		}
	}

	immediate = {
		random_courtier = {
			limit = {
				is_available_ai_adult = yes
				is_dwarf = yes
				faith_is_good = yes # Mention of Mahal
			}
			save_scope_as = impressed_courtier
			weight = {
				base = 1
				modifier = {
					factor = 3
					is_close_family_or_spouse_of_root_trigger = yes
				}
				modifier = {
					factor = 2
					has_trait = content
				}
				modifier = {
					factor = 2
					has_trait = patient
				}
				modifier = {
					factor = 2
					has_trait = humble
				}
				modifier = {
					factor = 0.1
					has_trait = arrogant
				}
			}
		}
	}

	option = { # I think you are right
		name = dwarven_yearly.0222.a
		add_piety = 50
		add_learning_lifestyle_xp = 150
		progress_towards_friend_effect = {
			REASON = lotr_bonded_over_caves
			CHARACTER = scope:impressed_courtier
			OPINION = 20
		}

		stress_impact = {
			base = miniscule_stress_impact_loss

			arrogant = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
			stubborn = minor_stress_impact_gain

			humble = minor_stress_impact_loss
			content = minor_stress_impact_loss
			fickle = minor_stress_impact_loss
			temperate = minor_stress_impact_loss
		}
	}

	option = { # I prefer expertly constructed dwarven mansions
		name = dwarven_yearly.0222.b
		add_prestige = 50
		add_stewardship_lifestyle_xp = 150
		scope:impressed_courtier = {
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -10
			}
		}
		stress_impact = {
			base = miniscule_stress_impact_loss

			arrogant = minor_stress_impact_loss
			ambitious = minor_stress_impact_loss
			stubborn = minor_stress_impact_loss
			diligent = minor_stress_impact_loss

			humble = minor_stress_impact_gain
			content = minor_stress_impact_gain
			fickle = minor_stress_impact_gain
			temperate = minor_stress_impact_gain
		}
	}
}



# Think about your dwarf-father
dwarven_yearly.0223 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0223.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { has_trait = dwarf_father }
				desc = dwarven_yearly.0223.desc.firstperson
			}
			desc = dwarven_yearly.0223.desc
		}
	}
	#desc = { #Juke note: went with an easier method of localizing, but leaving this here in case it comes in handy in the future
	#	desc = dwarven_yearly.0223.desc.intro
	#	first_valid = {
	#		triggered_desc = {
	#			trigger = { scope:cultural_dorfdad = character:lineofdurin1 }
	#			desc = dwarven_yearly.0223.desc.longbeard
	#		}
	#		triggered_desc = {
	#			trigger = { scope:cultural_dorfdad = character:lineofuri0 }
	#			desc = dwarven_yearly.0223.desc.firebeard
	#		}
	#		triggered_desc = {
	#			trigger = { scope:cultural_dorfdad = character:lineofdwalin0 }
	#			desc = dwarven_yearly.0223.desc.broadbeam
	#		}
	#		triggered_desc = {
	#			trigger = { scope:cultural_dorfdad = character:lineofthrar0 }
	#			desc = dwarven_yearly.0223.desc.blacklock
	#		}
	#		triggered_desc = {
	#			trigger = { scope:cultural_dorfdad = character:lineofsindri0 }
	#			desc = dwarven_yearly.0223.desc.ironfist
	#		}
	#		triggered_desc = {
	#			trigger = { scope:cultural_dorfdad = character:lineofthulin0 }
	#			desc = dwarven_yearly.0223.desc.stiffbeard
	#		}
	#		triggered_desc = {
	#			trigger = { scope:cultural_dorfdad = character:lineofbavor0 }
	#			desc = dwarven_yearly.0223.desc.stonefoot
	#		}
	#		desc = dwarven_yearly.0223.desc.fallback
	#	}
	#	desc = dwarven_yearly.0223.desc.outro
	#}
	theme = faith
	override_background = { reference = durins_door }
	
	left_portrait = {
		character = root
		animation = personality_rational
	}
	
	right_portrait = {
		trigger = { exists = scope:cultural_dorfdad }
		character = scope:cultural_dorfdad
		animation = dead
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
	}

	immediate = {
		# Determine my dwarf-father
		scope_my_culture_dorfdad_effect = yes
	}

	option = { # He was eager to unite his people
		name = dwarven_yearly.0223.a
		trigger = { NOT = { has_trait = dwarf_father } }
		add_diplomacy_lifestyle_xp = 300
		trait = education_diplomacy_1
		trait = education_diplomacy_2
		trait = education_diplomacy_3
		trait = education_diplomacy_4
		trait = education_diplomacy_5
		stress_impact = {
			base = minor_stress_impact_gain
			education_diplomacy_1 = medium_stress_impact_loss
			education_diplomacy_2 = medium_stress_impact_loss
			education_diplomacy_3 = medium_stress_impact_loss
			education_diplomacy_4 = medium_stress_impact_loss
			education_diplomacy_5 = medium_stress_impact_loss
		}
	}

	option = { # He felt obligated to protect his people
		name = dwarven_yearly.0223.b
		trigger = { NOT = { has_trait = dwarf_father } }
		add_martial_lifestyle_xp = 300
		trait = education_martial_1
		trait = education_martial_2
		trait = education_martial_3
		trait = education_martial_4
		trait = education_martial_5
		stress_impact = {
			base = minor_stress_impact_gain
			education_martial_1 = medium_stress_impact_loss
			education_martial_2 = medium_stress_impact_loss
			education_martial_3 = medium_stress_impact_loss
			education_martial_4 = medium_stress_impact_loss
			education_martial_5 = medium_stress_impact_loss
		}
	}

	option = { # He wanted to build a home for his people
		name = dwarven_yearly.0223.c
		trigger = { NOT = { has_trait = dwarf_father } }
		add_stewardship_lifestyle_xp = 300
		trait = education_stewardship_1
		trait = education_stewardship_2
		trait = education_stewardship_3
		trait = education_stewardship_4
		trait = education_stewardship_5
		stress_impact = {
			base = minor_stress_impact_gain
			education_stewardship_1 = medium_stress_impact_loss
			education_stewardship_2 = medium_stress_impact_loss
			education_stewardship_3 = medium_stress_impact_loss
			education_stewardship_4 = medium_stress_impact_loss
			education_stewardship_5 = medium_stress_impact_loss
		}
	}

	option = { # He was ready to do what it takes
		name = dwarven_yearly.0223.d
		trigger = { NOT = { has_trait = dwarf_father } }
		add_intrigue_lifestyle_xp = 300
		trait = education_intrigue_1
		trait = education_intrigue_2
		trait = education_intrigue_3
		trait = education_intrigue_4
		trait = education_intrigue_5
		stress_impact = {
			base = minor_stress_impact_gain
			education_intrigue_1 = medium_stress_impact_loss
			education_intrigue_2 = medium_stress_impact_loss
			education_intrigue_3 = medium_stress_impact_loss
			education_intrigue_4 = medium_stress_impact_loss
			education_intrigue_5 = medium_stress_impact_loss
		}
	}

	option = { # He wanted to explore this new world.
		name = dwarven_yearly.0223.e
		trigger = { NOT = { has_trait = dwarf_father } }
		add_learning_lifestyle_xp = 300
		trait = education_learning_1
		trait = education_learning_2
		trait = education_learning_3
		trait = education_learning_4
		trait = education_learning_5
		stress_impact = {
			base = minor_stress_impact_gain
			education_learning_1 = medium_stress_impact_loss
			education_learning_2 = medium_stress_impact_loss
			education_learning_3 = medium_stress_impact_loss
			education_learning_4 = medium_stress_impact_loss
			education_learning_5 = medium_stress_impact_loss
		}
	}

	option = { # I remember confusion, and a sense of wonder.
		name = dwarven_yearly.0223.e
		trigger = { has_trait = dwarf_father }
		trait = dwarf_father
		add_diplomacy_lifestyle_xp = 300
		add_martial_lifestyle_xp = 300
		add_stewardship_lifestyle_xp = 300
		add_intrigue_lifestyle_xp = 300
		add_learning_lifestyle_xp = 300
		stress_impact = {
			base = minor_stress_impact_loss
		}
	}
}


# Gain some knowledge from examining your ring of power
dwarven_yearly.0224 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0224.t
	desc = dwarven_yearly.0224.desc
	theme = stewardship_duty_focus
	override_background = { reference = throne_room }
	
	left_portrait = {
		character = root
		animation = personality_rational
	}

	artifact = {
		target = scope:my_ring
		position = lower_center_portrait
	}

	lower_left_portrait = {
		character = character:linefinwe18
	}

	lower_right_portrait = {
		character = character:lineofsauron
	}

	cooldown = { years = 100 }
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		OR = {
			has_trait = lifestyle_artifact_crafting
			has_lifestyle = crafting_lifestyle
		}
		any_character_artifact = {
			has_variable = ring_of_power
		}
		is_sauron = no
		is_nazgul = no
		NOT = { this = character:linefinwe18 } #Juke note: just in case he comes back as a weird ghost or something ;)
	}

	weight_multiplier = {
		base = 1
		modifier = { # The elves have rings from the start
			add = -0.5
			is_elf = yes
		}
	}

	immediate = {
		random_character_artifact = {
			limit = {
				has_variable = ring_of_power
			}
			save_scope_as = my_ring
		}
	}

	option = { # Examine my ring of power more closely
		name = dwarven_yearly.0224.a
		skill = learning
		trait = lifestyle_artifact_crafting
		duel = {
			skill = learning 
			value = 12
			30 = { # win skill duel
				desc = dwarven_yearly.0224.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 4
				}
				modifier = {
					has_trait = artificer
					add = 5
				}
				modifier = {
					has_trait = enchanter
					add = 5
				}
				add_crafting_lifestyle_perk_points = 1
				add_crafting_lifestyle_perk_points = 1
				send_interface_toast = {
					title = dwarven_yearly.0224.success.t
					left_icon = Root
					right_icon = scope:my_ring
					if = {
						limit = {
							NOT = { has_trait = lifestyle_artifact_crafting }
						}
						add_trait = lifestyle_artifact_crafting
					}
					add_trait_xp = {
						trait = lifestyle_artifact_crafting
						track = jewel_smith
						value = 30
					}
					add_trait_xp = {
						trait = lifestyle_artifact_crafting
						track = enchanting_smith
						value = 20
					}
				}
				
			}
			70 = { # lose skill duel
				desc = dwarven_yearly.0224.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -4
					min = -60
				}
				send_interface_toast = {
					title = dwarven_yearly.0224.failure.t
					left_icon = Root
					right_icon = scope:my_ring
					add_crafting_lifestyle_xp = 500
				}
			}
		}

		stress_impact = {
			base = major_stress_impact_gain
		}
		ai_chance = {
			base = 15
			modifier = {
				stress < 100
				add = 300
			}
		}
	}
	option = { # Just look at it for a while
		name = dwarven_yearly.0224.b
		add_piety = 25
		stress_impact = {
			base = miniscule_stress_impact_loss
		}
		ai_chance = 85
	}
}


# Train your prospecting skills by guessing where a gem is hidden
scripted_effect gem_resource_create_artifact_effect = {
	create_metal_gem_artifact = {
		METAL = $METAL$
		MODIFIER = artifact_monthly_minor_prestige_1_modifier
	}

	# Juke note: We cant use set_metal_gem_variable here since we dont want to increase the variable counter on ROOT until they buy the material
	scope:newly_created_artifact = { # Manually assign the proper material var to the artifact itself
		set_variable = $METAL$
	}

	set_variable = { # Save the material for the new artifact (for use in the event)
		name = newly_created_artifact_metal
		value = flag:$METAL$
	}
}
scripted_effect guess_where_the_gem_is_effect = {
	random_list = {
		40 = {
			desc = dwarven_yearly.0225.rare_gem
			send_interface_toast = {
				type = event_toast_effect_good
				left_icon = scope:artifact_rare_gem
				title = dwarven_yearly.0225.rare_gem
				scope:artifact_rare_gem = { set_owner = root }
				hidden_effect = {
					if = {
						limit = {
							NOT = { has_trait = lifestyle_miner }
						}
						add_trait = lifestyle_miner
					}
				}
				add_trait_xp = {
					trait = lifestyle_miner
					track = prospector
					value = 20
				}
				scope:trainer = {
					add_opinion = {
						target = root
						modifier = impressed_opinion
						opinion = 10
					}
				}
			}
			increase_variable = { # Actually increase the material variable on the character now
				NAME = artifact_rare_gem_metal
				AMOUNT = 1
			}
			# Remove the rest
			hidden_effect = {
				scope:artifact_quartz = { destroy_artifact = this }
				scope:artifact_cheap_gem = { destroy_artifact = this }
			}
			modifier = {
				add = 4
				has_trait_xp = {
					trait = lifestyle_miner
					track = prospector
					value >= 50
				}
			}
			modifier = {
				add = 4
				has_trait_xp = {
					trait = lifestyle_miner
					track = prospector
					value >= 100
				}
			}
			modifier = {
				add = 4
				has_perk = excavator_perk
			}
		}
		40 = {
			desc = dwarven_yearly.0225.cheap_gem
			send_interface_toast = {
				type = event_toast_effect_neutral
				left_icon = scope:artifact_cheap_gem
				title = dwarven_yearly.0225.cheap_gem
				scope:artifact_cheap_gem = { set_owner = root }
				hidden_effect = {
					if = {
						limit = {
							NOT = { has_trait = lifestyle_miner }
						}
						add_trait = lifestyle_miner
					}
				}
				add_trait_xp = {
					trait = lifestyle_miner
					track = prospector
					value = 10
				}
			}
			increase_variable = { # Actually increase the material variable on the character now
				NAME = artifact_cheap_gem_metal
				AMOUNT = 1
			}
			# Remove the rest
			hidden_effect = {
				scope:artifact_quartz = { destroy_artifact = this }
				scope:artifact_rare_gem = { destroy_artifact = this }
			}
			modifier = {
				add = 2
				has_trait_xp = {
					trait = lifestyle_miner
					track = prospector
					value >= 50
				}
			}
			modifier = {
				add = 2
				has_trait_xp = {
					trait = lifestyle_miner
					track = prospector
					value >= 100
				}
			}
			modifier = {
				add = 2
				has_perk = excavator_perk
			}
		}
		40 = {
			desc = dwarven_yearly.0225.quartz
			send_interface_toast = {
				type = event_toast_effect_bad
				left_icon = scope:artifact_quartz
				title = dwarven_yearly.0225.quartz
				scope:artifact_quartz = { set_owner = root }
				if = {
					limit = {
						has_trait = lifestyle_miner
					}
					add_trait_xp = {
						trait = lifestyle_miner
						track = prospector
						value = 5
					}
				}
			}
			increase_variable = { # Actually increase the material variable on the character now
				NAME = artifact_quartz_metal
				AMOUNT = 1
			}
			# Remove the rest
			hidden_effect = {
				scope:artifact_rare_gem = { destroy_artifact = this }
				scope:artifact_cheap_gem = { destroy_artifact = this }
			}
			modifier = {
				add = -2
				has_trait_xp = {
					trait = lifestyle_miner
					track = prospector
					value >= 50
				}
			}
			modifier = {
				add = -2
				has_trait_xp = {
					trait = lifestyle_miner
					track = prospector
					value >= 100
				}
			}
			modifier = {
				add = -2
				has_perk = excavator_perk
			}
		}
		40 = {
			desc = dwarven_yearly.0225.coal
			send_interface_toast = {
				type = event_toast_effect_bad
				title = dwarven_yearly.0225.coal
				if = {
					limit = {
						has_trait = lifestyle_miner
					}
					add_trait_xp = {
						trait = lifestyle_miner
						track = prospector
						value = 5
					}
				}
			}
			# Remove the rest
			hidden_effect = {
				scope:artifact_rare_gem = { destroy_artifact = this }
				scope:artifact_cheap_gem = { destroy_artifact = this }
				scope:artifact_quartz = { destroy_artifact = this }
			}
			modifier = {
				add = -3
				has_trait_xp = {
					trait = lifestyle_miner
					track = prospector
					value >= 50
				}
			}
			modifier = {
				add = -3
				has_trait_xp = {
					trait = lifestyle_miner
					track = prospector
					value >= 100
				}
			}
			modifier = {
				add = -3
				has_perk = excavator_perk
			}
		}
		40 = {
			desc = dwarven_yearly.0225.nothing
			send_interface_toast = {
				type = event_toast_effect_neutral
				title = dwarven_yearly.0225.nothing
				scope:trainer = {
					add_opinion = {
						target = root
						modifier = disappointed_opinion
						opinion = -10
					}
				}
			}
			# Remove the rest
			hidden_effect = {
				scope:artifact_rare_gem = { destroy_artifact = this }
				scope:artifact_cheap_gem = { destroy_artifact = this }
				scope:artifact_quartz = { destroy_artifact = this }
			}
			modifier = {
				add = -3
				has_trait_xp = {
					trait = lifestyle_miner
					track = prospector
					value >= 50
				}
			}
			modifier = {
				add = -3
				has_trait_xp = {
					trait = lifestyle_miner
					track = prospector
					value >= 100
				}
			}
			modifier = {
				add = -3
				has_perk = excavator_perk
			}
		}
	}
}
dwarven_yearly.0225 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0225.t
	desc = dwarven_yearly.0225.desc
	theme = stewardship_duty_focus
	theme = realm
	override_background = { reference = market }
	
	left_portrait = {
		character = root
		animation = personality_rational
	}

	right_portrait = {
		character = scope:trainer
		animation = schadenfreude
	}

	artifact = {
		target = scope:artifact_quartz
		position = lower_left_portrait
	}

	artifact = {
		target = scope:artifact_cheap_gem
		position = lower_center_portrait
	}

	artifact = {
		target = scope:artifact_rare_gem
		position = lower_right_portrait
	}

	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
	}

	immediate = {
		# Save your trainer scope
		if = {
			limit = {
				employs_court_position = stone_singer_court_position
				any_court_position_holder = {
					type = stone_singer_court_position
					is_available_ai_adult = yes
				}
			}
			random_court_position_holder = {
				type = stone_singer_court_position
				limit = {
					is_available_ai_adult = yes
				}
				save_scope_as = trainer
			}
		}
		else_if = {
			limit = {
				any_relation = {
					type = friend
					OR = {
						has_trait = lifestyle_miner
						has_trait = excavator
					}
					is_available_ai_adult = yes
				}
			}
			random_relation = {
				type = friend
				limit = {
					OR = {
						has_trait = lifestyle_miner
						has_trait = excavator
					}
					is_available_ai_adult = yes
				}
				save_scope_as = trainer
			}
		}
		else_if = {
			limit = {
				any_vassal = {
					OR = {
						has_trait = lifestyle_miner
						has_trait = excavator
					}
					is_available_ai_adult = yes
				}
			}
			random_vassal = {
				limit = {
					OR = {
						has_trait = lifestyle_miner
						has_trait = excavator
					}
					is_available_ai_adult = yes
				}
				save_scope_as = trainer
			}
		}
		else = {
			random_courtier = {
				limit = {
					OR = {
						has_trait = lifestyle_miner
						has_trait = excavator
					}
					is_available_ai_adult = yes
					OR = { # Dwarven women dont really do this stuff usually
						is_female = no
						AND = {
							is_female = yes
							ROOT = { is_female = yes }
						}
					}
				}
				alternative_limit = {
					is_available_ai_adult = yes
				}
				save_scope_as = trainer
			}
		}

		# Create the gems
		hidden_effect = {
			scope:trainer = {
				### Create Artifact 1 - A quartz
				gem_resource_create_artifact_effect = {
					METAL = quartz
				}
				scope:newly_created_artifact = { save_scope_as = artifact_quartz }
				set_variable = {
					name = artifact_quartz_metal
					value = var:newly_created_artifact_metal
				}

				### Create Artifact 2 - A cheap gem
				random_list = {
					10 = { # peridot
						gem_resource_create_artifact_effect = {
							METAL = peridot
						}
					}
					10 = { # onyx
						gem_resource_create_artifact_effect = {
							METAL = onyx
						}
					}
					10 = { # amethyst
						gem_resource_create_artifact_effect = {
							METAL = amethyst
						}
					}
				}
				scope:newly_created_artifact = { save_scope_as = artifact_cheap_gem }
				set_variable = {
					name = artifact_cheap_gem_metal
					value = var:newly_created_artifact_metal
				}

				### Create Artifact 3 - Expensive Gem
				random_list = {
					15 = { # ruby
						gem_resource_create_artifact_effect = {
							METAL = ruby
						}
					}
					10 = { # sapphire
						gem_resource_create_artifact_effect = {
							METAL = sapphire
						}
					}
					15 = { # emerald
						gem_resource_create_artifact_effect = {
							METAL = emerald
						}
					}
					5 = { # diamond
						gem_resource_create_artifact_effect = {
							METAL = diamond
						}
					}
				}
				scope:newly_created_artifact = { save_scope_as = artifact_rare_gem }
				set_variable = {
					name = artifact_rare_gem_metal
					value = var:newly_created_artifact_metal
				}
			}
		}
	}

	option = { # I bet its rock one!
		name = dwarven_yearly.0225.a
		guess_where_the_gem_is_effect = yes
	}
	option = { # I bet its rock two!
		name = dwarven_yearly.0225.b
		guess_where_the_gem_is_effect = yes
	}
	option = { # I bet its rock three!
		name = dwarven_yearly.0225.c
		guess_where_the_gem_is_effect = yes
	}
	option = { # I bet its rock four!
		name = dwarven_yearly.0225.d
		guess_where_the_gem_is_effect = yes
	}
	option = { # I bet its rock five!
		name = dwarven_yearly.0225.e
		guess_where_the_gem_is_effect = yes
	}
}


# Eat clay to better understand the earth
dwarven_yearly.0226 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0226.t
	desc = dwarven_yearly.0226.desc
	theme = faith
	override_background = { reference = market_dwarven }
	
	left_portrait = {
		character = root
		animation = disbelief
	}

	right_portrait = {
		character = scope:clay_eater
		animation = happiness
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
		any_courtier = {
			is_available_ai_adult = yes
			is_dwarf = yes
		}
	}

	immediate = {
		# Find an appropriate character
		random_courtier = {
			limit = {
				is_available_ai_adult = yes
				is_dwarf = yes
			}
			alternative_limit = {
				is_available_ai_adult = yes
			}
			save_scope_as = clay_eater
			weight = {
				base = 1
				modifier = {
					has_trait = gluttonous
					factor = 2
				}
				modifier = {
					has_trait = lifestyle_miner
					factor = 3
				}
				modifier = {
					has_trait = eccentric
					factor = 5
				}
			}
		}
	}

	option = { # No
		name = dwarven_yearly.0226.a

		stress_impact = {
			gluttonous = minor_stress_impact_gain
			temperate = miniscule_stress_impact_loss
		}
		
	}
	option = { # Ok
		name = dwarven_yearly.0226.b
		
		progress_towards_friend_effect = {
			REASON = friend_shared_meal
			CHARACTER = scope:clay_eater
			OPINION = 20
		}

		random_list = {
			45 = {
				desc = dwarven_yearly.0226.earthen_insights
				send_interface_toast = {
					title = dwarven_yearly.0226.earthen_insights
					type = event_toast_effect_good
					left_icon = root
					add_learning_skill = 1
					hidden_effect = {
						if = {
							limit = {
								NOT = { has_trait = lifestyle_miner }
							}
							add_trait = lifestyle_miner
						}
					}
					add_trait_xp = {
						trait = lifestyle_miner
						track = hewer
						value = { 5 15 }
					}
				}
			}
			55 = {
				desc = dwarven_yearly.0226.stomach_pain
				send_interface_toast = {
					title = dwarven_yearly.0226.stomach_pain
					type = event_toast_effect_bad
					left_icon = root#
					add_stress = minor_stress_impact_gain
					add_character_modifier = {
						modifier = stomach_ache_modifier
						years = 5
					}
				}
			}
		}
		stress_impact = {
			eccentric = minor_stress_impact_loss
			temperate = minor_stress_impact_gain
		}
	}
}



# Should we fortify against future dragon attacks?
dwarven_yearly.0227 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0227.t
	desc = dwarven_yearly.0227.desc
	theme = realm
	override_background = { reference = throne_room_dwarf }
	
	right_portrait = {
		character = root
		animation = fear
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.2
			has_trait = craven
		}
		modifier = {
			add = 0.2
			has_trait = paranoid
		}
		modifier = {
			add = -0.2
			has_trait = brave
		}
	}

	option = { # All the big ones are gone.
		name = dwarven_yearly.0227.a
		trigger = {
			learning >= 14
		}
		skill = learning
		add_piety = 50
		stress_impact = {
			craven = medium_stress_impact_gain
			paranoid = medium_stress_impact_gain
			brave = minor_stress_impact_loss
			patient = minor_stress_impact_loss
			trusting = minor_stress_impact_loss
		}
	}
	option = { # We could build some traps
		name = dwarven_yearly.0227.b
		remove_short_term_gold = 100
		add_dread = 10
		add_prestige = 100
		stress_impact = {
			paranoid = minor_stress_impact_loss
			craven = minor_stress_impact_loss
			greedy = minor_stress_impact_gain
		}
	}
	option = { # I want ballistae on every tower!
		name = dwarven_yearly.0227.c
		remove_short_term_gold = 200
		add_dread = 20
		add_prestige = 200
		stress_impact = {
			paranoid = medium_stress_impact_loss
			craven = medium_stress_impact_loss
			greedy = medium_stress_impact_gain
			patient = minor_stress_impact_gain
			calm = minor_stress_impact_gain
			humble = minor_stress_impact_gain
		}
	}
	option = { # Its hopeless! We cant hope to withstand a dragon
		name = dwarven_yearly.0227.d
		stress_impact = {
			base = minor_stress_impact_gain
			paranoid = medium_stress_impact_gain
			craven = medium_stress_impact_gain
			arrogant = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
		}
	}
}


# Eating a Durins Bane inspired pudding
dwarven_yearly.0228 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0228.t
	desc = dwarven_yearly.0228.desc
	theme = stewardship_duty_focus
	override_background = { reference = market_dwarven }
	
	left_portrait = {
		character = root
		animation = personality_forgiving
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
		game_start_date > 6015
	}

	option = { # Ok
		name = dwarven_yearly.0228.a
		add_piety = 75
		stress_impact = {
			cynical = minor_stress_impact_gain
		}
	}
	option = { # Ok
		name = dwarven_yearly.0228.b
		add_prestige = 75
		stress_impact = {
			trusting = minor_stress_impact_gain
		}
	}
}



# Hear about the Dwarves involvement in the Last Alliance
dwarven_yearly.0229 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0229.t
	desc = dwarven_yearly.0229.desc
	theme = stewardship_duty_focus
	override_background = { reference = halls }
	
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
		culture = { has_cultural_pillar = heritage_longbeard }
	}

	option = { # Ok
		name = dwarven_yearly.0229.a
		add_character_modifier = {
			modifier = lotr_dwarven_flavor_last_alliance_martial_inspiration
			years = 5
		}
	}
	option = { # Ok
		name = dwarven_yearly.0229.b
		add_character_modifier = {
			modifier = lotr_dwarven_flavor_last_alliance_diplomacy_inspiration
			years = 5
		}
	}
}




# Argument about which metal is best
dwarven_yearly.0230 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0230.t
	desc = dwarven_yearly.0230.desc
	theme = stewardship_duty_focus
	override_background = { reference = halls }
	
	left_portrait = {
		character = root
		animation = personality_cynical
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
	}

	option = { # Steel
		name = dwarven_yearly.0230.b
		random = {
			chance = 30
			add_prowess_skill = 1
		}
	}
	option = { # Silver
		name = dwarven_yearly.0230.c
		random = {
			chance = 30
			add_diplomacy_skill = 1
		}
	}
	option = { # Mithril
		name = dwarven_yearly.0230.d
		random = {
			chance = 30
			add_martial_skill = 1
		}
	}
	option = { # Gold
		name = dwarven_yearly.0230.a
		random = {
			chance = 30
			add_stewardship_skill = 1
		}
	}
	option = { # Quicksilver
		name = dwarven_yearly.0230.f
		random = {
			chance = 30
			add_intrigue_skill = 1
		}
	}
	option = { # Iron
		name = dwarven_yearly.0230.e
		random = {
			chance = 30
			add_learning_skill = 1
		}
	}
}


# Enter a gorgeous mountain valley
dwarven_yearly.0231 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven_yearly.0231.t
	desc = dwarven_yearly.0231.desc
	theme = stewardship_duty_focus
	override_background = { reference = eaves_of_lorien }
	
	right_portrait = {
		character = root
		animation = happiness
	}
	
	trigger = {
		is_landed = yes
		is_available_adult = yes
		is_imprisoned = no
		is_dwarf = yes
	}

	option = { # Ok
		name = dwarven_yearly.0231.a
		stress_impact = {
			base = miniscule_stress_impact_loss
			calm = minor_stress_impact_loss
			humble = minor_stress_impact_loss
			content = minor_stress_impact_loss
		}
	}
}