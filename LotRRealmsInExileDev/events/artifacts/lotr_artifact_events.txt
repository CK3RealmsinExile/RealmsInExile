namespace = lotr_artifact

### LotR Artifact Events ###
#			lotr_artifact.0001 		Morgul knife self-destruct
#			lotr_artifact.0002		Elven artifact burns evil characters
#			lotr_artifact.0003		Plundering Thorin's tomb
#			lotr_artifact.0004		Returning Thorin's artifacts
#			lotr_artifact.0005		Aragorn receives Arnor's regalia
#			lotr_artifact.0006		Aragorn receives Anduril
#			lotr_artifact.0007		Dwarven Ring influence
#			lotr_artifact.0100		Ring of Power modifier switch event


lotr_artifact.0001 = { #Morgul knife self-destruct
	content_source = realms_dlc
	type = character_event
	title = lotr_artifact.0001.t
	desc = lotr_artifact.0001.desc
	theme = intrigue
	right_portrait = {
		character = root
		animation = personality_rational
	}
	
	trigger = {
		is_nazgul = no
		is_sauron = no
		NOT = {
			has_trait_xp = {
				trait = sorcerer_trait
				value >= 25
			}
		}
	}
	
	option = { 
		name = lotr_artifact.0001.a
		every_character_artifact = {
			limit = { has_variable = morgul_blade }
			destroy_artifact = this
		}
		hidden_effect = {
			if = {
				limit = { 
					is_elf = no
					cannot_be_killed = no
				}
				random = {
					chance = 5
					contract_disease_notify_effect = { DISEASE = black_breath }
				}
			}
		}
	}
}


lotr_artifact.0002 = { #It burns !
	content_source = realms_dlc
	type = character_event
	title = lotr_artifact.0002.t
	desc = lotr_artifact.0002.desc
	theme = stewardship_wealth_focus
	right_portrait = {
		character = root
		animation = fear
	}
	
	trigger = {
		faith_is_evil = yes
		is_human = no
	}
	
	option = { 
		name = lotr_artifact.0002.a
		increase_wounds_no_death_effect = { REASON = burned }
	}
}

lotr_artifact.0003 = { #Thorin's tomb plunder event
	content_source = realms_dlc
	type = character_event
	title = lotr_artifact.0003.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					is_dwarf = yes
				}
				desc = lotr_artifact.0003.desc.dwarf
			}
			triggered_desc = {
				trigger = {
					is_orc = yes
				}
				desc = lotr_artifact.0003.desc.orc
			}
			desc = lotr_artifact.0003.desc
		}
	}
	theme = intrigue_skulduggery_focus
	left_portrait = {
		character = root
		animation = scheme
	}
	right_portrait = {
		character = character:lineofdurin83
		animation = marshal
	}
	
	option = { #I shouldn't
		name = lotr_artifact.0003.a
	}
	
	option = { #It's there for the taking - Dwarf and Good characters
		name = {
			trigger = { 
				is_dwarf = yes
			}
			text = lotr_artifact.0003.b.dwarf
		}
		name = {
			trigger = {
				is_dwarf = no
			}
			text = lotr_artifact.0003.b
		}
		
		trigger = {
			OR = {
				faith_is_good = yes
				is_dwarf = yes
			}
		}
		
		add_piety_level = -1
		stress_impact = {
			zealous = major_stress_impact_gain
			generous = major_stress_impact_gain
			compassionate = major_stress_impact_gain
			greedy = medium_stress_impact_loss
		}
		if = {
			limit = { title:c_throne_of_erebor = { has_county_modifier = plundered_thorins_tomb_arkenstone_modifier } }
			create_artifact_orcrist_effect = { OWNER = this }
			title:c_throne_of_erebor = {
				add_county_modifier = plundered_thorins_tomb_orcrist_modifier
			}
		}
		else_if = {
			limit = { title:c_throne_of_erebor = { has_county_modifier = plundered_thorins_tomb_orcrist_modifier } }
			if = {
				limit = { has_dlc_feature = royal_court }
				create_artifact_arkenstone_effect = { OWNER = this }
			}
			else = { create_artifact_arkenstone_backup_effect = { OWNER = this } }
			title:c_throne_of_erebor = {
				add_county_modifier = plundered_thorins_tomb_arkenstone_modifier
			}
		}
		else = {
			if = {
				limit = { has_dlc_feature = royal_court }
				create_artifact_arkenstone_effect = { OWNER = this }
			}
			else = { create_artifact_arkenstone_backup_effect = { OWNER = this } }
			create_artifact_orcrist_effect = { OWNER = this }
			title:c_throne_of_erebor = {
				remove_county_modifier = thorins_tomb_modifier
				add_county_modifier = plundered_thorins_tomb_orcrist_modifier
				add_county_modifier = plundered_thorins_tomb_arkenstone_modifier
			}
		}
	}
	
	option = { #It's there for the taking - Non-good and Orcs
		name = {
			trigger = { 
				is_orc = yes
			}
			text = lotr_artifact.0003.c.orc
		}
		name = {
			trigger = {
				is_orc = no
			}
			text = lotr_artifact.0003.c
		}
		
		trigger = {
			faith_is_good = no
			is_dwarf = no
		}
		
		add_prestige = major_prestige_value
		stress_impact = {
			generous = major_stress_impact_gain
			compassionate = major_stress_impact_gain
			greedy = medium_stress_impact_loss
		}
		add_character_modifier = plundered_thorins_tomb_modifier 

		if = {
			limit = { title:c_throne_of_erebor = { has_county_modifier = thorins_tomb_modifier } }
			create_artifact_orcrist_effect = { OWNER = this }
			create_artifact_arkenstone_effect = { OWNER = this }
			title:c_throne_of_erebor = {
				remove_county_modifier = thorins_tomb_modifier
				add_county_modifier = plundered_thorins_tomb_orcrist_modifier
				add_county_modifier = plundered_thorins_tomb_arkenstone_modifier
			}
		}
		else_if = {
			limit = { title:c_throne_of_erebor = { has_county_modifier = plundered_thorins_tomb_orcrist_modifier } }
			if = {
				limit = { has_dlc_feature = royal_court }
				create_artifact_arkenstone_effect = { OWNER = this }
			}
			else = { create_artifact_arkenstone_backup_effect = { OWNER = this } }
			title:c_throne_of_erebor = {
				add_county_modifier = plundered_thorins_tomb_arkenstone_modifier
			}
		}
		else = {
			create_artifact_orcrist_effect = { OWNER = this }
			title:c_throne_of_erebor = {
				add_county_modifier = plundered_thorins_tomb_orcrist_modifier
			}
		}
	}
}

lotr_artifact.0004 = { #Return the Artifacts
	content_source = realms_dlc
	type = character_event
	title = lotr_artifact.0004.t
	desc = {
		desc = lotr_artifact.0004.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:orcrist
					exists = scope:arkenstone
				}
				desc = lotr_artifact.0004.desc.both
			}
			triggered_desc = {
				trigger = {
					exists = scope:orcrist
				}
				desc = lotr_artifact.0004.desc.orcrist
			}
			desc = lotr_artifact.0004.desc.arkenstone
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					is_dwarf = yes
				}
				desc = lotr_artifact.0004.desc.dwarf
			}
			desc = lotr_artifact.0004.desc
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					any_sub_realm_county = {
						this = title:c_throne_of_erebor
					}
				}
				desc = lotr_artifact.0004.desc.erebor
			}
			desc = lotr_artifact.0004.desc.not_erebor
		}
	}
	
	theme = diplomacy
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:dwarven_ruler
		animation = beg
	}
	
	trigger = {
		is_orc = no
		faith_is_evil = no
		OR = {
			AND = {
				NOT = {
					is_dwarf = yes
					title:c_throne_of_erebor.holder.top_liege = { is_dwarf = no }
				}
				any_ruler = {
					in_diplomatic_range = root
					is_dwarf = yes
				}
			}
			AND = {
				is_dwarf = yes
				title:c_throne_of_erebor.holder.top_liege = { is_dwarf = yes }
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				any_character_artifact = {
					has_variable = orcrist
				}
			}
			random_character_artifact = {
				limit = { has_variable = orcrist }
				save_scope_as = orcrist
			}
		}
		if = {
			limit = {
				any_character_artifact = {
					has_variable = arkenstone
				}
			}
			random_character_artifact = {
				limit = { has_variable = arkenstone }
				save_scope_as = arkenstone
			}
		}
		if = {
			limit = {
				NOR = {
					title:c_throne_of_erebor.holder.top_liege = this
					title:c_throne_of_erebor.holder = this
				}
			}
			if = { #Fetch the ruler of Erebor
				limit = { title:c_throne_of_erebor.holder.top_liege = { is_dwarf = yes } }
				title:c_throne_of_erebor.holder.top_liege = { save_scope_as = dwarven_ruler }
			}
			else_if = { #If Erebor is occupied, fetch a nearby Dwarven king
				limit = {
					any_independent_ruler = {
						in_diplomatic_range = root
						highest_held_title_tier >= tier_kingdom
						is_dwarf = yes
					}
				}
				random_independent_ruler = {
					limit = {
						in_diplomatic_range = root
						highest_held_title_tier >= tier_kingdom
						is_dwarf = yes
					}
					save_scope_as = dwarven_ruler
				}
			}
			else_if = { #If there aren't any, pick any nearby House of Durin ruler
				limit = {
					any_independent_ruler = {
						in_diplomatic_range = root
						highest_held_title_tier >= tier_kingdom
						is_dwarf = yes
					}
				}
				random_ruler = {
					limit = {
						in_diplomatic_range = root
						dynasty = dynasty:dynasty_durin
						is_dwarf = yes
					}
					save_scope_as = dwarven_ruler
				}
			}
			else = { #If there aren't any, pick any nearby Dwarven ruler
				random_ruler = {
					limit = {
						in_diplomatic_range = root
						is_dwarf = yes
					}
					save_scope_as = dwarven_ruler
				}
			}
		}
	}
	
	option = { #No, I'll keep it/them
		name = lotr_artifact.0004.a
		add_character_modifier = kept_thorins_artifact_modifier
		
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = 1
				ai_compassion = -0.5
				ai_zeal = -1
			}
			modifier = {
				factor = 0
				is_dwarf = yes
			}
		}
	}
	
	option = { #All right, have it/them
		name = {
			trigger = {
				is_dwarf = yes
			}
			text = lotr_artifact.0004.b.dwarf
		}
		name = {
			trigger = {
				is_dwarf = no
			}
			text = lotr_artifact.0004.b
		}
		
		trigger = {
			NOT = {
				any_sub_realm_county = {
					this = title:c_throne_of_erebor
				}
			}
		}
		
		if = {
			limit = { exists = scope:orcrist }
			scope:orcrist = {
				set_owner = {
					target = scope:dwarven_ruler
					history = {
						type = inherited
						recipient = scope:dwarven_ruler
					}
				}
			}
			scope:dwarven_ruler = {
				pay_short_term_gold = {
					target = root
					gold = medium_gold_value
				}
			}
		}
		if = {
			limit = { exists = scope:arkenstone }
			scope:arkenstone = {
				set_owner = {
					target = scope:dwarven_ruler
					history = {
						type = inherited
						recipient = scope:dwarven_ruler
					}
				}
			}
			scope:dwarven_ruler = {
				pay_short_term_gold = {
					target = root
					gold = major_gold_value
				}
			}
		}
		if = {
			limit = {
				has_character_modifier = kept_thorins_artifact_modifier
			}
			remove_character_modifier = kept_thorins_artifact_modifier
		}
		add_character_modifier = dwarf_friend_modifier 
		
		stress_impact = {
			zealous = medium_stress_impact_loss
			generous = medium_stress_impact_loss
			compassionate = medium_stress_impact_loss
			greedy = major_stress_impact_gain
		}
		
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = -1
				ai_compassion = 0.5
				ai_zeal = 1
			}
			modifier = {
				factor = 2
				is_dwarf = yes
			}
		}
	}
	
	option = { #I'll restore the tomb
		name = lotr_artifact.0004.c
		
		trigger = {
			any_sub_realm_county = {
				this = title:c_throne_of_erebor
			}
		}
		
		title:c_throne_of_erebor = {
			if = {
				limit = {
					OR = {
						AND = {
							exists = scope:arkenstone
							exists = scope:orcrist
						}
						AND = {
							NOT = { has_county_modifier = plundered_thorins_tomb_arkenstone_modifier }
							exists = scope:orcrist
						}
						AND = {
							NOT = { has_county_modifier = plundered_thorins_tomb_orcrist_modifier }
							exists = scope:arkenstone
						}
					}
				}
				add_county_modifier = thorins_tomb_modifier
				root = { add_character_modifier = restored_thorins_tomb_modifier }
			}					
			if = {
				limit = { exists = scope:arkenstone }
				remove_county_modifier = plundered_thorins_tomb_arkenstone_modifier
				destroy_artifact = scope:arkenstone
				root = { add_piety = major_piety_value }
			}
			if = {
				limit = { exists = scope:orcrist }
				remove_county_modifier = plundered_thorins_tomb_orcrist_modifier
				destroy_artifact = scope:orcrist
				root = { add_piety = medium_piety_value }
			}
		}
		
		ai_chance = {
			base = 75
			ai_value_modifier = {
				ai_greed = -1
				ai_compassion = 0.5
				ai_zeal = 1
			}
			modifier = {
				factor = 2
				is_dwarf = yes
			}
		}
	}
}

lotr_artifact.0005 = { #Aragorn receives the regalia of Arnor
	content_source = realms_dlc
	type = character_event
	title = lotr_artifact.0005.t
	desc = {
		desc = lotr_artifact.0005.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					has_character_flag = is_aragorn
					title:k_imladris.holder = character:linefinwe27 #Elrond
					character:linefinwe28 = { is_alive = yes } #Elladan
					character:linefinwe29 = { is_alive = yes } #Elrohir
				}
				desc = lotr_artifact.0005.desc.default
			}
			desc = lotr_artifact.0005.desc.alt
		}
		triggered_desc = {
			trigger = {
				title:k_imladris.holder.culture = { has_cultural_tradition = tradition_legendary_artisans }
				any_character_artifact = {
					has_variable = shards_of_narsil
				}
			}
			desc = lotr_artifact.0005.desc.narsil
		}
	}
	
	theme = diplomacy
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = scope:messenger #Elladan
		animation = personality_honorable
	}
	lower_center_portrait = {
		character = title:k_imladris.holder #Elrond
	}
	artifact = {
		target = scope:scepter
		position = lower_left_portrait
	}
	artifact = {
		target = scope:elendilmir
		position = lower_right_portrait
	}
	
	trigger = {
		has_title = title:e_arnor
		OR = {
			dynasty = dynasty:dynasty_elros
			dynasty = dynasty:dynasty_elendil
			dynasty = dynasty:dynasty_anarion
		}
		title:k_imladris.holder = {
			any_character_artifact = {
				OR = {
					has_variable = sceptre_of_annuminas
					has_variable = elendilmir_valandil
				}
			}
		}
	}
	
	cooldown = { years = 10 }

	immediate = {
		title:k_imladris.holder = { # Aragorn receives the regalia of Arnor from Elrond or any other ruler of Imladris
			save_scope_as = elrond_substitute
			every_character_artifact = {
				limit = {
					has_variable = sceptre_of_annuminas
				}
				save_scope_as = scepter
				set_owner = {
					target = root
					history = {
						type = given
						recipient = root
					}
				}
			}
			every_character_artifact = {
				limit = {
					has_variable = elendilmir_valandil
				}
				save_scope_as = elendilmir
				set_owner = {
					target = root
					history = {
						type = given
						recipient = root
					}
				}
			}
		}
		if = {
			limit = { title:k_imladris.holder = character:linefinwe27 } #Elrond 
			if = {
				limit = { character:linefinwe28 = { is_alive = yes } }
				character:linefinwe28 = { save_scope_as = messenger }
			}
			else_if = {
				limit = { character:linefinwe29 = { is_alive = yes } }
				character:linefinwe29 = { save_scope_as = messenger }
			}
			else = {
				random_knight = { save_scope_as = messenger }
			}
		}
		else = {
			random_knight = { save_scope_as = messenger }
		}
	}
	
	option = { #Please take the shards
		name = lotr_artifact.0005.a
		trigger = {
			title:k_imladris.holder.culture = { has_cultural_tradition = tradition_legendary_artisans }
			any_character_artifact = {
				has_variable = shards_of_narsil
			}
		}	
	
		every_character_artifact = {
			limit = { has_variable = shards_of_narsil }
			set_owner = {
				target = scope:messenger #Elladan
				history = {
					type = given
					recipient = scope:messenger #Elladan
				}
			}
		}
		
		trigger_event = {
			id = lotr_artifact.0006
			months = 6
		}
		
		ai_chance = 100
	}
	
	option = { #I'll keep them, thanks
		name = {
			trigger = { 
				title:k_imladris.holder.culture = { has_cultural_tradition = tradition_legendary_artisans }
				any_character_artifact = {
					has_variable = shards_of_narsil
				}
			}
			text = lotr_artifact.0005.b.narsil_kept
		}
		name = lotr_artifact.0005.b
		
		ai_chance = 0
	}
}

lotr_artifact.0006 = { #Elladan returns with Anduril reforged
	content_source = realms_dlc
	type = character_event
	title = lotr_artifact.0006.t
	desc = {
		desc = lotr_artifact.0006.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					has_character_flag = is_aragorn
					title:k_imladris.holder = character:linefinwe27 #Elrond
					character:linefinwe28 = { is_alive = yes } #Elladan
					character:linefinwe29 = { is_alive = yes } #Elrohir
				}
				desc = lotr_artifact.0006.desc.default_outro
			}
			desc = lotr_artifact.0006.desc.alt_outro
		}
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = scope:messenger #Elladan
		animation = personality_honorable
	}
	lower_center_portrait = {
		character = title:k_imladris.holder #Elrond
	}
	artifact = {
		target = scope:anduril
		position = lower_left_portrait
	}
	
	immediate = {
		scope:messenger = {
			every_character_artifact = {
				limit = { has_variable = shards_of_narsil }
				destroy_artifact = this
			}
		}
		create_artifact_anduril_effect = { OWNER = title:k_imladris.holder }
		scope:newly_created_artifact = {
			add_artifact_history = {
				location = province:4337 #Rivendell
				actor = title:k_imladris.holder #Elrond
				recipient = title:k_imladris.holder #Elrond
				type = reforged
			}
			save_scope_as = anduril
		}
		
		set_global_variable = anduril_reforged
	}
	
	option = {
		name = lotr_artifact.0006.a
		
		title:k_imladris.holder = {
			every_character_artifact = {
				limit = { has_variable = anduril }
				set_owner = {
					target = root
					history = {
						type = given
						recipient = root
					}
				}
			}
		}
	}
}

lotr_artifact.0007 = { # Convert to Gold faith
	content_source = realms_dlc
	type = character_event
	title = lotr_artifact.0007.t
	desc = lotr_artifact.0007.desc
	theme = mental_break
	override_background = { reference = throne_room }
	left_portrait = {
		character = root
		animation = paranoia
	}
	
	trigger = {
		is_dwarf = yes
		NOT = { faith = faith:faith_gold_worship }
		any_character_artifact = { has_variable = corrupted_ring }
	}
	
	immediate = { add_stress = 75 }
	
	option = {
		name = lotr_artifact.0007.a
		set_character_faith = faith:faith_gold_worship
		if = {
			limit = { NOT = { has_trait = greedy } }
			add_trait_force_tooltip = greedy
		}
		if = {
			limit = { has_trait = generous }
			remove_trait = generous
		}
		if = {
			limit = { has_trait = trusting }
			remove_trait = trusting
			add_trait_force_tooltip = paranoid
		}
	}
	
	option = {
		name = lotr_artifact.0007.b
		add_stress = massive_stress_gain
	}
}

lotr_artifact.0008 = { # Convert to Gold faith maintenance event
	hidden = yes
	
	immediate = { 
		if = { 
			limit = { faith != faith:faith_gold_worship }
			trigger_event = lotr_artifact.0007
		}
		trigger_event = { 
			id = lotr_artifact.0008
			years = 5
		}
	}
}

scripted_effect remove_ring_of_mortals_modifiers = {
	remove_artifact_modifier ?= ring_of_mortals_men_modifier
	remove_artifact_modifier ?= ring_of_mortals_elves_modifier
	remove_artifact_modifier ?= ring_of_mortals_nazgul_modifier
	remove_artifact_modifier ?= ring_of_mortals_sauron_modifier
	remove_artifact_modifier ?= ring_of_mortals_orcs_modifier
	remove_artifact_modifier ?= ring_of_mortals_dwarves_modifier
}

lotr_artifact.0100 = { # Ring of Power modifier switch
	hidden  = yes
	
	trigger = {
		any_character_artifact = { has_variable = ring_of_mortals }
	}
	
	immediate = {
		every_character_artifact = {
			limit = { has_variable = ring_of_mortals }
			remove_ring_of_mortals_modifiers = yes
			
			if = {
				limit = { root = { is_dwarf = yes } }
				add_artifact_modifier = ring_of_mortals_dwarves_modifier
			}
			else_if = {
				limit = { # Elves and Istari
					root = {
						OR = {
							is_elf = yes
							is_istari = yes
						}
					}
				}
				add_artifact_modifier = ring_of_mortals_elves_modifier
			}
			else_if = {
				limit = { root = { is_nazgul = yes } }
				add_artifact_modifier = ring_of_mortals_nazgul_modifier
			}
			else_if = {
				limit = { root = { is_sauron = yes } }
				add_artifact_modifier = ring_of_mortals_sauron_modifier
				if = { #A little additional layer of corruption
					limit = { NOT = { has_variable = corrupted_ring } }
					set_variable = corrupted_ring
				}
			}
			else_if = {
				limit = { root = { is_orc = yes } }
				add_artifact_modifier = ring_of_mortals_orcs_modifier
			}
			else = { add_artifact_modifier = ring_of_mortals_men_modifier }
		}
	}
}