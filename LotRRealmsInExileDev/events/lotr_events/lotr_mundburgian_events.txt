namespace = mundburgian

# Events about the Mundburgian Eored
	# mundburgian.0001 - Find a potential Mundburgian and fire chain, by Brice Underhill
	# mundburgian.0002 - Event for the liege of the Mundburgian candidate, by Brice Underhill
	# mundburgian.0003 - Emperor gets a new mundburgian, by Brice Underhill
	# mundburgian.1001 - Mundburgian decides to return, by Brice Underhill
	# mundburgian.1002 - Mundburgian comes home to liege, by Brice Underhill

	# Ongoing Mundburgian events
	# mundburgian.2001 - Become Best Friends with another Mundburgian, by Brice Underhill
	# mundburgian.2002 - Become Lover with a fellow Mundburgian, by Brice Underhill
	# mundburgian.2003 - Become Friends with a local ruler, by Brice Underhill
	# mundburgian.2004 - Become Rivals with a local ruler, by Brice Underhill
	# mundburgian.2005 - Marry your lover, by Brice Underhill
	# mundburgian.2008 - Get wounded, by Brice Underhill
	# mundburgian.2011 - Become lover with a local, by Brice Underhill
	# mundburgian.2012 - Increase Prowess, by Brice Underhill
	# mundburgian.2013 - Increase Martial, by Brice Underhill
	# mundburgian.2014 - Increase Learning, by Brice Underhill
	# mundburgian.2015 - Increase Diplomacy, by Brice Underhill
	# mundburgian.2016 - Become Brave, by Brice Underhill
	# mundburgian.2017 - Become Ambitious, by Brice Underhill
	# mundburgian.2018 - Become Diligent, by Brice Underhill

# Evaluate whether the target is valid for mundburgians
scripted_trigger mundburgian_0001_available_mundburgian_trigger = {
	trigger_if = {
		limit = { exists = title:e_gondor_steward.holder }
		can_be_knight_trigger = {ARMY_OWNER = title:e_gondor_steward.holder}
	}
	trigger_else_if = {
		limit = { exists = title:e_gondor.holder }
		can_be_knight_trigger = {ARMY_OWNER = title:e_gondor.holder}
	}
	trigger_else_if = {
		limit = { exists = title:e_castamir.holder }
		can_be_knight_trigger = {ARMY_OWNER = title:e_castamir.holder}
	}
	trigger_else = {
		always = no
	}
	age < 40
	is_married = no
	NOR = {
		has_character_flag = has_asked_to_be_mundburgian
		has_trait = mundburgian
	}
	AND = {
		culture = { has_cultural_pillar = heritage_hadorim }
		faith_is_good = yes
	}
	NOR = {
		faith = {
			has_doctrine_parameter = pacifist_opinion_active
		}
		has_trait = craven
	}
	trigger_if = {
		limit = { exists = title:e_gondor_steward.holder }
		NOR = {
			has_truce = title:e_gondor_steward.holder
			is_at_war_with = title:e_gondor_steward.holder
			has_relation_rival = title:e_gondor_steward.holder
		}
	}
	trigger_else_if = {
		limit = { exists = title:e_gondor.holder }
		NOR = {
			has_truce = title:e_gondor.holder
			is_at_war_with = title:e_gondor.holder
			has_relation_rival = title:e_gondor.holder
		}
	}
	trigger_else_if = {
		limit = { exists = title:e_castamir.holder }
		NOR = {
			has_truce = title:e_castamir.holder
			is_at_war_with = title:e_castamir.holder
			has_relation_rival = title:e_castamir.holder
		}
	}
	trigger_else = {
		always = no
	}
}

mundburgian.0001 = {
	hidden = yes

	trigger = {
		AND = {
			culture = { has_cultural_pillar = heritage_hadorim }
			faith_is_good = yes
		}
		NOR = {
			faith = {
				has_doctrine_parameter = pacifist_opinion_active
			}
			has_character_flag = had_recent_mundburgian_sendoff
		}
		is_at_war = no
		age >= 6
		OR = {
			exists = title:e_gondor_steward.holder
			exists = title:e_gondor.holder
			AND = {
				exists = title:e_castamir.holder
				faith_is_good = yes
			}
		}
		trigger_if = {
			limit = { exists = title:e_gondor_steward.holder }
			NOR = {
				this = title:e_gondor_steward.holder
				has_truce = title:e_gondor_steward.holder
				is_at_war_with = title:e_gondor_steward.holder
				any_sub_realm_county = {
					this = title:c_minas_tirith
				}
				has_relation_rival = title:e_gondor_steward.holder
			}
		}
		trigger_if = {
			limit = { exists = title:e_gondor.holder }
			NOR = {
				this = title:e_gondor.holder
				has_truce = title:e_gondor.holder
				is_at_war_with = title:e_gondor.holder
				any_sub_realm_county = {
					this = title:c_minas_tirith
				}
				has_relation_rival = title:e_gondor.holder
			}
		}
		trigger_if = {
			limit = { exists = title:e_castamir.holder }
			NOR = {
				this = title:e_castamir.holder
				has_truce = title:e_castamir.holder
				is_at_war_with = title:e_castamir.holder
				any_sub_realm_county = {
					this = title:c_minas_tirith
				}
				has_relation_rival = title:e_castamir.holder
			}
		}
		any_courtier = {
			mundburgian_0001_available_mundburgian_trigger = yes
		}
	}

	immediate = {
		# Find a suitable courtier
		random_courtier = {
			limit = {
				mundburgian_0001_available_mundburgian_trigger = yes
			}
			weight = {
				base = 1
				compare_modifier = {
					value = martial
					multiplier = 0.25
				}
				compare_modifier = {
					value = prowess
					multiplier = 0.5
				}
				modifier = {
					add = 5
					OR = {
						has_trait = brave
						has_trait = arrogant
					}
				}
				modifier = {
					add = -1
					has_trait = content
				}
				modifier = {
					add = -1
					has_trait = lazy
				}
				modifier = {
					add = -1
					has_trait = craven
				}
				modifier = {
					add = 3
					is_of_major_interest_to_root_trigger = yes
				}
				modifier = {
					add = 2
					is_of_minor_interest_to_root_trigger = yes
				}
				modifier = {
					add = 1
					exists = dynasty
				}
				# Reduce chances if they seem likely to inherit stuff soon
				modifier = {
					factor = 0.2
					any_heir_title = {
						holder = {
							this = root
							OR = {
								age >= 60
								health <= poor_health
							}
						}
					}
				}
			}
			add_character_flag = has_asked_to_be_mundburgian
			save_scope_as = mundburgian_candidate
		}

		IF = {
			limit = {exists = title:e_gondor_steward.holder}
			title:e_gondor_steward.holder = {
				save_scope_as = emperor
				if = {
					limit = { capital_county = title:c_minas_tirith }
					set_local_variable = {
						name = to_mundburg
						value = yes
					}
				}
			}
		}

		ELSE_IF = {
			limit = { exists = title:e_gondor.holder }
			title:e_gondor.holder = {
				save_scope_as = emperor
				if = {
					limit = { capital_county = title:c_minas_tirith }
					set_local_variable = {
						name = to_mundburg
						value = yes
					}
				}
			}
		}

		ELSE_IF = {
			limit = { exists = title:e_castamir.holder }
			title:e_castamir.holder = {
				save_scope_as = emperor
				if = {
					limit = { capital_county = title:c_minas_tirith }
					set_local_variable = {
						name = to_mundburg
						value = yes
					}
				}
			}
		}

		# Send event to court owner
		trigger_event = mundburgian.0002
	}
}


# Mundburgian requests permission to leave
mundburgian.0002 = {
	content_source = realms_dlc
	type = character_event
	title = mundburgian.0002.t
	desc = {
		desc = mundburgian.0002.opening
		first_valid = {
			triggered_desc = {
				trigger = { exists = local_var:to_mundburg }
				desc = mundburgian.0002.mundburg
			}
			desc = mundburgian.0002.elsewhere
		}
		desc = mundburgian.0002.end
	}
	theme = martial
	override_background = {
		reference = minas_tirith
	}
	right_portrait = scope:mundburgian_candidate
	lower_right_portrait = scope:emperor

	immediate = {
		add_character_flag = {
			flag = had_recent_mundburgian_sendoff
			years = 5
		}
	}
	
	option = { # Approve
		name = mundburgian.0002.a
		show_as_tooltip = {
			scope:mundburgian_candidate = {
				visit_court_of = scope:emperor
				add_trait = mundburgian
			}
		}
		hidden_effect = {
			scope:emperor = {
				trigger_event = mundburgian.0003
			}
		}
		debug_log = "Someone got sent as a Mundburgian"
		debug_log_scopes = yes
		ai_chance = {
			base = 100
		}
	}

	option = { # Keep them
		name = mundburgian.0002.b
		scope:mundburgian_candidate = {
			add_opinion = {
				target = root
				modifier = angry_opinion
				opinion = -20
			}
		}
		ai_chance = {
			base = 0
		}
	}
}

# Emperor gets a new Mundburgian
mundburgian.0003 = {
	hidden = yes

	immediate = {
		send_interface_message = {
			type = event_martial_text_good
			left_icon = scope:mundburgian_candidate
			title = mundburgian_arrived.title
			desc = mundburgian_arrived.desc
			add_visiting_courtier = scope:mundburgian_candidate
			scope:mundburgian_candidate = {
				add_trait = mundburgian
				add_character_flag = is_currently_mundburgian
				set_variable = {
					name = years_as_mundburgian
					value = 1 # Set to one year ahead of time for the sake of event evaluation
				}
				trigger_event = {
					on_action = mundburgian_ongoing
					days = { 340 380 }
				}
			}
		}
	}
}


# Return home eventually
scripted_trigger mundburgian_1001_partner_can_be_brought_home_trigger = {
	is_alive = yes
	is_landed = no
	any_heir_title = {
		always = no
	}
}

mundburgian.1001 = {
	hidden = yes

	trigger = {
		exists = liege
		var:years_as_mundburgian > 5
		is_available_ai_adult = yes 
		has_character_flag = is_currently_mundburgian
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = {
				value = var:years_as_mundburgian
				subtract = 5
				multiply = 0.25
			}
			always = yes
		}
	}

	immediate = {
		if = {
			limit = {
				exists = var:spouse_from_mundburgian_eored
				var:spouse_from_mundburgian_eored = {
					mundburgian_1001_partner_can_be_brought_home_trigger = yes
					is_consort_of = root
				}
			}
			var:spouse_from_mundburgian_eored = {
				save_scope_as = new_partner
			}
		}
		else_if = {
			limit = {
				exists = var:lover_from_mundburgian_eored
				var:lover_from_mundburgian_eored = {
					mundburgian_1001_partner_can_be_brought_home_trigger = yes
					has_relation_lover = root
				}
			}
			var:lover_from_mundburgian_eored = {
				save_scope_as = new_partner
			}
		}
		remove_character_flag = is_currently_mundburgian
		save_scope_as = returning_mundburgian
		if = {
			limit = { exists = title:e_gondor_steward.holder }
			title:e_gondor_steward.holder = {
				save_scope_as = emperor
			}
		}
		else_if = {
			limit = { exists = title:e_gondor.holder }
			title:e_gondor.holder = {
				save_scope_as = emperor
			}
		}
		else_if = {
			limit = { exists = title:e_castamir.holder }
			title:e_castamir.holder = {
				save_scope_as = emperor
			}
		}
		liege = {
			trigger_event = mundburgian.1002
		}
	}
}

# Liege - Mundburgian returns home
mundburgian.1002 = {
	content_source = realms_dlc
	type = character_event
	title = mundburgian.1002.t
	desc = {
		desc = mundburgian.1002.opening
		triggered_desc = {
			trigger = {
				exists = scope:new_partner
			}
			desc = mundburgian.1002.new_partner
		}
		desc = mundburgian.1002.ending
	}
	theme = martial
	left_portrait = {
		character = scope:returning_mundburgian
		animation = pride
	}
	lower_left_portrait = scope:new_partner
	lower_right_portrait = scope:emperor
	
	immediate = {
		scope:returning_mundburgian = {
			if = {
				limit = {
					is_foreign_court_guest = yes
				}
				return_to_court = yes
			}
			else_if = {
				limit = {
					exists = dynasty.dynast.primary_title
				}
				dynasty.dynast = {
					add_courtier = scope:returning_mundburgian
				}
			}
			else_if = {
				limit = {
					exists = dynasty
					any_close_family_member = {
						is_ai = no
					}
				}
				random_close_family_member = {
					limit = {
						is_ai = no
					}
					add_courtier = scope:returning_mundburgian
				}
			}
			else_if = {
				limit = {
					any_close_family_member = {
						is_ruler = yes
					}
				}
				random_close_family_member = {
					add_courtier = dynasty.dynast
				}
			}
			else = {
				move_to_pool = yes
			}
		}
		hidden_effect = {
			if = {
				limit = {
					exists = scope:new_partner
					NOT = { scope:new_partner = { is_courtier_of = root } }
				}
				scope:returning_mundburgian.court_owner = {
					add_courtier = scope:new_partner
				}
			}
		}
		debug_log = "Someone got home from the Mundburgian Eored"
		debug_log_scopes = yes
	}

	option = { # Wow
		name = mundburgian.1002.a
		scope:returning_mundburgian = {
			add_prestige = medium_prestige_gain
			add_gold = medium_gold_value
		}
	}
}


# Return home because of inheritance
# mundburgian.1003

# Liege - Mundburgian has returned home to be vassal
# mundburgian.1004


# Become friends with local Mundburgian
scripted_trigger mundburgian_2001_mundburgian_friend_trigger = {
	has_character_flag = is_currently_mundburgian
	is_ai = yes
	NOR = {
		this = root
		has_relation_rival = root
		has_relation_lover = root
	}
}

mundburgian.2001 = {
	hidden = yes

	trigger = {
		has_character_flag = is_currently_mundburgian
		# Only if you don't have any friends
		any_relation = {
			type = best_friend
			always = no
		}
		exists = host
		host = {
			any_courtier_or_guest = {
				mundburgian_2001_mundburgian_friend_trigger = yes
			}
		}
	}

	immediate = {
		host = {
			random_courtier_or_guest = {
				limit = {
					mundburgian_2001_mundburgian_friend_trigger = yes
				}
				weight = {
					base = 1
					opinion_modifier = {
						opinion_target = root
						multiplier = 0.1 # +10 at 100
					}
					modifier = {
						add = 10
						OR = {
							has_relation_potential_friend = root
							has_relation_friend = root
						}
					}
				}
				save_scope_as = mundburgian_friend
			}
		}
		set_relation_best_friend = { reason = best_friend_mundburgian copy_reason = friend target = scope:mundburgian_friend }
	}
}

# Become lover with a fellow Mundburgian
scripted_trigger mundburgian_2002_mundburgian_lover_trigger = {	
	has_character_flag = is_currently_mundburgian
	is_ai = yes
	is_adult = yes
	save_temporary_scope_as = potential_cheater
	OR = {
		is_married = no
		any_spouse = {
			count = all
			save_temporary_scope_as = partner
			scope:potential_cheater = { might_cheat_on_partner_trigger = { PARTNER = scope:partner } }
		}
	}
	is_attracted_to_gender_of = root
	root = {
		is_attracted_to_gender_of = prev
	}
	NOR = {
		this = root
		has_relation_rival = root
		has_relation_lover = root
	}
	opinion = {
		target = root
		value > 10
	}
	reverse_opinion = {
		target = root
		value > 0
	}
}

mundburgian.2002 = {
	hidden = yes

	trigger = {
		has_character_flag = is_currently_mundburgian
		# Only if you don't have any lovers
		any_relation = {
			type = lover
			always = no
		}
		exists = host
		host = {
			any_courtier_or_guest = {
				mundburgian_2002_mundburgian_lover_trigger = yes
			}
		}
	}

	immediate = {
		host = {
			random_courtier_or_guest = {
				limit = {
					mundburgian_2002_mundburgian_lover_trigger = yes
				}
				weight = {
					base = 1
					opinion_modifier = {
						opinion_target = root
						multiplier = 0.1 # +10 at 100
					}
					modifier = {
						add = 10
						has_relation_potential_lover = root
					}
				}
				save_scope_as = mundburgian_lover
			}
		}
		set_relation_lover = { reason = lover_mundburgian_lover target = scope:mundburgian_lover }
		set_variable = {
			name = lover_from_mundburgian_eored
			value = scope:mundburgian_lover
		}
	}
}

# Become friends with local ruler
scripted_trigger mundburgian_2003_local_ruler_friend_trigger = {	
	is_ai = yes
	opinion = {
		target = root
		value > 0
	}
	reverse_opinion = {
		target = root
		value > 0
	}
	NOR = {
		this = root
		has_relation_rival = root
		has_relation_lover = root
	}
}

mundburgian.2003 = {
	hidden = yes

	trigger = {
		has_character_flag = is_currently_mundburgian
		# Only if you don't have any friends
		any_relation = {
			type = friend
			always = no
		}
		exists = host
		host = {
			any_vassal = {
				mundburgian_2003_local_ruler_friend_trigger = yes
			}
		}
	}

	immediate = {
		host = {
			random_vassal = {
				limit = {
					mundburgian_2003_local_ruler_friend_trigger = yes
				}
				weight = {
					base = 1
					opinion_modifier = {
						opinion_target = root
						multiplier = 0.1 # +10 at 100
					}
					modifier = {
						add = 10
						has_relation_potential_friend = root
					}
				}
				save_scope_as = mundburgian_friend
			}
		}
		set_relation_friend = { reason = friend_mundburgian target = scope:mundburgian_friend }
	}
}

# Become rivals with local ruler
scripted_trigger mundburgian_2004_local_ruler_rival_trigger = {	
	is_ai = yes
	opinion = {
		target = root
		value < 0
	}
	reverse_opinion = {
		target = root
		value < 0
	}
	NOR = {
		this = root
		has_relation_friend = root
		has_relation_lover = root
	}
}

mundburgian.2004 = {
	hidden = yes

	trigger = {
		has_character_flag = is_currently_mundburgian
		# Only if you don't have any rival
		any_relation = {
			type = rival
			always = no
		}
		exists = host
		host = {
			any_vassal = {
				mundburgian_2004_local_ruler_rival_trigger = yes
			}
		}
	}

	immediate = {
		host = {
			random_vassal = {
				limit = {
					mundburgian_2004_local_ruler_rival_trigger = yes
				}
				weight = {
					base = 1
					opinion_modifier = {
						opinion_target = root
						multiplier = 0.1 # +10 at 100
					}
					modifier = {
						add = 10
						has_relation_potential_friend = root
					}
				}
				save_scope_as = mundburgian_friend
			}
		}
		set_relation_rival = { reason = rival_mundburgian target = scope:mundburgian_friend }
	}
}

# Marry Lover
scripted_trigger mundburgian_2005_lover_to_marry = {
	is_ai = yes
	is_married = no
	can_marry_character_trigger = {
		CHARACTER = root
	}
	OR = {
		is_in_the_same_court_as_or_guest = root
		top_liege = root.host
		AND = {
			exists = host
			host.top_liege = root.host
		}
	}
}

scripted_trigger mundburgian_2005_should_marry_this_character_matrilineally = {
	is_female = yes
	OR = {
		AND = {
			is_landed = yes
			$OTHER_CHARACTER$ = { # Not if they are heir to anything
				any_heir_title = {
					always = no
				}
			}
		}
		AND = {
			faith = {
				has_doctrine = doctrine_gender_female_dominated
			}
			$OTHER_CHARACTER$ = {
				faith = {
					OR = {
						has_doctrine = doctrine_gender_female_dominated
						has_doctrine = doctrine_gender_equal
					}
				}
			}
		}
	}
}

mundburgian.2005 = {
	hidden = yes

	trigger = {
		has_character_flag = is_currently_mundburgian
		is_married = no
		any_relation = {
			type = lover
			mundburgian_2005_lover_to_marry = yes
		}
	}

	immediate = {
		random_relation = {
			type = lover
			limit = {
				mundburgian_2005_lover_to_marry = yes
			}
			save_scope_as = lover_to_marry
		}
		if = {
			limit = {
				OR = {
					mundburgian_2005_should_marry_this_character_matrilineally = { OTHER_CHARACTER = scope:lover_to_marry }
					scope:lover_to_marry = {
						mundburgian_2005_should_marry_this_character_matrilineally = { OTHER_CHARACTER = root }
					}
				}
			}
			marry_matrilineal = scope:lover_to_marry
		}
		else = {
			marry = scope:lover_to_marry
		}
		set_variable = {
			name = spouse_from_mundburgian_eored
			value = scope:lover_to_marry
		}
	}
}

# Get Murdered
# mundburgian.2006

# Liege - notification they were murdered

# Get Wounded
mundburgian.2008 = {
	hidden = yes

	trigger = {
		has_character_flag = is_currently_mundburgian
		NOR = {
			has_trait = wounded
			has_character_flag = had_severe_injury_in_mundburgian_eored
		}
	}

	immediate = {
		add_character_flag = had_severe_injury_in_mundburgian_eored
		random_list = {
			10 = {
				increase_wounds_effect = { REASON = fight }
				increase_wounds_effect = { REASON = fight }
			}
			5 = {
				increase_wounds_effect = { REASON = fight }
				increase_wounds_effect = { REASON = fight }
				increase_wounds_effect = { REASON = fight }
			}
			5 = {
				trigger = {
					NOT = { has_trait = one_eyed }
				}
				add_trait = one_eyed
			}
			5 = {
				trigger = {
					NOT = { has_trait = one_legged }
				}
				add_trait = one_legged
			}
			# 2 = { #LotR
			# 	trigger = {
			# 		NOT = {
			# 			has_trait = eunuch
			# 			is_male = yes
			# 		}
			# 	}
			# 	add_trait = eunuch
			# }
			2 = {
				trigger = {
					NOT = {
						has_trait = blind
						is_male = yes
					}
				}
				add_trait = blind
			}
		}
	}
}

# Get Killed in battle
# mundburgian.2009

# Liege - notification they were killed
# mundburgian.2010

# Become lover with a local
scripted_trigger mundburgian_2011_local_lover_trigger = {
	is_ai = yes
	is_adult = yes
	is_attracted_to_gender_of = root
	root = {
		is_attracted_to_gender_of = prev
	}
	save_temporary_scope_as = potential_cheater
	OR = {
		is_married = no
		any_spouse = {
			count = all
			save_temporary_scope_as = partner
			scope:potential_cheater = { might_cheat_on_partner_trigger = { PARTNER = scope:partner } }
		}
	}
	NOR = {
		this = root
		has_relation_rival = root
		has_relation_lover = root
	}
	opinion = {
		target = root
		value > 10
	}
	reverse_opinion = {
		target = root
		value > 0
	}
}

mundburgian.2011 = {
	hidden = yes

	trigger = {
		has_character_flag = is_currently_mundburgian
		exists = host
	}

	immediate = {
		random_list = {
			10 = { # Find someone suitable
				trigger = {
					host = {
						OR = {
							mundburgian_2011_local_lover_trigger = yes
							any_courtier = {
								mundburgian_2011_local_lover_trigger = yes
							}
							any_vassal = {
								mundburgian_2011_local_lover_trigger = yes
								any_courtier = {
									mundburgian_2011_local_lover_trigger = yes
								}
							}
						}
					}
				}
				host = {
					if = {
						limit = { mundburgian_2011_local_lover_trigger = yes }
						add_to_list = potential_lover
					}
					every_courtier = {
						limit = { mundburgian_2011_local_lover_trigger = yes }
						add_to_list = potential_lover
					}
					every_vassal = {
						if = {
							limit = { mundburgian_2011_local_lover_trigger = yes }
							add_to_list = potential_lover
						}
						every_courtier = {
							limit = { mundburgian_2011_local_lover_trigger = yes }
							add_to_list = potential_lover
						}
					}
				}
				random_in_list = {
					list = potential_lover
					weight = {
						base = 1
						modifier = {
							add = 5
							is_landed = no
						}
					}
					save_scope_as = lover
				}
			}
			10 = { # Create a beautiful peasant
				create_character = {
					template = beautiful_peasant_character
					age = { age_compared_to_root_minus_ten_always_adult age_compared_to_root_plus_ten_always_adult }
					gender_female_chance = root_attraction_based_female_chance
					employer = root.host
					faith = root.host.faith
					culture = root.host.culture
					save_scope_as = lover
				}
			}
			10 = { # Create a noble
				create_character = {
					template = pool_repopulate_spouse
					age = { age_compared_to_root_minus_ten_always_adult age_compared_to_root_plus_ten_always_adult }
					gender_female_chance = root_attraction_based_female_chance
					employer = root.host
					faith = root.host.faith
					culture = root.host.culture
					dynasty = generate
					save_scope_as = lover
				}
			}
			5 = { # Create a witch
				create_character = {
					template = witchy_template
					age = { age_compared_to_root_minus_ten_always_adult age_compared_to_root_plus_ten_always_adult }
					gender_female_chance = root_attraction_based_female_chance
					employer = root.host
					faith = root.host.faith
					culture = root.host.culture
					save_scope_as = lover
				}
			}
			5 = { # Create a witch with a Dyansty
				create_character = {
					template = witchy_template
					age = { age_compared_to_root_minus_ten_always_adult age_compared_to_root_plus_ten_always_adult }
					gender_female_chance = root_attraction_based_female_chance
					employer = root.host
					faith = root.host.faith
					culture = root.host.culture
					dynasty = generate
					save_scope_as = lover
				}
			}
		}
		set_relation_lover = { reason = lover_mundburgian_local target = scope:lover }
	}
}

# Increase Prowess
mundburgian.2012 = {
	hidden = yes

	trigger = {
		has_character_flag = is_currently_mundburgian
		NOT = { has_character_flag = mundburgian_recently_increased_prowess }
	}

	weight_multiplier = {
		base = 1
		compare_modifier = { # Reduce chance for each current Prowess over 15
			value = prowess
			multiplier = -0.1
			offset = -15
			trigger = {
				prowess > 15
			}
		}
	}

	immediate = {
		add_character_flag = {
			flag = mundburgian_recently_increased_prowess
			years = 2
		}
		add_prowess_skill = 1
	}
}

# Increase Martial
mundburgian.2013 = {
	hidden = yes

	trigger = {
		has_character_flag = is_currently_mundburgian
		NOT = { has_character_flag = mundburgian_recently_increased_martial }
	}

	weight_multiplier = {
		base = 1
		compare_modifier = { # Reduce chance for each current martial over 15
			value = martial
			multiplier = -0.1
			offset = -15
			trigger = {
				martial > 15
			}
		}
	}

	immediate = {
		add_character_flag = {
			flag = mundburgian_recently_increased_martial
			years = 2
		}
		add_martial_skill = 1
	}
}

# Increase Learning
mundburgian.2014 = {
	hidden = yes

	trigger = {
		has_character_flag = is_currently_mundburgian
		NOT = { has_character_flag = mundburgian_recently_increased_learning }
	}

	weight_multiplier = {
		base = 1
		compare_modifier = { # Reduce chance for each current learning over 15
			value = learning
			multiplier = -0.1
			offset = -15
			trigger = {
				learning > 15
			}
		}
	}

	immediate = {
		add_character_flag = {
			flag = mundburgian_recently_increased_learning
			years = 2
		}
		add_learning_skill = 1
	}
}

# Increase Diplomacy
mundburgian.2015 = {
	hidden = yes

	trigger = {
		has_character_flag = is_currently_mundburgian
		NOT = { has_character_flag = mundburgian_recently_increased_diplomacy }
	}

	weight_multiplier = {
		base = 1
		compare_modifier = { # Reduce chance for each current diplomacy over 15
			value = diplomacy
			multiplier = -0.1
			offset = -15
			trigger = {
				diplomacy > 15
			}
		}
	}

	immediate = {
		add_character_flag = {
			flag = mundburgian_recently_increased_diplomacy
			years = 2
		}
		add_diplomacy_skill = 1
	}
}

# Become Brave
mundburgian.2016 = {
	hidden = yes

	trigger = {
		has_character_flag = is_currently_mundburgian
		OR = {
			has_trait = craven
			has_trait = lazy
			has_trait = content
		}
		NOT = { has_trait = brave }
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		if = {
			limit = { has_trait = craven }
			remove_trait = craven
		}
		else_if = {
			limit = { has_trait = lazy }
			remove_trait = lazy
		}
		else = {
			limit = { has_trait = content }
			remove_trait = content
		}
		add_trait = brave
	}
}

# Become Ambitious
mundburgian.2017 = {
	hidden = yes

	trigger = {
		has_character_flag = is_currently_mundburgian
		OR = {
			has_trait = craven
			has_trait = lazy
			has_trait = content
		}
		NOT = { has_trait = ambitious }
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		if = {
			limit = { has_trait = content }
			remove_trait = content
		}
		else_if = {
			limit = { has_trait = lazy }
			remove_trait = lazy
		}
		else = {
			limit = { has_trait = craven }
			remove_trait = craven
		}
		add_trait = ambitious
	}
}

# Become Diligent
mundburgian.2018 = {
	hidden = yes

	trigger = {
		has_character_flag = is_currently_mundburgian
		OR = {
			has_trait = craven
			has_trait = lazy
			has_trait = content
		}
		NOT = { has_trait = diligent }
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		if = {
			limit = { has_trait = lazy }
			remove_trait = lazy
		}
		else_if = {
			limit = { has_trait = diligent }
			remove_trait = diligent
		}
		else = {
			limit = { has_trait = craven }
			remove_trait = craven
		}
		add_trait = diligent
	}
}
