namespace = elven_racial

elven_racial.0011 = { # Forced conversion to elven government type
	scope = none
	hidden = yes
	
	trigger = {
		is_elf = yes
		NOT = { government_has_flag = government_is_elven }
	}

	immediate = {
		change_government = elven_government
	}
}

## Game Start - Elven mechanics setup

elven_racial.0009 = { #Fired for every character at game start
	scope = none
	hidden = yes
	
	immediate = {
		# Doing this will supposedly trigger the `on_natural_death_second_chance`
		# that will prevent death and send major elves to Tirion's court
		# and minor elves will get a "sailed_west" specific natural death 
		if = {
			limit = {
				is_elf = yes
				NOT = {
					has_perk = know_thyself_perk
				}
			}
			add_perk = know_thyself_perk 
		}		
		if = {
			limit = {
				is_elf = yes
				any_child = { 
					count = all
					age < 350
				}
			}
			#Do Nothing - these guys may still have children
		}
		else_if = {
			limit = {
				is_elf = yes
				any_child = { 
					count = all
					age >= 350
				}
			}
			#Otherwise if any kid is over 350, they're done with childbirth
			add_character_modifier = elf_child_limit_modifier
		}
		
		if = {
			limit = {
				is_elf = yes
				any_spouse = {
					count > 0
				}
			}
			if = {
				limit = { NOT = { has_relation_soulmate = primary_spouse } }
				set_relation_soulmate = primary_spouse
			}
		}
	}
}

elven_racial.0100 = { #Correct historical elf ages
	scope = none
	hidden = yes
	
	immediate = {
		### The Noldor ###
		# Finwe, his children, and their spouses
		character:linefinwe1 = { # Finwe
			change_age = 3979
		}
		character:linefinwe7 = { # Miriel
			change_age = 882
		}
		character:linefinwe2 = { # Feanor
			change_age = 3170
		}
		character:linefinwe8 = { # Mahtan, father of Nerdanel
			change_age = 3835
		}
		character:linefinwe9 = { # Nerdanel
			change_age = 3112
		}
		character:linefinwe3 = { # Findis
			change_age = 3016
		}
		character:linefinwe4 = { # Fingolfin
			change_age = 2968
		}
		character:linefinwe19 = { # Anaire, wife of Fingolfin
			change_age = 2777
		}
		character:linefinwe5 = { # Lalwen
			change_age = 2931
		}
		character:linefinwe6 = { # Finarfin
			change_age = 2873
		}
		
		# House of Feanor
		character:linefinwe10 = { # Maedhros
			change_age = 2087
		}
		character:linefinwe11 = { # Maglor
			change_age = 1915
		}
		character:linemaglorwife  = { # Maglor's wife, Lindissë
			change_age = 1922
		}
		character:linefinwe12 = { # Celegorm
			change_age = 1886
		}
		character:linefinwe13 = { # Caranthir
			change_age = 1819
		}
		character:linecaranthirwife = { # Ailinel, wife of Caranthir
			change_age = 1423
		}
		character:linefinwe14 = { # Curufin
			change_age = 1771
		}
		character:linefinwe15 = { # Amrod
			change_age = 1531
		}
		character:linefinwe16 = { # Amras
			change_age = 1531
		}
		character:linefinwe17 = { # Almare, wife of Curufin
			change_age = 1771
		}
		character:linefinwe18 = { # Celebrimbor
			change_age = 621
		}
		
		# House of Fingolfin
		character:linefinwe20 = { # Fingon
			change_age = 2106
		}
		character:linefinwe21 = { # Turgon
			change_age = 1914
		}
		character:linefinwe22 = { # Aredhel
			change_age = 1290
		}
		character:linefinwe23 = { # Argon
			change_age = 1110
		}
		
		# House of Finarfin
		character:linefinwe33 = { # Finrod
			change_age = 1914
		}
		character:linefinwe34 = { # Angrod
			change_age = 1704
		}
		character:linefinwe35 = { # Aegnor
			change_age = 1500
		}
		character:linefinwe36 = { # Galadriel
			change_age = 1290
		}
		
		# Elu Thingol and the Sindar
		character:lineofelwe3 = { # Elu Thingol
			change_age = 3915
		}
		character:lineofelwe4 = { # Luthien
			change_age = 2874
		}
		character:lineofolwe1 = { # Olwe
			change_age = 3905
		}
		character:lineofolwe2 = { # Tinelun, Olwe's Wife
			change_age = 3895
		}
		character:lineofolwe3 = { # Eärwë, first prince of Alqualonde
			change_age = 2884
		}
		character:lineofolwe4 = { # Elulindo, second prince of Alqualonde
			change_age = 2803
		}
		character:lineofolwe5 = { # Eärwen, wife of Finarfin
			change_age = 2754
		}
		character:lineofelmo1 = { # Elmo of Doriath
			change_age = 3893
		}
		character:lineofelmo2 = { # Wife of Elmo
			change_age = 3866
		}
		character:lineofelmo3 = { # Galadhon, son of Elmo
			change_age = 1983
		}
		character:lineofelmo4 = { # Alafwen, Wife of Galadhon
			change_age = 2003
		}
		character:lineofelmo5 = { # Celeborn, husband of Galadriel
			change_age = 1101
		}
		character:lineofelmo6 = { # Galathil, father of Nimloth
			change_age = 1054
		}
		character:lineofelmo7 = { # Lalorniel, wife of Galathil
			change_age = 1066
		}
		
		# Cirdan
		character:lineofcirdan = { # Cirdan, Lord of the Havens
			change_age = 3855
		}
		
		# Amdir of Lorien
		character:lineofamdir1 = { # Amdír, King of Lórinand
			change_age = 994
		}
		
		# Ingwe and the Vanyar
		character:lineofingwe1 = { # Imin, first-awoken of the Elves
			change_age = 4310
		}
		character:lineofingwe2 = { # Iminye, wife of Imin
			change_age = 4309
		}
		character:lineofingwe3 = { # Ingwe, King of the Vanyar
			change_age = 3995
		}
		character:lineofingwe4 = { # Iliniel, wife of Ingwe
			change_age = 3993
		}
		character:lineofingwe5 = { # Ingwion, Prince of the Vanyar
			change_age = 3340
		}
		character:lineofingwe6 = { # Vanimelde, Princess of the Vanyar
			change_age = 2441
		}
		character:lineofingwe7 = { # Indiel, sister of Ingwe
			change_age = 3865
		}
		character:lineofingwe8 = { # Istawe, husband of Indiel, father of Indis
			change_age = 3925
		}
		character:lineofingwe9 = { # Indis, second wife of Finwe
			change_age = 3246
		}
		character:lineoamarie = { # Amarie, beloved of Finrod
		 	change_age = 2106
		}

		# Vanity characters
		character:lineofnacilionvector = { # Vector
			change_age = 1977
		}
	
		
		# Also throwing in Immortals here because
		character:lineofsauron = { # Sauron
			change_age = 14373 # not counting 33,537 years of the Lamps due it causing an overflow error 
		}
		character:lineofsaruman = { # Saruman
			change_age = 14373 # not counting 33,537 years of the Lamps due it causing an overflow error 
		}
		character:lineofgandalf = { # Gandalf
			change_age = 14373 # not counting 33,537 years of the Lamps due it causing an overflow error 
		}
		character:lineofradagast = { # Radagast
			change_age = 14373 # not counting 33,537 years of the Lamps due it causing an overflow error 
		}
		character:lineofmelian = { # Melian
			change_age = 14373 # not counting 33,537 years of the Lamps due it causing an overflow error 
		}
		#character:lineofeonwe = { # Eonwe
		#	change_age = 14373 # not counting 33,537 years of the Lamps due it causing an overflow error 
		#}
	}
}

elven_racial.0102 = { #Ruler Design Elf Age Set
	content_source = realms_dlc
	type = character_event
	title = elven_racial.0102.t
	desc = elven_racial.0102.desc
	theme = realm
		
	left_portrait = {
		character = root
		animation = personality_bold
	}

	immediate = {
		hidden_effect = {
			initialise_elven_holdings = yes
			change_government = elven_government
		}
	}

	option = { # Third Age
		name = elven_racial.0102.a
		custom_tooltip = {
			text = elven_racial.0102.a.tt
			set_age = { 120 2999 }
		}
	}

	option = { # Second Age
		name = elven_racial.0102.b
		custom_tooltip = {
			text = elven_racial.0102.b.tt
			set_age = { 3000 6440 }
		}
	}

	option = { # First Age
		name = elven_racial.0102.c
		custom_tooltip = {
			text = elven_racial.0102.c.tt
			set_age = { 6441 7030 }
		}
	}

	option = { # Age of the Trees
		name = elven_racial.0102.d
		custom_tooltip = {
			text = elven_racial.0102.d.tt
			set_age = 7031
		}
	}
	option = { # Unchanged
		name = elven_racial.0102.e
		custom_tooltip = elven_racial.0102.e.tt
	}
}

## Elven Pregnancy

elven_racial.0001 = { #Start trying for a child
	content_source = realms_dlc
	type = character_event
	title = elven_racial.0001.t
	desc = elven_racial.0001.desc
	theme = pregnancy
		
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = primary_spouse
		animation = happiness
	}
	
	option = { # Fingers crossed!
		name = elven_racial.0001.a
		trigger_event = { #Successful
			id = elven_racial.0002 
			days = { 180 720 }
		}
	}
}

elven_racial.0002 = { #Pregnant!
	content_source = realms_dlc
	type = character_event
	title = elven_racial.0002.t
	desc = elven_racial.0002.desc
	theme = pregnancy
		
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = primary_spouse
		animation = happiness
	}
	
	option = { # Here we go!
		name = elven_racial.0002.a
		add_trait = elf_pregnant_1
		primary_spouse = { add_trait = elf_pregnant_1 }
		if = {
			limit = {
				is_female = yes
			}
			save_scope_as = mother
			primary_spouse = { save_scope_as = father }
		}
		else = {
			save_scope_as = father
			primary_spouse = { save_scope_as = mother }
		}
		hidden_effect = {
			random_list = {
				99 = {
					trigger_event = {
						id = elven_racial.0006 #Single baby
						days = { 2904 3576 } #Target 9 years, human sd of births is c. 14 days therefore 95% occur within +/- 28days. Elven gestation 12 times longer so +/- 336 for elves. i.e. 8-10 years about
					}
				}
				1 = {
					trigger_event = {
						id = elven_racial.0007 #Twins
						days = { 2904 3576 } #Target 9 years, human sd of births is c. 14 days therefore 95% occur within +/- 28days. Elven gestation 12 times longer so +/- 336 for elves. i.e. 8-10 years about
					}
				}
			}
			scope:mother = {
				set_variable = {
					name = year_became_pregnant
					value = current_year
				}
			}
		}
		trigger_event = { # Focused Fea
			id = elven_racial.0003
			days = { 180 270 }
		}		
		primary_spouse = { #Set up more child willingness model if not exists 
			if = {
				limit = { 
					NOT = { has_variable = more_children_willingness }
				}
				if = {
					limit = {
						OR = {
							dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
							root.dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
						}
					}
					set_variable = {
						name = more_children_willingness
						value = { 50 150 }
					}
				}
				else = {
					set_variable = {
						name = more_children_willingness
						value = { 10 115 }
					}
				}
			}
		}
	}
}

elven_racial.0003 = { #First focused fea
	content_source = realms_dlc
	type = character_event
	title = elven_racial.0003.t
	desc = elven_racial.0003.desc
	theme = pregnancy
		
	left_portrait = {
		character = root
		animation = love
	}
	right_portrait = {
		character = primary_spouse
		animation = happiness
	}
	
	option = { # We shall focus our energies
		name = elven_racial.0003.a
		if = {
			limit = {
				OR = {
					dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
					root.dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
				}
			}
			custom_tooltip = current_fea
			custom_tooltip = fea_cost_5
		}
		add_character_flag = focused_fea_1
		change_trait_rank = { 
			trait = elf_pregnant 
			rank = 1
		}
		primary_spouse = { 
			change_trait_rank = { 
				trait = elf_pregnant 
				rank = 1
			}
			change_variable = { #Subtract willingness for additional effort involved
				name = more_children_willingness
				subtract = 5
			}
		}
		trigger_event = {
			id = elven_racial.0004 
			days = { 270 360 }
		}
		ai_chance = {
			base = 80
		}
	}
	
	option = { # We shall enjoy this special time
		name = elven_racial.0003.b
		if = {
			limit = {
				OR = {
					dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
					root.dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
				}
			}
			custom_tooltip = current_fea
		}
		ai_chance = {
			base = 20
		}
	}
}

elven_racial.0004 = { #Second focused fea
	content_source = realms_dlc
	type = character_event
	title = elven_racial.0004.t
	desc = elven_racial.0004.desc
	theme = pregnancy
		
	left_portrait = {
		character = root
		animation = love
	}
	right_portrait = {
		character = primary_spouse
		animation = happiness
	}
	
	option = { # We shall focus our energies
		name = elven_racial.0004.a
		if = {
			limit = {
				OR = {
					dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
					root.dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
				}
			}
			custom_tooltip = current_fea
			custom_tooltip = fea_cost_10
		}
		add_character_flag = focused_fea_2
		remove_character_flag = focused_fea_1
		change_trait_rank = { 
			trait = elf_pregnant 
			rank = 1
		}
		primary_spouse = { 
			change_trait_rank = { 
				trait = elf_pregnant 
				rank = 1
			}
			change_variable = { #Subtract willingness for additional effort involved
				name = more_children_willingness
				subtract = 10
			}
		}
		trigger_event = {
			id = elven_racial.0005 
			days = { 270 360 }
		}
		ai_chance = {
			base = 60
		}
	}
	
	option = { # We shall enjoy this special time
		name = elven_racial.0004.b
		if = {
			limit = {
				OR = {
					dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
					root.dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
				}
			}
			custom_tooltip = current_fea
		}
		ai_chance = {
			base = 40
		}
	}
}

elven_racial.0005 = { #Final focused fea
	content_source = realms_dlc
	type = character_event
	title = elven_racial.0005.t
	desc = elven_racial.0005.desc
	theme = pregnancy
		
	left_portrait = {
		character = root
		animation = love
	}
	right_portrait = {
		character = primary_spouse
		animation = happiness
	}
	
	option = { # We shall focus our energies
		name = elven_racial.0005.a
		if = {
			limit = {
				OR = {
					dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
					root.dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
				}
			}
			custom_tooltip = current_fea
			custom_tooltip = fea_cost_15
		}
		add_character_flag = focused_fea_3
		remove_character_flag = focused_fea_2
		change_trait_rank = { 
			trait = elf_pregnant 
			rank = 1
		}
		primary_spouse = { 
			change_trait_rank = { 
				trait = elf_pregnant 
				rank = 1
			}
			change_variable = { #Subtract willingness for additional effort involved
				name = more_children_willingness
				subtract = 15
			}
		}
		ai_chance = {
			base = 40
		}
	}
	
	option = { # We shall enjoy this special time
		name = elven_racial.0005.b
		if = {
			limit = {
				OR = {
					dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
					root.dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
				}
			}
			custom_tooltip = current_fea
		}
		ai_chance = {
			base = 60
		}
	}
}

elven_racial.0006 = { #Birth - single baby
	content_source = realms_dlc
	type = character_event
	title = elven_racial.0006.t
	desc = elven_racial.0006.desc
	theme = pregnancy
		
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = primary_spouse
		animation = happiness
	}
	lower_center_portrait = {
		character = scope:child
		animation = happiness
	}

	immediate = {
		#play_music_cue_once = { TRACK = mx_cue_birth }
		scope:mother = {
			remove_variable = year_became_pregnant
		}
		if = {
			limit = { 
				is_female = yes
				matrilinear_marriage = yes
			}			
			create_character = {
				dynasty_house = root.house
				faith = root.faith
				culture = root.culture				
				gender_female_chance = 50
				age = 0
				mother = root
				father = primary_spouse
				employer = root
				save_scope_as = child
			}
		}
		else_if = {
			limit = { 
				is_male = yes
				matrilinear_marriage = yes
			}			
			create_character = {
				dynasty_house = primary_spouse.house
				faith = root.faith
				culture = root.culture				
				gender_female_chance = 50
				age = 0
				mother = primary_spouse
				father = root
				employer = root
				save_scope_as = child
			}
		}
		else_if = {
			limit = { 
				is_female = yes
				matrilinear_marriage = no
			}			
			create_character = {
				dynasty_house = primary_spouse.house
				faith = root.faith
				culture = root.culture				
				gender_female_chance = 50
				age = 0
				mother = root
				father = primary_spouse
				employer = root
				save_scope_as = child
			}
		}
		else = {		
			create_character = {
				dynasty_house = root.house
				faith = root.faith
				culture = root.culture				
				gender_female_chance = 50
				age = 0
				mother = primary_spouse
				father = root
				employer = root
				save_scope_as = child
			}
		}
		if = {
			limit = { 
				has_character_flag = focused_fea_1
			}
			remove_character_flag = focused_fea_1
			hidden_effect = {
				scope:child = {
					random_list = {
						50 = { add_diplomacy_skill = 1 }
						50 = { add_diplomacy_skill = 2 }
					}
					random_list = {
						50 = { add_martial_skill = 1 }
						50 = { add_martial_skill = 2 }
					}
					random_list = {
						50 = { add_stewardship_skill = 1 }
						50 = { add_stewardship_skill = 2 }
					}
					random_list = {
						50 = { add_intrigue_skill = 1 }
						50 = { add_intrigue_skill = 2 }
					}
					random_list = {
						50 = { add_learning_skill = 1 }
						50 = { add_learning_skill = 2 }
					}
					random_list = {
						50 = { add_prowess_skill = 1 }
						50 = { add_prowess_skill = 2 }
					}
				}
				remove_trait = elf_pregnant_2
				primary_spouse = { remove_trait = elf_pregnant_2 }
			}
		}
		else_if = {
			limit = { 
				has_character_flag = focused_fea_2
			}
			remove_character_flag = focused_fea_2
			hidden_effect = {
				scope:child = {
					random_list = {
						50 = { add_diplomacy_skill = 2 }
						50 = { add_diplomacy_skill = 3 }
					}
					random_list = {
						50 = { add_martial_skill = 2 }
						50 = { add_martial_skill = 3 }
					}
					random_list = {
						50 = { add_stewardship_skill = 2 }
						50 = { add_stewardship_skill = 3 }
					}
					random_list = {
						50 = { add_intrigue_skill = 2 }
						50 = { add_intrigue_skill = 3 }
					}
					random_list = {
						50 = { add_learning_skill = 2 }
						50 = { add_learning_skill = 3 }
					}
					random_list = {
						50 = { add_prowess_skill = 2 }
						50 = { add_prowess_skill = 3 }
					}
				}
				remove_trait = elf_pregnant_3
				primary_spouse = { remove_trait = elf_pregnant_3 }
			}
		}
		else_if = {
			limit = { 
				has_character_flag = focused_fea_3
			}
			remove_character_flag = focused_fea_3
			hidden_effect = {
				scope:child = {
					random_list = {
						50 = { add_diplomacy_skill = 3 }
						50 = { add_diplomacy_skill = 5 }
					}
					random_list = {
						50 = { add_martial_skill = 3 }
						50 = { add_martial_skill = 5 }
					}
					random_list = {
						50 = { add_stewardship_skill = 3 }
						50 = { add_stewardship_skill = 5 }
					}
					random_list = {
						50 = { add_intrigue_skill = 3 }
						50 = { add_intrigue_skill = 5 }
					}
					random_list = {
						50 = { add_learning_skill = 3 }
						50 = { add_learning_skill = 5 }
					}
					random_list = {
						50 = { add_prowess_skill = 3 }
						50 = { add_prowess_skill = 5 }
					}
				}
				remove_trait = elf_pregnant_4
				primary_spouse = { remove_trait = elf_pregnant_4 }
			}
		}
		else = {
			remove_trait = elf_pregnant_1
			primary_spouse = { remove_trait = elf_pregnant_1 }
		}
		if = {
			limit = {
				any_child = {
					count = 1
				}
			}
			create_character_memory = {
				type = first_born			
				participants = {
					child = scope:child
				}
			}
		}
		else = {
			create_character_memory = {
				type = child_born			
				participants = {
					child = scope:child
				}
			}
		}
		primary_spouse = {
			if = {
				limit = {
					any_child = {
						count = 1
					}
				}
				create_character_memory = {
					type = first_born			
					participants = {
						child = scope:child
					}
				}
			}
			else = {
				create_character_memory = {
					type = child_born			
					participants = {
						child = scope:child
					}
				}
			}
		}
		add_character_modifier = {
			modifier = elf_childraising_modifier
			years = 50
		}
		primary_spouse = { 
			remove_character_flag = elf_childbirth_ongoing
			add_character_modifier = {
				modifier = elf_childraising_modifier
				years = 50
			}
			change_variable = { #Reduce willingness for effort of childbirth
				name = more_children_willingness
				subtract = { 25 35 }
			}
		}
		remove_character_flag = elf_childbirth_ongoing
	}

	widgets = {
		widget = {
			is_shown = {
				allow_naming_on_birth_of_child_trigger = { CHILD = scope:child }
			}
			gui = "event_window_widget_name_child"
			container = "dynamic_birth_name"
			controller = name_character
			setup_scope = { scope:child = { save_scope_as = name_character_target } }
		}
	}
	
	option = { # A baby!
		name = elven_racial.0006.a
		if = {
			limit = {
				OR = {
					dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
					root.dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
				}
			}
			custom_tooltip = current_fea
		}
		trigger_event = {
			id = elven_racial.0008 
			months = 1
		}
	}
}

elven_racial.0007 = { #Birth - twins
	content_source = realms_dlc
	type = character_event
	title = elven_racial.0007.t
	desc = elven_racial.0007.desc
	theme = pregnancy
		
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = primary_spouse
		animation = happiness
	}
	lower_left_portrait = {
		character = scope:child
		animation = happiness
	}
	lower_right_portrait = {
		character = scope:child_2
		animation = happiness
	}

	immediate = {
		#play_music_cue_once = { TRACK = mx_cue_birth }
		scope:mother = {
			remove_variable = year_became_pregnant
		}
		if = {
			limit = { is_female = yes }			
			create_character = {
				dynasty_house = root.house
				faith = root.faith
				culture = root.culture				
				gender_female_chance = 50
				age = 0
				mother = root
				father = primary_spouse
				employer = root
				trait = twin
				save_scope_as = child
			}
			create_character = {
				dynasty_house = root.house
				faith = root.faith
				culture = root.culture				
				gender_female_chance = 50
				age = 0
				mother = root
				father = primary_spouse
				employer = root
				trait = twin
				save_scope_as = child_2
			}
		}
		if = {
			limit = { is_male = yes }			
			create_character = {
				dynasty_house = root.house
				faith = root.faith
				culture = root.culture				
				gender_female_chance = 50
				age = 0
				mother = primary_spouse
				father = root
				employer = root
				trait = twin
				save_scope_as = child
			}
			create_character = {
				dynasty_house = root.house
				faith = root.faith
				culture = root.culture				
				gender_female_chance = 50
				age = 0
				mother = primary_spouse
				father = root
				employer = root
				trait = twin
				save_scope_as = child_2
			}
		}
		if = {
			limit = { 
				has_character_flag = focused_fea_1
			}
			remove_character_flag = focused_fea_1
			hidden_effect = {
				scope:child = {
					random_list = {
						50 = { add_diplomacy_skill = 1 }
						50 = { add_diplomacy_skill = 2 }
					}
					random_list = {
						50 = { add_martial_skill = 1 }
						50 = { add_martial_skill = 2 }
					}
					random_list = {
						50 = { add_stewardship_skill = 1 }
						50 = { add_stewardship_skill = 2 }
					}
					random_list = {
						50 = { add_intrigue_skill = 1 }
						50 = { add_intrigue_skill = 2 }
					}
					random_list = {
						50 = { add_learning_skill = 1 }
						50 = { add_learning_skill = 2 }
					}
					random_list = {
						50 = { add_prowess_skill = 1 }
						50 = { add_prowess_skill = 2 }
					}
				}
				scope:child_2 = {
					random_list = {
						50 = { add_diplomacy_skill = 1 }
						50 = { add_diplomacy_skill = 2 }
					}
					random_list = {
						50 = { add_martial_skill = 1 }
						50 = { add_martial_skill = 2 }
					}
					random_list = {
						50 = { add_stewardship_skill = 1 }
						50 = { add_stewardship_skill = 2 }
					}
					random_list = {
						50 = { add_intrigue_skill = 1 }
						50 = { add_intrigue_skill = 2 }
					}
					random_list = {
						50 = { add_learning_skill = 1 }
						50 = { add_learning_skill = 2 }
					}
					random_list = {
						50 = { add_prowess_skill = 1 }
						50 = { add_prowess_skill = 2 }
					}
				}
				remove_trait = elf_pregnant_2
				primary_spouse = { remove_trait = elf_pregnant_2 }
			}
		}
		else_if = {
			limit = { 
				has_character_flag = focused_fea_2
			}
			remove_character_flag = focused_fea_2
			hidden_effect = {
				scope:child = {
					random_list = {
						50 = { add_diplomacy_skill = 2 }
						50 = { add_diplomacy_skill = 3 }
					}
					random_list = {
						50 = { add_martial_skill = 2 }
						50 = { add_martial_skill = 3 }
					}
					random_list = {
						50 = { add_stewardship_skill = 2 }
						50 = { add_stewardship_skill = 3 }
					}
					random_list = {
						50 = { add_intrigue_skill = 2 }
						50 = { add_intrigue_skill = 3 }
					}
					random_list = {
						50 = { add_learning_skill = 2 }
						50 = { add_learning_skill = 3 }
					}
					random_list = {
						50 = { add_prowess_skill = 2 }
						50 = { add_prowess_skill = 3 }
					}
				}
				scope:child_2 = {
					random_list = {
						50 = { add_diplomacy_skill = 2 }
						50 = { add_diplomacy_skill = 3 }
					}
					random_list = {
						50 = { add_martial_skill = 2 }
						50 = { add_martial_skill = 3 }
					}
					random_list = {
						50 = { add_stewardship_skill = 2 }
						50 = { add_stewardship_skill = 3 }
					}
					random_list = {
						50 = { add_intrigue_skill = 2 }
						50 = { add_intrigue_skill = 3 }
					}
					random_list = {
						50 = { add_learning_skill = 2 }
						50 = { add_learning_skill = 3 }
					}
					random_list = {
						50 = { add_prowess_skill = 2 }
						50 = { add_prowess_skill = 3 }
					}
				}
				remove_trait = elf_pregnant_3
				primary_spouse = { remove_trait = elf_pregnant_3 }
			}
		}
		else_if = {
			limit = { 
				has_character_flag = focused_fea_3
			}
			remove_character_flag = focused_fea_3
			hidden_effect = {
				scope:child = {
					random_list = {
						50 = { add_diplomacy_skill = 3 }
						50 = { add_diplomacy_skill = 5 }
					}
					random_list = {
						50 = { add_martial_skill = 3 }
						50 = { add_martial_skill = 5 }
					}
					random_list = {
						50 = { add_stewardship_skill = 3 }
						50 = { add_stewardship_skill = 5 }
					}
					random_list = {
						50 = { add_intrigue_skill = 3 }
						50 = { add_intrigue_skill = 5 }
					}
					random_list = {
						50 = { add_learning_skill = 3 }
						50 = { add_learning_skill = 5 }
					}
					random_list = {
						50 = { add_prowess_skill = 3 }
						50 = { add_prowess_skill = 5 }
					}
				}
				scope:child_2 = {
					random_list = {
						50 = { add_diplomacy_skill = 3 }
						50 = { add_diplomacy_skill = 5 }
					}
					random_list = {
						50 = { add_martial_skill = 3 }
						50 = { add_martial_skill = 5 }
					}
					random_list = {
						50 = { add_stewardship_skill = 3 }
						50 = { add_stewardship_skill = 5 }
					}
					random_list = {
						50 = { add_intrigue_skill = 3 }
						50 = { add_intrigue_skill = 5 }
					}
					random_list = {
						50 = { add_learning_skill = 3 }
						50 = { add_learning_skill = 5 }
					}
					random_list = {
						50 = { add_prowess_skill = 3 }
						50 = { add_prowess_skill = 5 }
					}
				}
				remove_trait = elf_pregnant_4
				primary_spouse = { remove_trait = elf_pregnant_4 }
			}
		}
		create_character_memory = {
			type = twins_born			
			participants = {
				child = scope:child
				child_2 = scope:child_2
			}
		}
		primary_spouse = {
			create_character_memory = {
				type = twins_born			
				participants = {
					child = scope:child
					child_2 = scope:child_2
				}
			}
		}
		remove_character_flag = elf_childbirth_ongoing
		add_character_modifier = {
			modifier = elf_childraising_modifier
			years = 50
		}
		primary_spouse = {
			remove_character_flag = elf_childbirth_ongoing
			add_character_modifier = {
				modifier = elf_childraising_modifier
				years = 50
			}
			change_variable = { #Reduce willingness for effort of childbirth
				name = more_children_willingness
				subtract = { 50 70 }
			}
		}
	}

	widgets = {
		widget = {
			is_shown = {
				allow_naming_on_birth_of_child_trigger = { CHILD = scope:child }
			}
			gui = "event_window_widget_name_child"
			container = "dynamic_birth_name"
			controller = name_character
			setup_scope = { scope:child = { save_scope_as = name_character_target } }
		}
		widget = {
			is_shown = {
				allow_naming_on_birth_of_child_trigger = { CHILD = scope:child_2 }
			}
			gui = "event_window_widget_name_child"
			container = "dynamic_birth_name"
			controller = name_character
			setup_scope = { scope:child_2 = { save_scope_as = name_character_target } }
		}
	}
	
	option = { # Two babies!
		name = elven_racial.0007.a	
		if = {
			limit = {
				OR = {
					dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
					root.dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
				}
			}
			custom_tooltip = current_fea
		}
		trigger_event = {
			id = elven_racial.0008 
			months = 1
		}
	}
}

elven_racial.0008 = { #Spouse no longer willing to have any children
	content_source = realms_dlc
	type = character_event
	title = elven_racial.0008.t
	desc = elven_racial.0008.desc
	theme = pregnancy
		
	left_portrait = {
		character = root
		animation = love
	}
	right_portrait = {
		character = primary_spouse
		animation = happiness
	}
	
	trigger = {
		primary_spouse = {
			var:more_children_willingness <= 0
		}
	}
	
	option = { # Wasn't it wonderful though?
		name = elven_racial.0008.a
		if = {
			limit = {
				OR = {
					dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
					root.dynasty = { has_dynasty_perk = lotr_elven_legacy_5 }
				}
			}
			custom_tooltip = current_fea
		}
		add_character_modifier = elf_child_limit_modifier
		primary_spouse = { 
			add_character_modifier = elf_child_limit_modifier
			remove_variable = more_children_willingness
		}
	}
}

## Elven CB Events

elven_racial.0200 = { # Vanquish Darkness CB - war start event to convert and end war
	content_source = realms_dlc
	type = character_event
	title = elven_racial.0200.t
	desc = elven_racial.0200.desc
	theme = war
		
	left_portrait = {
		character = root
		animation = war_defender
	}
	right_portrait = {
		character = scope:attacker
		animation = war_attacker
	}
	
	option = { # I yield!
		name = elven_racial.0001.a
		add_prestige = -250
		capital_county = {
			vanquish_darkness_generate_new_holder_culture_and_faith = yes
		}
		scope:attacker = {
			send_interface_toast = {
				title = elven_racial.0200.toast.t
				left_icon = scope:attacker
				right_icon = scope:defender
				scope:defender = {
					set_character_faith = scope:holder_faith
				}
			}
		}
		ai_chance = {
			base = 0
		}
	}

	option = { # Never!
		name = elven_racial.0200.a
		add_piety = 200
		ai_chance = {
			base = 100
		}
	}
}

## Elven Scheme Events

elven_racial.0300 = { # Reject non-elf romance and seduce attempts where chance is zero
	content_source = realms_dlc
	type = character_event
	title = elven_racial.0300.t
	desc = elven_racial.0300.desc
	theme = seduce_scheme
		
	left_portrait = {
		character = scope:owner
		animation = flirtation
	}
	right_portrait = {
		character = scope:target
		animation = dismissal
	}
	
	option = { # It is not meant to be
		name = elven_racial.0300.a
		custom_tooltip = seduce_outcome.blocked_from_seduction

		scope:target = { seduction_block_character_effect = { CHARACTER = scope:owner } }

		if = {
			limit = { exists = scope:scheme }
			scope:scheme = {
				end_scheme = yes
			}
		}
		
		reverse_add_opinion = {
			target = scope:target
			modifier = respect_opinion
			opinion = -25
		}
	}
}


## Elven guest management event

elven_racial.0400 = { #Elven guest management
	hidden = yes
	trigger = {
		is_elf = yes
		scope:host = { is_elf = no }
	}
	immediate = {
		if = {
			limit = { 
				or = {
					culture = { has_cultural_pillar = heritage_calaquendi }
					not = { exists = culture.culture_head }
				}
			}
			move_to_pool_at = title:k_imladris.holder.location
		}
		else = {
			move_to_pool_at = culture.culture_head.location
		}
	}
}

elven_racial.0500 = { #Introduction to Elven characters
	title = elven_racial.0500.t
	desc = elven_racial.0500.desc
	content_source = realms_dlc
	theme = realm
	
	left_portrait = {
		character = root
		animation = thinking
	}
	
	trigger = { is_elf = yes }
	
	option = { # All right, I get it
		name = elven_racial.0500.a
	}
}

elven_racial.0600 = { #Elven marriage handling
	hidden = yes
	
	trigger = {
		is_ai = yes
		NOT = { root = character:linefinwe30 } #Arwen
		is_married = no
		is_betrothed = no
	}
	
	immediate = {
		random_relation = {
			type = soulmate
			save_scope_as = soulmate
		}
		if = {
			limit = { 
				scope:soulmate = { is_ai = yes } 
				lotr_marriage_to_allowed = { TARGET = scope:soulmate }
			}
			if = {
				limit = {
					has_dlc_feature = tours_and_tournaments
					has_dlc_feature = advanced_activities
					OR = {
						is_close_family_of = root.liege
						scope:soulmate = { is_close_family_of = scope:soulmate.liege }
					}
					NOT = { has_character_flag = elven_marriage_delayed }
				}
				add_character_flag = elven_marriage_delayed
				trigger_event = {
					id = elven_racial.0600
					years = 1
				}
			}
			else = {
				if = {
					limit = { has_character_flag = elven_marriage_delayed }
					remove_character_flag = elven_marriage_delayed
				}
				marry = scope:soulmate
			}
		}
	}
}