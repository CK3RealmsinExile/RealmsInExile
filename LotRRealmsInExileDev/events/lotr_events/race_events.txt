namespace = race

# Maintenance event for various races, converting culture, adding traits, etc.
#	race.0001	conversion for chaplains

race.0001 = {
	hidden = yes

	trigger = {
		is_from_ruler_designer = no
		OR = {
			not_valar = yes
			not_nazgul = yes
			not_istari = yes
			not_istari_evil = yes
			not_maiar = yes
			not_maiar_fallen = yes
		}
	}


	immediate = {
		if = {
			limit = {
				not_nazgul = yes
			}
			set_culture = culture:ungurhai
		}
		else_if = {
			limit = {
				not_istari = yes
			}
			if = {
				limit = { is_landed = yes }
				set_culture = root.capital_province.culture
				set_character_faith = root.capital_province.faith
			}
			else_if = {
				limit = {
					NOR = {
						this = character:lineofsaruman
						this = character:lineofradagast
						this = character:lineofgandalf
					}
				}
				set_culture = root.capital_province.culture
				set_character_faith = root.capital_province.faith
			}
		}
		else_if = {
			limit = {
				not_istari_evil = yes
			}
			set_culture = culture:isengard_urukhai
		}
		else_if = {
			limit = {
				not_maiar = yes
			}
			if = {
				limit = { is_landed = yes }
				set_culture = root.capital_province.culture
				set_character_faith = root.capital_province.faith
			}
			else_if = {
				limit = {
					NOR = {
						this = character:lineofsaruman
						this = character:lineofradagast
						this = character:lineofgandalf
					}
				}
				set_culture = root.capital_province.culture
				set_character_faith = root.capital_province.faith
			}
		}
		else_if = {
			limit = {
				not_maiar_fallen = yes
			}
			set_culture = culture:morlughai
		}
		if = {
			limit = {
				has_dynasty = yes
			}
			dynasty = { generate_coa = yes }
		}
	}

}

race.0002 = {
	hidden = yes
	
	trigger = {
		nubile_age > 16
		is_a_minor = yes
		age < majority_age
		NOT = { exists = father }
		NOT = { exists = mother }
		NOT = { exists = dynasty }
	}

	immediate = {
		if = {
			limit = { is_elf = no }
			change_age = { nubile_age young_age }
		}
		else = { change_age = { 50 2000 } }
	}
}

race.0003 = { #Removal of health bonus for elderly characters
	hidden = yes
	
	trigger = {
		OR = {
			has_character_modifier = youthful_vigor_1_modifier
			has_character_modifier = youthful_vigor_1_5_modifier
			has_character_modifier = youthful_vigor_2_modifier
		}
	}
	
	immediate = {
		if = { #Youthful vigor 1
			limit = { has_character_modifier = youthful_vigor_1_modifier }
			remove_character_modifier = youthful_vigor_1_modifier
		}
		else_if = { #Youthful vigor 1.5
			limit = { has_character_modifier = youthful_vigor_1_5_modifier }
			remove_character_modifier = youthful_vigor_1_5_modifier
		}
		else_if = { #Youthful vigor 2
			limit = { has_character_modifier = youthful_vigor_2_modifier }
			remove_character_modifier = youthful_vigor_2_modifier
		}
	}
}

race.0004 = { #Triggering marriage for betrothed nubiles if AI doesn't manage it
	hidden = yes
	
	trigger = {
		is_betrothed = yes
		OR = { #Checks that the custom betrothal has been used
			nubile_age > 16
			betrothed.nubile_age >16
		}
	}
	
	immediate = {
		if = {
			limit = {
				is_ai = yes
				is_nubile = yes
				betrothed = { 
					is_ai = yes
					is_nubile = yes
				}
				NOT = { has_variable = promised_grand_wedding_marriage_countdown }
			}
			marry = root.betrothed
		}
	}
}

race.0005 = { #Removing courtiers from inappropriate courts
	hidden = yes
	
	trigger = {
		OR = {
			AND = { # Elves will leave a Non-Elven court unless their host is a friend (elven healers excepted)
				is_elf = yes
				NOT = {
					has_character_flag = is_arwen
				}
				is_imprisoned = no
				scope:new_employer = { is_elf = no }
				NOT = { has_character_flag = elven_healer }
				NOT = { has_relation_friend = scope:new_employer }
			}
			AND = { # Non-Elves or Istari won't stay in Valinor
				is_elf = no
				is_istari = no
				scope:new_employer = { is_in_valinor = yes }
			}
			AND = { #Elves in Valinor will stay there
				is_elf = yes
				scope:old_employer ?= { is_in_valinor = yes }
			}
			AND = { # Nâzgul don't go to just any court
				is_nazgul = yes
				scope:new_employer = { 
					is_nazgul = no
					is_sauron = no
				}
			}
			AND = { # Orcs don't go to good faith courts
				is_orc = yes
				is_imprisoned = no
				scope:new_employer = { faith_is_good = yes }
			}
		}
	}
	
	immediate = {
	
		# Elves will leave a Non-Elven court unless their host is a friend (elven healers excepted)
		if = {
			limit = {
				is_elf = yes
				NOT = {
					has_character_flag = is_arwen
				}
				is_imprisoned = no
				scope:new_employer = { is_elf = no }
				NOT = { has_character_flag = elven_healer }
				NOT = { has_relation_friend = scope:new_employer }
			}
			if = {
				limit = {
					any_extended_family_member = {
						is_landed = yes
						is_in_valinor = no
					}
				}
				random_extended_family_member = {
					limit = { 
						is_landed = yes
						is_in_valinor = no
					}
					save_scope_as = future_employer
				}
			}
			else_if = {
				limit = {
					any_ruler = {
						culture = root.culture
						is_in_valinor = no
					}
				}
				random_ruler = {
					limit = { 
						culture = root.culture 
						is_in_valinor = no
					}
					save_scope_as = future_employer
				}
			}
			else_if = {
				limit = {
					any_ruler = {
						culture = { has_same_culture_heritage = root.culture }
						is_in_valinor = no
					}
				}
				random_ruler = {
					limit = { 
						culture = { has_same_culture_heritage = root.culture }
						is_in_valinor = no
					}
					save_scope_as = future_employer
				}
			}
			else_if = {
				limit = {
					any_ruler = {
						is_elf = yes
						is_in_valinor = no
					}
				}
				random_ruler = {
					limit = { 
						is_elf = yes
						is_in_valinor = no
					}
					save_scope_as = future_employer
				}
			}
			else = {
				random_ruler = {
					limit = { 
						is_elf = yes
					}
					save_scope_as = future_employer
				}
			}
		}
		
		# Non-Elves or Istari won't stay in Valinor
		else_if = {
			limit = {
				is_elf = no
				is_istari = no
				scope:new_employer = { is_in_valinor = yes }
			}
			if = {
				limit = {
					any_ruler = {
						culture = root.culture
					}
				}
				random_ruler = {
					limit = { 
						culture = root.culture 
					}
					save_scope_as = future_employer
				}
			}
			else_if = {
				limit = {
					any_ruler = {
						culture = { has_same_culture_heritage = root.culture }
					}
				}
				random_ruler = {
					limit = { 
						culture = { has_same_culture_heritage = root.culture }
					}
					save_scope_as = future_employer
				}
			}
			else_if = {
				limit = {
					any_ruler = {
						same_race = { TARGET = root }
					}
				}
				random_ruler = {
					limit = { 
						same_race = { TARGET = root }
					}
					save_scope_as = future_employer
				}
			}
			else_if = {
				limit = {
					any_ruler = {
						opposite_alignment = { TARGET = root }
					}
				}
				random_ruler = {
					limit = { 
						opposite_alignment = { TARGET = root }
					}
					save_scope_as = future_employer
				}
			}
			else = {
				random_ruler = {
					limit = { 
						is_in_valinor = no
					}
					save_scope_as = future_employer
				}
			}
			
			move_to_pool_at = scope:future_employer.capital_province
			set_employer = scope:future_employer
		}
		
		else_if = { #Elves in Valinor will stay there
			limit = {
				is_elf = yes
				scope:old_employer = { is_in_valinor = yes }
				scope:new_employer = { is_in_valinor = no }
			}
			move_to_pool_at = scope:old_employer.capital_province
			set_employer = scope:old_employer
		}
		
		# Nâzgul go to Sauron's court
		else_if = { 
			limit = {
				is_nazgul = yes
				scope:new_employer = { 
					is_nazgul = no
					is_sauron = no
				}
			}
			set_employer = character:lineofsauron
		}
		
		# Orcs don't stay in good court
		else_if = { # Orcs don't stay in good court
			limit = {
				is_orc = yes
				scope:new_employer = { faith_is_good = yes }
			}
			if = {
				limit = {
					any_ruler = {
						culture = root.culture
					}
				}
				random_ruler = {
					limit = { 
						culture = root.culture 
					}
					save_scope_as = future_employer
				}
			}
			else_if = {
				limit = {
					any_ruler = {
						culture = { has_same_culture_heritage = root.culture }
					}
				}
				random_ruler = {
					limit = { 
						culture = { has_same_culture_heritage = root.culture }
					}
					save_scope_as = future_employer
				}
			}
			else_if = {
				limit = {
					any_ruler = {
						is_orc = yes
					}
				}
				random_ruler = {
					limit = { 
						is_orc = yes
					}
					save_scope_as = future_employer
				}
			}
			else_if = {
				limit = { sauron_is_alive = yes }
				random_ruler = {
					limit = { 
						is_nazgul = yes
						is_sauron = yes
					}
					save_scope_as = future_employer
				}
			}
			else_if = {
				limit = {
					any_ruler = {
						faith_is_evil = yes
					}
				}
				random_ruler = {
					limit = { 
						faith_is_evil = yes
					}
					save_scope_as = future_employer
				}
			}
			else = {
				random_ruler = {
					limit = { 
						faith_is_good = no
					}
					save_scope_as = future_employer
				}
			}
			
			move_to_pool_at = scope:future_employer.capital_province
			set_employer = scope:future_employer
		}
	}
}