### Dol Guldur ###
namespace = dol_guldur

dol_guldur.9999 = { # Looping aggression event
	hidden = yes
	scope = none

	trigger = {
		is_ai = yes
		this = character:nazgul2
	}

	immediate = {

		if = {
			limit = { title:c_gwathrad = { culture = culture:wastelands } }
			random = {
				chance = 66
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
			  	}
				title:c_gwathrad = {
					change_title_holder = {
						holder = root
						change = scope:change
						take_baronies = yes
					}
					set_county_faith = root.faith
					set_county_culture = culture:kazgumhoth
				}
				resolve_title_and_vassal_change = scope:change
				remove_short_term_gold = 200
				title:c_gwathrad = {
					generate_coa = yes
					every_county_province = {
						limit = {
							has_holding = yes
							has_holding_type = wastelands_holding			
						}
						set_holding_type = settlement_holding
					}
				}	
				increase_variable = {
					NAME = num_settled_wilderness
					AMOUNT = 1
				}
				trigger_event = wastelands.0007
			}
		}
		else_if = {
			limit = { title:c_emyn_dulin = { culture = culture:wastelands } }
			random = {
				chance = 50
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
			  	}
				title:c_emyn_dulin = {
					change_title_holder = {
						holder = root
						change = scope:change
						take_baronies = yes
					}
					set_county_faith = root.faith
					set_county_culture = culture:kazgumhoth
				}
				resolve_title_and_vassal_change = scope:change
				remove_short_term_gold = 200
				title:c_emyn_dulin = {
					generate_coa = yes
					every_county_province = {
						limit = {
							has_holding = yes
							has_holding_type = wastelands_holding			
						}
						set_holding_type = settlement_holding
					}
				}	
				increase_variable = {
					NAME = num_settled_wilderness
					AMOUNT = 1
				}
				trigger_event = wastelands.0007
			}
		}
		else_if = {
			limit = {
				title:c_rad_angaladh = {
					culture = culture:wastelands
					is_neighbor_to_realm = root
				}
			}
			random = {
				chance = 33
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
			  	}
				title:c_rad_angaladh = {
					change_title_holder = {
						holder = root
						change = scope:change
						take_baronies = yes
					}
					set_county_faith = root.faith
					set_county_culture = culture:kazgumhoth
				}
				resolve_title_and_vassal_change = scope:change
				remove_short_term_gold = 200
				title:c_rad_angaladh = {
					generate_coa = yes
					every_county_province = {
						limit = {
							has_holding = yes
							has_holding_type = wastelands_holding			
						}
						set_holding_type = settlement_holding
					}
				}	
				increase_variable = {
					NAME = num_settled_wilderness
					AMOUNT = 1
				}
				trigger_event = wastelands.0007
			}
		}
		
		if = {
			limit = { # Basic pre-requisites to start considering war
				is_at_war = no # Must not already be at war
				days_of_continuous_peace > 365 # Must not have finished a war in the last year
				gold > 0 # Must not be in debt
			}
			if = {
				limit = {
					any_character_to_title_neighboring_county = {
						kingdom = title:k_amon_lanc
						NOT = { culture = culture:wastelands }
						holder.top_liege = { 
							is_independent_ruler = yes
							NOT = { this = root }
							NOT = { root = { has_truce = prev } }
						}
						root.total_strength >= holder.top_liege.total_strength
					}
				}
				random_character_to_title_neighboring_county = {
					limit = {
						kingdom = title:k_amon_lanc
						NOT = { culture = culture:wastelands }
						holder.top_liege = { 
							is_independent_ruler = yes
							NOT = { this = root }
							NOT = { root = { has_truce = prev } }
						}
						root.total_strength >= holder.top_liege.total_strength
					}
					save_scope_as = newtarget
					holder.top_liege = { save_scope_as = newenemy }
				}
				start_war = {
					cb = county_conquest_cb
					target = scope:newenemy
					target_title = scope:newtarget
				}
			}
			else_if = {
				limit = {
					any_character_to_title_neighboring_county = {
						kingdom = title:k_angaladh
						NOT = { culture = culture:wastelands }
						holder.top_liege = { 
							is_independent_ruler = yes
							NOT = { this = root }
							NOT = { root = { has_truce = prev } }
						}
						root.total_strength >= holder.top_liege.total_strength
					}
				}
				random_character_to_title_neighboring_county = {
					limit = {
						kingdom = title:k_angaladh
						NOT = { culture = culture:wastelands }
						holder.top_liege = { 
							is_independent_ruler = yes
							NOT = { this = root }
							NOT = { root = { has_truce = prev } }
						}
						root.total_strength >= holder.top_liege.total_strength
					}
					save_scope_as = newtarget
					holder.top_liege = { save_scope_as = newenemy }
				}
				start_war = {
					cb = county_conquest_cb
					target = scope:newenemy
					target_title = scope:newtarget
				}
			}
			else_if = {
				limit = {
					completely_controls = title:k_angaladh
					any_character_to_title_neighboring_duchy = {
						kingdom = title:k_lasgalen
						NOT = { culture = culture:wastelands }
						holder.top_liege = { 
							is_independent_ruler = yes
							NOT = { this = root }
							NOT = { root = { has_truce = prev } }
						}
						root.total_strength >= holder.top_liege.total_strength
					}
				}
				random_character_to_title_neighboring_duchy = {
					limit = {
						kingdom = title:k_lasgalen
						NOT = { culture = culture:wastelands }
						holder.top_liege = { 
							is_independent_ruler = yes
							NOT = { this = root }
							NOT = { root = { has_truce = prev } }
						}
						root.total_strength >= holder.top_liege.total_strength
					}
					save_scope_as = newtarget
					holder.top_liege = { save_scope_as = newenemy }
				}
				start_war = {
					cb = duchy_conquest_cb
					target = scope:newenemy
					target_title = scope:newtarget
				}
			}
		}

		trigger_event = {
			id = dol_guldur.9999
			months = 3
		}

	}

}

dol_guldur.0001 = {
	type = letter_event
	sender = scope:sender

	opening = {
		desc = dol_guldur.0001.opening
	}

	desc = dol_guldur.0001.desc

	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = dol_guldur.0001
			days = 1
		}
	}

	immediate = {
		title:k_amon_lanc.holder = {
			save_scope_as = sender
		}

		ROOT = {
			save_scope_as = recipient
		}
	}

	# Join
	option = {
		name = dol_guldur.0001.a
		add_piety = major_piety_gain
		
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
			add_claim_on_loss = no
		}

		change_liege = {
			liege = scope:sender
			change = scope:change
		}
		
		resolve_title_and_vassal_change = scope:change

		scope:sender = {
			trigger_event = {
				id = dol_guldur.0002
			}
		}

		ai_chance = {
			base = 0

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				NOT = {
					scope:recipient = {
						culture = culture:leofring
					}
				}
				add = 1000
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				NOT = {
					scope:recipient = {
						culture = culture:leofring
					}
				}
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				NOT = {
					scope:recipient = {
						culture = culture:leofring
					}
				}
				add = 50
			}
			opinion_modifier = {
				opinion_target = scope:sender
				multiplier = 1
			}
			modifier = {
				add = {
					value = root.ai_boldness
					multiply = -1
				}
			}
			modifier = {
				add = {
					value = root.ai_rationality
					multiply = 1
				}
			}
		}
	}
	
	# Refuse
	option = {
		name = dol_guldur.0001.b

		scope:sender = {
			send_interface_toast = {
				title = dol_guldur.0001.recieve_titles		
				left_icon = root
				root.primary_title = {
					every_in_de_facto_hierarchy = {
						limit = {
							tier >= tier_county
						}
						scope:sender = {
							add_unpressed_claim = prev
						}
					}
				}
			}
		}

		add_piety = minor_piety_gain

		if = {
			limit = {
				scope:recipient.culture = culture:leofring
			}
			scope:sender = {
				trigger_event = {
					id = dol_guldur.0004
				}
			}
		} 
		else_if = {
			limit = {
				scope:recipient.culture = culture:woodmen
			}
			scope:sender = {
				trigger_event = {
					id = dol_guldur.0003
				}
			}
		}

		
		ai_chance = {
			base = 0
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				NOT = {
					scope:recipient = {
						culture = culture:leofring
					}
				}
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				NOT = {
					scope:recipient = {
						culture = culture:leofring
					}
				}
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				NOT = {
					scope:recipient = {
						culture = culture:leofring
					}
				}
				add = 50
			}
			opinion_modifier = {
				opinion_target = scope:sender
				multiplier = -1
			}
			modifier = {
				add = {
					value = root.ai_boldness
					multiply = 1
				}
			}
			modifier = {
				add = {
					value = root.ai_rationality
					multiply = -1
				}
			}
		}
	}
}

dol_guldur.0002 = {
	type = letter_event
	sender = scope:recipient

	opening = {
		desc = dol_guldur.0002.opening
	}

	desc = dol_guldur.0002.desc


	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = dol_guldur.0002
			days = 1
		}
	}

	option = {
		name = dol_guldur.0002.a
		add_piety = medium_piety_gain
	}	
}

dol_guldur.0003 = {
	type = letter_event
	sender = scope:recipient

	opening = {
		desc = dol_guldur.0003.opening
	}

	desc = dol_guldur.0003.desc

	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = dol_guldur.0003
			days = 1
		}
	}

	option = {
		name = dol_guldur.0003.a
		add_piety = minor_piety_loss
	}
}

dol_guldur.0004 = {
	type = letter_event
	sender = scope:recipient

	opening = {
		desc = dol_guldur.0004.opening
	}

	desc = dol_guldur.0004.desc

	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = dol_guldur.0004
			days = 1
		}
	}

	option = {
		name = dol_guldur.0004.a
		add_piety = minor_piety_loss
	}
}

dol_guldur.0050 = { # Desecrate Caras Galadhon decision event
	content_source = realms_dlc
	type = character_event
	title = dol_guldur.0050.t
	desc = dol_guldur.0050.desc
	theme = war
	override_background = { reference = lorien_night }

	left_portrait = {
		character = root
		animation = personality_callous
	}
	immediate = {
		show_as_tooltip = {
			add_piety = massive_piety_gain

			title:c_caras_galadhon = { 
				title_province = {
					remove_building = wonder_caras_galadhon
					add_special_building = wonder_caras_galadhon_ruined_01
				}
			}

			custom_tooltip = {
				text = decision_desecrate_caras_galadhon.every_eldar_ruler_loses_piety
				faith:faith_eldar = {
					every_faith_ruler = {
						send_interface_toast = {
							title = decision_desecrate_aradhrynd		
							left_icon = root
							add_piety = { value = massive_piety_loss }
						}
					}
				}
			}
			
			if = {
				limit = { # Take the Mirror of Galadriel as trophy
					title:k_lothlorien = {
						any_claimant = {
							any_character_artifact = { has_variable = galadriel_mirror }
						}
					}
				}
				title:k_lothlorien = { 
					random_claimant = {
						limit = { any_character_artifact = { has_variable = galadriel_mirror } }
						save_scope_as = victim
						every_character_artifact = {
							limit = {
								has_variable = galadriel_mirror
							}
							set_owner = {
								target = root
								history = {
									type = stolen
									actor = scope:victim
									recipient = root
									location = province:3108 #Caras Galadhon
								}
							}
						}
					}
				}
			}
			else_if = { # If the Mirror has been lost, re-create it
				limit = {
					NOT = { any_artifact = { has_variable = galadriel_mirror } }
				}
			}
		}
	}
	option = { # Serves them right
		name = dol_guldur.0050.a
	}
}

dol_guldur.0051 = { # Desecrate Thranduil's Halls decision event
	content_source = realms_dlc
	type = character_event
	title = dol_guldur.0051.t
	desc = dol_guldur.0051.desc
	theme = war
	override_background = { reference = throne_room_thranduils_halls }

	left_portrait = {
		character = root
		animation = schadenfreude
	}
	immediate = {
		show_as_tooltip = {
			add_piety = massive_piety_gain

			title:c_aradhrynd = { 
				title_province = {
					remove_building = wonder_aradhrynd
					add_special_building = wonder_aradhrynd_ruined_01
				}
			}

			custom_tooltip = {
				text = decision_desecrate_aradhrynd.every_eldar_ruler_loses_piety
				faith:faith_eldar = {
					every_faith_ruler = {
						send_interface_toast = {
							title = decision_desecrate_aradhrynd		
							left_icon = root
							add_piety = { value = massive_piety_loss }
						}
					}
				}
			}

			if = {
				limit = { # Take the Crown of the Woodland Realm as a trophy
					title:k_lasgalen = {
						any_claimant = {
							any_character_artifact = { has_variable = crown_woodland_realm }
						}
					}
				}
				title:k_lasgalen = {
					random_claimant = {
						limit = { any_character_artifact = { has_variable = crown_woodland_realm } }
						save_scope_as = victim
						every_character_artifact = {
							limit = {
								has_variable = crown_woodland_realm
							}
							set_owner = {
								target = root
								history = {
									type = stolen
									actor = scope:victim
									recipient = root
									location = province:3216 #Aradhrynd
								}
							}
							reforge_artifact = {
								type = pedestal 
								modifier = crown_woodland_realm_court_modifier
								visuals = crown_woodland_realm_court
								name = crown_woodland_realm_name
								description = crown_woodland_realm_description
								decaying = no
							}
						}
					}
				}
			}
			else_if = { # If the Crown has been lost, re-create it
				limit = {
					NOT= { any_artifact = { has_variable = crown_woodland_realm } }
				}
				# Get the character the artifact is being made for.
				root = { save_scope_as = owner }
				# Not really used, but if we don't set the scopes we get errors in the feature selection
				set_artifact_rarity_illustrious = yes

				# Create the artifact
				create_artifact = {
					name = crown_woodland_realm_name
					description = crown_woodland_realm_description
					type = pedestal
					visuals = crown_woodland_realm_court
					wealth = scope:wealth
					quality = scope:quality
					history = {
						type = created
						date = 4026.1.1
						recipient = character:lineoforopher3 #Thranduil
						location = province:3216 #Aradhrynd
					}
					modifier = crown_woodland_realm_court_modifier
					save_scope_as = newly_created_artifact
					decaying = no
				}

				scope:newly_created_artifact = {
					set_variable = { name = historical_unique_artifact value = yes }
					set_variable = relic
					set_variable = crown_woodland_realm
					save_scope_as = epic
				}
			}
		}
	}
	option = { # Good Riddance
		name = dol_guldur.0051.a
	}
}

dol_guldur.0052 = { # Shackle the Vale decision event
	content_source = realms_dlc
	type = character_event
	title = dol_guldur.0052.t
	desc = dol_guldur.0052.desc
	theme = war
	override_background = { reference = burning_building }

	left_portrait = {
		character = root
		animation = schadenfreude
	}
	immediate = {
		show_as_tooltip = {
			add_piety = massive_piety_gain
			dynasty = {
				add_dynasty_prestige = medium_dynasty_prestige_value
			}
			title:c_beornsele = { 
				title_province = {
					remove_building = wonder_beorns_hall
				}
			}

			create_artifact_giant_bear_pelt_effect = { OWNER = root }
		}
	}
	option = { # See how the mighty Bear falls!
		name = dol_guldur.0052.a
	}
}

dol_guldur.0100 = { # Dominion of the Sorcerer flavor event
	content_source = realms_dlc
	type = character_event
	title = dol_guldur.0100.t
	desc = dol_guldur.0100.desc
	theme = war
	override_background = { reference = wilderness_forest_deep }

	left_portrait = {
		character = root
		animation = personality_callous
	}

	option = {
		name = dol_guldur.0100.a
	}
}

dol_guldur.0200 = { #Conquest of Caras Galadhon
	content_source = realms_dlc
	type = character_event
	title = dol_guldur.0200.t
	desc = dol_guldur.0200.desc
	theme = battle
	trigger = { faith_is_evil = yes }
	cooldown = { days = 3 }
	override_background = {
		reference = lorien_night
	}
	right_portrait = {
		character = root
		animation = menacing
	}
	option = { #Despoil it all
		name = dol_guldur.0200.a
		add_prestige = major_prestige_gain
	}
}