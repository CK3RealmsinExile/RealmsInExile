namespace = wastelands

# Preventing raiding wastelands by creating a truce (taken from Vanilla)
# Called from army_on_actions.txt (on_raid_action_start)
# root is the raid army
# scope:raider is the person owning the raid army
# scope:barony is the barony title that got raided
# scope:county is the county title for the barony
wastelands.0001 = {
	hidden = yes
	scope = army

	trigger = {
		AND = {
			exists = scope:barony
		
			OR = {
				scope:barony.holder = {			
					has_culture = culture:wastelands
				}
				scope:barony.title_province ?= {			
					culture = culture:wastelands
				}
				scope:barony.county = {			
					culture = culture:wastelands
				}
			}		
		}
	}
	immediate = {
		debug_log = "Wastelands.0001: Preventing raiding..."
		scope:raider = {
				send_interface_toast = {	
					title = wastelands.0001.t
					left_icon = scope:raider
					custom_tooltip = wastelands.0001.desc			
				}
				add_truce_both_ways = {
					character = scope:county.holder.top_liege
					years = 10
					name = TRUCE_TRADE_DEAL
				}

				# Add some mutual opinion gain.
				reverse_add_opinion = {
					target = scope:county.holder.top_liege
					modifier = pleased_opinion
					opinion = 100
				}
		}		
	}	
}

# Preventing war
# attacker: attacking nation
# defender: defending nation
wastelands.0002 = {
	hidden = yes
	scope = army

	trigger = {		
		exists = scope:barony
		OR = {
			scope:barony.holder = {			
				has_culture = culture:wastelands
			}
			scope:barony.title_province ?= {			
				culture = culture:wastelands
			}
			scope:barony.county = {			
				culture = culture:wastelands
			}
		}		
	}
	immediate = {
		debug_log = "Wastelands.0002: Preventing war..."
		scope:attacker = {
		

				send_interface_toast = {	
					title = wastelands.0002.t
					left_icon = scope:attacker
					desc = wastelands.0002.desc					
				}
				add_truce_both_ways = {
					character = scope:defender
					years = 10
					name = TRUCE_TRADE_DEAL
				}

				# Add some mutual opinion gain.
				reverse_add_opinion = {
					target = scope:county.holder.top_liege
					modifier = pleased_opinion
					opinion = 100
				}
		}		
	}	
}

# Preventing prison
# Code on-action: character being imprisoned in root scope
# imprisoning character set as scope:imprisoner
wastelands.0003 = {
	hidden = yes
	scope = character

	trigger = {
		OR = {
			has_culture = culture:wastelands
			scope:imprisoner = {			
				has_culture = culture:wastelands		
			}		
		}		
	}
	immediate = {		
		debug_log = "Wastelands.0003: Preventing prison..."
		release_from_prison = yes	
	}	
}

# Called from courtier management after guest arrived
# root, scope:guest: the guest
# host: their host (owner of the court)
# characters: list of all characters moving together. Includes the root character.
wastelands.0005 = {
	hidden = yes
	scope = character	
	immediate = {
		# debug_log = "Wastelands.0005: A guest arrived from pool. Removing them."
		empty_wastelands_inhabitants_effect = yes
		empty_foreign_visitors_to_wastelands_effect = yes		
		remove_traits_wastelands_effect = yes
	}
}

## Called from yearly events to check if AI should colonise
## For human player version check scripted_guis/lotr_wastelands.txt -> gui_colonise
wastelands.0006 = {	
	hidden = yes
	scope = character	

	trigger = {
		is_ai = yes
		is_independent_ruler = yes
		
		NOR = { #Stop Sauron colonising
			is_sauron = yes
			has_title = title:e_mordor
		}
		is_in_valinor = no

		#Stop Denethor colonising
		NOT = { this = character:linesteward38 }
		
		# As a Wastelands I don't expand
		NOT = { has_culture = culture:wastelands }
		
		monthly_character_income >= 2

		trigger_if = { # If count
			limit = { highest_held_title_tier = tier_county }
			gold >= 50
		}
		trigger_else_if = { # If duke
			limit = { highest_held_title_tier = tier_duchy }
			gold >= 75
		}
		trigger_else_if = { # If king
			limit = { highest_held_title_tier = tier_kingdom }
			gold >= 100
		}
		trigger_else_if = { # If emporer
			limit = { highest_held_title_tier = tier_empire }
			gold >= 125
		}
		trigger_else = { gold >= 150 } # Fallback

		# Only surrounding lands
		any_sub_realm_county = { any_title_to_title_neighboring_and_across_water_county = { culture = culture:wastelands } }

		### REALM TRIGGER FOR SETTLEMENT HOLDING LIMIT ###
		above_settlement_limit = no

		### WHO CAN COLONISE TRIGGERS ###

		trigger_if = { 
			limit = { has_game_rule = default_colonisation_speed }
			trigger_if = { ### ALLOWS CANON CHARACTERS TO SETTLE WILDERNESS ###
				limit = {
					OR = {
						dynasty = dynasty:dynasty_elros # Can only start colonising after Aragorn returns
						dynasty = dynasty:dynasty_oropher # Can only start colonising after Aragorn returns
						culture = culture:woodmen # Can only start colonising after Aragorn returns
						culture = culture:valemen # Can only start colonising after Aragorn returns
						culture = { any_parent_culture_or_above = { this = culture:valemen } } # Can only start colonising after Aragorn returns
						culture = { any_parent_culture_or_above = { this = culture:woodmen } } # Can only start colonising after Aragorn returns
						is_nazgul = yes # Can colonise from the start
						is_dwarf = yes # Can colonise from the start
						is_orc = yes # Can colonise from the start
					}
					OR = {
						is_orc = yes # Can colonise from the start
						is_nazgul = yes # Can colonise from the start
						is_dwarf = yes # Can colonise from the start
						is_target_in_global_variable_list = {
							name = unavailable_unique_decisions
							target = flag:aragorn_returned_to_gondor
						}
					}
				}
				always = yes
			}
			trigger_else = { always = no }
		} 
		trigger_else = { always = yes }
	}
	immediate = {
		debug_log = "Wastelands.0006: AI considering colonization..."
		
		### MAKING LIST OF APPROPRIATE COUNTIES TO BE COLONISED PER GAME RULE ###
		if = { # GAME RULE --> default_colonisation_speed
			limit = { has_game_rule = default_colonisation_speed }
			### HUMAN ###
			if = { ## COUNTIES AVAILABLE FOR HUMAN AI ##
				limit = { 
					is_human = yes
					NOR = {
						culture = culture:woodmen # Can only start colonising after Aragorn returns
						culture = culture:valemen # Can only start colonising after Aragorn returns
					}
				} 
				debug_log = "Wastelands.0006: Humans List Made"
				every_sub_realm_county = {
					limit = { NOT = { culture = culture:wastelands } }
					every_title_to_title_neighboring_and_across_water_county = {
						limit = {
							culture = culture:wastelands
							NOT = { holder = root }
							NOT = { has_county_modifier = elven_homeland_county_modifier }
							this = { save_temporary_scope_as = target }
							OR = {
								title:e_arnor = {
									is_de_jure_liege_or_above_target = scope:target
								}
								title:e_enedhwaith = {
									is_de_jure_liege_or_above_target = scope:target
								}
							}
							title_province ?= { 
								NOT = { terrain = halls }
							}
						}
						add_to_list = adjacent_wastelands
					}
				}
			}

			### ELF ###
			if = { ## COUNTIES AVAILABLE FOR ELF AI ##
				limit = { is_elf = yes} 
				debug_log = "Wastelands.0006: Elves List Made"
				every_sub_realm_county = {
					limit = { NOT = { culture = culture:wastelands } }
					every_title_to_title_neighboring_and_across_water_county = {
						limit = {
							culture = culture:wastelands
							NOT = { holder = root }
							has_county_modifier = elven_homeland_county_modifier
							this = { save_temporary_scope_as = target }
							OR = {
								title:e_greenwood = {
									is_de_jure_liege_or_above_target = scope:target
								}
								title:e_laurelindorenan = {
									is_de_jure_liege_or_above_target = scope:target
								}
							}
							title_province ?= { 
								NOT = { terrain = halls }
							}
						}
						add_to_list = adjacent_wastelands
					}
				}
			}

			### DWARF ###
			if = { ## COUNTIES AVAILABLE FOR DWARF AI ##
				limit = { is_dwarf = yes} 
				debug_log = "Wastelands.0006: Dwarves List Made"
				every_sub_realm_county = {
					limit = { NOT = { culture = culture:wastelands } }
					every_title_to_title_neighboring_and_across_water_county = {
						limit = {
							culture = culture:wastelands
							NOT = { holder = root }
							NOT = { has_county_modifier = elven_homeland_county_modifier }
							title_province ?= { 
								OR = {
									terrain = mountains
									terrain = hills
									terrain = halls
									terrain = caverns
									terrain = desert_mountains
								}
							}
							this = { save_temporary_scope_as = target }
							OR = {
								title:e_blue_mountains = {
									is_de_jure_liege_or_above_target = scope:target
								}
								title:e_iron_mountains = {
									is_de_jure_liege_or_above_target = scope:target
								}
								title:k_khazad_dum = {
									is_de_jure_liege_or_above_target = scope:target
								}
							}
						}
						add_to_list = adjacent_wastelands
					}
				}
			}

			### NAZGUL ###
			if = {## COUNTIES AVAILABLE FOR NAZGUL AI ##
				limit = { is_nazgul = yes }
				debug_log = "Wastelands.0006: Nazgul List Made"
				every_sub_realm_county = {
					limit = { NOT = { culture = culture:wastelands } }
					every_title_to_title_neighboring_and_across_water_county = {
						limit = {
							culture = culture:wastelands
							NOT = { holder = root }
							this = { save_temporary_scope_as = target }
							OR = {
								title:e_greenwood = {
									is_de_jure_liege_or_above_target = scope:target
								}
								title:k_ehwathrumavuld = {
									is_de_jure_liege_or_above_target = scope:target
								}
							}
						}
						add_to_list = adjacent_wastelands
					}
				}
			}

			### ORC ###
			if = {## COUNTIES AVAILABLE FOR ORC AI ##
				limit = { is_orc = yes } 
				debug_log = "Wastelands.0006: Orc List Made"
				every_sub_realm_county = {
					limit = { NOT = { culture = culture:wastelands } }
					every_title_to_title_neighboring_and_across_water_county = {
						limit = {
							culture = culture:wastelands
							NOT = { holder = root }
							this = { save_temporary_scope_as = target }
							OR = {
								title:k_gundabad = {
									is_de_jure_liege_or_above_target = scope:target
								}
								title:k_langwell = {
									is_de_jure_liege_or_above_target = scope:target
								}
								title:e_greenwood = {
									is_de_jure_liege_or_above_target = scope:target
								}
							}
						}
						add_to_list = adjacent_wastelands
					}
				}
			}

			### VALEMEN/WOODMEN ###
			if = { ## COUNTIES AVAILABLE FOR HUMAN AI ##
				limit = { 
					is_human = yes
					OR = {
						culture = culture:woodmen # Can only start colonising after Aragorn returns
						culture = culture:valemen # Can only start colonising after Aragorn returns
						culture = { any_parent_culture_or_above = { this = culture:valemen } } # Can only start colonising after Aragorn returns
						culture = { any_parent_culture_or_above = { this = culture:woodmen } } # Can only start colonising after Aragorn returns
					}
				} 
				debug_log = "Wastelands.0006: Valemen/Woodmen List Made"
				every_sub_realm_county = {
					limit = { NOT = { culture = culture:wastelands } }
					every_title_to_title_neighboring_and_across_water_county = {
						limit = {
							culture = culture:wastelands
							NOT = { holder = root }
							this = { save_temporary_scope_as = target }
							OR = {
								title:e_greenwood = {
									is_de_jure_liege_or_above_target = scope:target
								}
								title:e_anduin_vale = {
									is_de_jure_liege_or_above_target = scope:target
								}
							}
							title_province ?= { 
								NOT = { terrain = halls }
							}
						}
						add_to_list = adjacent_wastelands
					}
				}
			}
		}
		if = { # GAME RULE --> weighted_colonisation_speed
			limit = { has_game_rule = weighted_colonisation_speed }
			### HUMAN ###
			if = { ## COUNTIES AVAILABLE FOR HUMAN AI ##
				limit = { OR = { is_human = yes is_hobbit = yes } }
				every_sub_realm_county = {
					limit = { NOT = { culture = culture:wastelands } }
					every_title_to_title_neighboring_and_across_water_county = {
						limit = {
							culture = culture:wastelands
							NOT = { holder = root }
							NOT = { has_county_modifier = elven_homeland_county_modifier }
							title_province ?= { 
								NOT = { terrain = halls }
							}
						}
						add_to_list = adjacent_wastelands
					}
				}
			}

			### ELF ###
			if = { ## COUNTIES AVAILABLE FOR ELF AI ##
				limit = { is_elf = yes }
				### COUNTY COLONISATION PRIORITY ###
				every_sub_realm_county = {
					limit = { NOT = { culture = culture:wastelands } }
					every_title_to_title_neighboring_and_across_water_county = {
						limit = {
							culture = culture:wastelands
							NOT = { holder = root }
							OR = {
								has_county_modifier = elven_homeland_county_modifier
								title_province ?= { 
									OR = {
										terrain = deep_forest
										terrain = forest
										terrain = myrtle_forest
										terrain = plains
										terrain = mallorn_forest
										terrain = hills
										terrain = farmlands
										terrain = wetlands
										terrain = floodplains
									}
								}
							}
						}
						add_to_list = adjacent_wastelands
					}
				}
			}

			### DWARF ###
			if = { ## COUNTIES AVAILABLE FOR DWARF AI ##
				limit = { is_dwarf = yes }
				every_sub_realm_county = {
					limit = { NOT = { culture = culture:wastelands } }
					every_title_to_title_neighboring_and_across_water_county = {
						limit = {
							culture = culture:wastelands
							NOT = { holder = root }
							OR = {
								NOT = { has_county_modifier = elven_homeland_county_modifier }
								title_province ?= { 
									NOR = {
										terrain = deep_forest
										terrain = forest
										terrain = myrtle_forest
										terrain = mallorn_forest
										terrain = arctic
										terrain = volcanic_plains
										terrain = wetlands
										terrain = floodplains
									}
								}
							}
						}
						add_to_list = adjacent_wastelands
					}
				}
			}

			### NAZGUL ###
			if = { ## COUNTIES AVAILABLE FOR NAZGUL AI ##
				limit = { is_nazgul = yes }
				debug_log = "Wastelands.0006: Nazgul List Made"
				every_sub_realm_county = {
					limit = { NOT = { culture = culture:wastelands } }
					every_title_to_title_neighboring_and_across_water_county = {
						limit = {
							culture = culture:wastelands
							NOT = { holder = root }
							title_province ?= { 
								NOT = { terrain = halls }
							}
						}
						add_to_list = adjacent_wastelands
					}
				}
			}

			### ORC ###
			if = {## COUNTIES AVAILABLE FOR ORC AI ##
				limit = { is_orc = yes } 
				debug_log = "Wastelands.0006: Orc List Made"
				every_sub_realm_county = {
					limit = { NOT = { culture = culture:wastelands } }
					every_title_to_title_neighboring_and_across_water_county = {
						limit = {
							culture = culture:wastelands
							NOT = { holder = root }
						}
						add_to_list = adjacent_wastelands
					}
				}
			}

			### VALEMEN/WOODMEN ###
			if = { ## COUNTIES AVAILABLE FOR HUMAN AI ##
				limit = { 
					is_human = yes
					OR = {
						culture = culture:woodmen # Can only start colonising after Aragorn returns
						culture = culture:valemen # Can only start colonising after Aragorn returns
						culture = { any_parent_culture_or_above = { this = culture:valemen } } # Can only start colonising after Aragorn returns
						culture = { any_parent_culture_or_above = { this = culture:woodmen } } # Can only start colonising after Aragorn returns
					}
				} 
				debug_log = "Wastelands.0006: Valemen/Woodmen List Made"
				every_sub_realm_county = {
					limit = { NOT = { culture = culture:wastelands } }
					every_title_to_title_neighboring_and_across_water_county = {
						limit = {
							culture = culture:wastelands
							NOT = { holder = root }
							this = { save_temporary_scope_as = target }
							OR = {
								title:e_greenwood = {
									is_de_jure_liege_or_above_target = scope:target
								}
								title:e_anduin_vale = {
									is_de_jure_liege_or_above_target = scope:target
								}
							}
							title_province ?= { 
								NOT = { terrain = halls }
							}
						}
						add_to_list = adjacent_wastelands
					}
				}
			}
		}
		if = { # GAME RULE --> normal_colonisation_speed
			limit = { has_game_rule = normal_colonisation_speed }
			if = {
				limit = {
					OR = {
						is_dwarf = yes
						is_orc = yes
						is_nazgul = yes
					}
				}
				every_sub_realm_county = {
					limit = { NOT = { culture = culture:wastelands } }
					every_title_to_title_neighboring_and_across_water_county = {
						limit = {
							culture = culture:wastelands
							NOT = { holder = root }
						}
						add_to_list = adjacent_wastelands
					}
				}
			} 
			else = {
				every_sub_realm_county = {
					limit = { NOT = { culture = culture:wastelands } }
					every_title_to_title_neighboring_and_across_water_county = {
						limit = {
							culture = culture:wastelands
							NOT = { holder = root }
							title_province ?= { 
								NOT = { terrain = halls }
							}
						}
						add_to_list = adjacent_wastelands
					}
				}
			}
		}

		### GETTING THE COUNTY TO BE COLONISED ###
		if = { ## PRIORITISING COUNTY TO BE COLONISED | HUMAN | HOBBIT
			limit = { 
				OR = {
					is_human = yes 
					is_hobbit = yes 
				}
			}
			debug_log = "Wastelands.0006: Human County Colonised"
			random_in_list = {
				list = adjacent_wastelands
				save_scope_as = wastelands
			}
		}
		if = { ## PRIORITISING COUNTY TO BE COLONISED | ELF
			limit = { is_elf = yes }
			debug_log = "Wastelands.0006: Elven County Colonised"
			if = { # Elven homelands
				limit = {
					any_in_list = {
						list = adjacent_wastelands				
						has_county_modifier = elven_homeland_county_modifier
					}
				}
				random_in_list = {
					list = adjacent_wastelands
					limit = { has_county_modifier = elven_homeland_county_modifier }
					save_scope_as = wastelands
				}
			}
			else_if = { # Terrain types
				limit = {
					any_in_list = {
						list = adjacent_wastelands				
						title_province ?= { 
							OR = {
								terrain = deep_forest
								terrain = forest
								terrain = myrtle_forest
								terrain = plains
								terrain = mallorn_forest
								terrain = hills
							}
						}
					}
				}
				random_in_list = {
					list = adjacent_wastelands
					limit = { 
						title_province ?= { 
							OR = {
								terrain = deep_forest
								terrain = forest
								terrain = myrtle_forest
								terrain = plains
								terrain = mallorn_forest
								terrain = hills
							}
						}
					 }
					save_scope_as = wastelands
				}
			}
			else = { # Grab a random county
				random_in_list = {
					list = adjacent_wastelands
					save_scope_as = wastelands
				}
			}
		}
		if = { ## PRIORITISING COUNTY TO BE COLONISED | DWARF
			limit = { is_dwarf = yes }
			debug_log = "Wastelands.0006: Dwarven County Colonised"
			
			if = { # Underground
				limit = {
					any_in_list = {
						list = adjacent_wastelands				
						title_province ?= { 
							OR = {
								terrain = halls
								terrain = caverns
								terrain = pathsofthedead
							}
						}
					}
				}
				random_in_list = {
					list = adjacent_wastelands
					limit = { 
						title_province ?= { 
							OR = {
								terrain = halls
								terrain = caverns
								terrain = pathsofthedead
							}
						}
					 }
					save_scope_as = wastelands
				}
			}
			else_if = { # Terrain types
				limit = {
					any_in_list = {
						list = adjacent_wastelands				
						title_province ?= { 
							NOR = {
								terrain = deep_forest
								terrain = forest
								terrain = myrtle_forest
								terrain = mallorn_forest
								terrain = arctic
								terrain = volcanic_plains
							}
						}
					}
				}
				random_in_list = {
					list = adjacent_wastelands
					limit = { 
						title_province ?= { 
							NOR = {
								terrain = deep_forest
								terrain = forest
								terrain = myrtle_forest
								terrain = mallorn_forest
								terrain = arctic
								terrain = volcanic_plains
							}
						}
					 }
					save_scope_as = wastelands
				}
			}
			else = { # Grab a random county
				random_in_list = {
					list = adjacent_wastelands
					save_scope_as = wastelands
				}
			}
		}
		if = { ## PRIORITISING COUNTY TO BE COLONISED | NAZGUL | ORC
			limit = { 
				OR = {
					is_nazgul = yes
					is_orc = yes
				}
			 }
			random_in_list = {
				list = adjacent_wastelands
				save_scope_as = wastelands
			}
		}

		### MAKE AI COLONISE COUNTY ###
		scope:wastelands = { debug_log_scopes = yes } # Only needed for testing
		if = {
			limit = { exists = scope:wastelands }
			ai_colonisation_effect = { WASTELANDS = scope:wastelands }
		}		
	}
}

## Event to trigger event from 0008 - 0015 to add a variable + upkeep modifier
wastelands.0007 = { 
	hidden = yes

	immediate = {
		if = {
			limit = { 
				exists = dynasty
				dynasty = { has_dynasty_modifier = easy_arnor_settle } 
			}
			if = {
				limit = { highest_held_title_tier = tier_county }
				trigger_event = wastelands.0012
			} 
			else_if = {
				limit = { highest_held_title_tier = tier_duchy }
				trigger_event = wastelands.0013
			}
			else_if = {
				limit = { highest_held_title_tier = tier_kingdom }
				trigger_event = wastelands.0014
			}
			else = {
				trigger_event = wastelands.0015
			}
		}
		else_if = {
			limit = { highest_held_title_tier = tier_county }
			trigger_event = wastelands.0008
		} 
		else_if = {
			limit = { highest_held_title_tier = tier_duchy }
			trigger_event = wastelands.0009
		}
		else_if = {
			limit = { highest_held_title_tier = tier_kingdom }
			trigger_event = wastelands.0010
		}
		else = {
			trigger_event = wastelands.0011
		}
	}
}

## Adding upkeep to Counts
## Triggered in wastelands.0007
wastelands.0008 = { 
	hidden = yes

	immediate = {
		if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 0 }
			remove_character_modifier = holding_one_settlements
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 1 }
			add_character_modifier = { modifier = holding_one_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_two_settlements }
				remove_character_modifier = holding_two_settlements
			}
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 2 }
			remove_character_modifier = holding_one_settlements
			add_character_modifier = { modifier = holding_two_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_three_settlements }
				remove_character_modifier = holding_three_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 3 }
			remove_character_modifier = holding_two_settlements
			add_character_modifier = { modifier = holding_three_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_four_settlements }
				remove_character_modifier = holding_four_settlements
			}
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 4 }
			remove_character_modifier = holding_three_settlements
			add_character_modifier = { modifier = holding_four_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_five_settlements }
				remove_character_modifier = holding_five_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 5 }
			remove_character_modifier = holding_four_settlements
			add_character_modifier = { modifier = holding_five_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_more_than_five_settlements }
				remove_character_modifier = holding_more_than_five_settlements
			}
		}
		else = {
			if = {
				limit = {
					exists = var:num_settled_wilderness
					var:num_settled_wilderness > 5
				}
				remove_character_modifier = holding_five_settlements
				add_character_modifier = { modifier = holding_more_than_five_settlements }
			}
		}
	}
}

## Adding upkeep to Duke
## Triggered in wastelands.0007
wastelands.0009 = {
	hidden = yes

	immediate = {
		if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 0 }
			remove_character_modifier = holding_one_settlements
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 1 }
			add_character_modifier = { modifier = holding_one_settlements }
		}
		else_if = { 
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 2 } 
			if = {
				limit = { has_character_modifier = holding_two_settlements }
				remove_character_modifier = holding_two_settlements
				add_character_modifier = { modifier = holding_one_settlements }
			}
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 3 }
			remove_character_modifier = holding_one_settlements
			add_character_modifier = { modifier = holding_two_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_three_settlements }
				remove_character_modifier = holding_three_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 4 }
			remove_character_modifier = holding_two_settlements
			add_character_modifier = { modifier = holding_three_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_four_settlements }
				remove_character_modifier = holding_four_settlements
			}
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 5 }
			remove_character_modifier = holding_three_settlements
			add_character_modifier = { modifier = holding_four_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_five_settlements }
				remove_character_modifier = holding_five_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 6 }
			remove_character_modifier = holding_four_settlements
			add_character_modifier = { modifier = holding_five_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_more_than_five_settlements }
				remove_character_modifier = holding_more_than_five_settlements
			}
		}
		else = {
			if = {
				limit = {
					exists = var:num_settled_wilderness		var:num_settled_wilderness > 6
				}
				remove_character_modifier = holding_five_settlements
				add_character_modifier = { modifier = holding_more_than_five_settlements }
			}
		}
	}
}

## Adding upkeep to King
## Triggered in wastelands.0007
wastelands.0010 = {
	hidden = yes

	immediate = {
		if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 0 }
			remove_character_modifier = holding_one_settlements
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 1 }
			add_character_modifier = { modifier = holding_one_settlements }
		}
		else_if = { limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 2 } }
		else_if = { 
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 3 } 
			if = {
				limit = { has_character_modifier = holding_two_settlements }
				remove_character_modifier = holding_two_settlements
				add_character_modifier = { modifier = holding_one_settlements }
			}
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 4 }
			remove_character_modifier = holding_one_settlements
			add_character_modifier = { modifier = holding_two_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_three_settlements }
				remove_character_modifier = holding_three_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 5 }
			remove_character_modifier = holding_two_settlements
			add_character_modifier = { modifier = holding_three_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_four_settlements }
				remove_character_modifier = holding_four_settlements
			}
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 6 }
			remove_character_modifier = holding_three_settlements
			add_character_modifier = { modifier = holding_four_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_five_settlements }
				remove_character_modifier = holding_five_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 7 }
			remove_character_modifier = holding_four_settlements
			add_character_modifier = { modifier = holding_five_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_more_than_five_settlements }
				remove_character_modifier = holding_more_than_five_settlements
			}
		}
		else = {
			if = {
				limit = {
					exists = var:num_settled_wilderness		var:num_settled_wilderness > 7
				}
				remove_character_modifier = holding_five_settlements
				add_character_modifier = {
					modifier = holding_more_than_five_settlements
				}
			}
		}
	}
}

## Adding upkeep to Emporer
## Triggered in wastelands.0007
wastelands.0011 = {
	hidden = yes

	immediate = {
		if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 0 }
			remove_character_modifier = holding_one_settlements
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 1 }
			add_character_modifier = { modifier = holding_one_settlements }
		}
		else_if = { limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 2 } }
		else_if = { limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 3 } }
		else_if = { 
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 4 } 
			if = {
				limit = { has_character_modifier = holding_two_settlements }
				remove_character_modifier = holding_two_settlements
				add_character_modifier = { modifier = holding_one_settlements }
			}
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 5 }
			remove_character_modifier = holding_one_settlements
			add_character_modifier = { modifier = holding_two_settlements }
			
			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_three_settlements }
				remove_character_modifier = holding_three_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 6 }
			remove_character_modifier = holding_two_settlements
			add_character_modifier = { modifier = holding_three_settlements }
			
			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_four_settlements }
				remove_character_modifier = holding_four_settlements
			}
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 7 }
			remove_character_modifier = holding_three_settlements
			add_character_modifier = { modifier = holding_four_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_five_settlements }
				remove_character_modifier = holding_five_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 8 }
			remove_character_modifier = holding_four_settlements
			add_character_modifier = { modifier = holding_five_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_more_than_five_settlements }
				remove_character_modifier = holding_more_than_five_settlements
			}
		}
		else = {
			if = {
				limit = {
					exists = var:num_settled_wilderness		var:num_settled_wilderness > 8
				}
				remove_character_modifier = holding_five_settlements
				add_character_modifier = { modifier = holding_more_than_five_settlements }
			}
		}
	}
}

## Adding upkeep to Counts on dynasty modifier
## Triggered in wastelands.0007
wastelands.0012 = { # Adding upkeep to dynasty with special modifier, check lotr_wastelands_modifiers, count tier
	hidden = yes

	immediate = {
		if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 0 }
			remove_character_modifier = holding_one_settlements
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 1 }
			add_character_modifier = { modifier = holding_one_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_two_settlements }
				remove_character_modifier = holding_two_settlements
			}
		}
		else_if = { 
			limit = {
				OR = {
					exists = var:num_settled_wilderness		var:num_settled_wilderness = 2 
					exists = var:num_settled_wilderness		var:num_settled_wilderness = 3
				}
			} 
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 4 }
			remove_character_modifier = holding_one_settlements
			add_character_modifier = { modifier = holding_two_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_three_settlements }
				remove_character_modifier = holding_three_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 5 }
			remove_character_modifier = holding_two_settlements
			add_character_modifier = { modifier = holding_three_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_four_settlements }
				remove_character_modifier = holding_four_settlements
			}
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 6 }
			remove_character_modifier = holding_three_settlements
			add_character_modifier = { modifier = holding_four_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_five_settlements }
				remove_character_modifier = holding_five_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 7 }
			remove_character_modifier = holding_four_settlements
			add_character_modifier = { modifier = holding_five_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_more_than_five_settlements }
				remove_character_modifier = holding_more_than_five_settlements
			}
		}
		else = {
			if = {
				limit = {
					exists = var:num_settled_wilderness		var:num_settled_wilderness > 7
				}
				remove_character_modifier = holding_five_settlements
				add_character_modifier = { modifier = holding_more_than_five_settlements }
			}
		}
	}
}

## Adding upkeep to Duke based on dynasty modifier
## Triggered in wastelands.0007
wastelands.0013 = { # Adding upkeep to dynasty with special modifier, check lotr_wastelands_modifiers, duke tier
	hidden = yes

	immediate = {
		if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 0 }
			remove_character_modifier = holding_one_settlements
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 1 }
			add_character_modifier = { modifier = holding_one_settlements }
		}
		else_if = { 
			limit = {
				OR = {
					exists = var:num_settled_wilderness		var:num_settled_wilderness = 2 
					exists = var:num_settled_wilderness		var:num_settled_wilderness = 3
				}
			} 
		}
		else_if = { 
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 4 } 
			if = {
				limit = { has_character_modifier = holding_two_settlements }
				remove_character_modifier = holding_two_settlements
				add_character_modifier = { modifier = holding_one_settlements }
			}
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 5 }
			remove_character_modifier = holding_one_settlements
			add_character_modifier = { modifier = holding_two_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_three_settlements }
				remove_character_modifier = holding_three_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 6 }
			remove_character_modifier = holding_two_settlements
			add_character_modifier = { modifier = holding_three_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_four_settlements }
				remove_character_modifier = holding_four_settlements
			}
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 7 }
			remove_character_modifier = holding_three_settlements
			add_character_modifier = { modifier = holding_four_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_five_settlements }
				remove_character_modifier = holding_five_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 8 }
			remove_character_modifier = holding_four_settlements
			add_character_modifier = { modifier = holding_five_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_more_than_five_settlements }
				remove_character_modifier = holding_more_than_five_settlements
			}
		}
		else = {
			if = {
				limit = {
					exists = var:num_settled_wilderness		var:num_settled_wilderness > 8
				}
				remove_character_modifier = holding_five_settlements
				add_character_modifier = { modifier = holding_more_than_five_settlements }
			}
		}
	}
}

## Adding upkeep to King on dynasty modifier
## Triggered in wastelands.0007
wastelands.0014 = { # Adding upkeep to dynasty with special modifier, check lotr_wastelands_modifiers, king tier
	hidden = yes

	immediate = {
		if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 0 }
			remove_character_modifier = holding_one_settlements
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 1 }
			add_character_modifier = { modifier = holding_one_settlements }
		}
		else_if = { 
			limit = {
				OR = {
					exists = var:num_settled_wilderness		var:num_settled_wilderness = 2 
					exists = var:num_settled_wilderness		var:num_settled_wilderness = 3
					exists = var:num_settled_wilderness		var:num_settled_wilderness = 4
				}
			} 
		}
		else_if = { 
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 5 } 
			if = {
				limit = { has_character_modifier = holding_two_settlements }
				remove_character_modifier = holding_two_settlements
				add_character_modifier = { modifier = holding_one_settlements }
			}
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 6 }
			remove_character_modifier = holding_one_settlements
			add_character_modifier = { modifier = holding_two_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_three_settlements }
				remove_character_modifier = holding_three_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 7 }
			remove_character_modifier = holding_two_settlements
			add_character_modifier = { modifier = holding_three_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_four_settlements }
				remove_character_modifier = holding_four_settlements
			}
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 8 }
			remove_character_modifier = holding_three_settlements
			add_character_modifier = { modifier = holding_four_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_five_settlements }
				remove_character_modifier = holding_five_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 9 }
			remove_character_modifier = holding_four_settlements
			add_character_modifier = { modifier = holding_five_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_more_than_five_settlements }
				remove_character_modifier = holding_more_than_five_settlements
			}
		}
		else = {
			if = {
				limit = {
					exists = var:num_settled_wilderness		var:num_settled_wilderness > 9
				}
				remove_character_modifier = holding_five_settlements
				add_character_modifier = {
					modifier = holding_more_than_five_settlements
				}
			}
		}
	}
}

## Adding upkeep to Emporer on dynasty modifier
## Triggered in wastelands.0007
wastelands.0015 = { # Adding upkeep to dynasty with special modifier, check lotr_wastelands_modifiers, emporer tier
	hidden = yes

	immediate = {
		if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 0 }
			remove_character_modifier = holding_one_settlements
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 1 }
			add_character_modifier = { modifier = holding_one_settlements }
		}
		else_if = { 
			limit = {
				OR = {
					exists = var:num_settled_wilderness		var:num_settled_wilderness = 2 
					exists = var:num_settled_wilderness		var:num_settled_wilderness = 3
					exists = var:num_settled_wilderness		var:num_settled_wilderness = 4
					exists = var:num_settled_wilderness		var:num_settled_wilderness = 5
				}
			} 
		}
		else_if = { 
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 6 } 
			if = {
				limit = { has_character_modifier = holding_two_settlements }
				remove_character_modifier = holding_two_settlements
				add_character_modifier = { modifier = holding_one_settlements }
			}
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 7 }
			remove_character_modifier = holding_one_settlements
			add_character_modifier = { modifier = holding_two_settlements }
			
			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_three_settlements }
				remove_character_modifier = holding_three_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 8 }
			remove_character_modifier = holding_two_settlements
			add_character_modifier = { modifier = holding_three_settlements }
			
			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_four_settlements }
				remove_character_modifier = holding_four_settlements
			}
		}
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 9 }
			remove_character_modifier = holding_three_settlements
			add_character_modifier = { modifier = holding_four_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_five_settlements }
				remove_character_modifier = holding_five_settlements
			}
		} 
		else_if = {
			limit = { exists = var:num_settled_wilderness		var:num_settled_wilderness = 10 }
			remove_character_modifier = holding_four_settlements
			add_character_modifier = { modifier = holding_five_settlements }

			### BACKWARDS COMPATABILITY ###
			if = {
				limit = { has_character_modifier = holding_more_than_five_settlements }
				remove_character_modifier = holding_more_than_five_settlements
			}
		}
		else = {
			if = {
				limit = {
					exists = var:num_settled_wilderness		var:num_settled_wilderness > 10
				}
				remove_character_modifier = holding_five_settlements
				add_character_modifier = { modifier = holding_more_than_five_settlements }
			}
		}
	}
}

wastelands.0020 = {
	hidden = yes

	trigger = {
		OR = {
			monthly_character_income < 0.3
			above_settlement_limit = yes
		}
		is_ai = yes
	}

	immediate = {
		every_held_title = {
			limit = {
				tier = tier_county
				title_province ?= { has_holding_type = settlement_holding }
			}
			add_to_list = targeted_titles
		}

		every_in_list = {
			list = targeted_titles

			if = {
				limit = { 
					holder = { above_settlement_limit = yes }
					title_province ?= { has_building = settlement_01 }
				}
				make_settlement_county_wilderness = { COUNTY = this }
			}
			else_if = {
				limit = { 
					holder = { above_settlement_limit = yes }
					title_province ?= { has_building = settlement_02 }
				}
				make_settlement_county_wilderness = { COUNTY = this }
			}
			else_if = {
				limit = { 
					holder = { above_settlement_limit = yes }
					title_province ?= { has_building = settlement_03 }
				}
				make_settlement_county_wilderness = { COUNTY = this }
			}
		}
	}
}


## EVENTS DURING THE COLONIZATION PROCESS

# 0100 - bad climate conditions (-progress)
# 0110 - wolves (-progress)
# 0120 - bears (forest)  (-progress)
# 0130 - spiders (deep_forest) (-progress)
# 0140 - bad skills (-progress, -prestige)
# 0150 - raid (-progress, -gold)
# 0160 - haunted place (swamps) (-progress, -faith)


# 0200 - good climate conditions (progress)
# 0210 - hermit (progress, faith)
# 0220 - good skills (progress)
# 0230 - peddlers (progress, gold)
# 0240 - migrants (progress, prestige)