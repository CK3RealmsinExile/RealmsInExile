namespace = dwarven

### Dwarven Events ###
#			dwarven.0100-0101 	Widow events
#			dwarven.0205-031	Mirrormere events
#			dwarven.1000		Dwarven intro event
#			dwarven.5000-5103	Dwarven Reincarnation Events
#			dwarven.6001-6002	Durin's Folk Unifier events
#			dwarven.6200-6203   Unite the Blue Mountains decision events
#			dwarven.9000-9002	Dwarven Shaving Events
#			dwarven.9000		I shave someone
#			dwarven.9001		I am shaved
#			dwarven.9002		Bearded again !
# 			dwarven.9500		Dwarven Marriage Choice
# 			dwarven.9600		Random Dwarven events adapted from RICE Pamir
# 			dwarven.9700  		Dwarven Enter/Leave Realm Events
# 			dwarven.9800-9801  	Dwarven Titular Kingdom Title management
#			dwarven.9900-9999   Dwarven Venerate the Ancestor Events

###################################
### Dwarven Widow Events ###
###################################

dwarven.0100 = { #Check for dead character
	content_source = realms_dlc
	type = character_event
	hidden = yes
	
	immediate = {
		save_scope_as = dead_character
		every_spouse = {
			limit = { 
				NOT = { this = root }
				OR = {
					culture = { has_cultural_pillar = heritage_longbeard }
					culture = { has_cultural_pillar = heritage_firebeard }
					culture = { has_cultural_pillar = heritage_broadbeam }
					culture = { has_cultural_pillar = heritage_ironfist }
					culture = { has_cultural_pillar = heritage_stiffbeard }
					culture = { has_cultural_pillar = heritage_blacklock }
					culture = { has_cultural_pillar = heritage_stonefoot }
				}
                OR = {
					has_game_rule = no_dwarven_remarriage
					has_game_rule = dwarven_remarriage_allowed
				}
				
				any_child = { count > 0 }
			}
			trigger_event = {
				id = dwarven.0101
				days = 1
			}
		}
		every_spouse = {
			limit = { 
				NOT = { this = root }
				is_elf = yes
			}
			add_trait = widowed
		}
	}

}

dwarven.0101 = { #Widow event for widow 
	content_source = realms_dlc
	type = character_event
	title = dwarven.0101.t
	desc = {
		desc = dwarven.0101.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = { 
					has_game_rule = no_dwarven_remarriage
				}
				desc = dwarven.0101.desc.no.dwarven.remarriage
			}
			triggered_desc = {
				trigger = { 
					has_game_rule = dwarven_remarriage_allowed
				}
				desc = dwarven.0101.desc.dwarven.remarriage.allowed
			}
		}
	}
	theme = unfriendly
	left_portrait = {
		character = root
		animation = grief
	}
	right_portrait = {
		character = scope:dead_character
		animation = dead
	}
	option = { # Become a widow
		name = dwarven.0101.a
		ai_chance = {
			base = 100
		}
		add_trait = widowed
		stress_impact = {
			lustful = major_stress_impact_gain
			lifestyle_reveler = medium_stress_impact_gain
		}
	}
	option = { # I will find another
		name = dwarven.0101.b
		trigger = {
			has_game_rule = dwarven_remarriage_allowed
		}
		ai_chance = {
			base = 0			
		}
		add_piety_level = -1
		add_character_modifier = refused_widowhood_modifier
		stress_impact = {
			chaste = major_stress_impact_gain
			content = medium_stress_impact_gain
		}	
	}
}

###################################
### Dwarven Introduction Events ###
###################################

dwarven.0205 = { # Arrive at Mirrormere
	content_source = realms_dlc
	type = character_event
	title = dwarven.0205.t
	theme = death
	desc = dwarven.0205.desc.2

	orphan = yes

	theme = martial_strategy_focus
	
	right_portrait = {
		character = root
		animation = personality_honorable
	}

	left_portrait = {
		character = scope:companion_1
		animation = personality_honorable
		trigger = { exists = scope:companion_1 }
	}

	lower_left_portrait = {
		character = scope:companion_2
		animation = personality_honorable
		trigger = { exists = scope:companion_2 }
	}

	cooldown = { years = 10 }

	option = {
		name = dwarven.0205.a
		death = { death_reason = death_battle }
		destroy_title = title:d_balins_expedition
	}
	
	option = {
		name = dwarven.0205.b

		trigger = { 
			exists = scope:companion_2 
			exists = scope:companion_1 
		}

		random_list = {
			85 = {
				scope:companion_1 = { death = { death_reason = death_battle } }
				scope:companion_2 = { death = { death_reason = death_battle } }
				increase_wounds_effect = { REASON = fight }
			}
			15 = {
				death = { death_reason = death_battle }
				destroy_title = title:d_balins_expedition
				scope:companion_1 = { 
					increase_wounds_effect = { REASON = fight }
				}
				scope:companion_2 = { 
					increase_wounds_effect = { REASON = fight }
				}
			}
		}
	}

	after = { trigger_event = { id = dwarven.0210 days = 5 } }
}

dwarven.0210 = { # Arrive at Mirrormere
	content_source = realms_dlc
	type = character_event
	title = dwarven.0210.t
	theme = death
	desc = dwarven.0210.desc

	theme = martial_strategy_focus
	
	right_portrait = {
		character = root
		animation = personality_honorable
	}

	cooldown = { years = 10 }

	immediate = {
		random_county_in_region = {
			region = middleearth_mountains_misty_balrog_struggle_region
			limit = { 
				holder = { 
					is_orc = yes 
					is_ai = yes 
					is_independent_ruler = yes
					NOT = { has_truce = root }
				} 
			}
			holder = { save_scope_as = first_ruler }
		}

		random_county_in_region = {
			region = middleearth_mountains_misty_balrog_struggle_region
			limit = { 
				holder = { 
					is_orc = yes 
					is_ai = yes 
					is_independent_ruler = yes
					NOT = { has_truce = root }
					NOT = { this = scope:first_ruler }
				} 
			}
			holder = { save_scope_as = second_ruler }
		}

		random_county_in_region = {
			region = middleearth_mountains_misty_balrog_struggle_region
			limit = { 
				holder = { 
					is_orc = yes 
					is_ai = yes 
					is_independent_ruler = yes
					NOT = { has_truce = root }
					NOR = { 
						this = scope:first_ruler 
						this = scope:second_ruler 
					}
				} 
			}
			holder = { save_scope_as = third_ruler }
		}
	}

	option = {
		name = dwarven.0210.a
		remove_variable = cannot_cancel_travel
		scope:first_ruler = {
			start_war = {
				casus_belli = county_conquest_cb
				target = root
				target_title = title:c_chamber_of_mazarbul
			}
		}

		scope:second_ruler = {
			start_war = {
				casus_belli = county_conquest_cb
				target = root
				target_title = title:c_chamber_of_mazarbul
			}
		}
		scope:third_ruler = {
			start_war = {
				casus_belli = county_conquest_cb
				target = root
				target_title = title:c_chamber_of_mazarbul
			}
		}
	}
}

dwarven.0331 = {
	hidden = yes

	immediate = {
		current_travel_plan.travel_plan_owner ?= { on_end_travel_title_change_effect = yes }
		scope:selected_county.county = { generate_coa = yes }
	}
}

##############################################
# dwarven.1000 Introduction to Dwarves event #
##############################################

dwarven.1000 = { #Introduction to Dwarven characters
	title = dwarven.1000.t
	desc = dwarven.1000.desc
	content_source = realms_dlc
	theme = realm
	
	immediate = { play_music_cue = lotr_cue_dwarves }
	
	left_portrait = {
		character = root
		animation = thinking
	}
	
	trigger = { is_dwarf = yes }
	
	option = { # All right, I get it
		name = dwarven.1000.a
	}
}

####################################################
###  Dwarven Fathers Reincarnation System by Juke ##
####################################################

dwarven.5000 = { # Game Start Reincarnation System Setup Event
	hidden = yes
	scope = none
	
	immediate = {
		### Save the clans to a list and set up scopes
		dynasty:dynasty_durin	= { # Durin - Longbeards
			add_to_list = dorfdad_dynasties
			set_variable = { name = dorfdad value = character:lineofdurin1 }
		}
		dynasty:dynasty_uri		= { # Uri - Firebeards
			add_to_list = dorfdad_dynasties
			set_variable = { name = dorfdad value = character:lineofuri0 }
		}
		dynasty:dynasty_dwalin	= { # Dwalin - Broadbeams
			add_to_list = dorfdad_dynasties
			set_variable = { name = dorfdad value = character:lineofdwalin0 }
		}
		dynasty:dynasty_sindri	= { # Sindri - Ironfists
			add_to_list = dorfdad_dynasties
			set_variable = { name = dorfdad value = character:lineofsindri0 }
		}
		dynasty:dynasty_thulin	= { # Thulin - Stiffbeards
			add_to_list = dorfdad_dynasties
			set_variable = { name = dorfdad value = character:lineofthulin0 }
		}
		dynasty:dynasty_thrar	= { # Thrar - Blacklocks
			add_to_list = dorfdad_dynasties
			set_variable = { name = dorfdad value = character:lineofthrar1 }
		}
		dynasty:dynasty_bavor	= { # Bavor - Stonefoots
			add_to_list = dorfdad_dynasties
			set_variable = { name = dorfdad value = character:lineofbavor0 }
		}
		
		### Set up Dynasty Variables
		every_in_list = {
			list = dorfdad_dynasties
			if = { # Generation 4
				limit = { current_year >= 3900 }
				set_variable = {
					name = dorfdad_incarnations
					value = 4
				}
			}
			if = { # Generation 5
				limit = { current_year >= 4900 }
				change_variable = {
					name = dorfdad_incarnations
					add = 1
				}
			}
			if = { # Generation 6
				limit = { current_year >= 5900 }
				change_variable = {
					name = dorfdad_incarnations
					add = 1
				}
			}
		}
		
		debug_log = "Dorfdad Reincarnation System set up!"

		# Make Uri VI into a proper reincarnate
#		if = {
#			limit = {
#				character:lineofuriVI ?= {
#					is_alive = yes
#				}
#			}
			# Create the Story
#			character:lineofuriVI = {
#				create_story = story_dorfdad_reincarnation
#				dynasty = {
#					set_variable = {
#						name = dorfdad_incarnations
#						value = 6
#					}
#				}
#				add_character_flag = scripted_appearance_uri
#				add_character_flag = no_headgear
#
#	        	# Get the Name
#	        	change_first_name = _Uri
#	        	# Get the trait
#	        	add_trait = dwarf_father
#			}
#		}
	}
}

scripted_trigger dwarven.5001_direct_male_line = {
	NOT = {
		any_sibling = {
			is_alive = yes
			is_female = no
			age >= prev.age
			dynasty = ROOT.dynasty
			NOR = {
				has_trait = bastard
				has_trait = bastard_founder 
				
			}
			trigger_if = {
				limit = {
					exists = father
				}
				father = prev.father
			}
			trigger_if = {
				limit = {
					exists = scope:father
					exists = scope:real_father
				}
				scope:father = scope:real_father
			}
		}
	}
}

dwarven.5001 = { # On childbirth: Random chance to be a reincarnation
	type = character_event
	hidden = yes
	trigger = {
		# Basic Stuff
		trigger_if = {
			limit = {
				exists = scope:father
				exists = scope:real_father
			}
			scope:father = scope:real_father
		}
		NOR = {
			has_trait = bastard
			has_trait = bastard_founder
		}
		is_female = no
		is_lowborn = no
		is_dwarf = yes
		# Must be in royal dynasty, must have reincarnated less than seven times
		dynasty = {
			#is_in_list = dorfdad_dynasties
			OR = {
				this = dynasty:dynasty_durin
				this = dynasty:dynasty_uri
				this = dynasty:dynasty_dwalin
				this = dynasty:dynasty_sindri
				this = dynasty:dynasty_thulin
				this = dynasty:dynasty_thrar
				this = dynasty:dynasty_bavor
			}
			exists = var:dorfdad
			exists = var:dorfdad_incarnations
			var:dorfdad_incarnations < 7
		}
		# Must be of the same dwarven clan as dorfdad
		dynasty.var:dorfdad.culture = { has_same_culture_heritage = root.culture }
		# No current reincarnation
		NOT = {
			dynasty = {
				any_dynasty_member = {
					is_alive = yes
					OR = {
						has_trait = dwarf_father
						any_owned_story = {
							story_type = story_dorfdad_reincarnation
						}
					}
				}
			}
		}
		# No other reincarnations exist
		# NOT = { dynasty.var:current_reincarnation ?= { is_alive = yes } }
		NOT = {
			dynasty = {
				any_dynasty_member = {
					any_owned_story = {
						story_type = story_dorfdad_reincarnation
					}
				}
			}
		}
	}
	
	immediate = {
		if = { # See if they could be a reincarnation
			limit = {
				# Dad must be able to inherit
				NOR = {
					father = { 
						house = root.house
						has_trait = disinherited
					}
					father.father = { 
						house = root.house
						has_trait = disinherited
					}
					father.father.father = { 
						house = root.house
						has_trait = disinherited
					}
				}
				# 100 Year Cooldown after the death of the last guy
				trigger_if = {
					limit = {
						dynasty = { exists = var:dorfdad_cooldown_year }
					}
					dynasty = { current_year >= var:dorfdad_cooldown_year }
				}
				# Must be direct male-line descendant and oldest child
				dwarven.5001_direct_male_line = yes
				father = {
					is_alive = yes
					house = root.house
					OR = {
						is_dynast = yes
						AND = {
							dwarven.5001_direct_male_line = yes
							father = {
								is_alive = yes
								house = root.house
								OR = {
									is_dynast = yes
									AND = {
										dwarven.5001_direct_male_line = yes
										father = {
											is_alive = yes
											house = root.house
											OR = {
												is_dynast = yes
												AND = {
													dwarven.5001_direct_male_line = yes
													father = {
														is_alive = yes
														house = root.house
														is_dynast = yes
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
				# # Parent, grandparent or great grandparent must be a king or higher
				any_ancestor = {
					house = root.house
					is_landed = yes
					highest_held_title_tier >= tier_kingdom
				}
			}
			debug_log = "Testing for dorfdad reincarnation!"
			random = {
				chance = {
					value = 10
					if = { # Some characters historically sire incarnates
						limit = {
							father = {
								is_alive = yes
								house = root.house
								has_character_flag = historically_conceived_dorfdad
							}
							has_game_rule = default_ai_behavior
						}
						add = 90
					}
					else_if = { # Some characters historically sire incarnates
						limit = {
							father = {
								is_alive = yes
								house = root.house
								has_character_flag = historically_conceived_dorfdad
							}
							has_game_rule = weighted_ai_behavior
						}
						add = 65
					}
					else_if = { # Some characters historically sire incarnates
						limit = {
							father = {
								is_alive = yes
								house = root.house
								has_character_flag = historically_conceived_dorfdad
							}
							NOR = {
								has_game_rule = default_ai_behavior
								has_game_rule = weighted_ai_behavior
							}
						}
						add = 40
					}
					if = { # Player children get a higher chance, as a treat
						limit = {
							any_ancestor = {
								is_alive = yes
								house = root.house
								is_ai = no
							}
						}
						add = 5
					}
				}
				# Create the Story
				create_story = story_dorfdad_reincarnation
				debug_log = "Found a possible Dorfdad Reincarnation!"
			}
		}
		else = { # They still fulfill some requirements, chance to make them emulate their Dwarf father as a semi-red flag
			random = {
				chance = {
					value = 5
					if = { # Bad traits
						limit = {
							OR = {
								has_trait = physique_bad
								has_trait = beauty_bad
								has_trait = intellect_bad
							}
						}
						value = 0
					}
				}
				trigger_event = {
					id = dwarven.5002
					years = { 5 10 }
				}
			}
		}
	}
}

dwarven.5002 = { # I seem to be reflection of my dwarven father
	content_source = realms_dlc
	type = character_event
	title = dwarven.5002.t
	desc = dwarven.5002.desc
	theme = family
	override_background = {
		reference = market_dwarven
	}
	
	trigger = {
		is_dwarf = yes
		dynasty.var:dorfdad = { exists = this }
	}
	
	left_portrait = {
		character = root
	}
	
	right_portrait = {
		character = scope:my_dorfdad
	}
	
	immediate = {
		# Save first incarnation for event scopes
		dynasty.var:dorfdad ?= { save_scope_as = my_dorfdad }
		# Save self for event scopes
		save_scope_as = new_dorfdad
		# Add "reflection of" modifiers for life expectancy
		if = {
			limit = { 
				scope:my_dorfdad = character:lineofdurin1
			}
			add_character_modifier = reflection_of_durin
		}
		else_if = {
			limit = { 
				scope:my_dorfdad = character:lineofuri0
			}
			add_character_modifier = reflection_of_uri
		}
		else_if = {
			limit = { 
				scope:my_dorfdad = character:lineofdwalin0
			}
			add_character_modifier = reflection_of_dwalin
		}
		else_if = {
			limit = { 
				scope:my_dorfdad = character:lineofsindri0
			}
			add_character_modifier = reflection_of_sindri
		}
		else_if = {
			limit = { 
				scope:my_dorfdad = character:lineofthulin0
			}
			add_character_modifier = reflection_of_thulin
		}
		else_if = {
			limit = { 
				scope:my_dorfdad = character:lineofthrar1
			}
			add_character_modifier = reflection_of_thrar
		}
		else_if = {
			limit = { 
				scope:my_dorfdad = character:lineofbavor0
			}
			add_character_modifier = reflection_of_bavor
		}
		dorfdad_one_personality_trait_effect = yes
		add_learning_skill = 1
		add_piety = 300
	}
	
	option = {
		name = dwarven.5002.durin
		custom_tooltip = dwarven.5002.durin.tt
		trigger = {
			scope:my_dorfdad = character:lineofdurin1
		}
		every_ruler = {
			limit = {
				is_landed = yes
				NOT = { this = root }
				OR = {
					dynasty = root.dynasty
					culture = { has_same_culture_heritage = root.culture }
				}
			}
			trigger_event = dwarven.5003 # Clan news
		}
	}
	option = {
		name = dwarven.5002.uri
		custom_tooltip = dwarven.5002.uri.tt
		trigger = {
			scope:my_dorfdad = character:lineofuri0
		}
		every_ruler = {
			limit = {
				is_landed = yes
				NOT = { this = root }
				OR = {
					dynasty = root.dynasty
					culture = { has_same_culture_heritage = root.culture }
				}
			}
			trigger_event = dwarven.5003 # Clan news
		}
	}
	option = {
		name = dwarven.5002.dwalin
		custom_tooltip = dwarven.5002.dwalin.tt
		trigger = {
			scope:my_dorfdad = character:lineofdwalin0
		}
		every_ruler = {
			limit = {
				is_landed = yes
				NOT = { this = root }
				OR = {
					dynasty = root.dynasty
					culture = { has_same_culture_heritage = root.culture }
				}
			}
			trigger_event = dwarven.5003 # Clan news
		}
	}
	option = {
		name = dwarven.5002.sindri
		custom_tooltip = dwarven.5002.sindri.tt
		trigger = {
			scope:my_dorfdad = character:lineofsindri0
		}
		every_ruler = {
			limit = {
				is_landed = yes
				NOT = { this = root }
				OR = {
					dynasty = root.dynasty
					culture = { has_same_culture_heritage = root.culture }
				}
			}
			trigger_event = dwarven.5003 # Clan news
		}
	}
	option = {
		name = dwarven.5002.thulin
		custom_tooltip = dwarven.5002.thulin.tt
		trigger = {
			scope:my_dorfdad = character:lineofthulin0
		}
		every_ruler = {
			limit = {
				is_landed = yes
				NOT = { this = root }
				OR = {
					dynasty = root.dynasty
					culture = { has_same_culture_heritage = root.culture }
				}
			}
			trigger_event = dwarven.5003 # Clan news
		}
	}
	option = {
		name = dwarven.5002.thrar
		custom_tooltip = dwarven.5002.thrar.tt
		trigger = {
			scope:my_dorfdad = character:lineofthrar1
		}
		every_ruler = {
			limit = {
				is_landed = yes
				NOT = { this = root }
				OR = {
					dynasty = root.dynasty
					culture = { has_same_culture_heritage = root.culture }
				}
			}
			trigger_event = dwarven.5003 # Clan news
		}
	}
	option = {
		name = dwarven.5002.bavor
		custom_tooltip = dwarven.5002.bavor.tt
		trigger = {
			scope:my_dorfdad = character:lineofbavor0
		}
		every_ruler = {
			limit = {
				is_landed = yes
				NOT = { this = root }
				OR = {
					dynasty = root.dynasty
					culture = { has_same_culture_heritage = root.culture }
				}
			}
			trigger_event = dwarven.5003 # Clan news
		}
	}
	option = {
		name = dwarven.5002.fallback
		custom_tooltip = dwarven.5002.fallback.tt
		trigger = { always = no }
		fallback = yes
		every_ruler = {
			limit = {
				is_landed = yes
				NOT = { this = root }
				OR = {
					dynasty = root.dynasty
					culture = { has_same_culture_heritage = root.culture }
				}
			}
			trigger_event = dwarven.5003 # Clan news
		}
	}
}

dwarven.5003 = { # Family informed of reflection of dwarven father
	content_source = realms_dlc
	type = character_event
	title = dwarven.5003.t
	desc = dwarven.5003.desc
	theme = family
	override_background = {
		reference = market_dwarven
	}
	
	trigger = {
		is_dwarf = yes
	}
	
	left_portrait = {
		character = root
		animation = idle
	}
	
	right_portrait = {
		character = scope:new_dorfdad
	}
	
	immediate = {
		show_as_tooltip = {
			scope:new_dorfdad = {
				# Add "reflection of" modifiers for life expectancy
				if = {
					limit = { 
						scope:my_dorfdad = character:lineofdurin1
					}
					add_character_modifier = reflection_of_durin
				}
				else_if = {
					limit = { 
						scope:my_dorfdad = character:lineofuri0
					}
					add_character_modifier = reflection_of_uri
				}
				else_if = {
					limit = { 
						scope:my_dorfdad = character:lineofdwalin0
					}
					add_character_modifier = reflection_of_dwalin
				}
				else_if = {
					limit = { 
						scope:my_dorfdad = character:lineofthrar1
					}
					add_character_modifier = reflection_of_thrar
				}
				else_if = {
					limit = { 
						scope:my_dorfdad = character:lineofsindri0
					}
					add_character_modifier = reflection_of_sindri
				}
				else_if = {
					limit = { 
						scope:my_dorfdad = character:lineofthulin0
					}
					add_character_modifier = reflection_of_thulin
				}
				else_if = {
					limit = { 
						scope:my_dorfdad = character:lineofbavor0
					}
					add_character_modifier = reflection_of_bavor
				}
				custom_tooltip = dwarven.5003.tt
				add_learning_skill = 1
				add_piety = 300
			}
		}
	}
	
	option = {
		name = dwarven.5003.a
	}
}

dwarven.5103 = { # Delay event
	hidden  = yes
	
	immediate = {
		trigger_event = {
			id = dwarven.5100
			years = 2
		}
	}
}

dwarven.5100 = { # Upon turning 18: Reincarnate realized who they are, is confirmed and renamed
	content_source = realms_dlc
	type = character_event
	title = dwarven.5100.t
	desc = dwarven.5100.desc
	theme = stewardship_duty_focus
	override_background = {
		reference = market_dwarven
	}
	
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	right_portrait = {
		character ?= scope:my_dorfdad
	}
	
	trigger = {
		any_owned_story = {
			story_type = story_dorfdad_reincarnation
		}
		#dynasty = { var:current_reincarnation ?= root }
	#	NOT = {
	#		dynasty = {
	#			any_dynasty_member = {
	#				limit = {
	#					NOT = { this = ROOT }
	#				}
	#				any_owned_story = {
	#					story_type = story_dorfdad_reincarnation
	#				}
	#			}
	#		}
	#	}
		
		# Must still be of the correct dwarven clan
		dynasty.var:dorfdad.culture = { has_same_culture_heritage = root.culture }
		#scope:dorfdad.culture ?= { has_same_culture_heritage = root.culture }
		
		# He or his direct ancestor must be dynasty head
		OR = {
			is_dynast = yes
			any_ancestor = {
				is_dynast = yes
				is_alive = yes
				is_dwarf = yes
				house = root.house
			}
		}
		## He or one of his direct ancestors must hold a kingdom
		OR = {
			AND = {
				is_landed = yes
				highest_held_title_tier >= tier_kingdom
				is_dwarf = yes
			}
			any_ancestor = {
				is_alive = yes
				is_landed = yes
				highest_held_title_tier >= tier_kingdom
				is_dwarf = yes
				house = root.house
			}
		}
		is_dwarf = yes
	}
	
	immediate = {
		# Change Name, education, etc
		become_dorfdad_effect = yes
		debug_log = "Confirmed a new Dorfdad Reincarnation!"
	}
	option = {
		name = dwarven.5100.a
		every_ruler = {
			limit = {
				is_ruler = yes
				NOT = { this = root }
				OR = {
					dynasty = root.dynasty
					culture = { has_same_culture_heritage = root.culture }
				}
			}
			trigger_event = dwarven.5101 # Clan news
		}
		
		# Minor news for everyone else, major news for dwarves
		if = {
			limit = { # Minor News
				has_game_rule = all_news
			}
			every_player = { #Global News Announcement
				trigger_event = {
					id = news_event.0025
					days = 5
				}
			}
		}
		else_if = {
			limit = { # Major News
				NOT = { has_game_rule = no_news }
			}
			every_player = { #Global News Announcement
				limit = { is_dwarf = yes }
				trigger_event = {
					id = news_event.0025
					days = 5
				}
			}
		}
	}
}

dwarven.5101 = { # News of reincarnation reach close family / clan
	content_source = realms_dlc
	type = character_event
	title = dwarven.5101.t
	desc = {
		desc = dwarven.5101.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = { 
					scope:my_dorfdad = character:lineofdurin1
				}
				desc = dwarven.5101.desc.longbeard
			}
			triggered_desc = {
				trigger = { 
					scope:my_dorfdad = character:lineofuri0
				}
				desc = dwarven.5101.desc.firebeard
			}
			triggered_desc = {
				trigger = { 
					scope:my_dorfdad = character:lineofdwalin0
				}
				desc = dwarven.5101.desc.broadbeam
			}
			triggered_desc = {
				trigger = { 
					scope:my_dorfdad = character:lineofthrar1
				}
				desc = dwarven.5101.desc.blacklock
			}
			triggered_desc = {
				trigger = { 
					scope:my_dorfdad = character:lineofsindri0
				}
				desc = dwarven.5101.desc.ironfist
			}
			triggered_desc = {
				trigger = { 
					scope:my_dorfdad = character:lineofthulin0
				}
				desc = dwarven.5101.desc.stiffbeard
			}
			triggered_desc = {
				trigger = { 
					scope:my_dorfdad = character:lineofbavor0
				}
				desc = dwarven.5101.desc.stonefoot
			}
			desc = dwarven.5101.desc.fallback
		}
		desc = dwarven.5101.desc.outro
	}
	theme = realm
	override_background = {
		reference = throne_room_dwarf
	}
	
	trigger = {
		is_dwarf = yes
	}
	
	left_portrait = {
		character = root
		animation = shock
	}
	
	lower_center_portrait = {
		character ?= scope:my_dorfdad
	}
	
	right_portrait = {
		character = scope:new_dorfdad
		animation = personality_honorable
	}
	
	immediate = {
		show_as_tooltip = {
			scope:new_dorfdad ?= { become_dorfdad_effect = yes }
		}
	}
	
	
	option = {
		name = {
			trigger = {
				scope:new_dorfdad = {
					is_close_or_extended_family_of = root
				}
			}
			text = dwarven.5101.a.close
		}
		name = dwarven.5101.a
		if = {
			limit = {
				is_dwarf = yes
				is_ruler = yes
				scope:new_dorfdad.house = root.house
				OR = {
					is_parent_of = scope:new_dorfdad
					is_grandparent_of = scope:new_dorfdad
					is_great_grandparent_of = scope:new_dorfdad
					is_dynast = yes
				}
			}
			custom_tooltip = dwarven.5101.a.tt
			set_designated_heir_unsafe = scope:new_dorfdad
		}
	}
}

dwarven.5102 = { # News of dwarf fathers death
	content_source = realms_dlc
	type = character_event
	title = dwarven.5102.t
	desc = dwarven.5102.desc
	theme = realm
	override_background = {
		reference = durins_door	
	}
	
	trigger = {
		is_dwarf = yes
	}
	
	left_portrait = {
		character = root
		animation = sadness
	}
	
	lower_center_portrait = {
		character ?= scope:my_dorfdad
	}
	
	right_portrait = {
		character = scope:new_dorfdad
	}
	
	option = {
		name = dwarven.5102.a
	}
}

##############################
### Dwarven Shaving Events ###
##############################

# on_new_holder: New High King gets the trait.
dwarven.6001 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven.6001.t
	desc = dwarven.6001.desc.regular
	theme = realm

	left_portrait = {
		character = root
		animation = personality_bold
	}

	trigger = {
		scope:title = title:e_durins_folk
		NOT = { has_trait = durin_unify }
		dynasty = dynasty:dynasty_durin
		is_target_in_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_unify_durins_folk
		}
	}

	immediate = {
		if = {
			limit = { scope:previous_holder ?= { is_alive = yes has_trait = durin_unify } }
			save_scope_as = new_holder
			scope:previous_holder = { trigger_event = dwarven.6002 }
		}
	}

	option = {
		name = dwarven.6001.a
		add_trait = durin_unify
	}
}

# If old holder is still alive, he will lose the trait.
dwarven.6002 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven.6002.t
	desc = dwarven.6002.desc
	theme = realm

	left_portrait = {
		character = root
		animation = shame
	}

	immediate = {
		#This insult cannot be born! That's going in the book...
		play_music_cue = "mx_cue_prison"
	}

	trigger = {
		is_alive = yes
		has_trait = durin_unify
	}

	option = {
		name = dwarven.6002.a
		remove_trait = durin_unify
		stress_impact = {
			base = minor_stress_impact_gain
		}
	}
}

############################
# Unite the Blue Mountains #
###### ~ by Aerien ~ #######

dwarven.6200 = { # Send my call for Unity!
	content_source = realms_dlc
	type = character_event
	title = dwarven.6200.t
	desc = dwarven.6200.desc
	theme = legend
	window = visit_settlement_window
	override_background = { reference = throne_room_dwarf }

	left_portrait = {
		character = root
		animation = happiness
	}

	immediate = {
		save_scope_as = blue_mountains_uniter
		show_as_tooltip = {
			get_title = title:e_blue_mountains
			dynasty = { add_dynasty_prestige = 750 }
		}
	}

	option = { # Send my offer to all western dwarves!
		name = dwarven.6200.a
		custom_tooltip = dwarven.6200.a.tt
		title:e_blue_mountains = {
			every_de_jure_county_holder = {
            	limit = {
					is_independent_ruler = yes
					is_landed = yes
					is_dwarf = yes
					NOT = { THIS = scope:blue_mountains_uniter }
					capital_county = { # If capital is in the Blue Mountains
						title_province = { geographical_region = middleearth_mountains_blue }
					}
				}
				trigger_event = {
					id = dwarven.6201
					days = 2
				}
			}
		}
	}
}

dwarven.6201 = { # Receive the call
	type = letter_event
	sender = scope:sender
	opening = dwarven.6201.opening
	desc = dwarven.6201.desc

	trigger = {
		NOT = { is_at_war_with = title:e_blue_mountains.holder }
		NOT = { root = title:e_blue_mountains.holder }
	}

	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = dwarven.6201
			days = 1
		}
	}

	immediate = {
		title:e_blue_mountains.holder = {
			save_scope_as = sender
		}
		ROOT = {
			save_scope_as = recipient
		}
	}

	option = { 
		name = dwarven.6201.a # True Son of Mahal!
		show_as_tooltip = {
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
				add_claim_on_loss = no
			}
			change_liege = {
				liege = scope:sender
				change = scope:change
			}
			resolve_title_and_vassal_change = scope:change
		}
		hidden_effect = {
			scope:sender = { trigger_event = dwarven.6202 }
		}

		ai_chance = { # AI will say yes
			base = 100
		}
	}

	option = {
		name = dwarven.6201.b # I will remain independent
		show_as_tooltip = {
			if = {
				limit = {
					scope:recipient.primary_title.empire ?= title:e_blue_mountains
				}
				scope:sender = {
					add_unpressed_claim = scope:recipient.primary_title
				}
			}
			add_prestige = 150
		}
		hidden_effect = {
			scope:sender = { trigger_event = dwarven.6203 }
		}
		ai_chance = {
			base = 0 
		}
	}
}

dwarven.6202 = { # Unification accepted
	type = letter_event
	opening = dwarven.6202.opening
	desc = dwarven.6202.desc
	sender = {
		character = scope:recipient
		animation = personality_compassionate
	}

	immediate = {
		scope:recipient = {
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
				add_claim_on_loss = no
			}
			change_liege = {
				liege = scope:sender
				change = scope:change
			}
			resolve_title_and_vassal_change = scope:change
		}
	}

	option = { # Wise choice
		name = dwarven.6202.a
	}
}

dwarven.6203 = { # Unification refused
	type = letter_event
	opening = dwarven.6203.opening
	desc = dwarven.6203.desc
	sender = {
		character = scope:recipient
		animation = personality_bold
	}

	immediate = {
		if = {
			limit = {
				scope:recipient.primary_title.empire ?= title:e_blue_mountains
			}
			scope:sender = {
				add_unpressed_claim = scope:recipient.primary_title
			}
		}
		scope:recipient = { add_prestige = 75 }
	}

	option = { # How dare they!
		name = dwarven.6203.a
	}
}

##############################
### Dwarven Shaving Events ###
##############################

#I shave someone
dwarven.9000 = { #by Brice Underhill
	content_source = realms_dlc
	type = character_event
	title = dwarven.9000.t
	desc = {
		desc = prison.1020.start.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						ai_compassion < 0
						has_relation_rival = scope:recipient
					}
				}
				desc = dwarven.9000.cruel.desc
			}
			desc = prison.1020.compassionate.desc
		}
	}
	theme = prison
	left_portrait = {
		character = scope:actor
		animation = schadenfreude
	}
	right_portrait = {
		character = scope:recipient
		animation = fear
	}

	trigger = { scope:recipient = { is_imprisoned_by = scope:actor } }

	on_trigger_fail = {
		scope:recipient = {
			if = {
				limit = { has_character_flag = is_being_tortured }
				remove_character_flag = is_being_tortured
			}
		}
	}

	immediate = {
		play_music_cue = "mx_cue_prison"
		hidden_effect = {
			#For the text
			save_court_physician_as_effect = { SCOPE_NAME = physician }
			if = {
				limit = { NOT = { exists = scope:physician } }
				random_dummy_gender_physician_effect = yes
				scope:dummy_physician_gender = { save_scope_as = physician }
			}
		}
	}

	option = {
		name = {
			trigger = {
				OR = {
					has_trait = sadistic
					has_relation_rival = scope:recipient
				}
			}
			text = prison.1020.a
		}
		name = {
			trigger = {
				NAND = {
					OR = {
						has_trait = sadistic
						has_relation_rival = scope:recipient
					}
					scope:recipient = { is_lotr_adult = yes }
				}
			}
			text = prison.1020.b
		}
		show_as_tooltip = { shave_recipient_effect = yes }
		scope:recipient = {
			trigger_event = dwarven.9001
		}
	}
}

#I am shaved
dwarven.9001 = { #by Brice Underhill
	content_source = realms_dlc
	type = character_event
	title = dwarven.9000.t
	desc = {
		desc = prison.1021.start.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:actor = {
						OR = {
							ai_compassion < 0
							has_relation_rival = scope:recipient
						}
					}
				}
				desc = dwarven.9001.cruel.desc
			}
			desc = dwarven.9001.compassionate.desc
		}
	}
	theme = prison
	left_portrait = {
		character = root
		animation = fear

	}
	right_portrait = {
		character = scope:actor
		animation = schadenfreude
	}

	trigger = { scope:recipient = { is_imprisoned_by = scope:actor } }

	on_trigger_fail = {
		scope:recipient = {
			if = {
				limit = { has_character_flag = is_being_tortured }
				remove_character_flag = is_being_tortured
			}
		}
	}

	immediate = {
		play_music_cue = "mx_cue_prison"
	}

	option = {
		name = {
			trigger = { is_lotr_adult = yes }
			text = dwarven.9001.a
		}
		shave_recipient_effect = yes
	}

	after = {
		add_character_flag = house_feud_shaving_flag
		house_feud_torture_event_effect = yes

		trigger_event = {
			id = dwarven.9002
			years = 5
		}
	}
}

dwarven.9002 = { # Bearded Again !
	content_source = realms_dlc
	type = character_event
	title = dwarven.9002.t
	desc = dwarven.9002.desc
	theme = crown
	right_portrait = {
		character = root
		animation = happiness
	}
	
	option = { #I can finally show my face again !
		name = dwarven.9002.a
		# custom_tooltip = dwarven.9002.att # There exists no loc key for this
		
		remove_trait = beardless
		add_stress = medium_stress_loss
	}
}

################################
### Dwarven Fertility Events ###
################################

scripted_trigger dwarven_9500_youngest_brother_all_brothers_celibate_trigger = {
	is_male = yes
	NOT = {
		any_sibling = {
			is_male = yes
			age > nubile_age
			NOT = { has_trait = cannot_marry }
		}
	}
	NOT = {
		any_sibling = {
			is_male = yes
			age < root.age
		}
	}
	
}

dwarven.9500 = {
	content_source = realms_dlc
	type = character_event
	title = dwarven.9500.t
	desc = dwarven.9500.desc
	theme = crown

	right_portrait = {
		character = root
		animation = stress
	}

	trigger = {
		is_dwarf = yes
		is_married = no #Juke note: Should never be the case, adding as fallback
	}

	option = { # Do not gain dwarf_refuses_marriage modifier
		name = dwarven.9500.a

		add_stress = massive_stress_impact_gain
		
		ai_chance = {
			base = 66
			modifier = {
				is_male = yes
				add = -16
			}
		}
	}

	option = { # Gain dwarf_refuses_marriage modifiers
		name = dwarven.9500.b
		trigger = {
			OR = {
				is_ai = no
				AND = {
					NOT = { has_trait = dwarf_father }
					dwarven_9500_youngest_brother_all_brothers_celibate_trigger = no
				}
			}
		}

		add_trait = cannot_marry
		
		if = {
			limit = { is_betrothed = yes }
			break_betrothal = root.betrothed
		}

		ai_chance = {
			base = 33
			modifier = {
				is_male = yes
				add = 17
			}
		}
	}
}

### Enter/Leave Realm Events

dwarven.9700 = { # Enter Realm: Erebor
	content_source = realms_dlc
	type = character_event
	title = dwarven.9700.t
	desc = {
		triggered_desc = { # Evil faith
			trigger = { 
				faith_is_evil = yes
				NOT = { is_dwarf = yes }
			} 
			desc = dwarven.9700.desc.evil
		}
		triggered_desc = { # Non-evil
			trigger = { 
				faith_is_evil = no
			} 
			desc = dwarven.9700.desc.good
		}
	}
	theme = realm 

	trigger = {
		game_start_date = 7033.1.1
	}
	
	cooldown = { days = 5 }

	right_portrait = {
		character = root
		animation = happiness
	}

	option = {
		name = dwarven.9700.a 
		add_prestige = medium_prestige_gain
	}
	
	after = {
		if = { #Managing Thorin's Tomb modifiers
			limit = { 
				game_start_date >= 6974 # Thorin gotta be dead!
				is_dwarf = yes
			}
			add_thorins_tomb_modifiers_effect = yes
		}
	}
}
dwarven.9701 = { # Leave Realm: Erebor
	content_source = realms_dlc
	type = character_event
	title = dwarven.9701.t
	desc = dwarven.9701.desc
	theme = realm 
	immediate = { play_music_cue = lotr_cue_dwarves }
	
	cooldown = { days = 5 }

	right_portrait = {
		character = root
		animation = shock
	}
	
	trigger = {
		is_dwarf = yes
		game_start_date = 7033.1.1
	}

	option = {
		name = dwarven.9701.a 
		add_prestige = medium_prestige_loss
	}

}

# Dwarven King Titles

dwarven.9800 = { # Assign the Titles to be primary
	hidden = yes
	immediate = {
		dynasty:dynasty_durin.dynast = {
			set_primary_title_to = title:k_longbeards
		}
		dynasty:dynasty_dwalin.dynast = {
			set_primary_title_to = title:k_broadbeams
		}
		dynasty:dynasty_uri.dynast = {
			set_primary_title_to = title:k_firebeards
		}
		dynasty:dynasty_thrar.dynast = {
			set_primary_title_to = title:k_blacklocks
		}
#		dynasty:dynasty_sindri.dynast = {
#			set_primary_title_to title:k_ironfists
#		}
#		dynasty:dynasty_thulin.dynast = {
#			set_primary_title_to title:k_stiffbeards
#		}
#		dynasty:dynasty_bavor.dynast = {
#			set_primary_title_to title:k_stonefoots
#		}
	}
}
dwarven.9801 = { # When they become an Emperor they will get the Emperor level title and have the history copied over while the kingdom title is destroyed
	hidden = yes
	trigger = {
		OR = {
			has_title = title:k_longbeards
			has_title = title:k_firebeards
			has_title = title:k_broadbeams
			has_title = title:k_blacklocks
			has_title = title:k_ironfists
			has_title = title:k_stiffbeards
			has_title = title:k_stonefoots
		}
	}
	immediate = {
		if = {
			limit = { has_title = title:k_longbeards }
			get_title = title:e_durins_folk
			title:e_durins_folk = { copy_title_history = title:k_longbeards }
			set_primary_title_to = title:e_durins_folk
			destroy_title = title:k_longbeards
		}
		else_if = {
			limit = { has_title = title:k_firebeards }
			get_title = title:e_firebeards
			title:e_firebeards = { copy_title_history = title:k_firebeards }
			set_primary_title_to = title:e_firebeards
			destroy_title = title:k_firebeards
		}
		else_if = {
			limit = { has_title = title:k_broadbeams }
			get_title = title:e_broadbeams
			title:e_broadbeams = { copy_title_history = title:k_broadbeams }
			set_primary_title_to = title:e_broadbeams
			destroy_title = title:k_broadbeams
		}
		else_if = {
			limit = { has_title = title:k_blacklocks }
			get_title = title:e_blacklocks
			title:e_blacklocks = { copy_title_history = title:k_blacklocks }
			set_primary_title_to = title:e_blacklocks
			destroy_title = title:k_blacklocks
		}
		else_if = {
			limit = { has_title = title:k_ironfists }
			get_title = title:e_ironfists
			title:e_ironfists = { copy_title_history = title:k_ironfists }
			set_primary_title_to = title:e_ironfists
			destroy_title = title:k_ironfists
		}
		else_if = {
			limit = { has_title = title:k_stiffbeards }
			get_title = title:e_stiffbeards
			title:e_stiffbeards = { copy_title_history = title:k_stiffbeards }
			set_primary_title_to = title:e_stiffbeards
			destroy_title = title:k_stiffbeards
		}
		else_if = {
			limit = { has_title = title:k_stonefoots }
			get_title = title:e_stonefoots
			title:e_stonefoots = { copy_title_history = title:k_stonefoots }
			set_primary_title_to = title:e_stonefoots
			destroy_title = title:k_stonefoots
		}
	}
}
dwarven.9802 = {
	hidden = yes
	trigger = {
		any_held_title = {
			count <= 1
			tier = tier_empire
		}
		OR = {
#			has_title = title:e_durins_folk
			has_title = title:e_firebeards
			has_title = title:e_broadbeams
			has_title = title:e_blacklocks
			has_title = title:e_ironfists
			has_title = title:e_stiffbeards
			has_title = title:e_stonefoots
		}
	}
	immediate = {
		trigger_event = dwarven.9803
	}
}
dwarven.9803 = { # If they lose their all their other empire titles they will lose their Titular Empire titles and will get their kingdom title back
	hidden = yes
	trigger = {
		OR = {
#			has_title = title:e_durins_folk
			has_title = title:e_firebeards
			has_title = title:e_broadbeams
			has_title = title:e_blacklocks
			has_title = title:e_ironfists
			has_title = title:e_stiffbeards
			has_title = title:e_stonefoots
		}
	}
	immediate = {
#		if = {
#			limit = { has_title = title:e_durins_folk }
#			get_title = title:k_longbeards
#			title:k_longbeards = { copy_title_history = title:e_durins_folk }
#			destroy_title = title:e_durins_folk
#			set_primary_title_to = title:k_longbeards
#		}
		if = {
			limit = { has_title = title:e_firebeards }
			get_title = title:k_firebeards
			title:k_firebeards = { copy_title_history = title:e_firebeards }
			destroy_title = title:e_firebeards
			set_primary_title_to = title:k_firebeards
		}
		else_if = {
			limit = { has_title = title:e_broadbeams }
			get_title = title:k_broadbeams
			title:k_broadbeams = { copy_title_history = title:e_broadbeams }
			destroy_title = title:e_broadbeams
			set_primary_title_to = title:k_broadbeams
		}
		else_if = {
			limit = { has_title = title:e_blacklocks }
			get_title = title:k_blacklocks
			title:k_blacklocks = { copy_title_history = title:e_blacklocks }
			destroy_title = title:e_blacklocks
			set_primary_title_to = title:k_blacklocks
		}
		else_if = {
			limit = { has_title = title:e_ironfists }
			get_title = title:k_ironfists
			title:k_ironfists = { copy_title_history = title:e_ironfists }
			destroy_title = title:e_ironfists
			set_primary_title_to = title:k_ironfists
		}
		else_if = {
			limit = { has_title = title:e_stiffbeards }
			get_title = title:k_stiffbeards
			title:k_stiffbeards = { copy_title_history = title:e_stiffbeards }
			destroy_title = title:e_stiffbeards
			set_primary_title_to = title:k_stiffbeards
		}
		else_if = {
			limit = { has_title = title:e_stonefoots }
			get_title = title:k_stonefoots
			title:k_stonefoots = { copy_title_history = title:e_stonefoots }
			destroy_title = title:e_stonefoots
			set_primary_title_to = title:k_stonefoots
		}
	}
}
dwarven.9804 = { # Character decides to usurp
	content_source = realms_dlc
	type = character_event
	title = dwarven.9804.t
	desc = dwarven.9804.desc
	theme = crown
	
	immediate = { 
		play_music_cue = lotr_cue_dwarves 
		dynasty.dynast = {
			save_scope_as = king
			primary_title = { save_scope_as = dynasty_title }
		}
		save_scope_as = claimant
	}

	right_portrait = {
		character = root
		animation = stress
	}

	left_portrait = {
		character = scope:king
		animation = personality_honorable
	}

	option = {
		name = dwarven.9804.a
		dynasty.dynast = {
			trigger_event = {
				id = dwarven.9805
				days = 1
			}
		}
	}
	option = {
		name = dwarven.9804.b
		remove_decision_cooldown = decision_usurp_dynast
	}
}
dwarven.9805 = { # Dynast is informed of demands
	content_source = realms_dlc
	type = character_event
	title = dwarven.9805.t
	desc = dwarven.9805.desc
	theme = crown
	immediate = { play_music_cue = lotr_cue_dwarves }

	right_portrait = {
		character = root
		animation = stress
	}

	left_portrait = {
		character = scope:claimant
		animation = personality_honorable
	}

	option = {
		name = dwarven.9805.a
		scope:claimant = { 
			trigger_event = {
				id = dwarven.9806
				days = 5
			}
		}
		ai_chance = {
 			base = 50
 			modifier = {
 				add = 10
 				OR = {
 					has_trait = paranoid
					has_trait = wrathful
					has_trait = brave
 				}
 			}
 			modifier = {
 				add = -10
 				OR = {
 					has_trait = compassionate
					has_trait = shy
 				}
 			}
 			modifier = {
 				add = 20
 				OR = {
 					dread >= 50
 					tyranny >= 50
 				}
 			}
		}
	}
	option = {
		name = dwarven.9805.b
		scope:claimant = { 
			trigger_event = {
				id = dwarven.9807
				days = 5
			}
		}
		ai_chance = {
 			base = 50
 			modifier = {
 				add = 10
 				OR = {
 					has_trait = compassionate
					has_trait = shy
 				}
 			}
 			modifier = {
 				add = -10
 				OR = {
 					has_trait = paranoid
					has_trait = wrathful
					has_trait = brave
 				}
 			}
		}
	}
}
dwarven.9806 = { # Dynast refuses, war
	content_source = realms_dlc
	type = character_event
	title = dwarven.9806.t
	desc = dwarven.9806.desc
	theme = crown
	immediate = { play_music_cue = lotr_cue_dwarves }

	right_portrait = {
		character = root
		animation = aggressive_axe
	}

	left_portrait = {
		character = scope:king
		animation = disgust
	}

	option = {
		name = dwarven.9806.a
		start_war = {
			casus_belli = usurp_dwarven_dynast_cb
			target = dynasty.dynast
		}
	}
}
dwarven.9807 = { # Dynast accepts
	content_source = realms_dlc
	type = character_event
	title = dwarven.9807.t
	desc = dwarven.9807.desc
	theme = crown
	immediate = { play_music_cue = lotr_cue_dwarves }

	right_portrait = {
		character = root
		animation = personality_honorable
	}

	left_portrait = {
		character = scope:king
		animation = disgust
	}

	option = {
		name = dwarven.9807.a
		house = { set_house_head = root }
		
		#Create the title and make it primary
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = yes
		}
		scope:dynasty_title = {
			change_title_holder = {
				holder = root
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change
		set_primary_title_to = scope:dynasty_title
	}
}
dwarven.9808 = { # Won War
	content_source = realms_dlc
	type = character_event
	title = dwarven.9808.t
	desc = dwarven.9808.desc
	theme = crown
	
	immediate = { 
		play_music_cue = lotr_cue_dwarves 
		dynasty.dynast.primary_title = { save_scope_as = dynasty_title }
	}

	right_portrait = {
		character = root
		animation = personality_honorable
	}

	left_portrait = {
		character = scope:king
		animation = disgust
	}

	option = {
		name = dwarven.9807.a
		house = { set_house_head = root }
		
		#Create the title and make it primary
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = yes
		}
		scope:dynasty_title = {
			change_title_holder = {
				holder = root
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change
		set_primary_title_to = scope:dynasty_title
	}
}
dwarven.9809 = { # Former Dynast, War Lost
	content_source = realms_dlc
	type = character_event
	title = dwarven.9809.t
	desc = dwarven.9809.desc
	theme = crown

	right_portrait = {
		character = root
		animation = disgust
	}

	left_portrait = {
		character = scope:claimant
		animation = personality_honorable
	}

	option = {
		name = dwarven.9809.a
	}
}
dwarven.9810 = { # Usurper, War Lost
	content_source = realms_dlc
	type = character_event
	title = dwarven.9810.t
	desc = dwarven.9810.desc
	theme = crown

	right_portrait = {
		character = root
		animation = disgust
	}

	left_portrait = {
		character = scope:king
		animation = personality_honorable
	}

	option = {
		name = dwarven.9810.a
	}
}

dwarven.9900 = { # Visiting the archives with loremaster to venerate the ancestors
	title = dwarven.9900.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9900.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = throne_room_dwarf }
	right_portrait = {
		character = root
		animation = thinking
	}
	left_portrait = {
        character = scope:realm_priest
        animation = chaplain
    }
    immediate = {
		if = {
			limit = { exists = cp:councillor_court_chaplain }
			cp:councillor_court_chaplain = {
				save_scope_as = realm_priest
			}
		}
	}
	option = { # Get a random dwarven ancestor event
		name = dwarven.9900.a
			trigger_event = {
				on_action = dwarven_ancestor_events
			}
	}
}

dwarven.9903 = { # Thorin II Oakenshield
	trigger = {
		game_start_date >= 7033.1.1 # Thorin II Oakenshield must be dead!
	}
	title = dwarven.9903.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9903.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = dwarven_gate }
	right_portrait = {
		character = character:lineofdurin86
		animation = aggressive_axe
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { dwarf_war_steel_outfit }
		}
	}
	center_portrait = {
        character = character:lineofdurin83
        animation = celebrate_sword
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { dwarf_war_steel_outfit }
		}
    }
	left_portrait = {
        character = character:lineofdurin87
        animation = aggressive_axe
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { dwarf_war_steel_outfit }
		}
    }
	lower_right_portrait = {
		character = character:lineoforopher3
	}
	lower_center_portrait = {
		character = character:lineofbaggins12
	}
	lower_left_portrait = {
		character = character:lineofgandalf
	}
	option = { # All hail the King Under the Mountain!
		name = dwarven.9903.a
			add_martial_lifestyle_xp = 500
	}
	option = { # My legacy will be even greater than this.
		name = dwarven.9903.b
		add_prestige = medium_prestige_gain
		add_stewardship_lifestyle_xp = 250
		if = {
			limit = {
				has_trait = humble
			}		
			random = {
				chance = 20
				remove_trait = humble
				add_trait_force_tooltip = arrogant
			}
		}
	}
}

dwarven.9904 = { # Gorin I, Discoverer of Nordinbad
	trigger = {
		game_start_date >= 6622.2.2 # Dáin I and his son Frór must be dead!
	}
	title = dwarven.9904.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9904.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = wilderness_mountains }
	right_portrait = {
		character = character:lineofdurin75
		animation = personality_content
		animate_if_dead = yes
	}
	left_portrait = {
        character = character:linegorin0
        animation = thinking
		animate_if_dead = yes
    }
	lower_right_portrait = {
		character = character:lineofdurin80
	}
	lower_center_portrait = {
		character = character:lineofdurin79
	}
	lower_left_portrait = {
		character = character:lineofdurin74
	}
	option = { # His courage endures in our hearts and stone.
		name = dwarven.9904.a
		add_piety = major_piety_gain
		add_martial_lifestyle_xp = 250
		if = {
			limit = {
				has_trait = cynical
			}		
			random = {
				chance = 20
				remove_trait = cynical
				add_trait_force_tooltip = zealous
			}
		}
	}
	option = { # Gorin was a fool to settle in this forsaken place.
		name = dwarven.9904.b
		add_prestige = medium_prestige_gain
		add_learning_lifestyle_xp = 250
		if = {
			limit = {
				has_trait = humble
			}		
			random = {
				chance = 20
				remove_trait = humble
				add_trait_force_tooltip = arrogant
			}
		}
	}
}

dwarven.9911 = { # Narvi, legendary smith and friend to Celebrimbor
	title = dwarven.9911.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9911.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = durins_door }
	right_portrait = {
        character = character:linefinwe18
        animation = personality_rational
		animate_if_dead = yes
    }
	center_portrait = {
        character = character:lineofnarvi
        animation = war_defender
		animate_if_dead = yes
    }
	left_portrait = {
		character = character:lineofdurinII
		animation = personality_compassionate
		animate_if_dead = yes
	}
	option = { # We shall rebuild the friendship Narvi once had with the Elves.
		name = dwarven.9911.a
		add_diplomacy_lifestyle_xp = 500
	}
	option = { # What tripe! I'll be dead before allying with Elves!
		name = dwarven.9911.b
		add_martial_lifestyle_xp = 500
		if = {
			limit = {
				OR = {
					has_trait = fickle
					has_trait = eccentric
				}
			}	
			random = {
				chance = 20
					remove_trait = fickle
					remove_trait = eccentric
				add_trait_force_tooltip = stubborn
			}
		}
	}
}

dwarven.9912 = { # Azaghâl, father of Dwálin II, friend of Maedhros, Dwarf-King of Belegost
	title = dwarven.9912.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9912.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = gondolin_fall }
	right_portrait = {
        character = character:linefinwe10
        animation = marshal
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { elven_war_noldor no_headgear }
		}
    }
	left_portrait = {
		character = character:lineofdwalin5
        animation = aggressive_dagger
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { dwarf_war_gold_outfit }
		}
    }
	lower_left_portrait = {
        character = character:lineoftelchar1
    }
	lower_center_portrait = {
        character = character:lineofdwalin7
    }
	option = { # Azaghâl's valour shall inspire our own deeds.
		name = dwarven.9912.a
		add_martial_lifestyle_xp = 500
	}
	option = { # As he forged bonds with Elves, so shall we.
		name = dwarven.9912.b
		add_diplomacy_lifestyle_xp = 500
	}
	option = { # Azaghâl stood tall in his age. I shall stand taller in mine.
		name = dwarven.9912.c
		if = {
			limit = {
				has_trait = humble
			}		
			random = {
				chance = 20
				remove_trait = humble
				add_trait_force_tooltip = arrogant
			}
		}
		add_prestige = medium_prestige_gain
		add_martial_lifestyle_xp = 250
	}
}

dwarven.9913 = { # Telchar of Nogrod, creator of Narsil, Angrist, and the Dragon-helm of Dor-lómin, trained by Gamil Zirak
	title = dwarven.9913.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9913.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = market_dwarven }
	right_portrait = {
		character = character:lineofdwalin5
		animation = war_defender
		animate_if_dead = yes
	}
	center_portrait = {
        character = character:lineoftelchar1
        animation = war_attacker
		animate_if_dead = yes
    }
	left_portrait = {
        character = character:lineofgamilzirak
        animation = personality_honorable
		animate_if_dead = yes
    }
	lower_left_portrait = {
		character = character:lineofbeor32
	}
	lower_center_portrait = {
		character = character:lineofelendil
	}
	lower_right_portrait = {
		character = character:linefinwe10
	}
	option = { # Telchar was a legendary craftsman above all.
		name = dwarven.9913.a
		random = {
			chance = 20
			if = {
				limit = { has_trait = lifestyle_artifact_crafting }
				add_trait_xp = {
					trait = lifestyle_artifact_crafting
					value = minor_trait_xp
				}
			}
			else = { add_trait = lifestyle_artifact_crafting }
		}
	}
	option = { # Telchar's legacy is one of great victories first and foremost.
		name = dwarven.9913.b
		add_martial_lifestyle_xp = 500
	}
	option = { # Telchar understood that knowledge precedes mastery.
		name = dwarven.9913.c
		add_learning_lifestyle_xp = 500
	}
}

dwarven.9914 = { # Naugladur, king of Nogrod who coveted the Nauglamir for himself
	title = dwarven.9914.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9914.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = eregion_ruins }
	right_portrait = {
        character = character:lineofbeor32
        animation = marshal
		animate_if_dead = yes
    }
	center_portrait = {
        character = character:lineofuri3
        animation = aggressive_hammer
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { dwarf_war_bronze_outfit }
		}
    }
	left_portrait = {
		character = character:lineofelwe3
		animation = disgust
		animate_if_dead = yes
	}
	lower_center_portrait = {
		character = character:lineofelwe4
	}
	option = { # Those who seek too much may lose all they hold dear.
		name = dwarven.9914.a
		if = {
			limit = {
				has_trait = arrogant
			}		
			random = {
				chance = 20
				remove_trait = arrogant
				add_trait_force_tooltip = humble
			}
		}
		add_piety = major_piety_gain
		add_learning_lifestyle_xp = 250
	}
	option = { # The strong are entitled to take what they deem worthy.
		name = dwarven.9914.b
		if = {
			limit = {
				has_trait = humble
			}		
			random = {
				chance = 20
				remove_trait = humble
				add_trait_force_tooltip = arrogant
			}
		}
		add_prestige = medium_prestige_gain
		add_martial_lifestyle_xp = 250
	}
}

dwarven.9915 = { # Eldran I, the First Greybeard, who founded the great monastery of Zelemabkhan atop Mount Dolmed
	title = dwarven.9915.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9915.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = wilderness_mountains }
	right_portrait = {
        character = character:lineofdwalin0
        animation = dead
		animate_if_dead = yes
    }
	center_portrait = {
        character = character:lineofeldran1
        animation = personality_zealous
		animate_if_dead = yes	
    }
	left_portrait = {
		character = character:lineofuri0
		animation = dead
		animate_if_dead = yes
	}
	lower_center_portrait = {
		character = character:lineofkhathzaibriz1
	}
	option = { # One day, we shall walk the thousand steps in his memory.
		name = dwarven.9915.a
		if = {
			limit = {
				has_trait = cynical
			}		
			random = {
				chance = 20
				remove_trait = zealous
				add_trait_force_tooltip = zealous
			}
		}
		add_piety = major_piety_gain
		add_learning_lifestyle_xp = 250
	}
	option = { # We honour deeds, not dusty echoes.
		name = dwarven.9915.b
		add_prestige = major_prestige_gain
		add_martial_lifestyle_xp = 250
	}
}

dwarven.9916 = { # Uni I the River-Seeker of house Ubnan, founder of the tradeport of Kheledul
	trigger = {
		game_start_date >= 6258.11.5 # Uni the River-Seeker must be dead!
	}
	title = dwarven.9916.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9916.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = docks_tribal }
	right_portrait = {
        character = character:lineofdurin74
        animation = disbelief
		animate_if_dead = yes
    }
	center_portrait = {
        character = character:lineofuni19
        animation = interested
		animate_if_dead = yes	
    }
	left_portrait = {
		character = character:lineofdurinVI
		animation = dead
		animate_if_dead = yes
	}
	option = { # The water was never ours to tame. Let our kin remain bound to stone.
		name = dwarven.9916.a
		random = {
			chance = 20
			if = {
				limit = { has_trait = cavern_commander }
				add_trait_xp = {
					trait = cavern_commander
					value = 20
				}
			}
			else = { add_trait =  cavern_commander }
		}	
	}
	option = { # His was a noble pursuit, though odd it still remains.
		name = dwarven.9916.b
		add_stewardship_lifestyle_xp = 500
	}
	option = { # He was right! A Dwarf's place is with the water!
		name = dwarven.9916.c
		trigger = {
			has_trait = eccentric
		}
		if = {
			limit = {
				has_trait = eccentric
			}
			random = {
				chance = 20
				add_character_modifier = drenchbeard
			}
		}
		add_stewardship_lifestyle_xp = 500
	}	
}

dwarven.9917 = { # Vighar Roadwalker
	trigger = {
		game_start_date >= 5463.3.3 # Vighar Roadwalker must be dead!
	}
	title = dwarven.9917.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9917.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = wilderness_forest }
	right_portrait = {
        character = character:linegruni11
        animation = admiration
		animate_if_dead = yes
    }
	center_portrait = {
        character = character:lineviglund5
        animation = survey
		animate_if_dead = yes	
    }
	left_portrait = {
		character = character:lineofdurin64
		animation = interested
		animate_if_dead = yes
	}
	option = { # His dedication and labour stand as an example to others.
		name = dwarven.9917.a
		if = {
			limit = {
				has_trait = lazy
			}		
			random = {
				chance = 20
				remove_trait = lazy
				add_trait_force_tooltip = diligent
			}
		}
		add_piety = major_piety_gain
		add_learning_lifestyle_xp = 250
	}
	option = { # Maintaining roads? Hardly the height of a Dwarf's ambition.
		name = dwarven.9917.b
		if = {
			limit = {
				has_trait = content
			}		
			random = {
				chance = 20
				remove_trait = content
				add_trait_force_tooltip = ambitious
			}
		}
		add_prestige = medium_prestige_gain
		add_stewardship_lifestyle_xp = 250
	}
}

dwarven.9918 = { # Lóni the Turncoat
	trigger = {
		game_start_date >= 5481.9.21 # Lóni the Turncoat must be dead!
	}
	title = dwarven.9918.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9918.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = market_dwarven }
	right_portrait = {
        character = character:lineofdurin64
        animation = war_defender
		animate_if_dead = yes
	}
	center_portrait = {
    	character = character:lineofdurin641
        animation = personality_dishonorable
		animate_if_dead = yes
    }
	left_portrait = {
		character = character:lineurdak3
		animation = disapproval
		animate_if_dead = yes
    }
	lower_center_portrait = {
		character = character:lineofdurin62
	}
	option = { # His deceit turned to folly. Let his name be a warning.
		name = dwarven.9918.a
		if = {
			limit = {
				has_trait = arbitrary
			}		
			random = {
				chance = 20
				remove_trait = arbitrary
				add_trait_force_tooltip = just
			}
		}
		add_diplomacy_lifestyle_xp = 500
	}
	option = { # His pride cost him everything — but his ambition was praiseworthy.
		name = dwarven.9918.b
		if = {
			limit = {
				has_trait = content
			}		
			random = {
				chance = 20
				remove_trait = content
				add_trait_force_tooltip = ambitious
			}
		}
		add_intrigue_lifestyle_xp = 500
	}
}

dwarven.9919 = { # Skorgrím Dourhand, betrayer who stole the Ring of the Firebeards from Úri V and Ring of the Broadbeams from Dwálin V
	trigger = {
		game_start_date >= 5408.10.13 # Skorgrím Dourhand must be dead!
	}
	title = dwarven.9919.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9919.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = forodwaith }
	right_portrait = {
		character = character:lineofdwalin71
        animation = disbelief
		animate_if_dead = yes
	}
	center_portrait = {
        character = character:lineofdourhand17
        animation = beg
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { dwarf_war_gold_outfit }
		}
    }
	left_portrait = {
		character = character:lineofuri67
        animation = disapproval
		animate_if_dead = yes
    }
	lower_center_portrait = {
		character = character:nazgul1
	}
	option = { # True greatness is earned, not stolen.
		name = dwarven.9919.a
		if = {
			limit = {
				has_trait = arbitrary
			}		
			random = {
				chance = 20
				remove_trait = arbitrary
				add_trait_force_tooltip = just
			}
		}
		add_diplomacy_lifestyle_xp = 500
	}
	option = { # Though his schemes failed, his cunning shaped the course of history.
		name = dwarven.9919.b
		if = {
			limit = {
				has_trait = honest
			}		
			random = {
				chance = 20
				remove_trait = honest
				add_trait_force_tooltip = deceitful
			}
		}
		add_intrigue_lifestyle_xp = 500
	}
}

dwarven.9921 = { # Durin I, the Deathless
	title = dwarven.9921.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9921.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = dimril_dale }
	center_portrait = {
        character = character:lineofdurin1
        animation = personality_honorable
		animate_if_dead = yes
    }
	option = { # May my deeds honour his memory, as his gave birth to mine.
		name = dwarven.9921.a
		add_piety = major_piety_gain
		add_learning_lifestyle_xp = 250
	}
	option = { # Durin's reign was great, but mine will be legendary.
		name = dwarven.9921.b
		add_prestige = medium_prestige_gain
		add_martial_lifestyle_xp = 250
	}
}

dwarven.9922 = { # Durin II
	title = dwarven.9922.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9922.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = durins_door }
	right_portrait = {
		character = character:linefinwe18
		animation = personality_rational
	}
	center_portrait = {
      character = character:lineofdurinII
      animation = personality_compassionate
	  animate_if_dead = yes
    }
	left_portrait = {
      character = character:lineofnarvi
      animation = war_defender
	  animate_if_dead = yes
	}
	option = { # Let us honour Durin's wisdom and seek friendships beyond our halls.
		name = dwarven.9922.a
		add_diplomacy_lifestyle_xp = 500
	}
	option = { # The Longbeards needed no aid to find their fortune.
		add_stewardship_lifestyle_xp = 750
		random = {
		    chance = 10
			add_trait = reclusive
		}
	}
}

dwarven.9923 = { # Durin III
	title = dwarven.9923.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9923.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = eregion_ruins }
	right_portrait = {
        character = character:linefinwe18
        animation = disbelief
		animate_if_dead = yes
    }
	left_portrait = {
        character = character:lineofdurinIII
        animation = anger
	    animate_if_dead = yes
    }
	lower_center_portrait = {
		character = character:lineofsauron
	}
	option = { # Sauron's treachery shall not be forgotten, nor left unavenged.
		name = dwarven.9923.a
		if = {
			limit = {
				has_trait = forgiving
			}		
			random = {
				chance = 20
				remove_trait = forgiving
				add_trait_force_tooltip = vengeful
			}
		}
		add_martial_lifestyle_xp = 500
	}
	option = { # The Elves should have been warier of well-intentioned strangers.
		name = dwarven.9923.b
		add_intrigue_lifestyle_xp = 500
	}
}

dwarven.9924 = { # Durin IV
	trigger = {
		game_start_date >= 4144.11.30 # Durin IV must be dead!
	}
	title = dwarven.9924.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9924.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = barad_dur }
	right_portrait = {
		character = character:linefinwe41
		animation = marshal
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { elven_war_noldor no_headgear }
		}
	}
	center_portrait = {
        character = character:lineofdurinIV
        animation = aggressive_axe
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { dwarf_war_steel_outfit }
		}
    }
	left_portrait = {
		character = character:lineofelendil
		animation = marshal
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { gondor_war_prince }
		}
    }
	lower_right_portrait = {
		character = character:lineofanarion1
	}
	lower_center_portrait = {
		character = character:lineoforopher1
	}
	lower_left_portrait = {
		character = character:lineisildur0
	}
	option = { # Victory demands sacrifice. We must be ready to pay its price.
		name = dwarven.9924.a
		if = {
			limit = {
				has_trait = forgiving
			}		
			random = {
				chance = 20
				remove_trait = forgiving
				add_trait_force_tooltip = vengeful
			}
		}
		add_martial_lifestyle_xp = 500
	}
	option = { # Let the fallen kings rest. We endure because we stand alone.
		name = dwarven.9924.b
		add_stewardship_lifestyle_xp = 750
		random = {
		    chance = 10
			add_trait = reclusive
		}
	}
}

dwarven.9925 = { # Durin V
	trigger = {
		game_start_date >= 5168.7.18 # Durin V must be dead!
	}
	title = dwarven.9925.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9925.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = throne_room_dwarf }
	center_portrait = {
       character = character:lineofdurinV
       animation = personality_content
	   animate_if_dead = yes
    }
	option = { # To seek peace and prosperity is the purpose of any ruler.
		name = dwarven.9925.a
		add_stewardship_lifestyle_xp = 500
	}
	option = { # A reign with conquest is meaningless.
		name = dwarven.9925.b
		add_martial_lifestyle_xp = 500
	}
	option = { # Isolation is folly, a leader should forge alliances.
		name = dwarven.9925.c
		add_diplomacy_lifestyle_xp = 500
	}
}

dwarven.9926 = { # Durin VI
	trigger = {
		game_start_date >= 6032.8.24 # Durin VI and his son must be dead!
	}
	title = dwarven.9926.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9926.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = durins_bane }
	right_portrait = {
        character = character:lineofdurin73
    	animation = marshal
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { dwarf_war_steel_outfit }
		}
	}
	left_portrait = {
		character = character:lineofdurinVI
        animation = aggressive_axe
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { dwarf_war_steel_outfit }
		}
    }
	lower_center_portrait = {
		character = character:lineofdurin74
	}
	option = { # May I show such courage when my trial comes.
		name = dwarven.9926.a
		if = {
			limit = {
				has_trait = craven
			}		
			random = {
				chance = 20
				remove_trait = craven
				add_trait_force_tooltip = brave
			}
		}
		add_martial_lifestyle_xp = 500
	}
	option = { # It was not greed, but grim chance, that brought his fall.
		name = dwarven.9926.b
		if = {
			limit = {
				has_trait = generous
			}		
			random = {
				chance = 20
				remove_trait = generous
				add_trait_force_tooltip = greedy
			}
		}
		add_stewardship_lifestyle_xp = 500
	}
}

dwarven.9931 = { # Úri I, the Scarred
	title = dwarven.9931.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9931.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = kitchen_dwarven }
	right_portrait = {
		character = character:linefinwe33
		animation = steward
	}
	center_portrait = {
        character = character:lineofuri0
        animation = personality_callous
		animate_if_dead = yes
    }
	left_portrait = {
		character = character:lineofdwalin0
		animation = personality_content
		animate_if_dead = yes
    }
	option = { # We must protect our kin as he did.
		name = dwarven.9931.a
		add_martial_lifestyle_xp = 500
	}
	option = { # Stories and scars won't keep us fed.
		name = dwarven.9931.b
		if = {
			limit = {
				has_trait = zealous
			}		
			random = {
				chance = 20
				remove_trait = zealous
				add_trait_force_tooltip = cynical
			}
		}
		add_stewardship_lifestyle_xp = 500
	}
}

dwarven.9932 = { # Úri II, son of Thrur
	title = dwarven.9932.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9932.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = throne_room_dwarf }
	right_portrait = {
		character = character:lineofdurin2
		animation = admiration
		animate_if_dead = yes
	}
	center_portrait = {
        character = character:lineofuriII
        animation = personality_cynical
		animate_if_dead = yes
    }
	left_portrait = {
        character = character:lineofdwalin7
        animation = personality_content
		animate_if_dead = yes
    }
	lower_left_portrait = {
		character = character:lineofhersarbinshmur1
	}
	lower_center_portrait = {
		character = character:lineofuri5
	}
	lower_right_portrait = {
		character = character:lineofazganur5
	}
	option = { # Sometimes, a people must stand alone to preserve their identity.
		name = dwarven.9932.a
		add_stewardship_lifestyle_xp = 750
		random = {
		    chance = 10
			add_trait = reclusive
		}
	}
	option = { # To succeed, one must have allies by their side.
		name = dwarven.9932.b
		add_diplomacy_lifestyle_xp = 500
	}
}

dwarven.9933 = { # Úri III
	title = dwarven.9933.t
	type = character_event
 	window = visit_settlement_window
	desc = dwarven.9933.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = throne_room }
	right_portrait = {
		character = character:lineofuri27
		animation = interested
	}
	center_portrait = {
       	character = character:lineofuriIII
       	animation = war_defender
	   	animate_if_dead = yes
    }
	left_portrait = {
      	character = character:lineofdwalin27
       	animation = war_attacker
		animate_if_dead = yes
    }
	lower_right_portrait = {
		character = character:linefinwe18
	}
	lower_left_portrait = {
		character = character:lineofsauron
	}
	option = { # No doubt this gift was fiercely protected.
		name = dwarven.9933.a
		add_martial_lifestyle_xp = 500
	}
	option = { # Such gifts often veil darker intent.
		name = dwarven.9933.b
		add_intrigue_lifestyle_xp = 500
	}
}

dwarven.9934 = { # Úri IV
	trigger = {
		game_start_date >= 4066.11.11 # Úri IV must be dead!
	}
	title = dwarven.9934.t
	type = character_event
 	window = visit_settlement_window
	desc = dwarven.9934.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = barad_dur }
	right_portrait = {
		character = character:lineofdwalin45
		animation = personality_content
		animate_if_dead = yes
	}
	center_portrait = {
       	character = character:lineofuriIV
       	animation = interested
		animate_if_dead = yes
    }
	left_portrait = {
      	character = character:lineofdurinIV
       	animation = aggressive_axe
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { dwarf_war_steel_outfit }
		}
    }
	lower_right_portrait = {
		character = character:lineofkhathzaibriz53a
	}
	lower_center_portrait = {
		character = character:lineofuri45c
	}
	lower_left_portrait = {
		character = character:lineofsauron
	}
	option = { # He trusted the patient rise of cautious renewal.
		name = dwarven.9934.a
		add_diplomacy_lifestyle_xp = 500
	}
	option = { # A king should fight, not hide.
		name = dwarven.9934.b
		add_martial_lifestyle_xp = 500
	}
}

dwarven.9935 = { # Úri V
	trigger = {
		game_start_date >= 5013.1.17 # Úri V must be dead!
	}
	title = dwarven.9935.t
	type = character_event
 	window = visit_settlement_window
	desc = dwarven.9935.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = throne_room }
	center_portrait = {
        character = character:lineofuriV
        animation = chancellor
		animate_if_dead = yes
    }
	lower_right_portrait = {
		character = character:lineofdwalin7
	}
	lower_center_portrait = {
		character = character:lineofuri5
	}
	lower_left_portrait = {
		character = character:lineofdurin2
	}
	option = { # Only together can we forge a future worthy of our ancestors.
		name = dwarven.9935.a
		add_diplomacy_lifestyle_xp = 500
	}
	option = { # Only by embracing change can our clans truly thrive.
		name = dwarven.9935.b
		if = {
			limit = {
				has_trait = content
			}		
			random = {
				chance = 20
				remove_trait = content
				add_trait_force_tooltip = ambitious
			}
		}
		add_stewardship_lifestyle_xp = 500
	}
}

#dwarven.9936 = { # Úri VI, the Generous
#	trigger = {
#		game_start_date >= 7054.2.21 # Úri VI must be dead!
#	}
#	title = dwarven.9936.t
#	type = character_event
# 	window = visit_settlement_window
#	desc = dwarven.9936.desc
#	content_source = realms_dlc
#	theme = explore_history_activity
#	override_background = { reference = throne_room }
#	right_portrait = {
#		character = root
#		animation = thinking
#	}
#	center_portrait = {
#        character = 
#        animation = 
#		animate_if_dead = yes
#    }
#	left_portrait = {
#      character = character:lineofuriVI
#        animation = 
#		animate_if_dead = yes
#   }
#	lower_right_portrait = {
#		character = character:
#	}
#	lower_center_portrait = {
#		character = character:
#	}
#	lower_left_portrait = {
#		character = character:
#	}
#	option = { # 
#		name = dwarven.9936.a
#	}
#	option = { # 
#		name = dwarven.9936.b
#	}
#}

dwarven.9941 = { # Dwálin I, the Wise
	title = dwarven.9941.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9941.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = throne_room_noldor }
	right_portrait = {
		character = character:lineofelwe3
		animation = steward
		animate_if_dead = yes
	}
	center_portrait = {
        character = character:lineofdwalin0
        animation = personality_content
		animate_if_dead = yes
    }
	left_portrait = {
		character = character:lineofuri0
        animation = personality_callous
		animate_if_dead = yes
    }
	option = { # Let wisdom and song guide our efforts as well.
		name = dwarven.9941.a
		add_learning_lifestyle_xp = 500
	}
	option = { # Great craftsmanship endures beyond all else.
		name = dwarven.9941.b
		add_crafting_lifestyle_xp = 500
	}
}

dwarven.9942 = { # Dwálin II, son of Azaghâl of Belegost
	title = dwarven.9942.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9942.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = gondolin_fall }
	right_portrait = {
		character = character:lineofdurin2
		animation = admiration
		animate_if_dead = yes
	}
	center_portrait = {
        character = character:lineofdwalin7
        animation = personality_forgiving
		animate_if_dead = yes
    }
	left_portrait = {
		character = character:lineofuriII
        animation = personality_cynical
		animate_if_dead = yes
    }
	lower_left_portrait = {
		character = character:lineofmazdul5
	}
	lower_center_portrait = {
		character = character:secondlineofdwalin1
	}
	option = { # The Broadbeams came in wisdom, and in wisdom they shall be honored.
		name = dwarven.9942.a
		add_learning_lifestyle_xp = 500
	}
	option = { # Like the Firebeards, we must trust in the ability of our own people.
		name = dwarven.9942.b
		add_crafting_lifestyle_xp = 500
	}
	option = { # Let all remember that it was the Longbeards who opened their gates in dark times.
		name = dwarven.9942.c
		add_diplomacy_lifestyle_xp = 500
	}
}

dwarven.9943 = { # Dwálin III
	title = dwarven.9943.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9943.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = throne_room }
	right_portrait = {
		character = character:lineofdwalin25
		animation = personality_content
		animate_if_dead = yes
	}
	center_portrait = {
       	character = character:lineofdwalin27
        animation = war_attacker
		animate_if_dead = yes
    }
	left_portrait = {
      	character = character:secondlineofdwalin15
        animation = personality_compassionate
		animate_if_dead = yes
   }
	#artifact = {
	#	target = scope:ring_of_broadbeams
	#	position = lower_center_portrait
	#	trigger = { exists = scope:ring_of_broadbeams }
	#}
	#immediate = {
	#	random_character_artifact = {
	#		limit = { has_variable = ring_of_broadbeams }
	#		save_scope_as = ring_of_broadbeams
	#	}
	#}
	lower_right_portrait = {
		character = character:lineofhargrim21
	}
	lower_center_portrait = {
		character = character:lineofdwalin29
	}
	lower_left_portrait = {
		character = character:lineofmazdul21
	}
	option = { # In unity lies the power to reclaim our ancient glory.
		name = dwarven.9943.a
		add_diplomacy_lifestyle_xp = 500
	}
	option = { # Such gifts can hide secrets and should not be trusted lightly.
		name = dwarven.9943.b
		add_intrigue_lifestyle_xp = 500
	}
}

dwarven.9944 = { # Dwálin IV
	trigger = {
		game_start_date >= 3765.8.27 # Dwálin IV must be dead!
	}
	title = dwarven.9944.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9944.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = corridor_dunedain }
	right_portrait = {
		character = character:lineofuriIV
		animation = interested
		animate_if_dead = yes
	}
	center_portrait = {
		character = character:lineofdwalin45
        animation = personality_content
		animate_if_dead = yes
	}
	left_portrait = {
        character = character:linefinwe41
        animation = admiration
		animate_if_dead = yes
    }
	#lower_right_portrait = { # Add Wildwood Queen later
	#	character = character:
	#}
	lower_center_portrait = {
		character = character:lineofdurin44
	}
	#lower_left_portrait = { # Add Stonefoot ruler later
	#	character = character:
	#}
	option = { # He guided his people into an age of prosperity.
		name = dwarven.9944.a
		add_diplomacy_lifestyle_xp = 500
	}
	option = { # He forged bonds that safeguarded his people for generations.
		name = dwarven.9944.b
		add_diplomacy_lifestyle_xp = 500
	}
}

dwarven.9945 = { # Dwálin V
	trigger = {
		game_start_date >= 4949.5.24 # Dwálin V must be dead!
	}
	title = dwarven.9945.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9945.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = forodwaith }
	right_portrait = {
		character = character:lineofdourhand17 # killed by Skorgrím
		animation = shame
		animate_if_dead = yes
	}
	center_portrait = {
		character = character:lineofdwalin71
		animation = disbelief
		animate_if_dead = yes
	}
	left_portrait = {
        character = character:lineofuri67
        animation = disapproval
		animate_if_dead = yes
    }
	lower_right_portrait = {
		character = character:lineofcaladir43
	}
	lower_center_portrait = {
		character = character:lineisildur18
	}
	lower_left_portrait = {
		character = character:nazgul1
	}
	option = { # $Dwálin V's end shows the peril of mistaking kinship for loyalty.
		name = dwarven.9945.a
		add_diplomacy_lifestyle_xp = 500
	}
	option = { # Let the tale of Dwálin V steel our hearts against deceit.
		name = dwarven.9945.b
		add_intrigue_lifestyle_xp = 500
	}
}

dwarven.9946 = { # Dwálin VI, Trollbane
	trigger = {
		game_start_date >= 6173.4.7 # Dwálin VI must be dead!
	}
	title = dwarven.9946.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9946.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = wilderness_mountains }
	right_portrait = {
		character = character:lineofdurin74
		animation = schadenfreude
		animate_if_dead = yes
	}
	center_portrait = {
		character = character:lineofdwalin77
        animation = aggressive_axe
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { dwarf_war_gold_outfit }
		}
	}
	left_portrait = {
        character = character:lineofdurinVI
        animation = dead
		animate_if_dead = yes
    }
	lower_right_portrait = {
		character = character:lineoftheklel36
	}
	lower_center_portrait = {
		character = character:lineofmorthain72
	}
	option = { # His careful mediation strengthened ties amongst kin.
		name = dwarven.9946.a
		add_diplomacy_lifestyle_xp = 500
	}
	option = { # His valour in battle inspired all who followed him.
		name = dwarven.9946.b
		add_martial_lifestyle_xp = 500
	}
}

dwarven.9951 = { # Sindri I, the Rich
	title = dwarven.9951.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9951.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = market_dwarven }
	right_portrait = {
		character = character:lineofthrar1
		animation = personality_vengeful
		animate_if_dead = yes
	}
	center_portrait = {
      character = character:lineofsindri0
        animation = personality_cynical
		animate_if_dead = yes
    }
	left_portrait = {
      character = character:lineofthulin0
        animation = anger
		animate_if_dead = yes
    }
	lower_center_portrait = {
		character = character:lineofbavor0
	}
	option = { # Let our legacy be etched in craft, as his was.
		name = dwarven.9951.a
		add_crafting_lifestyle_xp = 500
	}
	option = { # Let the forges burn, and the halls rise.
		name = dwarven.9951.b
		add_stewardship_lifestyle_xp = 500
	}
}

#dwarven.9961 = { # Thúlin I, the Swift
#	title = dwarven.9961.t
#	type = character_event
#	window = visit_settlement_window
#	desc = dwarven.9961.desc
#	content_source = realms_dlc
#	theme = explore_history_activity
#	override_background = { reference = throne_room }
#	right_portrait = {
#		character = root
#		animation = thinking
#	}
#	left_portrait = {
#      character = character:lineofthulin0
#        animation = 
#		animate_if_dead = yes
#   }
#	lower_right_portrait = {
#		character = character:
#	}
#	lower_center_portrait = {
#		character = character:
#	}
#	lower_left_portrait = {
#		character = character:
#	}
#	option = { # 
#		name = dwarven.9961.a
#	}
#	option = { # 
#		name = dwarven.9961.b
#	}
#}

dwarven.9971 = { # Thrár I, the Proud
	title = dwarven.9971.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9971.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = corridor_dwarven }
	right_portrait = {
		character = character:lineofbavor0
		animation = happy_teacher
		animate_if_dead = yes
	}
	left_portrait = {
       character = character:lineofthrar1
        animation = marshal
		animate_if_dead = yes
    }
	option = { # Let our deeds resound louder than his voice.
		name = dwarven.9971.a
		add_prestige = medium_prestige_gain
		add_stewardship_lifestyle_xp = 250
	}
	option = { # Even pride must kneel before wisdom.
		name = dwarven.9971.b
		add_learning_lifestyle_xp = 500
	}
}

dwarven.9972 = { # Thrár II, the Young
	trigger = {
		game_start_date >= 3479.6.21 # Bizarûldûm Succession Crisis is mentioned in the event.
	}
	title = dwarven.9972.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9972.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = market_dwarven }
	right_portrait = {
		character = character:lineofbavorII
		animation = steward
		animate_if_dead = yes
	}
	center_portrait = {
        character = character:lineofthrar19
        animation = chancellor
		animate_if_dead = yes
    }
	left_portrait = {
	    character = character:lineofbavor14
        animation = love
	    animate_if_dead = yes
    }
	option = { # He built with purpose. So too shall we.
		name = dwarven.9972.a
		add_stewardship_lifestyle_xp = 500
	}
	option = { # As he united houses, so shall I forge new pacts.
		name = dwarven.9972.b
		add_diplomacy_lifestyle_xp = 500
	}
}

dwarven.9973 = { # Thrár III, the Bloodstained
	title = dwarven.9973.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9973.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = wilderness_mountains }
	center_portrait = {
      character = character:lineofthrar25
        animation = marshal_shield
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { dwarf_war_blacklock_outfit }
		}
    }
	option = { # Thrár's decisive leadership was praiseworthy.
		name = dwarven.9973.a
		add_martial_lifestyle_xp = 500
	}
	option = { # He possessed the wisdom to act when the moment demanded it.
		name = dwarven.9973.b
		add_learning_lifestyle_xp = 500
	}
}

dwarven.9974 = { # Thrár IV, the Three-Day King
	trigger = {
		game_start_date >= 3479.6.21 # Thrár IV must be dead!
	}
	title = dwarven.9974.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9974.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = smaug_destruction }
	right_portrait = {
		character = character:thirdlineofthrar31
		animation = thinking
		animate_if_dead = yes
	}
	center_portrait = {
      character = character:lineofthrar55
        animation = aggressive_sword
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { dwarf_war_blacklock_outfit }
		}
    }
	left_portrait = {
      character = character:lineofthrar51
        animation = severelywounded
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { dwarf_war_blacklock_outfit }
		}
    }
	option = { # I too shall face great peril if duty demands it.
		name = dwarven.9974.a
		if = {
			limit = {
				has_trait = craven
			}		
			random = {
				chance = 20
				remove_trait = craven
				add_trait_force_tooltip = brave
			}
		}
		random = {
			chance = 20
			if = {
				limit = { has_trait = cavern_commander }
				add_trait_xp = {
					trait = cavern_commander
					value = 20
				}
			}
			else = { add_trait =  cavern_commander }
		}	
	}
	option = { # A shame to see such works of craftsmanship lost to time.
		name = dwarven.9974.b
		random = {
			chance = 20
			if = {
				limit = { has_trait = lifestyle_artifact_crafting }
				add_trait_xp = {
					trait = lifestyle_artifact_crafting
					value = minor_trait_xp
				}
			}
			else = { add_trait = lifestyle_artifact_crafting }
		}
	}
}

dwarven.9975 = { # Thrár V, the Rebuilder
	trigger = {
		game_start_date >= 5321.10.24 # Thrár V must be dead!
	}
	title = dwarven.9975.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9975.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = throne_room_dwarf }
	right_portrait = {
		character = character:thirdlineofthrar57
		animation = disbelief
		animate_if_dead = yes
	}
	left_portrait = {
      character = character:thirdlineofthrar59
        animation = steward
		animate_if_dead = yes
    }
	option = { # In times of trial, true rulers do not falter in their duty.
		name = dwarven.9975.a
		if = {
			limit = {
				has_trait = lazy
			}		
			random = {
				chance = 20
				remove_trait = lazy
				add_trait_force_tooltip = diligent
			}
		}
		add_stewardship_lifestyle_xp = 500
	}
	option = { # Endurance means little without strength to defend it.
		name = dwarven.9975.b
		add_martial_lifestyle_xp = 500
	}
}

dwarven.9976 = { # Thrár VI, the Valiant
	trigger = {
		game_start_date >= 6523.10.8 # Thrár VI must be dead!
	}
	title = dwarven.9976.t
	type = character_event
	window = visit_settlement_window
	desc = dwarven.9976.desc
	content_source = realms_dlc
	theme = explore_history_activity
	override_background = { reference = wilderness_mountains }
	right_portrait = {
		character = character:nazgul4
		animation = disgust
		animate_if_dead = yes
	}
	left_portrait = {
      character = character:thirdlineofthrar77
        animation = celebrate_sword
		animate_if_dead = yes
		triggered_outfit = {
			outfit_tags = { dwarf_war_blacklock_outfit }
		}
    }
	option = { # In times of darkness, unity is the weapon that ensures survival.
		name = dwarven.9976.a
		add_diplomacy_lifestyle_xp = 500
	}
	option = { # Unity is valuable, but strength of arms is what secures victory.
		name = dwarven.9976.b
		add_martial_lifestyle_xp = 500
	}
}

#dwarven.9981 = { # Bavór I, the Cold
#	title = dwarven.9981.t
#	type = character_event
#	window = visit_settlement_window
#	desc = dwarven.9981.desc
#	content_source = realms_dlc
#	theme = explore_history_activity
#	override_background = { reference = throne_room }
#	right_portrait = {
#		character = root
#		animation = thinking
#	}
#	left_portrait = {
#      character = character:lineofbavor0
#        animation = 
#		animate_if_dead = yes
#   }
#	lower_right_portrait = {
#		character = character:
#	}
#	lower_center_portrait = {
#		character = character:
#	}
#	lower_left_portrait = {
#		character = character:
#	}
#	option = { # 
#		name = dwarven.9981.a
#	}
#	option = { # 
#		name = dwarven.9981.b
#	}
#}