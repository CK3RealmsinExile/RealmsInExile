namespace = umbar

# Ar-Adunaim Events
#			umbar.0101-200 # Ar-Adûnâim reclamation events
#			umbar.1000-1 #Castmiri Invasion

umbar.0001 = {
	content_source = realms_dlc
	type = character_event
	title = umbar.0001.t
	desc = umbar.0001.desc
	theme = war

	trigger = {	
		is_landed = yes
		is_alive = yes
	}

	immediate = {
		# find_wildperson_for_umbar_effect = yes
		title:k_umbar.holder = { save_scope_as = black_lord }
	}

	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = scope:wildpeople_ruler
		animation = war_attacker
	}
	option = {
		name = umbar.0001.a
		custom_tooltip = umbar.0001.tt
		add_character_modifier = { modifier = black_lord_of_umbar_modifier years = 10 }
		# fund_wildperson_for_umbar_effect = yes
	}
	option = {
		name = umbar.0001.b
	}
}

umbar.0002 = {
	content_source = realms_dlc
	type = character_event
	title = umbar.0002.t
	desc = umbar.0002.desc
	theme = war

	trigger = {	
		is_landed = yes
		is_alive = yes
	}

	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = title:d_nan_i_feryn.holder
		animation = war_attacker
	}
	option = {
		name = umbar.0002.a
	}
}

umbar.0003 = {
	content_source = realms_dlc
	type = character_event
	title = umbar.0003.t
	desc = umbar.0003.desc
	theme = war

	trigger = {	
		is_landed = yes
		is_alive = yes
	}

	left_portrait = {
		character = root
		animation = sadness
	}
	option = {
		name = umbar.0003.a
		add_gold = 350
	}
}

umbar.0004 = {
	content_source = realms_dlc
	type = character_event
	title = umbar.0004.t
	desc = umbar.0004.desc
	theme = war

	trigger = {	
		is_landed = yes
		is_alive = yes
	}

	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = title:d_nan_i_feryn.holder
		animation = personality_greedy	
	}
	option = {
		name = umbar.0004.a
	}
}

### Ar-Adûnâim Events ###

umbar.0101 = { # Check on the Adunaim conquests
	hidden = yes
	option = {
		if = {
			limit = { completely_controls = title:d_umbar }
			title:e_adunaim.holder = {
				save_scope_as = adunaim_conquerer
				trigger_event = {
					id = umbar.0102
				}
			}
			every_player = {
				limit = { 
					NOT = { has_title = title:e_adunaim }
				}
				trigger_event = { # The Ar-Adunaim take Umbar!
					id = umbar.0102
					days = { 30 90 }
				}
			}
		}
		else_if = {
			limit = { 
				NOT = { completely_controls = title:d_umbar } 
			}
			title:e_adunaim.holder = {
				trigger_event = { # Check status on Adunaim conquests
					id = umbar.0101
					years = 1
				}
			}
		}
	}
}

umbar.0102 = { # The Conquest of Umbar
	content_source = realms_dlc
	type = character_event
	title = umbar.0102.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					has_title = title:e_adunaim
				}
				desc = umbar.0102.desc.a
			}
		desc = umbar.0102.desc.b
		}
	}
	theme = war
	override_background = {
		reference = black_ship
	}
	left_portrait = {
		character = scope:adunaim_conquerer
		animation = war_attacker
	}
	option = {
		trigger = {
			has_title = title:e_adunaim
		}
		name = umbar.0102.a
		add_prestige = 1000
		title:c_umbar = {
			add_county_modifier = {
				modifier = political_violence
				years = 5
			}
		}
	}
	option = {
		name = umbar.0102.b
		trigger = {
			NOT = {
				has_title = title:e_adunaim
			}
		}
	}
}

umbar.0103 = { # Go to Tharbad?
	content_source = realms_dlc
	type = character_event
	title = umbar.0103.t
	desc = umbar.0103.desc
	theme = sailing_activity
	override_background = {
		reference = docks
	}
	left_portrait = {
		character = root
		animation = personality_bold
	}
	
	option = {
		name = umbar.0103.a # Make the preperations to depart Anagzayan
		custom_tooltip = umbar.0103.a.tt
		trigger = { is_ai = no } #AI A-A is a passive islander faction
		trigger_event = {
			id = umbar.0104
			days = 14
		}
	}
	option = {
		name = umbar.0103.b # Stay on Anagzayan
		custom_tooltip = umbar.0103.b.tt
		trigger_event = {
			id = umbar.0150 # Arphazêl's Flight
			months = 5 
		}
	}
}

umbar.0104 = { # Depart Anagzayan for Tharbad
	content_source = realms_dlc
	type = character_event
	title = umbar.0104.t
	desc = umbar.0104.desc
	theme = sailing_activity
	override_background = {
		reference = docks
	}
	left_portrait = {
		character = root
		animation = personality_bold
	}
	immediate = {
		play_music_cue = lotr_cue_adunai
	}

	option = {
		name = umbar.0104.a # Set sail 
		trigger_event = {
			id = umbar.0105
			days = 30
		}
	}
}

umbar.0105 = { # At sea
	content_source = realms_dlc
	type = character_event
	title = umbar.0105.t
	desc = umbar.0105.desc
	theme = sailing_activity
	override_background = {
		reference = ocean
	}
	left_portrait = {
		character = root
		animation = personality_bold
	}

	option = {
		name = umbar.0105.a # Brave the storm
		custom_tooltip = umbar.0105.a.tt
		trigger_event = {
			id = umbar.0106
			days = 5
		}
	}
	option = {
		name = umbar.0105.b # Try to evade the storm
		custom_tooltip = umbar.0105.b.tt
		trigger_event = {
			id = umbar.0112
			days = 5
		}
	}
}

umbar.0106 = { # A storm!
	content_source = realms_dlc
	type = character_event
	title = umbar.0106.t
	desc = umbar.0106.desc
	theme = sailing_activity
	override_background = {
		reference = ocean
	}
	override_effect_2d = {
		reference = rain
	}
	left_portrait = {
		character = root
		animation = fear 
	}
	widgets = {
		widget = {
			gui = "event_window_widget_vfx_lightning_storm"
			container = "foreground_shader_vfx_container"
		}
	}
	option = {
		name = umbar.0106.a 
		hidden_effect = {
			random_list = {
				35 = {
					trigger_event = { # Moderate damage 
						id = umbar.0107
						days = 5
					}
				}
				35 = {
					trigger_event = { # Severe damage 
						id = umbar.0108
						days = 5
					}
				}
				15 = {
					trigger_event = { # Catastrophic damage/Ulmo intervention 
						id = umbar.0109
						days = 5
					}
				}
				15 = {					
					trigger_event = { # Cast Away
						id = umbar.0112
						days = 5
					}
				}
			}
		}
	}
}

umbar.0107 = { #  Moderate storm damage 
	content_source = realms_dlc
	type = character_event
	title = umbar.0107.t
	desc = umbar.0107.desc
	theme = sailing_activity
	override_background = {
		reference = ocean
	}
	left_portrait = {
		character = root
		animation = worry
	}
	immediate = {
        every_courtier_or_guest = {
            limit = {
                NOR = { 
                    this = character:linepharazon8
                    this = root
                }
            }
            random = {
                chance = 25
                death = {
                    death_reason = death_drowned
                }
            }
        }
    }

	option = {
		name = umbar.0107.a # Land ahead!
		add_character_flag = moderate_storm_damage
		trigger_event = { 
			id = umbar.0110
			days = 5
		}
	}
	
	after = {
		trigger_event = {
			id = umbar.0150 # Arphazêl's Flight
			months = 5 
		}
	}
}

umbar.0108 = { #  Severe storm damage 
	content_source = realms_dlc
	type = character_event
	title = umbar.0108.t
	desc = umbar.0108.desc
	theme = sailing_activity
	override_background = {
		reference = ocean
	}
	left_portrait = {
		character = root
		animation = worry
	}
	immediate = {
		every_courtier_or_guest = {
            limit = {
                NOR = { 
                    this = character:linepharazon8
                    this = root
                }
            }
            random = {
                chance = 40
                death = {
                    death_reason = death_drowned
                }
            }
        }
	}

	option = {
		name = umbar.0108.a # Land ahead!
		add_character_flag = severe_storm_damage
		trigger_event = { 
			id = umbar.0110
			days = 5
		}
	}
	
	after = {
		trigger_event = {
			id = umbar.0150 # Arphazêl's Flight
			months = 5 
		}
	}
}

umbar.0109 = { #  Catastrophic storm damage 
	content_source = realms_dlc
	type = character_event
	title = umbar.0109.t
	desc = umbar.0109.desc
	theme = sailing_activity
	override_background = {
		reference = ocean
	}
	left_portrait = {
		character = root
		animation = worry
	}
	immediate = {
		every_courtier_or_guest = {
            limit = {
                NOR = { 
                    this = character:linepharazon8
                    this = root
                }
            }
            random = {
                chance = 90
                death = {
                    death_reason = death_drowned
                }
            }
        }
	}

	option = {
		name = umbar.0109.a # Land ahead!
		character:linepharazon8 = {
			save_scope_as = adunaim_witch
		}
		root = {
			save_scope_as = gimilkhad
		}	
		scope:adunaim_witch = { 
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:gimilkhad = { 
				every_held_title = {
					change_title_holder = {
						holder = scope:adunaim_witch
						change = scope:change
					}
				}
			}
			resolve_title_and_vassal_change = scope:change
			add_character_flag = catastrophic_storm_damage
			trigger_event = { 
				id = umbar.0110
				days = 5
			}
		}
		set_player_character = scope:adunaim_witch
		death = {
			death_reason = death_drowned
		}
	}
}

umbar.0110 = { # Arrives at Tharbad - Complete
	content_source = realms_dlc
	type = character_event
	title = umbar.0110.t
	desc = umbar.0110.desc
	theme = sailing_activity
	override_background = {
		reference = docks
	}
	left_portrait = {
		character = root
		animation = anger
	}
	immediate = {
		play_music_cue = "mx_cue_combat_2"
		title:c_tol_uialgaer = {
			save_scope_as = targeted_county
		}
		get_title = title:c_tharbad 
		title:c_tharbad = {
			set_county_faith = root.faith
			set_county_culture = root.culture
			change_development_level = 7
		}
		destroy_title = title:d_tol_uialgaer
		make_settlement_county_wilderness = { COUNTY = scope:targeted_county }
	}

	option = {
		name = umbar.0110.a 
		if = {
			limit = {
				has_character_flag = moderate_storm_damage
			}
			add_gold = 600
			spawn_army = {
				uses_supply = no
				inheritable = yes
				name = ar_ardunaim_event_settlers
				levies = 2000
				men_at_arms = {
					type = adunaim_armsmen
					stacks = 2
				}
				men_at_arms = {
					type = abrazanim_warbows
					stacks = 2
				}
				location = province:4537
			}
			province:4537 = {
				set_holding_type = castle_holding	
				add_building = castle_02
				add_building = windmills_02
				add_building = common_tradeport_01
			}
		}
		else_if = {
			limit = {
				has_character_flag = severe_storm_damage
			}
			add_gold = 400
			spawn_army = {
				uses_supply = no
				inheritable = yes
				name = ar_ardunaim_event_settlers
				levies = 1000
				men_at_arms = {
					type = adunaim_armsmen
					stacks = 1
				}
				men_at_arms = {
					type = abrazanim_warbows
					stacks = 1
				}
				location = province:4537
			}
			province:4537 = {
				set_holding_type = castle_holding	
				add_building = castle_02
				add_building = windmills_01
				add_building = common_tradeport_01
			}
		}
		else_if = {
			limit = {
				has_character_flag = catastrophic_storm_damage
			}
			add_gold = 200
			spawn_army = {
				uses_supply = no
				inheritable = yes
				name = ar_ardunaim_event_settlers
				levies = 250
				men_at_arms = {
					type = adunaim_armsmen
					stacks = 1
				}
				location = province:4537
			}
			province:4537 = {
				set_holding_type = castle_holding	
				add_building = castle_02
				add_building = common_tradeport_01
			}
			hidden_effect = {
				add_stress = -300
			}
		}
	}
}

umbar.0111 = { # Umbar is reconquered
	content_source = realms_dlc
	type = character_event
	title = umbar.0111.t
	desc = umbar.0111.desc
	theme = war
	override_background = {
		reference = black_ship
	}
	left_portrait = {
		character = root
		animation = marshal_shield
	}
	
	option = { #We are finally home
		name = umbar.0111.a
		add_prestige = medium_prestige_gain
	}
}

umbar.0112 = { #  Cast Away
	content_source = realms_dlc
	type = character_event
	title = umbar.0112.t
	desc = umbar.0112.desc
	theme = sailing_activity
	override_background = {
		reference = ocean
	}
	left_portrait = {
		character = root
		animation = worry
	}
	immediate = {
        every_courtier_or_guest = {
            limit = {
                NOR = { 
                    this = character:linepharazon8
                    this = root
                }
            }
            random = {
                chance = 25
                death = {
                    death_reason = death_drowned
                }
            }
        }
    }

	option = { # We won't risk braving the storm again, we go ashore here
		name = umbar.0112.a 
		custom_tooltip = umbar.0112.a.tt
		add_character_flag = moderate_storm_damage
		hidden_effect = {
			random_list = {
				40 = { title:c_hyarmenyalond = { save_scope_as = cast_away_county } }
				30 = { title:c_anach = { save_scope_as = cast_away_county } }
				30 = { title:c_tir_bronadui = { save_scope_as = cast_away_county } }
			}
		}
		trigger_event = { # Set up their new crappy home (just as they deserve)
			id = umbar.0113
			days = 5
		}
	}
	
	option = { # We mustn't stay here... Even though the storm rages still.
		name = umbar.0112.b
		trigger_event = {
			id = umbar.0106
			days = 5
		}
	}
}

umbar.0113 = { # Brave New World
	content_source = realms_dlc
	type = character_event
	title = umbar.0113.t
	desc = umbar.0113.desc
	theme = sailing_activity
	override_background = {
		reference = docks
	}
	left_portrait = {
		character = root
		animation = anger
	}
	immediate = {
		play_music_cue = "mx_cue_combat_2"
		title:c_tol_uialgaer = {
			save_scope_as = targeted_county
		}

		create_title_and_vassal_change = {
			type = returned
			save_scope_as = change
			add_claim_on_loss = no
		}

		scope:cast_away_county = {
			set_county_culture = root.culture
			set_county_faith = root.faith
			generate_coa = yes
			change_development_level = 3
		}
		scope:cast_away_county = {
			change_title_holder = {
				holder = root
				change = scope:change
			}			
		}
		resolve_title_and_vassal_change = scope:change
		
		scope:cast_away_county = { generate_coa = yes }
		destroy_title = title:d_tol_uialgaer
		make_settlement_county_wilderness = { COUNTY = scope:targeted_county }
	}

	option = {
		name = umbar.0113.a 
		add_gold = 500
		spawn_army = {
			uses_supply = no
			inheritable = yes
			name = ar_ardunaim_event_settlers
			levies = 1500
			men_at_arms = {
				type = adunaim_armsmen
				stacks = 2
			}
			men_at_arms = {
				type = abrazanim_warbows
				stacks = 2
			}
			location = scope:cast_away_county.title_province
		}
		scope:cast_away_county.title_province = {
			set_holding_type = castle_holding	
			add_building = castle_02
			add_building = windmills_01
			add_building = common_tradeport_01
		}
		add_stress = 50
	}
	
	after = {
		trigger_event = {
			id = umbar.0150 # Arphazêl's Flight
			months = 5 
		}
	}
}

### Arphazêl Events ###

umbar.0150 = { # Arphazêl's Flight
	content_source = realms_dlc
	type = character_event
	title = umbar.0150.t
	desc = umbar.0150.desc
	theme = dread
	override_background = {
		reference = docks
	}
	left_portrait = {
		character = root 
		animation = rage 
	}
	right_portrait = {
		character = scope:arphazel
		animation = personality_callous 
	}
	immediate = { character:linepharazon8 = { save_scope_as = arphazel } } 
	option = { # It's no use. She's gone!
		name = umbar.0150.a 
		scope:arphazel = {
			create_landless_adventurer_title_effect = {
				REASON = flag:voluntary
				FLAVOR_CHAR = root
			}
			trigger_event = { id = ep3_laamps.0030 days = 1 }
			trigger_event = { id = umbar.0151 days = 7 }
		}
		add_stress = 10 
	}
	option = { # Foolish girl, after her!
		name = umbar.0150.b
 		duel = {
 			skill = intrigue
 			target = scope:arphazel
 			50 = {
				# You bring her back
 				desc = umbar.0150.b.success
 				compare_modifier = {
 					value = scope:duel_value
 					multiplier = 3.5
 					min = -49
 				}
 				send_interface_toast = {
 					title = umbar.0150.b.success
 					left_icon = root
 					right_icon = scope:arphazel
 					rightfully_imprison_character_effect = {
 						TARGET = scope:arphazel
 						IMPRISONER = root
 					}
 				}
				add_stress = -20
				add_dread = medium_dread_gain
 			}
 			50 = {
 				# The girl escapes
 				desc = umbar.0150.b.failure
 				compare_modifier = {
 					value = scope:duel_value
 					multiplier = -3.5
 					min = -49
 				}
 				send_interface_toast = {
 					title = umbar.0150.b.failure
 					left_icon = root
 					right_icon = scope:arphazel
 				}
				scope:arphazel = {
					create_landless_adventurer_title_effect = {
						REASON = flag:voluntary
						FLAVOR_CHAR = root
					}
					trigger_event = { id = ep3_laamps.0030 days = 1 }
					trigger_event = { id = umbar.0151 days = 7 }
				}
				add_stress = 30
				add_dread = medium_dread_loss
 			}
 		}
	}
	
	option = { # I wonder what she's planning to do now...
		name = umbar.0150.c
		trigger = { 
			has_dlc_feature = roads_to_power 
			is_ai = no #The AI shouldn't do this
		}
		show_as_tooltip = { set_player_character = scope:arphazel }
		scope:arphazel = {
			create_landless_adventurer_title_effect = {
				REASON = flag:voluntary
				FLAVOR_CHAR = root
			}
			trigger_event = { id = ep3_laamps.0030 days = 1 }
			trigger_event = { id = umbar.0151 days = 7 }
			#change_provisions = medium_provisions_gain
		}	
		trigger_event = umbar.0152
	}
}

umbar.0151 = { # My Freedom Won
	content_source = realms_dlc
	type = character_event
	title = umbar.0151.t
	desc = umbar.0151.desc
	theme = crown
	override_background = { reference = fp1_beached_longships }
	left_portrait = {
		character = root 
		animation = happiness 
	}
	immediate = { 
		every_spouse = { save_scope_as = husbando }
		add_gold = 350 
		add_pressed_claim = title:e_adunaim
		add_character_flag = is_arphazel
		hidden_effect = { add_contact = title:c_mirlond.holder }
		title:e_adunaim.holder = { save_scope_as = daddy }
		set_relation_rival = {
			target = scope:daddy
			reason = rival_was_kept_in_jail
		}
		if = {
			limit = { is_married = yes }
			divorce_effect = {
				DIVORCER = root
				DIVORCEE = scope:husbando
			}
		}
		if = {
			limit = { is_betrothed = yes }
			root.betrothed = { save_scope_as = fiancee_arphazel }
			scope:fiancee_arphazel = {
				break_betrothal = root
			}
		}
		domicile ?= { 
			change_provisions = major_provisions_gain 
			move_domicile = title:c_ramlond.title_province
		}
	}
	option = { # I leave the darkness behind, forever
		name = umbar.0151.a 
		set_character_faith = faith:faith_edain_ulmo
		add_piety = major_piety_gain
		remove_trait = sorcerer_1
		add_trait = lifestyle_mystic
	}
	option = { # I follow in the footsteps of my ancestors
		name = umbar.0151.b
		set_character_faith = faith:faith_corsair
		add_piety = major_piety_gain
		add_trait = lifestyle_mariner
	}
	option = { # I am unchanged by my flight
		name = umbar.0151.c
		custom_tooltip = umbar.0151.c.tt
		add_piety = major_piety_gain
	}
	
	after = {
		trigger_event = {
			id = umbar.0153
			days = 5 
		}
		hidden_effect = {
			contract_passive_spawn_effect = {
				SPAWN_CONTRACTS = 5
			}
		}
	}
}

umbar.0152 = { # Hidden: Arphazel Set-up event 
	hidden = yes 
	immediate = {
		set_player_character = character:linepharazon8
	}
}

umbar.0153 = { # Looking Towards the Future
	content_source = realms_dlc
	type = character_event
	title = umbar.0153.t
	desc = umbar.0153.desc
	theme = realm
	left_portrait = {
		character = root 
		animation = personality_rational 
	}
	lower_right_portrait = {
		character = scope:daddy
	}
	immediate = {
		root.father = { save_scope_as = daddy }
		title:c_mirlond.holder = { save_scope_as = mirlondholder }
		root.primary_title = {
			set_title_name = arphazel_camp_name
		}
	}
	option = { # I'll see him kneel before me one day
		name = umbar.0153.a
		remove_short_term_gold = minor_gold_value
		create_maa_regiment = {
			type = abrazanim_warbows
			check_can_recruit = no
			size = 2
		}
	}
	option = { # I seek no vengeance. New paths lie before me
		name = umbar.0153.b
		add_diplomacy_lifestyle_xp = medium_lifestyle_xp
		add_stewardship_lifestyle_xp = medium_lifestyle_xp
		add_stress = -25
	}
	after = {
		custom_tooltip = umbar.0153.tt
		hidden_effect = {
			root = {
				create_task_contract = {
					task_contract_type = lotr_arphazel_contract_mirlond
					task_contract_employer = scope:mirlondholder
					location = title:c_mirlond.title_province
					task_contract_tier = 4
					save_scope_as = created_contract
				}
			}
		}
	}
}

umbar.0154 = { # Mirlond Contract 
	content_source = realms_dlc
	type = character_event
	title = umbar.0154.t
	desc = umbar.0154.desc
	theme = laamp
	#window = visit_settlement_window
	override_background = {
		reference = throne_room_dunedain
	}
	left_portrait = {
		character = root 
		animation = thinking 
	}
	right_portrait = {
		character = scope:mirlondholder
		animation = debating
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	immediate = { title:c_mirlond.holder = { save_scope_as = mirlondholder } }
	option = { # Accept his offer
		name = umbar.0154.a 
		domicile ?= { 
			change_provisions = medium_provisions_gain 
			move_domicile = title:c_mirlond.title_province
		}
		trigger_event = umbar.0155
	}
	option = { # Reject his offer (Opt out of story content)
		name = umbar.0154.b
		ai_chance = { base = 100 }
		random_character_active_contract = {
			limit = { has_task_contract_type = lotr_arphazel_contract_mirlond }
			complete_task_contract = failure_standard
		}
		custom_tooltip = umbar.0154.b.tt
	}
}

umbar.0155 = { # Mirlond Contract: Accept
	content_source = realms_dlc
	type = character_event
	title = umbar.0155.t
	desc = umbar.0155.desc
	theme = laamp
	#window = visit_settlement_window
	override_background = {
		reference = throne_room_dunedain
	}
	left_portrait = {
		character = root 
		animation = throne_room_conversation_1 
	}
	right_portrait = {
		character = scope:mirlondholder
		animation = happiness
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	option = { # Appease the Harondorim
		name = umbar.0155.a 
		scope:mirlondholder = {
			capital_county = {
				add_county_modifier = {
					modifier = hold_court_grateful_peasants_modifier
					years = 10
				}
			}
		}
	}
	option = { # Appease the Haruze 
		name = umbar.0155.b
		scope:mirlondholder = {
			capital_county = {
				add_county_modifier = {
					modifier = county_increased_opinion_modifier
					years = 10
				}
			}
		}
	}
	option = { # Appease the Umbareans 
		name = umbar.0155.c
		scope:mirlondholder = {
			capital_county = {
				add_county_modifier = {
					modifier = no_stone_unturned_boosted_perk_modifier
					years = 10
				}
			}
		}
	}
	after = {
		custom_tooltip = umbar.0155.tt
		random_character_active_contract = {
			limit = { has_task_contract_type = lotr_arphazel_contract_mirlond }
			complete_task_contract = success_standard
		}
		scope:mirlondholder = {
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 80 
			}	
		}
		show_as_tooltip = { add_contact = scope:mirlondholder }
		hidden_effect = {
			current_travel_plan ?= { abort_travel_plan = yes }
		}
		trigger_event = {
			id = umbar.0156
			months = 3
		}
	}
}

umbar.0156 = { # Hidden: Create the Harfalas Contract
	hidden = yes 
	immediate = {
		title:c_harfalas.holder = { save_scope_as = harfalasholder }
		root = {
			create_task_contract = {
				task_contract_type = lotr_arphazel_contract_harfalas
				task_contract_employer = scope:harfalasholder
				location = title:c_harfalas.title_province
				task_contract_tier = 4
				save_scope_as = created_contract
			}
		}
		add_contact = scope:harfalasholder
	}
}

umbar.0157 = { # The Harfalas Contract
	content_source = realms_dlc
	type = character_event
	title = umbar.0157.t
	desc = umbar.0157.desc
	theme = laamp
	#window = visit_settlement_window
	override_background = {
		reference = corridor_dunedain
	}
	left_portrait = {
		character = root 
		animation = wedding_objection_start 
	}
	right_portrait = {
		character = scope:harfalasholder
		animation = personality_rational
	}
	lower_right_portrait = {
		character = scope:harfalasspouse
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	immediate = {
		title:c_harfalas.holder = { save_scope_as = harfalasholder } 
		scope:harfalasholder = {
			every_spouse = { save_scope_as = harfalasspouse }
		}
	}
	option = { # Imprison your wife
		name = umbar.0157.a 
		scope:harfalasholder = {
			rightfully_imprison_character_effect = {
				TARGET = scope:harfalasspouse
				IMPRISONER = scope:harfalasholder
			}
			add_stress = 50
			add_prestige = minor_prestige_gain
		}
	}
	option = { # Let her walk free
		name = umbar.0157.b 
		scope:harfalasholder = {
			add_stress = -50 
			add_prestige = medium_prestige_loss
		}
	}
	
	after = {
		custom_tooltip = umbar.0157.tt
		scope:harfalasholder = {
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 80 
			}	
		}
		random_character_active_contract = {
			limit = { has_task_contract_type = lotr_arphazel_contract_harfalas }
			complete_task_contract = success_standard
		}
		show_as_tooltip = { add_contact = scope:harfalasholder }
		trigger_event = umbar.0158
		
	}
}

umbar.0158 = { # Harfalas: An Encounter
	content_source = realms_dlc
	type = character_event
	title = umbar.0158.t
	desc = umbar.0158.desc
	theme = intrigue
	#window = visit_settlement_window
	override_background = {
		reference = alley_day
	}
	left_portrait = {
		character = scope:princess 
		animation = stayback
	}
	right_portrait = {
		character = scope:umbaruz_assassin
		animation = aggressive_dagger
	}
	lower_center_portrait = {
		character = root 
	}
	immediate = {
		character:linedurthoron11 = { save_scope_as = princess }
		create_character = {
			template = peasant_character
			dynasty = none
			location = root.location
			gender_female_chance = 20
			faith = faith:lidless_eye
			culture = culture:umbarean
			save_scope_as = umbaruz_assassin
		}
	}
	option = { # Intervene
		name = umbar.0158.a
		custom_tooltip = umbar.0158.a.tt
		random = {
			chance = 15
			increase_wounds_effect = { REASON = fight }
		}
		trigger_event = umbar.0159
	}
	option = { # None of my business
		name = umbar.0158.b 
		custom_tooltip = umbar.0158.b.tt 
		scope:princess = {
			increase_wounds_effect = { REASON = attacked }
		}
	}
}

umbar.0159 = { # Harfalas: A Princess Saved
	content_source = realms_dlc
	type = character_event
	title = umbar.0159.t
	desc = umbar.0159.desc
	theme = crown
	#window = visit_settlement_window
	override_background = {
		reference = alley_day
	}
	left_portrait = {
		character = scope:princess 
		animation = happiness
	}
	right_portrait = {
		character = root 
		animation = personality_compassionate
	}
	immediate = {
		scope:umbaruz_assassin = {
			silent_disappearance_effect = yes
		}
	}
	option = { # Wish her save travels
		name = umbar.0159.a
		progress_towards_friend_effect = {
			REASON = friend_saved_my_life
			CHARACTER = scope:princess
			OPINION = default_friend_opinion
		}
		add_hook = {
			type = saved_my_life_hook
			target = scope:princess
		}
		trigger_event = {	
			id = umbar.0160 
			months = 4
		}
	}
}

umbar.0160 = { # Hidden: Create the Linhir Contract
	hidden = yes 
	immediate = {
		title:c_linhir.holder = { save_scope_as = linhirholder }
		root = {
			create_task_contract = {
				task_contract_type = lotr_arphazel_contract_linhir
				task_contract_employer = scope:linhirholder
				location = title:c_linhir.title_province
				task_contract_tier = 4
				save_scope_as = created_contract
			}
		}
		add_contact = scope:linhirholder
	}
}

umbar.0161 = { # Linhir: A New Dawn
	content_source = realms_dlc
	type = character_event
	title = umbar.0161.t
	desc = umbar.0161.desc
	theme = family
	#window = visit_settlement_window
	override_background = {
		reference = throne_room_dunedain
	}
	right_portrait = {
		character = scope:princess 
		animation = happy_teacher
	}
	left_portrait = {
		character = root 
		animation = personality_rational
	}
	lower_center_portrait = {
		character = scope:linhirholder 
	}
	immediate = { 
		title:c_linhir.holder = { save_scope_as = linhirholder } 
		character:linedurthoron11 = { save_scope_as = princess }
	}
	option = { # I will adapt to this land
		name = umbar.0161.a
		custom_tooltip = umbar.0161.a.tt
		set_culture = culture:belfalathrim
		trigger_event = umbar.0162
	}
	option = { # I'll remain true to my origins
		name = umbar.0161.b 
		custom_tooltip = umbar.0161.b.tt 
		trigger_event = umbar.0163
	}
}

umbar.0162 = { # Linhir: Choosing a Name
	content_source = realms_dlc
	type = character_event
	title = umbar.0162.t
	desc = umbar.0162.desc
	theme = family
	#window = visit_settlement_window
	override_background = {
		reference = corridor_dunedain
	}
	right_portrait = {
		character = scope:princess 
		animation = interested
	}
	left_portrait = {
		character = root 
		animation = thinking
	}
	lower_center_portrait = {
		character = scope:linhirholder 
	}
	option = { # Direct translation
		name = umbar.0162.a
		change_first_name = "Aranel"
	}
	option = { # A more elegant name
		name = umbar.0162.b
		change_first_name = "Amarien"
	}
	option = { # Something quite different
		name = umbar.0162.c
		change_first_name = "Lorniel"
	}
	option = { # Another different option
		name = umbar.0162.d
		change_first_name = "Gilwen"
	}
	option = { # Another different option
		name = umbar.0162.e
		change_first_name = "Melosse"
	}
	option = { # No, I've changed my mind
		name = umbar.0162.f
	}
	after = {
		random_character_active_contract = {
			limit = { has_task_contract_type = lotr_arphazel_contract_linhir }
			complete_task_contract = success_standard
		}
		scope:linhirholder = {
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 80 
			}	
		}
		show_as_tooltip = { add_contact = scope:linhirholder }
		domicile ?= { 
			change_provisions = major_provisions_gain 
			move_domicile = title:c_linhir.title_province
		}
		hidden_effect = {
			current_travel_plan ?= { abort_travel_plan = yes }
		}
		hidden_effect = {
			contract_passive_spawn_effect = {
				SPAWN_CONTRACTS = 5
			}
		}
		trigger_event = {
			id = umbar.0164 
			months = 5 
		}
	}
}

umbar.0163 = { # Linhir: Departure
	content_source = realms_dlc
	type = character_event
	title = umbar.0163.t
	desc = umbar.0163.desc
	theme = laamp
	#window = visit_settlement_window
	override_background = {
		reference = corridor_dunedain
	}
	right_portrait = {
		character = scope:princess 
		animation = stress
	}
	left_portrait = {
		character = root 
		animation = personality_callous
	}
	lower_center_portrait = {
		character = scope:linhirholder 
	}
	option = { # It is time to leave
		name = umbar.0163.a
		random_character_active_contract = {
			limit = { has_task_contract_type = lotr_arphazel_contract_linhir }
			complete_task_contract = success_standard
		}
		scope:linhirholder = {
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 50 
			}	
		}
		show_as_tooltip = { add_contact = scope:linhirholder }
		trigger_event = {
			id = umbar.0164 
			months = 5 
		}
		hidden_effect = {
			contract_passive_spawn_effect = {
				SPAWN_CONTRACTS = 5
			}
		}
	}
}

umbar.0164 = { # Hidden: Create the Ramlond Contract
	hidden = yes 
	immediate = {
		title:c_ramlond.holder = { save_scope_as = ramlondholder }
		root = {
			create_task_contract = {
				task_contract_type = lotr_arphazel_contract_ramlond
				task_contract_employer = scope:ramlondholder
				location = title:c_ramlond.title_province
				task_contract_tier = 4
				save_scope_as = created_contract
			}
		}
		add_contact = scope:ramlondholder
	}
}

umbar.0165 = { # Ramlond: An Ancient Claim
	content_source = realms_dlc
	type = character_event
	title = umbar.0165.t
	desc = umbar.0165.desc
	theme = realm
	#window = visit_settlement_window
	override_background = {
		reference = market_dunedain
	}
	right_portrait = {
		character = scope:ramlondholder 
		animation = personality_vengeful
	}
	left_portrait = {
		character = root 
		animation = personality_callous
	}
	immediate = { 
		title:c_ramlond.holder = { save_scope_as = ramlondholder } 
	}
	option = { # Very well...
		name = umbar.0165.a
		custom_tooltip = umbar.0165.a.tt
		trigger_event = umbar.0166
	}
	option = { # I'll not go against my first benefactor
		name = umbar.0165.b 
		custom_tooltip = umbar.0165.b.tt 
		random_character_active_contract = {
			limit = { has_task_contract_type = lotr_arphazel_contract_linhir }
			complete_task_contract = failure_standard
		}
		scope:ramlondholder = {	
			add_opinion = {
				target = root
				modifier = angry_opinion
				opinion = -75
			}
		}
		trigger_event = umbar.0167
	}
}

umbar.0166 = { # Ramlond: The Catacombs
	content_source = realms_dlc
	type = character_event
	title = umbar.0166.t
	desc = umbar.0166.desc
	theme = funeral_activity
	#window = visit_settlement_window
	override_background = {
		reference = ce1_catacombs
	}
	right_portrait = {
		character = root
		animation = lantern
	}

	option = { # Okay, let's see here...
		name = umbar.0166.a
 		duel = {
 			skill = learning
 			value = very_high_skill_rating
 			50 = {
				# You find the ancient scroll
 				desc = umbar.0166.a.success
 				compare_modifier = {
 					value = scope:duel_value
 					multiplier = 3.5
 					min = -49
 				}
 				send_interface_toast = {
 					title = umbar.0166.a.success
 					left_icon = root
 					right_icon = scope:ramlondholder
 				}
				random_character_active_contract = {
					limit = { has_task_contract_type = lotr_arphazel_contract_ramlond }
					complete_task_contract = success_standard
				}
				scope:ramlondholder = {
					add_opinion = {
						target = root
						modifier = pleased_opinion
						opinion = 75
					}
					add_pressed_claim = title:c_mirlond
				}
				show_as_tooltip = { add_contact = scope:ramlondholder }
 			}
 			50 = {
 				# You fail to find any evidence
 				desc = umbar.0166.a.failure
 				compare_modifier = {
 					value = scope:duel_value
 					multiplier = -3.5
 					min = -49
 				}
 				send_interface_toast = {
 					title = umbar.0166.a.failure
 					left_icon = root
 					right_icon = scope:ramlondholder
 				}
				add_stress = 30
				random_character_active_contract = {
					limit = { has_task_contract_type = lotr_arphazel_contract_ramlond }
					complete_task_contract = failure_standard
				} 	
				scope:ramlondholder = {	
					add_opinion = {
						target = root
							modifier = disappointed_opinion
							opinion = -50
						}
					}
				}

 		}
	}
	
	after = {
		trigger_event = umbar.0167
	}
}

umbar.0167 = { # Ramlond: The Stray
	content_source = realms_dlc
	type = character_event
	title = umbar.0167.t
	desc = umbar.0167.desc
	theme = family
	#window = visit_settlement_window
	override_background = {
		reference = garden
	}
	left_portrait = {
		character = root
		animation = interested
	}
	right_portrait = {
		character = scope:straygirl
		animation = beg
	}
	immediate = {
		create_character = {
			location = root.location
			dynasty = none
			culture = culture:umbarean
			faith = faith:faith_corsair
			template = beautiful_peasant_character
			gender_female_chance = 100
			age = 8
			after_creation = {
				add_trait = blood_of_numenor_1
				remove_trait = peasant_leader
			}
			save_scope_as = straygirl
		}
		#custom_tooltip = arphazel_end.tt
	}
	option = { # Get lost.
		name = umbar.0167.a
		add_stress = -25 
	}
	option = { # Buy yourself some food.
		name = umbar.0167.b
		remove_short_term_gold = 5 
		add_piety = miniscule_piety_gain
	}
	option = { # I have a place for you. 
		name = umbar.0167.c
		add_courtier = scope:straygirl
	}
	
	after = {
		trigger_event = {
			id = umbar.0168 
			months = 5 
		}
	}
}	

umbar.0168 = { # Hidden: Create the Tolfalas Contract
	hidden = yes 
	immediate = {
		title:c_hartolfalas.holder = { save_scope_as = tolfalasholder }
		root = {
			create_task_contract = {
				task_contract_type = lotr_arphazel_contract_tolfalas
				task_contract_employer = scope:tolfalasholder
				location = title:c_hartolfalas.title_province
				task_contract_tier = 4
				save_scope_as = created_contract
			}
		}
		add_contact = scope:tolfalasholder
	}
}

umbar.0169 = { # Tolfalas: Arrival
	content_source = realms_dlc
	type = character_event
	title = umbar.0169.t
	desc = umbar.0169.desc
	theme = intrigue
	#window = visit_settlement_window
	override_background = {
		reference = docks_tribal
	}
	left_portrait = {
		character = root
		animation = personality_callous
	}
	right_portrait = {
		character = scope:galador
		animation = throne_room_two_handed_passive_1
	}
	lower_center_portrait = {
		character = scope:bigsis
	}
	immediate = {
		character:lineartenosse84 = { save_scope_as = galador }
		character:linepharazon7 = { save_scope_as = bigsis }
	}
	option = { # Yeah I'll try to save her 
		name = umbar.0169.a 
		custom_tooltip = umbar.0169.a.tt 
		scope:bigsis = {
			every_spouse = { save_scope_as = bigsispartner }
		}
		trigger_event = umbar.0170
	}
	option = { # This isn't worth the risk 
		name = umbar.0169.b 
		custom_tooltip = umbar.0169.b.tt 
		custom_tooltip = arphazel_end.tt
		random_character_active_contract = {
			limit = { has_task_contract_type = lotr_arphazel_contract_tolfalas }
			complete_task_contract = failure_standard
		}
	}
}

umbar.0170 = { # Tolfalas: The Heist
	content_source = realms_dlc
	type = character_event
	title = umbar.0170.t
	desc = umbar.0170.desc
	theme = intrigue_skulduggery_focus
	#window = visit_settlement_window
	override_background = {
		reference = fp1_beached_longships
	}
	left_portrait = {
		character = root
		animation = lantern
	}
	right_portrait = {
		character = scope:galador
		animation = scheme
	}
	lower_center_portrait = {
		character = scope:bigsis
	}
	option = { # Attack them!
		name = umbar.0170.a
		duel = {
 			skill = prowess
 			value = high_skill_rating
 			50 = {
				# You're successful
 				desc = umbar.0170.a.success
 				compare_modifier = {
 					value = scope:duel_value
 					multiplier = 3.5
 					min = -49
 				}
 				send_interface_toast = {
 					title = umbar.0170.a.success
 					left_icon = root
 					right_icon = scope:bigsis
 				}
				scope:bigsis = {
					if = {
						limit = { is_married = yes }
						divorce_effect = {
							DIVORCER = scope:bigsis
							DIVORCEE = scope:bigsispartner
						}
					}
				}
				add_courtier = scope:bigsis
 			}
 			50 = {
 				# You failed
 				desc = umbar.0170.a.failure
 				compare_modifier = {
 					value = scope:duel_value
 					multiplier = -3.5
 					min = -49
 				}
 				send_interface_toast = {
 					title = umbar.0170.a.failure
 					left_icon = root
 					right_icon = scope:bigsis
 				}
				increase_wounds_effect = { REASON = fight }
 			}
		}
	}
	option = { # Sneak past the guards
		name = umbar.0170.b
		duel = {
 			skill = intrigue
 			value = high_skill_rating
 			50 = {
				# You're successful
 				desc = umbar.0170.b.success
 				compare_modifier = {
 					value = scope:duel_value
 					multiplier = 3.5
 					min = -49
 				}
 				send_interface_toast = {
 					title = umbar.0170.b.success
 					left_icon = root
 					right_icon = scope:bigsis
 				}
				scope:bigsis = {
					if = {
						limit = { is_married = yes }
						divorce_effect = {
							DIVORCER = scope:bigsis
							DIVORCEE = scope:bigsispartner
						}
					}
				}
				add_courtier = scope:bigsis
 			}
 			50 = {
 				# You failed
 				desc = umbar.0170.b.failure
 				compare_modifier = {
 					value = scope:duel_value
 					multiplier = -3.5
 					min = -49
 				}
 				send_interface_toast = {
 					title = umbar.0170.b.failure
 					left_icon = root
 					right_icon = scope:bigsis
 				}
				increase_wounds_effect = { REASON = fight }
 			}
		}
	}
	option = { # Just by her freedom 
		name = umbar.0170.c 
		remove_short_term_gold = 200 
		scope:bigsis = {
			if = {
				limit = { is_married = yes }
				divorce_effect = {
					DIVORCER = scope:bigsis
					DIVORCEE = scope:bigsispartner
				}
			}
		}
		add_courtier = scope:bigsis
	}
	after = {
		trigger_event = umbar.0171
	}
}

umbar.0171 = { # Tolfalas: The Aftermath
	content_source = realms_dlc
	type = character_event
	title = umbar.0171.t
	desc = umbar.0171.desc
	theme = sailing_activity
	#window = visit_settlement_window
	override_background = {
		reference = docks_dunedain
	}
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:galador
		animation = throne_room_one_handed_passive_2
	}
	immediate = { custom_tooltip = arphazel_end.tt }
	option = { # I'd like to see you again soon *wink wink*
		name = umbar.0171.a
		progress_towards_lover_effect = {
			CHARACTER = scope:galador
			REASON = lover_followed_around
			OPINION = 25
		}
	}
	option = { # You're a dependable guy.
		name = umbar.0171.b
		progress_towards_friend_effect = {
			REASON = friend_took_side_in_fight
			CHARACTER = scope:galador
			OPINION = 25
		}
	}
	option = { # OK byeee
		name = umbar.0171.c 
	}
	after = {
		random_character_active_contract = {
			limit = { has_task_contract_type = lotr_arphazel_contract_tolfalas }
			complete_task_contract = success_standard
		}
	}
}

### Berúthiel Events ###

umbar.0201 = { # Beruthiel's plot
	content_source = realms_dlc
	type = character_event
	title = umbar.0201.t
	desc = umbar.0201.desc
	theme = murder_scheme
	left_portrait = {
		character = root
		animation = scheme
	}
	right_portrait = {
		character = character:lineofcassimir22
		animation = disapproval
	}
	option = {
		name = umbar.0201.a
		custom_tooltip = umbar.0201.a.tt
		character:lineofcassimir22 = {
			trigger_event = {
				id = umbar.0202
				days = 14
			}
		}
	}
}

umbar.0202 = { # Beruthiel's plot
	content_source = realms_dlc
	type = character_event
	title = umbar.0202.t
	desc = umbar.0202.desc
	theme = death
	left_portrait = {
		character = root
		animation = fear 
	}
	right_portrait = {
		character = character:lineblackqueen9
		animation = scheme
	}
	option = {
		name = umbar.0202.a
		show_as_tooltip = {
			death = {
				death_reason = death_murder	
				killer = character:lineblackqueen9
			}
			character:lineblackqueen9 = {
				add_secret = {
					type = secret_murder
					target = character:lineofcassimir22
				}
			}
		}
		character:lineblackqueen9 = {
			trigger_event = {
				id = umbar.0203
			}
		}
	}
}

umbar.0203 = { # Beruthiel's plot
	content_source = realms_dlc
	type = character_event
	title = umbar.0203.t
	desc = umbar.0203.desc
	theme = murder_scheme
	left_portrait = {
		character = root
		animation = scheme 
	}
	right_portrait = {
		character = character:lineofcassimir22
		animation = fear
	}
	immediate = {
		character:lineofcassimir22 = {
			death = { 		
				death_reason = death_murder	
				killer = character:lineblackqueen9
			}
		}
		add_secret = {
			type = secret_murder
			target = character:lineofcassimir22
		}
	}
	option = {
		name = umbar.0203.a
	}
}

umbar.1000 = {
	content_source = realms_dlc
	type = character_event
	title = umbar.1000.t
	desc = umbar.1000.desc
	theme = war
	left_portrait = {
		character = root
		animation = anger
	}
	immediate = {
		play_music_cue = "mx_cue_combat_2"
		add_character_flag = {
			flag = pressed_castamiri_claim
		}
	}

	option = {
		name = umbar.1000.a
		if = {
			limit = { exists = title:e_gondor_steward }
			start_war = {
				casus_belli = castamir_claim_cb
				target = title:e_gondor_steward.holder
				target_title = title:e_gondor_steward
			}
		}
		if = {
		limit = { exists = title:e_gondor }
			start_war = {
				casus_belli = castamir_claim_cb
				target = title:e_gondor.holder
				target_title = title:e_gondor
			}
		}
	}
}

umbar.1001 = {	
	content_source = realms_dlc
	type = character_event
	title = umbar.1001.t
	desc = umbar.1001.desc
	theme = stewardship_duty_focus
	left_portrait = {
		character = root
		animation = personality_rational
	}
	
	trigger = {
		root.dynasty = dynasty:dynasty_kamal
	}

	immediate = {
		dynasty = { # Ancestors
			every_dynasty_member = {
				even_if_dead = yes
				limit = {
					NOT = {
						any_in_list = {
							list = castamirioni_members
							this = prev
						}
					}
				}
				every_ancestor = {
					even_if_dead = yes
					limit = { dynasty = dynasty:dynasty_kamal }
					add_to_list = castamirioni_members
					every_ancestor = {
						even_if_dead = yes
						limit = { dynasty = dynasty:dynasty_kamal }
						add_to_list = castamirioni_members
						every_ancestor = {
							even_if_dead = yes
							limit = { dynasty = dynasty:dynasty_kamal }
							add_to_list = castamirioni_members
							every_ancestor = {
								even_if_dead = yes
								limit = { dynasty = dynasty:dynasty_kamal }
								add_to_list = castamirioni_members
								every_ancestor = {
									even_if_dead = yes
									limit = { dynasty = dynasty:dynasty_kamal }
									add_to_list = castamirioni_members
								}
							}
						}
					}
				}
			}
		}
		dynasty = { # Current alive members
			every_dynasty_member = {
				limit = { 
					NOT = {
						any_in_list = {
							list = castamirioni_members
							this = prev
						}
					}
				}
				add_to_list = castamirioni_members
			}
		}
	}
	
	option = {
		name = umbar.1001.a #The Castamiri become the Kings of Gondor
		hidden_effect = {
			every_in_list = {
				list = castamirioni_members
				set_house = house:house_castamir
			}
		}
		set_house = house:house_castamir

		dynasty = { add_dynasty_prestige_level = 10 }
		dynasty = { add_dynasty_prestige = 10000 }
		
		add_legitimacy = massive_legitimacy_loss
		
		# set_house = house:house_new_castamir

		set_culture = culture:gondorian
		every_close_or_extended_family_member = { set_culture = culture:gondorian }

		
		if = {
			limit = { exists = title:e_gondor.holder }
			title:e_gondor.holder = { # Inherits the Throne of Gondor, the Palantir of Minas Tirith and the Crown of Gondor from the King.
				every_character_artifact = {
					limit = {
						OR = {
							has_variable = palantir_minasanor
							has_variable = throne_of_gondor
							has_variable = crown_of_gondor
							has_variable = black_chair_stewards
						}
					}
					set_owner = {
						target = root
						history = {
							type = inherited
							recipient = root
						}
					}
				}
			}
		}
		else_if = {
			limit = { exists = title:e_gondor_steward.holder }
			if = {
				limit = {
					NOT = {
						any_artifact = {
							has_variable = crown_of_gondor
						}
					}
				}
				create_artifact_crown_of_gondor_effect = { OWNER = this }
				set_global_variable = gondor_has_a_king
			}
			title:e_gondor_steward.holder = { # Inherits the Throne of Gondor and the Palantir of Minas Tirith from the steward.
				every_character_artifact = {
					limit = {
						OR = {
							has_variable = palantir_minasanor
							has_variable = black_chair_stewards
							has_variable = throne_of_gondor
							has_variable = crown_of_gondor
						}
					}
					set_owner = {
						target = root
						history = {
							type = inherited
							recipient = root
						}
					}
				}
			}
		}

		if = { ### Fixed Govornment Type depending on gamerule
			limit = { has_game_rule = historicity_extra_admin_gondor_alt_historic_always } 
			change_government = administrative_government
		}
		
		every_artifact = { #The Royal Artifacts are now tied to the new title
			limit = { 
				OR = {
					has_variable = throne_of_gondor
					has_variable = crown_of_gondor
					has_variable = black_chair_stewards
				}
			}
			set_variable = {
				name = artifact_succession_title
				value = title:e_castamir
			}
		}
		
		# every_child = {
		# 	limit = {
		# 		OR = {
		# 			mother = {
		# 				AND = {
		# 					dynasty = dynasty:dynasty_kamal
		# 					matrilinear_marriage = yes
		# 				}
		# 			}
		# 			father = {
		# 				AND = {
		# 					dynasty = dynasty:dynasty_kamal
		# 					matrilinear_marriage = no
		# 				}
		# 			}
		# 		}
		# 	}
		# 	set_house = house:house_new_castamir
		# 	every_child = {
		# 		limit = {
		# 			OR = {
		# 				mother = {
		# 					AND = {
		# 						dynasty = dynasty:dynasty_kamal
		# 						matrilinear_marriage = yes
		# 					}
		# 				}
		# 				father = {
		# 					AND = {
		# 						dynasty = dynasty:dynasty_kamal
		# 						matrilinear_marriage = no
		# 					}
		# 				}
		# 			}
		# 		}
		# 		set_house = house:house_new_castamir
		# 		every_child = {
		# 			limit = {
		# 				OR = {
		# 					mother = {
		# 						AND = {
		# 							dynasty = dynasty:dynasty_kamal
		# 							matrilinear_marriage = yes
		# 						}
		# 					}
		# 					father = {
		# 						AND = {
		# 							dynasty = dynasty:dynasty_kamal
		# 							matrilinear_marriage = no
		# 						}
		# 					}
		# 				}
		# 			}
		# 			set_house = house:house_new_castamir
		# 			every_child = {
		# 				limit = {
		# 					OR = {
		# 						mother = {
		# 							AND = {
		# 								dynasty = dynasty:dynasty_kamal
		# 								matrilinear_marriage = yes
		# 							}
		# 						}
		# 						father = {
		# 							AND = {
		# 								dynasty = dynasty:dynasty_kamal
		# 								matrilinear_marriage = no
		# 							}
		# 						}
		# 					}
		# 				}
		# 				set_house = house:house_new_castamir
		# 			}
		# 		}
		# 	}
		# }
		
		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:e_castamir = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		title:e_gondor_steward = {
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_kingdom }
				set_de_jure_liege_title = title:e_castamir
			}
			holder = { add_pressed_claim = title:e_castamir }
			every_claimant = {
				if = {
					limit = {
						has_strong_claim_on = this
					}
					add_pressed_claim = title:e_castamir
				}
				else = { add_unpressed_claim = title:e_castamir }
			}
		}
		title:e_gondor = {
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_kingdom }
				set_de_jure_liege_title = title:e_castamir
			}
			holder = { add_pressed_claim = title:e_castamir }
			every_claimant = {
				if = {
					limit = {
						has_strong_claim_on = this
					}
					add_pressed_claim = title:e_castamir
				}
				else = { add_unpressed_claim = title:e_castamir }
			}
		}
		title:e_umbar = {
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_kingdom }
				set_de_jure_liege_title = title:e_castamir
			}
			every_claimant = {
				if = {
					limit = {
						has_strong_claim_on = this
					}
					add_pressed_claim = title:e_castamir
				}
				else = { add_unpressed_claim = title:e_castamir }
			}
		}
		resolve_title_and_vassal_change = scope:change
		destroy_title = title:e_umbar
		destroy_title = title:e_gondor_steward
		destroy_title = title:e_gondor
		destroy_title = title:e_reunitedkingdom
		
		trigger_event = {
			id = umbar.1003
			days = 0
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 34
			}
		}
	}
	option = {
		name = umbar.1001.b

		dynasty = { add_dynasty_prestige_level = 1 }
		dynasty = { add_dynasty_prestige = 1000 }
		
		if = { ### Fixed Govornment Type depending on gamerule
			limit = { has_game_rule = historicity_extra_admin_gondor_alt_historic_always } 
			change_government = administrative_government
		}

		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:e_gondor_steward = {
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_kingdom }
				set_de_jure_liege_title = title:e_umbar
			}
		}
		title:e_gondor = {
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_kingdom }
				set_de_jure_liege_title = title:e_umbar
			}
		}
		resolve_title_and_vassal_change = scope:change
		destroy_title = title:e_gondor_steward
		destroy_title = title:e_gondor
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 66
			}
		}
	}
}

umbar.1002 = {
	content_source = realms_dlc
	type = character_event
	title = umbar.1002.t
	desc = umbar.1002.desc
	theme = war
	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = title:e_umbar.holder
		animation = anger
		}
	option = {
		name = umbar.1002.a
	}
}

umbar.1003 = {	###Chose the capital
	content_source = realms_dlc
	type = character_event
	title = umbar.1003.t
	desc = umbar.1003.desc
	theme = stewardship_duty_focus
	left_portrait = {
		character = root
		animation = personality_rational
	}

	option = { ###Minas Tirith
		name = umbar.1003.a			
		trigger = { completely_controls = title:d_minas_tirith }
		if = {
			limit = {
				title:k_anorien.holder = { is_independent_ruler = no }
				title:k_anorien.holder.liege = root
			}
			get_title=title:k_anorien
		}
		get_title=title:d_minas_tirith
		get_title=title:c_minas_tirith
		title:e_castamir = {
			set_capital_county = title:c_minas_tirith
		}
		#set_culture = culture:gondorian
		#every_close_or_extended_family_member = {
		#	set_culture = culture:gondorian
		#}
		set_realm_capital = title:c_minas_tirith
	}
	option = { ###restored Osgiliath
		name = umbar.1003.b			
		trigger = { 
			completely_controls = title:d_minas_tirith 
			completely_controls = title:c_osgiliath
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_osgiliath_capital
			}
		}
		if = {
			limit = {
				title:k_anorien.holder = { is_independent_ruler = no }
				title:k_anorien.holder.liege = root
			}
			get_title=title:k_anorien
		}
		get_title=title:d_minas_tirith
		get_title=title:c_osgiliath
		title:e_castamir = {
			set_capital_county = title:c_osgiliath
		}
		#set_culture = culture:gondorian
		#every_close_or_extended_family_member = {
		#	set_culture = culture:gondorian
		#}
		set_realm_capital = title:c_osgiliath
	}
	option = { ###pelargir
		name = umbar.1003.c
		trigger = { completely_controls = title:d_pelargir }
		if = {
			limit = {
				title:k_lebennin.holder = { is_independent_ruler = no }
				title:k_lebennin.holder.liege = root
			}
			get_title=title:k_lebennin
		}
		get_title=title:d_pelargir
		get_title=title:c_pelargir
		title:e_castamir = {
			set_capital_county = title:c_pelargir
		}
		#set_culture = culture:gondorian
		#every_close_or_extended_family_member = {
		#	set_culture = culture:gondorian
		#}
	}
	option = {
		name = umbar.1003.d
	}
}

umbar.1500 = { # Hidden event to make realm break up
	hidden = yes

	trigger = {	root = { highest_held_title_tier >= tier_kingdom } }

	immediate = {
		root = { save_scope_as = defender }
		
		scope:defender = { # maybe check first if a castamirian member is alive? Kinda like a "Im more powerful than you!" type of effect
			random_powerful_vassal = {
				limit = { NOT = { is_allied_to = scope:defender } }
				save_scope_as = attacker 
			}
		}
		scope:defender = {
			every_vassal = {
				limit = {
					# is_powerful_vassal = no # Already added
					OR = {
						has_vassal_stance = minority
						has_vassal_stance = glory_hound
					}
					
					NOT = { this = scope:attacker } 
					NOT = { is_allied_to = scope:defender }
				}
				add_to_list = vassals_in_umbar
			}
		}

		scope:attacker = {
			start_war = {
				casus_belli = nation_fracturing_faction_war
				target = scope:defender
				target_title = scope:defender.primary_title
			}
			every_character_war = {
				limit = { using_cb = nation_fracturing_faction_war } # In-case the random head of the attackers has other wars hes currently engaged in
				save_scope_as = war_depose_castamir
			}
		}
		every_in_list = {
			list = vassals_in_umbar
			# limit = { prev = { is_attacker = no } } #WIP - throwing an error, so commenting out for now.
			scope:war_depose_castamir = {
				add_attacker = prev
			}
		}
	}
}

umbar.1600 = { # Corsair Conversion Event
	content_source = realms_dlc
	type = character_event
	title = umbar.1600.t
	desc = umbar.1600.desc
	theme = war
	override_background = {
		reference = docks
	}

	left_portrait = {
		character = root
		animation = brave
	}

	#right_portrait = {
	#	character = title:e_umbar.holder
	#	animation = anger
	#}

	option = {
		name = umbar.1600.a
	}
}

umbar.1601 = { # Unify the Havens of Nînzayan flavour
	content_source = realms_dlc
	type = character_event
	title = umbar.1601.t
	desc = umbar.1601.desc
	theme = crown
	override_background = {
		reference = docks_adunai
	}
	left_portrait = {
		character = root
		animation = personality_bold
	}

	option = {
		name = umbar.1601.a
	}
}

umbar.2000 = { # Unite the Sacred Isles ~ Corsair flavour
	content_source = realms_dlc
	type = character_event
	title = umbar.2000.t
	desc = umbar.2000.desc
	theme = faith
	override_background = {
		reference = docks
	}
	left_portrait = {
		character = root
		animation = celebrate_sword
	}
	
	immediate = {
		create_title_and_vassal_change = {
			type = created
			save_scope_as = title_change
			add_claim_on_loss = yes
		}
		title:d_tol_uialgaer = {
			change_title_holder = {
				holder = root
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change
		set_primary_title_to = title:k_sacred_isles

		title:d_tol_uialgaer = {
			set_de_jure_liege_title = title:k_sacred_isles
		}
		title:c_lonely_isles = {
			set_de_jure_liege_title = title:d_tol_uialgaer
		}
		title:c_pelican_isles = {
			set_de_jure_liege_title = title:d_tol_uialgaer
		}
		title:c_sunira = {
			set_de_jure_liege_title = title:d_tol_uialgaer
		}
		hidden_effect = {
			title:k_sacred_isles = {
				set_de_jure_liege_title = title:e_umbar
			}
		}
	}
	
	option = { #Get a nickname
		name = umbar.2000.a
		if = {
			limit = {
				root = { is_female = yes }
			}
			give_nickname = nick_lady_of_tides
		}
		else = {
			give_nickname = nick_lord_of_tides
		}
		add_legitimacy = medium_legitimacy_gain
		
		ai_chance = {
			base = 75
		}
	}
	

	
	option = { #Reject the nickname (if players want to keep what they had)
		name = umbar.2000.b
		add_legitimacy = medium_legitimacy_gain
	}
}
