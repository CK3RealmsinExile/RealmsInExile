namespace = lotr_thani_hazad

############################
#	lotr_thani_hazad.0000 - 500  ==> Storm-Host/An-Balkumagan Events
#	lotr_thani_hazad.1000 - 1200 ==> Stormhost spy at Balan-lai court event chain
#	lotr_thani_hazad.1999 - 2200 ==> Tulwangi Rebellion event chain
#
#
#
#
#
#
#   lotr_thani_hazad.9000 - 9999 ==> Balan-lai events
############################

lotr_thani_hazad.0001 = { # Order to attack Bellakar
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.0001.t
	desc = lotr_thani_hazad.0001.desc
	theme = war
	override_background = { reference = docks_adunai }
	left_portrait = {
		character = root
		animation = aggressive_sword
	}
	right_portrait = {
		character = character:nazgul5
		animation = personality_dishonorable
	}
	option = {
		name = lotr_thani_hazad.0001.a

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:recieved_murder_bellakar_order
		}
	}
}

lotr_thani_hazad.0002 = { # Pel is conquered by the mag special military operation
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.0002.t
	desc = lotr_thani_hazad.0002.desc
	theme = war
	override_background = { reference = docks_adunai }
	left_portrait = {
		character = root
		animation = aggressive_sword
	}
	# right_portrait = {
	# 	character = character:nazgul5
	# 	animation = personality_dishonorable
	# }
	option = {
		name = lotr_thani_hazad.0002.a
	}
}

### "Stormhost spy at Balan-lai court" event chain ~~ Aerien ##

lotr_thani_hazad.1000 = { # Set-up event for "Spy at Court" event chain
	hidden = yes
	immediate = {
		create_character = { # 
			age = { 55 65 }
			gender = male
			culture = culture:kharadunaim
			faith = faith:faith_thani_hazad
			dynasty = none
			employer = title:e_thon_an_kharlokh.holder
			save_scope_as = spy_father
		}

		create_character = { # 
			age = { 55 65 }
			gender = female
			culture = culture:kharadunaim
			faith = faith:faith_thani_hazad
			dynasty = none
			employer = title:e_thon_an_kharlokh.holder
			save_scope_as = spy_mother
		}
		create_character = { # Create a new character to become the spy
			employer = root
			age = { 20 35 }
			culture = culture:kharadunaim
			faith = faith:faith_thani_hazad
			dynasty = none
			gender_female_chance = 50
			father = scope:spy_father
			mother = scope:spy_mother
			intrigue = 11
			trait = shrewd
			trait = intellect_good_1
			save_scope_as = stormhost_spy
			#after_creation = {
			#	save_temporary_scope_as = 
			#}
		}	
		trigger_event = { # Time passes...
			id = lotr_thani_hazad.1001
			days = { 60 120 } 
		}
	}
}

lotr_thani_hazad.1001 = { # The spy attempts to gain your trust
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.1001.t
	desc = lotr_thani_hazad.1001.desc
	theme = party
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = scope:stormhost_spy
		animation = admiration
	}
	option = { # Show me what you wanted to show me.
		name = lotr_thani_hazad.1001.a
		hidden_effect =  {
			random_list = {
				34 = { trigger_event = lotr_thani_hazad.1020 } #Wine tasting
				33 = { trigger_event = lotr_thani_hazad.1030 } #Portrait painting
				33 = { trigger_event = lotr_thani_hazad.1040 } #Exotic bird
			}
		}
		scope:stormhost_spy = {
			add_opinion = {
				modifier = pleased_opinion
				opinion = 10
				target = root
			}
		}
	}
	option = { # Can't you see I'm busy?
		name = lotr_thani_hazad.1001.b
		trigger_event = { # Time passes...
			id = lotr_thani_hazad.1200
			days = { 60 180 }
		}
	}
	option = { # I don't trust you!
		name = lotr_thani_hazad.1001.c
		trigger = {
			OR = {
				has_trait = paranoid
				has_trait = shrewd
				has_trait = deceitful
				has_trait = irritable
			}
		}
		imprison = {
			target = scope:stormhost_spy
			type = dungeon
		}
		add_character_flag = imprisoned_stormhost_spy
		stress_impact = {
			base = minor_stress_impact_loss
		}
		trigger_event = { # You find out they were a spy
			id = lotr_thani_hazad.1200
			days = 15
		}
	}
	
	option = { # Dance with me instead!
		name = lotr_thani_hazad.1001.d
		trigger = {
			OR = {
				has_trait = gregarious
				has_trait = trusting
				has_trait = honest
				has_trait = rakish
			}
		}
		stress_impact = {
			base = major_stress_impact_loss
		}
		scope:stormhost_spy = {
			add_opinion = {
				modifier = pleased_opinion
				opinion = 50
				target = root
			}
		}
		trigger_event = { # Spy gained a bit of your trust
			id = lotr_thani_hazad.1100
			days = { 60 120 }
		} 
	}
}

lotr_thani_hazad.1020 = { # Wine tasting
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.1020.t
	desc = lotr_thani_hazad.1020.desc
	theme = party
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:stormhost_spy
		animation = happy
	}
	option = { # Let's drink!
		name = lotr_thani_hazad.1020.a
		stress_impact = {
			base = major_stress_impact_loss
		}
		scope:stormhost_spy = {
			add_opinion = {
				modifier = pleased_opinion
				opinion = 50
				target = root
			}
		}
		random_list = {
			95 = {
				add_prestige = 25
			}
			5 = { 
				add_prestige = 25
				add_trait = drunkard
			}
		}
		trigger_event = { # Spy gained a bit of your trust
			id = lotr_thani_hazad.1100
			days = { 60 120 }
		} 
	}
	option = { # Just a small dignified taste.
		name = lotr_thani_hazad.1020.b
		trigger = {
			NOR = {
				has_trait = drunkard
				has_trait = gluttonous
			}
		}
		add_prestige = 50
		trigger_event = { # Spy gained a bit of your trust
			id = lotr_thani_hazad.1100
			days = { 60 120 }
		} 
	}
	option = { # No, this isn't my style
		name = lotr_thani_hazad.1020.c
		trigger_event = { # Time passes...
			id = lotr_thani_hazad.1200
			days = { 60 180 }
		}
	}
}

lotr_thani_hazad.1030 = { # Portrait painting
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.1030.t
	desc = lotr_thani_hazad.1030.desc
	theme = friendly
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:stormhost_spy
		animation = happy
	}
	option = { # Let's do it!
		name = lotr_thani_hazad.1030.a
		stress_impact = {
			base = minor_stress_impact_loss
		}
		scope:stormhost_spy = {
			add_opinion = {
				modifier = pleased_opinion
				opinion = 50
				target = root
			}
		}
		remove_short_term_gold = 30
		add_prestige = 150
		add_legitimacy = 20
		root.dynasty = { add_dynasty_prestige = 50 }
		trigger_event = { # Spy gained a bit of your trust
			id = lotr_thani_hazad.1100
			days = { 60 120 }
		} 
	}
	option = { # What about I pay you with, uh, exposure?
		name = lotr_thani_hazad.1030.b
		trigger = {
			OR = {
				has_trait = greedy
				has_trait = poet
			}
		}
		scope:stormhost_spy = {
			add_opinion = {
				modifier = pleased_opinion
				opinion = 50
				target = root
			}
		}
		add_prestige = 50
		trigger_event = { # Spy gained a bit of your trust
			id = lotr_thani_hazad.1100
			days = { 60 120 }
		} 
	}
	option = { # No, this isn't my style
		name = lotr_thani_hazad.1030.c
		trigger_event = { # Time passes...
			id = lotr_thani_hazad.1200
			days = { 60 180 }
		}
	}
}

lotr_thani_hazad.1040 = { # Exotic Bird demonstration
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.1040.t
	desc = lotr_thani_hazad.1040.desc
	theme = friendly
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:stormhost_spy
		animation = happy
	}
	option = { # How marvellous!
		name = lotr_thani_hazad.1040.a
		stress_impact = {
			base = minor_stress_impact_loss
		}
		scope:stormhost_spy = {
			add_opinion = {
				modifier = pleased_opinion
				opinion = 50
				target = root
			}
		}
		trigger_event = { # Spy gained a bit of your trust
			id = lotr_thani_hazad.1100
			days = { 60 120 }
		} 
	}
	option = { # I must have it!
		name = lotr_thani_hazad.1040.b
		trigger = {
			OR = {
				has_trait = arrogant
				has_trait = eccentric
			}
		}
		scope:stormhost_spy = {
			add_opinion = {
				modifier = pleased_opinion
				opinion = 50
				target = root
			}
		}
		add_prestige = 300
		remove_short_term_gold = 25
		root.dynasty = { add_dynasty_prestige = 50 }
		stress_impact = {
			base = medium_stress_impact_loss
		}
		trigger_event = { # Spy gained a bit of your trust
			id = lotr_thani_hazad.1100
			days = { 60 120 }
		} 
	}
	option = { # No, this isn't my style
		name = lotr_thani_hazad.1040.c
		trigger_event = { # Time passes...
			id = lotr_thani_hazad.1200
			days = { 60 180 }
		}
	}
}

lotr_thani_hazad.1100 = { # Quick check if the spy was already made spymaster
	hidden = yes
	immediate = {
		if = {
			limit = {
				scope:stormhost_spy = {
					exists = root.cp:councillor_spymaster
					has_council_position = councillor_spymaster
				}
			}
			trigger_event = lotr_thani_hazad.1150
		}
		else = {
			trigger_event = lotr_thani_hazad.1101
		}
	}
}

lotr_thani_hazad.1101 = { # Spy attempts to make their move
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.1101.t
	desc = lotr_thani_hazad.1101.desc
	theme = friendly
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:stormhost_spy
		animation = personality_content 
	}
	#immediate = {
	#}
	option = { # Sure, I'll make you my spymaster. What could go wrong?
		name = lotr_thani_hazad.1101.a
		assign_councillor_type = {
			type = councillor_spymaster
			target = scope:stormhost_spy
			remove_existing_councillor = yes
		}
		trigger_event = { # The spy will try to fulfill his mission
			id = lotr_thani_hazad.1150
			days = { 60 180 }
		}
	}
	option = { # What? No!
		name = lotr_thani_hazad.1101.b
		trigger_event = { # Time passes...
			id = lotr_thani_hazad.1200
			days = { 60 180 }
		}
	}
	
	option = { # I don't trust you!
		name = lotr_thani_hazad.1101.c
		trigger = {
			OR = {
				has_trait = paranoid
				has_trait = shrewd
				has_trait = deceitful
				has_trait = schemer
			}
		}
		imprison = {
			target = scope:stormhost_spy
			type = dungeon
		}
		add_character_flag = imprisoned_stormhost_spy
		stress_impact = {
			base = minor_stress_impact_loss
		}
		trigger_event = { # You find out they were a spy
			id = lotr_thani_hazad.1200
			days = 15
		}
	}
}

lotr_thani_hazad.1150 = { # The spy tries to fulfill his mission
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.1150.t
	theme = intrigue
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					root = { has_character_flag = spy_made_their_move }
				}
				desc = lotr_thani_hazad.1150.desc.new
			}
			desc = lotr_thani_hazad.1150.desc
		}
	}
	left_portrait = {
		character = root
		animation = personality_content
	}
	right_portrait = {
		character = scope:stormhost_spy
		animation = spymaster 
	}
	lower_center_portrait = { 
		character = scope:stormking
	}
	immediate = {
		title:e_thon_an_kharlokh.holder = { save_scope_as = stormking }
	}
	option = { # Become the stormking's tributary? Sounds great!
		name = lotr_thani_hazad.1150.a
		ai_chance = {
            base = 0 # AI should not choose to do this
        }
		custom_tooltip = event_thani_hazad_1155_a
        make_tributary = {
			TYPE = tributary_permanent
			TRIBUTARY = root
			SUZERAIN = scope:stormking
		}	
	}
	option = { # No! What a terrible idea!
		name = lotr_thani_hazad.1150.b
		scope:stormhost_spy = {
			add_opinion = {
				modifier = annoyed_opinion
				opinion = -10
				target = root
			}
		}
		trigger_event = { # The spy will try again
			id = lotr_thani_hazad.1150
			days = { 60 180 }
		}
		add_character_flag = spy_made_their_move
	}
	
	option = { # It's treason, then...
		name = lotr_thani_hazad.1150.c
		imprison = {
			target = scope:stormhost_spy
			type = dungeon
		}
		add_character_flag = imprisoned_stormhost_spy
		stress_impact = {
			base = minor_stress_impact_loss
		}
		trigger_event = { # You find out they were a spy
			id = lotr_thani_hazad.1200
			days = 15
		}
	}
	
	option = { # Don't suggest this again, you fool!
		name = lotr_thani_hazad.1150.d
		trigger = {
			has_character_flag = spy_made_their_move
		}
		scope:stormhost_spy = {
			add_opinion = {
				modifier = insulted_opinion
				opinion = -40
				target = root
			}
		}
		fire_councillor = cp:councillor_spymaster
		trigger_event = { # You find out they were a spy
			id = lotr_thani_hazad.1200
			days = { 30 60 }
		}
	}
}

lotr_thani_hazad.1200 = { # You find out the truth
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.1200.t
	theme = intrigue
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					root = { has_character_flag = imprisoned_stormhost_spy }
				}
				desc = lotr_thani_hazad.1200.desc.new
			}
			desc = lotr_thani_hazad.1200.desc
		}
	}
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:spymaster
		animation = spymaster
	}
	lower_center_portrait = {
		character = scope:stormhost_spy
	}
	immediate = {
		if = {
    		limit = { 
				NOT = {
					exists = root.cp:councillor_spymaster 
				}
			}
			create_character = { # 
				age = { 55 65 }
				gender = male
				culture = culture:kharadunaim
				faith = faith:faith_thani_hazad
				dynasty = none
				location = root.location
				save_scope_as = spymaster_father
			}

			create_character = { # 
				age = { 55 65 }
				gender = female
				culture = culture:kharadunaim
				faith = faith:faith_thani_hazad
				dynasty = none
				location = root.location
				save_scope_as = spymaster_mother
			}
			
			create_character = { # Create a replacement spymaster
				employer = root
				age = { 20 35 }
				culture = culture:kharadunaim
				faith = faith:faith_thani_hazad
				dynasty = none
				gender_female_chance = 50
				father = scope:spymaster_father
				mother = scope:spymaster_mother
				intrigue = 12
				trait = intellect_good_1
				trait = education_intrigue_3
				save_scope_as = spymaster
				
			}
			hidden_effect = {
				assign_councillor_type = {
					type = councillor_spymaster
					target = scope:spymaster
					remove_existing_councillor = no
				}
			}
		}
		root.cp:councillor_spymaster = { save_scope_as = spymaster }
		title:e_thon_an_kharlokh.holder = { save_scope_as = stormking }
	}
	option = { #execute them
		name = lotr_thani_hazad.1200.a
		scope:stormhost_spy = {
			death = {
				killer = root
				death_reason = death_execution
			}
		}
		add_prestige = 250
		add_legitimacy = 10
	}
	option = { # Show mercy, banish them
		name = lotr_thani_hazad.1200.b
		trigger = {
			OR = {
				has_trait = compassionate
				has_trait = forgiving
				has_trait = trusting
			}
		}
		scope:stormhost_spy = {
			release_from_prison = yes
		}
		scope:stormhost_spy = {
			banish = yes	
			hidden_effect = {
				add_opinion = {
					modifier = banished_me
					target = root
				}
			}			
		}
		add_piety = 200
		add_prestige = 100
		stress_impact = {
			base = major_stress_impact_loss
		}
	}
	option = { # Turn them into double agent
		name = lotr_thani_hazad.1200.c
		trigger = {
			OR = {
				has_trait = shrewd
				has_trait = deceitful
				has_trait = schemer
			}
		}
		add_intrigue_lifestyle_xp = 500
		add_legitimacy = 10
		scope:stormhost_spy = {
			release_from_prison = yes
		}
		hidden_effect = {
			scope:stormhost_spy = {
				set_employer = root
			}
		}
	}
}

######## Stormhost: Tulwangi/Tuladen Rebellion Events ########
# ( vanilla Zanj rebellion adaptation by Aerien ) #
###################################################

### Tulwangi Rebellion Setup ###
lotr_thani_hazad.1999 = {
 	scope = none
	hidden = yes
 	immediate = {
 		spawn_tulwangi_leader_character_effect = yes
 		scope:tulwangi_leader = {
 			# save_scope_as = story_owner
 			# create_story = story_tulwangi_rebellion
 			give_nickname = nick_storm_queller
 		}

 		title:c_rumyar.holder = {
 			add_visiting_courtier = scope:tulwangi_leader
 		}
 		title:c_rumyar.holder.top_liege = {
 			trigger_event = {
 				id = lotr_thani_hazad.2000
 			}
 			trigger_event = {
 				id = lotr_thani_hazad.2005
				days = { 60 120 }
 			}
		}
 	}
}
### tulwangi leader is riling up locals in Rumyar ###

lotr_thani_hazad.2000 = {
	content_source = realms_dlc
	type = character_event
	theme = realm
	title = lotr_thani_hazad.2000.t
	desc = lotr_thani_hazad.2000.desc

	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:tulwangi_leader
		animation = personality_honorable
	}

	immediate = {
 		scope:tulwangi_leader = {
 			save_scope_as = outspoken_rebel
 		}
 	}

	option = { # The rebels shall fall
		name = lotr_thani_hazad.2000.a
		custom_tooltip = lotr_thani_hazad.2000.a.tt

		title:c_rumyar.holder.top_liege = {
			trigger_event = {
				id = lotr_thani_hazad.2001
				days = { 15 30 }
			}
		}

		title:e_bellakar.holder ?= { ## Notification Event
			trigger_event = {
				id = lotr_thani_hazad.2107
				days = { 15 30 }
			}
		}

		title:k_felaya.holder ?= {
			trigger_event = {
				id = lotr_thani_hazad.2110
				days = { 15 30 }
			}			
		}

		title:d_nykkea.holder ?= {
			trigger_event = {
				id = lotr_thani_hazad.2105
				days = { 15 30 }
			}			
		}

		title:d_holzoreth.holder ?= {
			trigger_event = {
				id = lotr_thani_hazad.2113
				days = { 15 30 }
			}			
		}

		title:k_ray.holder ?= {
			trigger_event = {
				id = lotr_thani_hazad.2100
				days = { 15 30 }
			}			
		}
		#root = { trigger_event = { id = lotr_thani_hazad.2010 days = 30 } } #Aerien note ~ this is triggered in the stormhost_murder_bellakar decision

		
	}

	# option = { ## Reform? NOT IMPLEMENTED
	# }
}
### Capture the Leader? ###

lotr_thani_hazad.2001 = {
	content_source = realms_dlc
 	type = character_event
 	theme = intrigue
 	override_background = { reference = farmland }
 	title = lotr_thani_hazad.2001.t
 	desc = lotr_thani_hazad.2001.desc

 	left_portrait = {
 		character = root
 		animation = marshal
 	}
 	right_portrait = {
 		character = scope:tulwangi_leader
 		animation = scheme
 	}

 	

 	#Try to arrest the upstart
 	option = {
 		name = lotr_thani_hazad.2001.a
 		duel = {
 			skill = intrigue
 			target = scope:outspoken_rebel
 			3 = {
				# You arrest him
 				desc = lotr_thani_hazad.2001.a.success
 				compare_modifier = {
 					value = scope:duel_value
 					multiplier = 3.5
 					min = -49
 				}
 				send_interface_toast = {
 					title = lotr_thani_hazad.2001.a.success
 					left_icon = root
 					right_icon = scope:outspoken_rebel
 					rightfully_imprison_character_effect = {
 						TARGET = scope:outspoken_rebel
 						IMPRISONER = root
 					}
 				}
 				inherit_tulwangi_rebellion_effect = yes
 			}
 			97 = {
 				# The upstart escapes
 				desc = lotr_thani_hazad.2001.a.failure
 				compare_modifier = {
 					value = scope:duel_value
 					multiplier = -3.5
 					min = -49
 				}
 				send_interface_toast = {
 					title = lotr_thani_hazad.2001.a.failure
 					custom_tooltip = lotr_tulwangi_rebellion_events_cause_greatly_strengthened_tt
 					custom_tooltip = lotr_tulwangi_rebellion_leaves_for_lahidas
 					left_icon = root
 					right_icon = scope:outspoken_rebel
 				}
 				hidden_effect = {
 					scope:tulwangi_leader = {
 						change_variable = {
 							name =  tulwangi_rebellion_strength_score
 							add = 4
 						}
 					}
 					title:c_lahidas.holder = {
 						hidden_effect = {
 							title:c_lahidas.holder = {
 								add_visiting_courtier = scope:outspoken_rebel
 							}
 						}
 					}
 					title:c_rumyar.holder.top_liege = {
 						trigger_event = {
 							id = lotr_thani_hazad.2002
 							days = { 30 60 }
 						}
 					}
 				}
 			}
 		}
 		root = {
 			progress_towards_rival_effect = {
 				REASON = lotr_tulwangi_rebellion_opressed_me
 				CHARACTER = scope:outspoken_rebel
 				OPINION = default_rival_opinion
 			}
 		}
 		stress_impact = {
 			paranoid = medium_stress_impact_loss
 			just = minor_stress_impact_loss
 			callous = minor_stress_impact_loss
 			sadistic = minor_stress_impact_loss
 			trusting = medium_stress_impact_gain
 			forgiving = medium_stress_impact_gain
 			compassionate = medium_stress_impact_gain
 		}
 		ai_chance = {
 			base = 100
 			modifier = {
 				factor = 0.5
 				OR = {
 					has_trait = trusting
 					has_trait = forgiving
 					has_trait = compassionate
 				}
 			}
 		}
 	}

 	#Ignore the upstart
 	option = {
 		name = lotr_thani_hazad.2001.c
 		custom_tooltip = lotr_tulwangi_rebellion_events_cause_greatly_strengthened_tt
 		scope:tulwangi_leader = {
 			change_variable = {
 				name =  tulwangi_rebellion_strength_score
 				add = 2
 			}
 		}
 		custom_tooltip = lotr_tulwangi_rebellion_leaves_for_lahidas
 		hidden_effect = {
 			title:c_lahidas.holder = {
 				add_visiting_courtier = scope:outspoken_rebel
 			}
 		}
 		title:c_rumyar.holder.top_liege = {
 			trigger_event = {
 				id = lotr_thani_hazad.2002
 				days = { 30 60 }
 			}
 		}
 		stress_impact = {
 			paranoid = medium_stress_impact_gain
 			just = minor_stress_impact_gain
 			callous = minor_stress_impact_gain
 			sadistic = medium_stress_impact_gain
 			trusting = medium_stress_impact_loss
 			forgiving = medium_stress_impact_loss
 			compassionate = medium_stress_impact_loss
 		}
 		ai_chance = {
 			base = 100
 			modifier = {
 				factor = 0.5
 				OR = {
 					has_trait = paranoid
 					has_trait = just
 					has_trait = callous
 					has_trait = sadistic
 				}
 			}
 		}
 	}
}

### Setup to find correct scope for lotr_thani_hazad.2003 and check if the rebel leader is dead or imprisoned
lotr_thani_hazad.2002 = {
 	scope = none
 	hidden = yes
 	immediate = {
 		if ={
 			#check if he is still alive and not in prison and is not an inheritor of the rebellion
 			limit = {
 				scope:tulwangi_leader = {
 					is_alive = yes
 					is_imprisoned = no
 					NOT = { has_character_flag = new_tulwangi_leader }
 				}
 			}
 			title:c_rumyar.holder.top_liege = {
 				trigger_event = {
 					id = lotr_thani_hazad.2003
				}
			}
 		}
 	}
}

### The rebel leader rouses his followers
lotr_thani_hazad.2003 = {
	content_source = realms_dlc
 	type = character_event
 	theme = realm
 	title = lotr_thani_hazad.2003.t
 	desc = lotr_thani_hazad.2003.desc
 	left_portrait = {
 		character = root
 		animation = dismissal
 	}
 	right_portrait = {
 		character = scope:tulwangi_leader
 		animation = personality_zealous
 	}

 	#Attempt to root out rebel sympathizers and dissuade people from joining them 
 	option = {
 		name = lotr_thani_hazad.2003.a
 		duel = {
 			skill = martial
 			target = scope:tulwangi_leader
 			50 = {
 				# You dissuade people from joining the rebels
 				desc = lotr_thani_hazad.2003.a.success
 				compare_modifier = {
 					value = scope:duel_value
 					multiplier = 3.5
 					min = -49
 				}
				custom_tooltip = lotr_tulwangi_rebellion_leaves_for_ishiqal
				hidden_effect = {
					title:c_ishiqal.holder = {
						add_visiting_courtier = scope:outspoken_rebel
					}
				}
 				send_interface_toast = {
 					title = lotr_thani_hazad.2003.a.success
 					add_legitimacy = 10
 					add_prestige = minor_prestige_gain
 					left_icon = root
 					right_icon = scope:tulwangi_leader
					add_dread = medium_dread_gain
 				}
 			}
 			50 = {
 				# The rebels are not intimidated
 				desc = lotr_thani_hazad.2003.a.failure
 				compare_modifier = {
 					value = scope:duel_value
 					multiplier = -3.5
 					min = -49
 				}
 				custom_tooltip = lotr_tulwangi_rebellion_events_cause_greatly_strengthened_tt
 				hidden_effect = {
 					title:c_ishiqal.holder = {
 						add_visiting_courtier = scope:outspoken_rebel
 					}
 				}
 				send_interface_toast = {
 					title = lotr_thani_hazad.2003.a.failure
 					left_icon = root
 					right_icon = scope:tulwangi_leader
					
 					scope:tulwangi_leader = {
 						add_prestige = medium_prestige_gain
 						add_pressed_claim = title:k_an_balkumagan
 						change_variable = {
 							name =  tulwangi_rebellion_strength_score
 							add = 4
 						}
 					}
					title:c_lahidas = {
						add_county_modifier = {
							modifier = lotr_tulwangi_rebellion_rebel_hotbed_modifier
							years = 3
						}
					}

 				}
 			}
 		}
 		root = {
 			progress_towards_rival_effect = {
 				REASON = lotr_tulwangi_rebellion_opressed_me
 				CHARACTER = scope:tulwangi_leader
 				OPINION = default_rival_opinion
 			}
 		}
 		stress_impact = {
 			paranoid = minor_stress_impact_loss
 			just = minor_stress_impact_loss
 			zealous = medium_stress_impact_loss
 			trusting = medium_stress_impact_gain
 			forgiving = medium_stress_impact_gain
 			cynical = medium_stress_impact_gain
 		}
 		ai_chance = {
 			base = 100
 			modifier = {
 				factor = 0.5
 				OR = {
 					has_trait = cynical
 					has_trait = trusting
 					has_trait = forgiving
 				}
 			}
 		}
 	}

 	#Ignore the rebels
 	option = {
 		name = lotr_thani_hazad.2003.b
 		custom_tooltip = lotr_tulwangi_rebellion_events_cause_strengthened_tt
		add_prestige = -250
 		scope:tulwangi_leader = {
 			add_prestige = medium_prestige_gain
 			add_pressed_claim = title:k_an_balkumagan
 			change_variable = {
 				name = tulwangi_rebellion_strength_score
 				add = 2
 			}
 		}
 		stress_impact = {
 			paranoid = minor_stress_impact_gain
 			just = minor_stress_impact_gain
 			zealous = medium_stress_impact_gain
 			trusting = minor_stress_impact_loss
 			forgiving = medium_stress_impact_loss
 			cynical = medium_stress_impact_loss
 		}
 		ai_chance = {
 			base = 100
 			modifier = {
 				factor = 0.5
 				OR = {
 					has_trait = paranoid
 					has_trait = just
 					has_trait = zealous
 				}
 			}
 		}
 	}
}

### Setup event to find the correct scope and check if the original upstart or the current tulwangi Leader is dead or imprisoned
lotr_thani_hazad.2005 = {
 	scope = none
 	hidden = yes
 	immediate = {
 		if = {
 			limit = {
 				scope:tulwangi_leader = {
 					OR = {
 						is_imprisoned = yes
 						is_alive = no
 						is_landed = yes
 					}
 				}
 			}
 			inherit_tulwangi_rebellion_effect = yes
 		}
 		title:c_rumyar.holder.top_liege = {
 			trigger_event = {
 				id = lotr_thani_hazad.2006
 			}
 		}
 	}
}

### An envoy from the rebels ###
lotr_thani_hazad.2006 = {
	content_source = realms_dlc
 	type = character_event
 	theme = corruption
 	title = lotr_thani_hazad.2006.t
 	desc = {
 		desc = lotr_thani_hazad.2006.desc.a
 		triggered_desc = {
 			trigger = { scope:tulwangi_leader = { NOT =  { has_character_flag = new_tulwangi_leader } } }
 			desc = lotr_thani_hazad.2006.desc.b
 		}
 		desc = lotr_thani_hazad.2006.desc.c
 	}
 	left_portrait = {
 		character = root
 		animation = eyeroll
 	}
 	right_portrait = {
 		character = scope:outspoken_rebel
 		animation = worry
 	}
 	lower_left_portrait = {
 		trigger = { scope:tulwangi_leader = { NOT =  { has_character_flag = new_tulwangi_leader } } }
 		character = scope:tulwangi_leader
 	}

 	immediate = {
 		if = {
 			limit = { scope:tulwangi_leader = { NOT =  { has_character_flag = new_tulwangi_leader } } }
 			spawn_tulwangi_representative_character_effect = yes
 			scope:tulwangi_representative = { save_scope_as = outspoken_rebel }
 		}
 		else = {
 			scope:tulwangi_leader = { save_scope_as = outspoken_rebel }
 		}
 	}
	

 	#Make minor concessions to the tulwangi rebels
 	option = {
 		name = lotr_thani_hazad.2006.a

		add_prestige = -450
		every_vassal = {
			add_opinion = {
				modifier = angry_opinion
				opinion = -45
				target = root
			}
		}

 		scope:tulwangi_leader = {
 			change_variable = {
 				name =  tulwangi_rebellion_strength_score
 				add = 3
 			}
 		}
 		custom_tooltip = lotr_tulwangi_rebellion_events_cause_strengthened_tt
 		hidden_effect = {
 			title:c_rumyar.holder = {
 				if = {
 					limit = { NOT = { scope:tulwangi_leader = scope:outspoken_rebel }}
 					add_visiting_courtier = scope:tulwangi_leader
 				}
 				add_visiting_courtier = scope:outspoken_rebel
 			}
 		}

 		if = {
 			limit = {
 				NOT = { title:c_rumyar.holder = root }
 			}
 			progress_towards_rival_effect = {
 				REASON = lotr_tulwangi_rebellion_interfered_with_my_workers
 				CHARACTER = title:c_rumyar.holder
 				OPINION = default_rival_opinion
 			}
 		}

 		title:c_rumyar = {
 			add_county_modifier = {
 				modifier = lotr_tulwangi_rebellion_work_concessions_modifier
 				years = 5
 			}
 		}

		title:c_rumyar.holder.top_liege = {
 			trigger_event = {
 				id = lotr_thani_hazad.2007

 			}
 		}

 		
 		stress_impact = {
 			compassionate = minor_stress_impact_loss
 			just = minor_stress_impact_loss
			forgiving = minor_stress_impact_loss
 			generous = minor_stress_impact_loss
 			content = minor_stress_impact_loss
 			callous = minor_stress_impact_gain
 			sadistic = medium_stress_impact_gain
 			ambitious = minor_stress_impact_gain
 			greedy = minor_stress_impact_gain
 		}
 		ai_chance = {
 			base = 100
 			modifier = {
 				factor = 0.5
				OR = {
 					has_trait = callous
 					has_trait = sadistic
 					has_trait = ambitious
 					has_trait = greedy
 				}
 			}
 		}
 	}

	# Ignore the rebels
 	option = {
 		name = lotr_thani_hazad.2006.b

 		scope:tulwangi_leader = {
 			change_variable = {
 				name = tulwangi_rebellion_strength_score
 				add = 5
 			}
 		}
 		custom_tooltip = lotr_tulwangi_rebellion_events_cause_greatly_strengthened_tt
 		hidden_effect = {
 			title:c_rumyar.holder = {
 				add_visiting_courtier = scope:tulwangi_leader
 				add_visiting_courtier = scope:tulwangi_representative
 			}
 		}
 		if = {
 			limit = {
 				NOT = { title:c_rumyar.holder = root  }
 			}
 			progress_towards_friend_effect = {
 				REASON = lotr_rival_stayed_out_of_my_business
 				CHARACTER = title:c_rumyar.holder
 				OPINION = default_friend_opinion
 			}
 		}

		title:c_ishiqal.holder.top_liege = {
 			trigger_event = {
 				id = lotr_thani_hazad.2007

 			}
 		}
 		

 		stress_impact = {
 			compassionate = minor_stress_impact_gain
 			just = minor_stress_impact_gain
 			forgiving = minor_stress_impact_gain
 			generous = minor_stress_impact_gain
 			content = minor_stress_impact_gain
 			callous = minor_stress_impact_loss
 			sadistic = medium_stress_impact_loss
 			ambitious = minor_stress_impact_loss
 			greedy = minor_stress_impact_loss
 		}
 		ai_chance = {
 			base = 100
 			modifier = {
 				factor = 0.5
 				OR = {
 					has_trait = compassionate
 					has_trait = just
 					has_trait = forgiving
 					has_trait = generous
 				}
 			}
 		}
 	}

	# Traitors like you belong in my dungeon!
	option = {
		name = lotr_thani_hazad.2006.c
		imprison = {
			target = scope:outspoken_rebel
			type = dungeon
		}
		add_dread = medium_dread_gain
		add_tyranny = 50

		root = {
 			progress_towards_rival_effect = {
 				REASON = lotr_tulwangi_rebellion_opressed_me
 				CHARACTER = scope:tulwangi_leader
 				OPINION = default_rival_opinion
 			}
 		}
		title:c_ishiqal.holder.top_liege = {
 			trigger_event = {
 				id = lotr_thani_hazad.2007

 			}
 		}

		scope:tulwangi_leader = {
 			change_variable = {
 				name =  tulwangi_rebellion_strength_score
 				add = 5
 			}
 		}

		stress_impact = {
 			compassionate = minor_stress_impact_gain
 			just = minor_stress_impact_gain
 			forgiving = minor_stress_impact_gain
 			generous = minor_stress_impact_gain
 			content = minor_stress_impact_gain
 			callous = minor_stress_impact_loss
 			sadistic = medium_stress_impact_loss
 			ambitious = minor_stress_impact_loss
 			greedy = minor_stress_impact_loss
 		}
		ai_chance = {
 			base = 100
 			modifier = {
 				factor = 0.5
 				OR = {
 					has_trait = compassionate
 					has_trait = just
 					has_trait = forgiving
 					has_trait = generous
 				}
 			}
 		}

	}
}

# Check if rebel leader is dead or imprisoned
lotr_thani_hazad.2007 = {
 	scope = none
 	hidden = yes
 	immediate = {
 		if = {
 			limit = {
 				scope:tulwangi_leader = {
 					OR = {
 						is_imprisoned = yes
 						is_alive = no
 						is_landed = yes
 					}
 				}
 			}
 			inherit_tulwangi_rebellion_effect = yes
 		}
 		title:c_ishiqal.holder.top_liege = {
 			trigger_event = {
 				id = lotr_thani_hazad.2008

 			}
 		}
 	}
}

## Guards dead in Ishiqal ## 

lotr_thani_hazad.2008 = {
	content_source = realms_dlc
	type = character_event
	theme = realm
	override_background = {
		reference = wilderness
	}
	title = lotr_thani_hazad.2008.t
	desc = lotr_thani_hazad.2008.desc 

	left_portrait = {
		character = root
		animation = anger
	}

	right_portrait = {
		character = scope:tulwangi_leader
		animation = personality_bold
	}
	immediate = {
		scope:tulwangi_leader = {
			add_character_flag = tulwangi_leader_character
		}
	}
	option = { # Ignore the rebels
		name = lotr_thani_hazad.2008.a 
		custom_tooltip = lotr_thani_hazad.2008.a.tt
		add_prestige = -450
		every_vassal = {
			add_opinion = {
				modifier = annoyed_opinion
				opinion = -25
				target = root
			}
		}
		scope:tulwangi_leader = {
 			change_variable = {
 				name =  tulwangi_rebellion_strength_score
 				add = 5
 			}
 		}
		title:c_ishiqal.holder.top_liege = {
 			trigger_event = {
 				id = lotr_thani_hazad.2104
				days = 15
 			}
 		}
		stress_impact = {
 			compassionate = minor_stress_impact_gain
 			just = minor_stress_impact_gain
 			forgiving = minor_stress_impact_gain
 			generous = minor_stress_impact_gain
 			content = minor_stress_impact_gain
 			callous = minor_stress_impact_loss
 			sadistic = medium_stress_impact_loss
 			ambitious = minor_stress_impact_loss
 			greedy = minor_stress_impact_loss
 		}
 		ai_chance = {
 			base = 100
 			modifier = {
 				factor = 0.5
 				OR = {
 					has_trait = compassionate
 					has_trait = just
 					has_trait = forgiving
 					has_trait = generous
 				}
 			}
 		}
		
	}

	option = { # Instigate Martial Law, and find him!
		name = lotr_thani_hazad.2008.b 
		custom_tooltip = lotr_thani_hazad.2008.b.tt
		title:c_ishiqal = {
 			add_county_modifier = {
 				modifier = lotr_tulwangi_rebellion_martial_law_modifier
 				years = 5
 			}
 		}
		
		title:c_ishiqal.holder.top_liege = {
 			trigger_event = {
 				id = lotr_thani_hazad.2009
				days = 5
 			}
 		}
		title:c_ishiqal.holder.top_liege = {
 			trigger_event = {
 				id = lotr_thani_hazad.2104
				days = 15
 			}
 		}

		stress_impact = {
 			compassionate = minor_stress_impact_gain
 			just = minor_stress_impact_gain
 			forgiving = minor_stress_impact_gain
 			generous = minor_stress_impact_gain
 			content = minor_stress_impact_gain
 			callous = minor_stress_impact_loss
 			sadistic = medium_stress_impact_loss
 			ambitious = minor_stress_impact_loss
 			greedy = minor_stress_impact_loss
 		}
		ai_chance = {
 			base = 100
 			modifier = {
 				factor = 0.5
 				OR = {
 					has_trait = compassionate
 					has_trait = just
 					has_trait = forgiving
 					has_trait = generous
 				}
 			}
 		}

	}
}

#### No luck in finding him 

lotr_thani_hazad.2009 = {
	content_source = realms_dlc
	type = character_event
	theme = realm
	title = lotr_thani_hazad.2009.t
	desc = lotr_thani_hazad.2009.desc 

	left_portrait = {
		character = root
		animation = rage
	}
	right_portrait = {
		character = title:c_ishiqal.holder
		animation = fear
	}
	
	option = { # Straight to Jail
		name = lotr_thani_hazad.2009.a
		if = {
			limit = {
				NOT = { title:c_ishiqal.holder = root }
			}
			imprison = {
				target = title:c_ishiqal.holder
				type = dungeon
			}
		}
		add_tyranny = 30
		add_dread = medium_dread_gain
		change_variable = {
 				name = tulwangi_rebellion_strength_score
 				add = 1
 			}

		stress_impact = {
 			compassionate = minor_stress_impact_gain
 			just = minor_stress_impact_gain
 			forgiving = minor_stress_impact_gain
 			generous = minor_stress_impact_gain
 			content = minor_stress_impact_gain
 			callous = minor_stress_impact_loss
 			sadistic = medium_stress_impact_loss
 			ambitious = minor_stress_impact_loss
 			greedy = minor_stress_impact_loss
 		}
		ai_chance = {
 			base = 100
 			modifier = {
 				factor = 0.5
 				OR = {
 					has_trait = compassionate
 					has_trait = just
 					has_trait = forgiving
 					has_trait = generous
 				}
 			}
 		}
	}

	option = { # I suppose there's not much we can do
		name = lotr_thani_hazad.2009.b
		change_variable = {
 				name = tulwangi_rebellion_strength_score
 				add = 1
 			}
		stress_impact = {
 			forgiving = minor_stress_impact_loss
 			generous = minor_stress_impact_loss
 			content = minor_stress_impact_loss
 			callous = minor_stress_impact_gain
 			sadistic = medium_stress_impact_gain
 			ambitious = minor_stress_impact_gain
 			greedy = minor_stress_impact_gain
 		}
		ai_chance = {
 			base = 100
 			modifier = {
 				factor = 0.5
 				OR = {
 					has_trait = wrathful
 					has_trait = sadistic
 					has_trait = arrogant
 					has_trait = vengeful
 				}
 			}
 		}
			
	}
}

# Check if rebel leader is dead or imprisoned
lotr_thani_hazad.2010 = {
 	scope = none
 	hidden = yes
 	immediate = {
		faith:faith_tulwang = { # make sure the rebel leader is the correct one and is scoped
			ordered_faith_character = {
				limit =  {
					has_character_flag = tulwangi_leader_character
				}
				save_scope_as = tulwangi_leader 
			}
		}
 		if = {
 			limit = {
 				scope:tulwangi_leader = {
 					OR = {
 						is_imprisoned = yes
 						is_alive = no
 						is_landed = yes
 					}
 				}
 			}
 			inherit_tulwangi_rebellion_effect = yes
 		}
 		title:c_ishiqal.holder.top_liege = {
 			trigger_event = {
 				id = lotr_thani_hazad.2011

 			}
 		}
 	}
}

### The uprising begins
lotr_thani_hazad.2011 = {
	content_source = realms_dlc
 	type = character_event
 	theme = battle
 	override_background = { reference = wilderness_wetlands }
 	title = lotr_thani_hazad.2011.t
 	desc = lotr_thani_hazad.2011.desc 
 	left_portrait = {
 		character = root
 		animation = shock
 	}
 	right_portrait = {
 		character = scope:tulwangi_leader
 		animation = celebrate_sword
 	}
 	immediate = {

 		# scope:tulwangi_leader = {
		# 	# give_nickname = nick_chief_of_the_tulwangi ~~ Aerien note: not needed
 		# 	hidden_effect = {
 		# 		random_owned_story = {
 		# 			limit = {
 		# 				story_type = story_tulwangi_rebellion
 		# 			}
 		# 			end_story = yes
 		# 		}
 		# 	}
 		# }
		hidden_effect = {
 			lotr_start_tulwangi_rebellion_effect = {
 				TARGET_COUNTY = title:c_rumyar
 				REBEL_LEADER = scope:tulwangi_leader
 			}
 			create_tulwangi_courtier_effect = {
 				EMPLOYER = scope:tulwangi_leader
 				LOCATION = scope:tulwangi_leader.location
 			}
 			create_tulwangi_courtier_effect = {
 				EMPLOYER = scope:tulwangi_leader
 				LOCATION = scope:tulwangi_leader.location
 			}
 			create_tulwangi_courtier_effect = {
 				EMPLOYER = scope:tulwangi_leader
 				LOCATION = scope:tulwangi_leader.location
 			}
 			create_tulwangi_courtier_effect = {
 				EMPLOYER = scope:tulwangi_leader
 				LOCATION = scope:tulwangi_leader.location
 			}
 		}
 	}

 	option = {
		name = lotr_thani_hazad.2011.a
		if = {
			limit = {
				title:c_rumyar.holder.top_liege = {
					has_character_flag = nykkea_army_sent_flag
				}
			}
			spawn_army = {
				name = tulwangi_uprising_corsair_troops
				levies = 400	
				men_at_arms = {
					type = light_footmen
					stacks = 8
				}
				location = capital_province
				uses_supply = no
				#origin = 			
			}
		}
 	}
}

### BACKUP War event ###
# In case the first war doesn't fire correctly #

lotr_thani_hazad.2020 = {
	hidden = yes
 	immediate = {
		hidden_effect = {
 			lotr_start_tulwangi_rebellion_effect = {
 				TARGET_COUNTY = title:c_rumyar
 				REBEL_LEADER = scope:tulwangi_leader
 			}
 			create_tulwangi_courtier_effect = {
 				EMPLOYER = scope:tulwangi_leader
 				LOCATION = scope:tulwangi_leader.location
 			}
 			create_tulwangi_courtier_effect = {
 				EMPLOYER = scope:tulwangi_leader
 				LOCATION = scope:tulwangi_leader.location
 			}
 			create_tulwangi_courtier_effect = {
 				EMPLOYER = scope:tulwangi_leader
 				LOCATION = scope:tulwangi_leader.location
 			}
 			create_tulwangi_courtier_effect = {
 				EMPLOYER = scope:tulwangi_leader
 				LOCATION = scope:tulwangi_leader.location
 			}
 		}
 	}
}

### Proxy War Events  ###
### Ray ###
lotr_thani_hazad.2100 = { # Ray's event - what to send?
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.2100.t
	desc = lotr_thani_hazad.2100.desc
	theme = war
	left_portrait = {
		character = root
		animation = personality_cynical
	}
	right_portrait = {
		character = scope:tulwangi_leader
		animation = personality_bold
	}
	
	option = { # Some Gold
		name = lotr_thani_hazad.2100.a
		remove_short_term_gold = 200
		scope:tulwangi_leader = { 
			trigger_event = lotr_thani_hazad.2101
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 35
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { # Lots of Gold
		name = lotr_thani_hazad.2100.b
		remove_short_term_gold = 500
		scope:tulwangi_leader = { 
			trigger_event = lotr_thani_hazad.2102
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 35
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { # Nothing
		name = lotr_thani_hazad.2100.c
		ai_chance = {
			base = 0
			modifier = {
				has_game_rule = default_ai_behavior
				add = 10 
			}
			modifier = {
				has_game_rule = weighted_ai_behavior 
				add = 25 
			}
			modifier = {
				has_game_rule = random_ai_behavior 
				add = 50
			}
		}
	}
}

lotr_thani_hazad.2101 = { # Ray sends small sum 
	content_source = realms_dlc
	type = character_event 
	title = lotr_thani_hazad.2101.t 
	desc = lotr_thani_hazad.2101.desc 
	theme = war 
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = title:k_ray.holder
		animation = personality_compassionate
	}
	option = {
		name = lotr_thani_hazad.2101.a
		add_gold = 250
		title:k_ray.holder = {
			add_hook = {
				target = root
				type = favor_hook
			}
		}
	}
	option = { # Nothing
		name = lotr_thani_hazad.2101.b
		ai_chance = {
			base = 0
		}
		hidden_effect = {
			title:k_ray.holder = {
				add_gold = 250
			}
		}
	}
}

lotr_thani_hazad.2102 = { # Ray sends large sum
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.2102.t
	desc = lotr_thani_hazad.2102.desc
	theme = war
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = title:k_ray.holder
		animation = personality_compassionate
	}
	
	option = {
		name = lotr_thani_hazad.2102.a
		add_gold = 500
		title:k_ray.holder = {
			add_hook = {
				target = root
				type = favor_hook
			}
		}
	}
	option = { # Nothing
		name = lotr_thani_hazad.2102.b
		hidden_effect = {
			title:k_ray.holder = {
				add_gold = 500
			}
		}
		ai_chance = {
			base = 0
		}
	}
}

### Sauron ###

lotr_thani_hazad.2104 = { # Sauron chastizes the Storm-King
	content_source = realms_dlc 
	type = character_event 
	title = lotr_thani_hazad.2104.t 
	desc = lotr_thani_hazad.2104.desc
	theme = realm 
	left_portrait = {
		character = root 
		animation = shame 
	}
	right_portrait = {
		character = title:e_mordor.holder 
		animation = disapproval
	}

	option = {
		name = lotr_thani_hazad.2104.a 
		add_prestige = -250 
		stress_impact = {
			base = minor_stress_impact_gain
			arrogant = medium_stress_impact_gain
		}
	}
}

#### Nykkea ###

lotr_thani_hazad.2105 = { # Nykkea's event - an opportunity?
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.2105.t
	desc = lotr_thani_hazad.2105.desc
	theme = war
	left_portrait = {
		character = root
		animation = schadenfreude
	}
	right_portrait = {
		character = title:e_thon_an_kharlokh.holder
		animation = personality_bold
	}
	
	option = { # Corsairs for money
		name = lotr_thani_hazad.2105.a
		add_gold = 350
		title:e_thon_an_kharlokh.holder = { #Spawn a few troops for rebels
			trigger_event = lotr_thani_hazad.2106
		}
		add_character_modifier = {
			modifier = lotr_tulwangi_rebellion_offered_mercenary_troops_modifier
			years = 20
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 66
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 60
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	
	option = { # Nothing
		name = lotr_thani_hazad.2105.b
		ai_chance = {
			base = 0
		}
	}
}

lotr_thani_hazad.2106 = { #Nykkea offers mercenaries 
	content_source = realms_dlc 
	type = character_event 
	title = lotr_thani_hazad.2106.t
	desc = lotr_thani_hazad.2106.desc 
	theme = war 
	
	left_portrait = {
		character = root 
		animation = disapproval
	}
	right_portrait = {
		character = title:d_nykkea.holder
		animation = schadenfreude
	}

	option = { #I'll pay
		name = lotr_thani_hazad.2106.a 
		custom_tooltip = lotr_thani_hazad.2106.tt
		remove_short_term_gold = 350 
		title:d_nykkea.holder = {
			add_gold = 350 
		}
		add_character_flag = {
			flag = nykkea_army_sent_flag
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 20
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 33
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}

	}
	
	option = { # No thanks
		name = lotr_thani_hazad.2106.b 
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 20
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 33
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}


### Rebel aligned proxy events ###

lotr_thani_hazad.2107 = { # Bellakar's event - what to send?
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.2107.t
	desc = lotr_thani_hazad.2107.desc
	theme = war
	left_portrait = {
		character = root
		animation = personality_cynical
	}
	right_portrait = {
		character = scope:tulwangi_leader
		animation = personality_bold
	}
	
	option = { # Some Gold
		name = lotr_thani_hazad.2107.a
		remove_short_term_gold = 200
		scope:tulwangi_leader = { #Spawn a few troops for reformists
			trigger_event = lotr_thani_hazad.2108
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 15
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { # Lots of Gold
		name = lotr_thani_hazad.2107.b
		remove_short_term_gold = 500
		scope:tulwangi_leader = { #Spawn many troops for reformists
			trigger_event = lotr_thani_hazad.2109
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 20
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { # Nothing
		name = lotr_thani_hazad.2107.c
		ai_chance = {
			base = 0
			modifier = {
				has_game_rule = default_ai_behavior
				add = 90 
			}
			modifier = {
				has_game_rule = weighted_ai_behavior 
				add = 25 
			}
			modifier = {
				has_game_rule = random_ai_behavior 
				add = 50
			}
		}
	}
} 

lotr_thani_hazad.2108 = { # Bellakar sends small sum
	content_source = realms_dlc
	type = character_event 
	title = lotr_thani_hazad.2108.t 
	desc = lotr_thani_hazad.2108.desc 
	theme = war 
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = title:e_bellakar.holder 
		animation = personality_compassionate
	}
	option = {
		name = lotr_thani_hazad.2108.a
		add_gold = 200
		title:e_bellakar.holder = {
			add_hook = {
				target = root
				type = favor_hook
			}
		}
	}
	option = { # Nothing
		name = lotr_thani_hazad.2108.b
		ai_chance = {
			base = 0
		}
		hidden_effect = {
			title:e_bellakar.holder = {
				add_gold = 500
			}
		}
	}
}

lotr_thani_hazad.2109 = { # Bellakar sends large sum
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.2109.t
	desc = lotr_thani_hazad.2109.desc
	theme = war
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = title:e_bellakar.holder
		animation = personality_compassionate
	}
	
	option = {
		name = lotr_thani_hazad.2109.a
		add_gold = 500
		title:e_bellakar.holder = {
			add_hook = {
				target = root
				type = favor_hook
			}
		}
	}
	option = { # Nothing
		name = lotr_thani_hazad.2109.b
		hidden_effect = {
			title:e_bellakar.holder = {
				add_gold = 500
			}
		}
		ai_chance = {
			base = 0
		}
	}
}

### Felaya ### 

lotr_thani_hazad.2110 = { # Felaya's - what to send?
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.2110.t
	desc = lotr_thani_hazad.2110.desc
	theme = war
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:tulwangi_leader
		animation = personality_bold
	}
	
	option = { # Small Army
		name = lotr_thani_hazad.2110.a
		remove_short_term_gold = 100
		scope:tulwangi_leader = { #Spawn a few troops for reformists
			trigger_event = lotr_thani_hazad.2111
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 10
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 20
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}
	option = { # Large Army
		name = lotr_thani_hazad.2110.b
		remove_short_term_gold = 300
		scope:tulwangi_leader = { #Spawn many troops for reformists
			trigger_event = lotr_thani_hazad.2112
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 50
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}
	
	option = { # Nothing
		name = lotr_thani_hazad.2110.c
		ai_chance = {
			base = 0
		}
	}
}

lotr_thani_hazad.2111 = { # Felaya sends small army
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.2111.t
	desc = lotr_thani_hazad.2111.desc
	theme = war
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = title:k_felaya.holder
		animation = personality_compassionate
	}
	
	option = {
		name = lotr_thani_hazad.2111.a
		spawn_army = {
			name = tulwangi_uprising_felayan_troops
			levies = 100	
			men_at_arms = {
				type = light_footmen
				stacks = 2
			}					
			location = capital_province
			uses_supply = no
			#origin = 			
		}
		title:k_felaya.holder = {
			add_hook = {
				target = root
				type = favor_hook
			}
		}
	}
	option = { # Nothing
		name = lotr_thani_hazad.2111.b
		ai_chance = {
			base = 0
		}
	}
}

lotr_thani_hazad.2112 = { # Felaya sends large army
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.2112.t
	desc = lotr_thani_hazad.2112.desc
	theme = war
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = title:k_felaya.holder
		animation = personality_compassionate
	}
	
	option = {
		name = lotr_thani_hazad.2112.a
		spawn_army = {
			name = tulwangi_uprising_felayan_troops
			levies = 300
			men_at_arms = {
				type = pikemen_unit
				stacks = 3
			}	
			men_at_arms = {
				type = light_footmen
				stacks = 4
			}	
			men_at_arms = {
				type = light_horsemen
				stacks = 1
			}		
			location = capital_province
			uses_supply = no
			#origin = 			
		}
		title:k_felaya.holder = {
			add_hook = {
				target = root
				type = favor_hook
			}
		}
	}
	option = { # Nothing
		name = lotr_thani_hazad.2112.b
		ai_chance = {
			base = 0
		}
	}
}

### Holzoreth ###

lotr_thani_hazad.2113 = { #Holzoreth's event
	content_source = realms_dlc 
	type = character_event
	title = lotr_thani_hazad.2113.t 
	desc = lotr_thani_hazad.2113.desc 
	theme = war
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:tulwangi_leader
		animation = personality_bold
	}

	option = { # Small Army
		name = lotr_thani_hazad.2113.a
		remove_short_term_gold = 100
		scope:tulwangi_leader = { #Spawn a few troops for reformists
			trigger_event = lotr_thani_hazad.2114
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 10
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 20
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}
	option = { # Large Army
		name = lotr_thani_hazad.2113.b
		remove_short_term_gold = 300
		scope:tulwangi_leader = { #Spawn many troops for reformists
			trigger_event = lotr_thani_hazad.2115
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 50
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}
	option = { # Nothing
		name = lotr_thani_hazad.2113.c
		ai_chance = {
			base = 0
			modifier = {
				has_game_rule = default_ai_behavior
				add = 15 
			}
			modifier = {
				has_game_rule = weighted_ai_behavior 
				add = 25 
			}
			modifier = {
				has_game_rule = random_ai_behavior 
				add = 50
			}
		}
	}
}

lotr_thani_hazad.2114 = { # Holzoreth sends small army 
	content_source = realms_dlc
	type = character_event 
	title = lotr_thani_hazad.2114.t 
	desc = lotr_thani_hazad.2114.desc 
	theme = war 
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = title:d_holzoreth.holder
		animation = personality_compassionate
	}
	option = {
		name = lotr_thani_hazad.2114.a
		spawn_army = {
			name = tulwangi_uprising_holzoreth_troops
			levies = 100
			men_at_arms = {
				type = pikemen_unit
				stacks = 2
			}	
			men_at_arms = {
				type = light_footmen
				stacks = 1
			}					
			location = capital_province
			uses_supply = no
			#origin = 			
		}
		title:d_holzoreth.holder = {
			add_hook = {
				target = root
				type = favor_hook
			}
		}
	}
	option = { # Nothing
		name = lotr_thani_hazad.2114.b
		ai_chance = {
			base = 0
		}
	}
}

lotr_thani_hazad.2115 = { # Holzoreth sends large army
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.2115.t
	desc = lotr_thani_hazad.2115.desc
	theme = war
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = title:d_holzoreth.holder
		animation = personality_compassionate
	}
	
	option = {
		name = lotr_thani_hazad.2115.a
		spawn_army = {
			name = tulwangi_uprising_holzoreth_troops
			levies = 200
			men_at_arms = {
				type = pikemen_unit
				stacks = 4
			}	
			men_at_arms = {
				type = light_footmen
				stacks = 2
			}
			men_at_arms = {
				type = bowmen
				stacks = 2
			}			
			location = capital_province
			uses_supply = no
			#origin = 			
		}
		title:d_holzoreth.holder = {
			add_hook = {
				target = root
				type = favor_hook
			}
		}
	}
	option = { # Nothing
		name = lotr_thani_hazad.2115.b
		ai_chance = {
			base = 0
		}
	}
}

##### Balan-lai mechanic events #####

lotr_thani_hazad.9000 = { # Handling event to see which inheritance event to fire
	hidden = yes
	scope = none

	immediate = {
		if = { # Check the me as primary heir
			limit = {
				OR = { # Kharadunaim or Kharadunaim-descendant
					culture = culture:kharadunaim
					culture = { any_parent_culture_or_above = { this = culture:kharadunaim } }
				}
				is_independent_ruler = yes
				NOT = { has_trait = balan_lai_member }
			}
			save_scope_as = new_member
		}
		else_if = { # Check the former member's children
			limit = {
				scope:former_member = {
					any_child = {
						OR = { # Kharadunaim or Kharadunaim-descendant
							culture = culture:kharadunaim
							culture = { any_parent_culture_or_above = { this = culture:kharadunaim } }
						}
						is_independent_ruler = yes
						NOT = { has_trait = balan_lai_member }
					}
				}
			}
			scope:former_member = {
				ordered_child = {
					limit = {
						OR = { # Kharadunaim or Kharadunaim-descendant
							culture = culture:kharadunaim
							culture = { any_parent_culture_or_above = { this = culture:kharadunaim } }
						}
						is_independent_ruler = yes
						NOT = { has_trait = balan_lai_member }
					}
					order_by = age
					save_scope_as = new_member
				}
			}
		}
		else_if = { # Check the former member's extended family
			limit = {
				scope:former_member = {
					any_close_or_extended_family_member = {
						OR = { # Kharadunaim or Kharadunaim-descendant
							culture = culture:kharadunaim
							culture = { any_parent_culture_or_above = { this = culture:kharadunaim } }
						}
						is_independent_ruler = yes
						NOT = { has_trait = balan_lai_member }
					}
				}
			}
			scope:former_member = {
				ordered_close_or_extended_family_member = {
					limit = {
						OR = { # Kharadunaim or Kharadunaim-descendant
							culture = culture:kharadunaim
							culture = { any_parent_culture_or_above = { this = culture:kharadunaim } }
						}
						is_independent_ruler = yes
						NOT = { has_trait = balan_lai_member }
					}
					order_by = age
					save_scope_as = new_member
				}
			}
		}

		scope:new_member = { # Notify new member
			if = {
				limit = {
					this = title:d_balan_lai_leader.holder
				}
				trigger_event = lotr_thani_hazad.9002
			}
			else = {
				trigger_event = lotr_thani_hazad.9001
			}
		}
		every_balan_lai_member = { # Notify other human members
			limit = {
				is_ai = no
			}
			trigger_event = lotr_thani_hazad.9003
		}
	}
}

lotr_thani_hazad.9001 = { # Inheritance of Balan-lai member trait by death of former member - not leader
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.9001.t
	desc = lotr_thani_hazad.9001.desc
	theme = crown
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	right_portrait = {
		character = scope:balan_lai_leader
		animation = personality_bold
	}
	immediate = {
		title:d_balan_lai_leader.holder = {
			save_scope_as = balan_lai_leader
		}
	}
	option = {
		name = lotr_thani_hazad.9001.a
		add_trait = balan_lai_member
		add_unpressed_claim = title:d_balan_lai_leader
	}
}

lotr_thani_hazad.9002 = { # Inheritance of Balan-lai member trait by death of former member - leader
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.9002.t
	desc = lotr_thani_hazad.9002.desc
	theme = crown
	right_portrait = {
		character = root
		animation = personality_bold
	}
	option = {
		name = lotr_thani_hazad.9002.a
		add_trait = balan_lai_member
		add_unpressed_claim = title:d_balan_lai_leader
	}
}

lotr_thani_hazad.9003 = { # Notification event for other Balan-Lai member of new inherited member
	content_source = realms_dlc
	type = character_event
	title = {
		first_valid = {
			triggered_desc = {
				trigger = { 
					scope:new_member = title:d_balan_lai_leader.holder
				}
				desc = lotr_thani_hazad.9003.t.leader
			}
			desc = lotr_thani_hazad.9003.t.nonleader
		}
	}	
	desc = {
		desc = lotr_thani_hazad.9003.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					limit = {
						scope:new_member = title:d_balan_lai_leader.holder
					}
				}
				desc = lotr_thani_hazad.9003.desc_leader
			}
			desc = lotr_thani_hazad.9003.desc_nonleader
		}
	}
	theme = crown
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:new_member
		animation = personality_honorable
	}
	option = {
		name = lotr_thani_hazad.9003.a
	}
}

lotr_thani_hazad.9010 = { # Veto opportunity for new member seeking to join
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.9010.t	
	desc = lotr_thani_hazad.9010.desc
	theme = crown
	left_portrait = {
		character = root
		animation = personality_cynical
	}
	right_portrait = {
		character = scope:potential_joiner
		animation = personality_honorable
	}

	immediate = {
		add_character_flag = {
			flag = has_passed_judgement_on_new_balan_lai_joiner
			years = 1
		}
	}

	option = { # Welcome them to our ranks
		name = lotr_thani_hazad.9010.a
		if = { # See if any other members need to be offered veto
			limit = {
				any_balan_lai_member = {
					NOT = {
						has_character_flag = has_passed_judgement_on_new_balan_lai_joiner
					}
				}
			}
			random_balan_lai_member = {
				limit = {
					NOT = {
						has_character_flag = has_passed_judgement_on_new_balan_lai_joiner
					}
				}
				trigger_event = lotr_thani_hazad.9010 # Ask next member
			}
		}
		else = {
			scope:potential_joiner = {
				trigger_event = lotr_thani_hazad.9011  # Inform new joiner they are successful
			}
			every_balan_lai_member = {
				limit = {
					is_ai = no
				}
				trigger_event = lotr_thani_hazad.9012  # Inform existing human council member of the new joiner
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				opinion = {
					target = scope:potential_joiner
					value < -50
				}
				add = -20
			}
			modifier = {
				opinion = {
					target = scope:potential_joiner
					value < -60
				}
				add = -20
			}
			modifier = {
				opinion = {
					target = scope:potential_joiner
					value < -70
				}
				add = -20
			}
			modifier = {
				opinion = {
					target = scope:potential_joiner
					value < -80
				}
				add = -20
			}
			modifier = {
				opinion = {
					target = scope:potential_joiner
					value < -90
				}
				add = -20
			}
			modifier = {
				has_relation_rival = scope:potential_joiner
				multiply = 0
			}
		}
	}
	option = { # Veto their investiture
		name = lotr_thani_hazad.9010.b
		save_scope_as = vetoing_member
		scope:potential_joiner = {
			trigger_event = lotr_thani_hazad.9013  # Inform new joiner they are vetoed
		}
		every_balan_lai_member = {
			limit = {
				is_ai = no
				NOT = { this = root }
			}
			trigger_event = lotr_thani_hazad.9014  # Inform existing human council member of the veto
		}
		ai_chance = {
			base = 0
			modifier = {
				opinion = {
					target = scope:potential_joiner
					value < -50
				}
				add = 20
			}
			modifier = {
				opinion = {
					target = scope:potential_joiner
					value < -60
				}
				add = 20
			}
			modifier = {
				opinion = {
					target = scope:potential_joiner
					value < -70
				}
				add = 20
			}
			modifier = {
				opinion = {
					target = scope:potential_joiner
					value < -80
				}
				add = 20
			}
			modifier = {
				opinion = {
					target = scope:potential_joiner
					value < -90
				}
				add = 20
			}
			modifier = {
				has_relation_rival = scope:potential_joiner
				add = 100
			}
		}
	}
}

lotr_thani_hazad.9011 = { # Inform new joiner they are successful
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.9011.t
	desc = lotr_thani_hazad.9011.desc
	theme = crown
	left_portrait = {
		character = title:d_balan_lai_leader.holder
		animation = personality_bold
	}
	right_portrait = {
		character = root
		animation = personality_honorable
	}
	option = {
		name = lotr_thani_hazad.9011.a
		add_trait = balan_lai_member
		add_unpressed_claim = title:d_balan_lai_leader
		add_prestige = 500
	}
	after = {
		every_balan_lai_member = {
			remove_character_flag = has_passed_judgement_on_new_balan_lai_joiner
		}
	}
}

lotr_thani_hazad.9012 = { # Inform existing human council member of the new joiner
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.9012.t
	desc = lotr_thani_hazad.9012.desc
	theme = crown
	left_portrait = {
		character = title:d_balan_lai_leader.holder
		animation = personality_bold
	}
	right_portrait = {
		character = scope:potential_joiner
		animation = personality_honorable
	}
	option = {
		name = lotr_thani_hazad.9012.a
	}
}

lotr_thani_hazad.9013 = { # Inform new joiner they are vetoed
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.9013.t
	desc = lotr_thani_hazad.9013.desc
	theme = crown
	left_portrait = {
		character = scope:vetoing_member
		animation = disapproval
	}
	right_portrait = {
		character = root
		animation = stress
	}
	option = {
		name = lotr_thani_hazad.9013.a
	}
	after = {
		every_balan_lai_member = {
			remove_character_flag = has_passed_judgement_on_new_balan_lai_joiner
		}
	}
}

lotr_thani_hazad.9014 = { # Inform existing human council member of the veto
	content_source = realms_dlc
	type = character_event
	title = lotr_thani_hazad.9014.t
	desc = lotr_thani_hazad.9014.desc
	theme = crown
	left_portrait = {
		character = scope:vetoing_member
		animation = disapproval
	}
	right_portrait = {
		character = scope:potential_joiner
		animation = stress
	}
	option = {
		name = lotr_thani_hazad.9014.a
	}
}


