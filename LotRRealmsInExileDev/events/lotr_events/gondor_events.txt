namespace = gondor

# Events about Denethor
#		gondor.0100	The Steward of Gondor - Introduction to Denethor.
#       gondor.0101-17	Denethor and the Palantir
#		gondor.120		Defense of Osgiliath

# Events about Boromir
#		gondor.0200	The Captain of Gondor - Introduction to Boromir.

# Events about Faramir
#		gondor.0300-1	The Rangers of Ithilien - Introduction to Faramir.

# Events about Dol Amroth
#		gondor.0400	The Princedom of Dol Amroth - Introduction to Dol Amroth.
# 		gondor.0401-11	The Reformation of the Order of the Swan

# Events about Aragorn
#		gondor.0500-517	The Return of the King? - Aragorn's reclamation of Gondor's throne.
#		gondor.0550-575	The King Strife - Civil War following Denethor's refusal to accept Aragorn as King.

# Events about Andrast Governors
#		gondor.0600 Introduction to Tharagrondost Governors
#		gondor.0601 Introduction to Corsairs in Andrast

# Decision Events
#		gondor.1000-1 Reclamation of Harondor.
#		gondor.1002 The Province of Andrast
#		gondor.1100-6 Gondor Regnal Names
#		gondor.1200   Pelargir Marines
#		gondor.2000-4 Oath of Eorl / Cirion
#		gondor.2100-3 Destroy Mordor
#		gondor.2200-1 Search Orthanc
#		gondor.2300   Reclaim Minas Ithil
#		gondor.2400   Reclaim Calenardhon
#		gondor.2700-1 Reclaim Dor Rhúnen
#		gondor.2800   Invite elves to Edhellond
#		gondor.2801   Elevate elves in Edhellond into kingdom title
#		gondor.2950-3 Last Alliance between Gondor x Bellakar

# Gondor War Events
#		gondor.2202	 Enemy at our Gates 

# Gondor Unites With Bellakar Events
# 		gondor.2901	Unite with Bellakar event chain

# Maintenance events
#		gondor.2900 


### Scripted effects

scripted_effect apply_elven_influence = {
	title:c_langstrand = {
		add_county_modifier = {
			modifier = elves_in_edhellond
			years = 30
		}
	}
	title:c_glanhir = {
		add_county_modifier = {
			modifier = elves_in_edhellond
			years = 30
		}
	}
	title:c_edhelion = {
		add_county_modifier = {
			modifier = elves_in_edhellond
			years = 30
		}
	}
	title:c_dol_amroth = {
		add_county_modifier = {
			modifier = elves_in_edhellond
			years = 30
		}
	}
	title:c_edhellond = { # Add a special modifier for Edhellond 
		add_county_modifier = {
			modifier = bustling_elven_harbour
			years = 30
		}
	}
}


#### Events about Denethor

gondor.0100 = { # Introduction to Denethor.
	content_source = realms_dlc
	type = character_event
	title = gondor.0100.t
	desc = gondor.0100.desc
	theme = stewardship_duty_focus
	override_background = {
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = worry
	}
	
	immediate = {
		play_music_cue = lotr_base_evil_18
	}
	
	option = { # There is an Evil in Mordor that does not sleep.
		name = gondor.0100.a
		custom_tooltip = gondor.0100.a.tt
		#character:linesteward39 = { # Boromir intro
		#	trigger_event = {
		#		id = gondor.0200
		#	}
		#}
		#character:linesteward40 = { # Faramir intro
		#	trigger_event = {
		#		id = gondor.0300
		#	}
		#}
		#character:dolamroth24 = { # Dol Amroth intro
		#	trigger_event = {
		#		id = gondor.0400
		#	}
		#}
		spawn_army = {		 
			uses_supply = no
			inheritable = yes
			name = garrison_of_minas_tirith
			men_at_arms = {
				type = guard_of_the_citadel
				stacks = 25
			}
			men_at_arms = {
				type = trebuchet
				stacks = 5
			}
			location = capital_province
		}
		# To give Gondor a fighting chance!
		hidden_effect = {
			IF = {	
				limit = { is_ai = yes }
				add_character_modifier = {
					modifier = siege_of_gondor
				}
			}
		}
		hidden_effect = {
			add_realm_law_skip_effects = crown_authority_1
		}
	}
}

gondor.0120 = { # Sauron's assault on Osgiliath begins
	content_source = realms_dlc
	type = character_event
	title = gondor.0120.t
	desc = gondor.0120.desc
	theme = war
	left_portrait = {
		character = root
		animation = stress
	}
	right_portrait = {
		character = character:lineofsauron
		animation = war_attacker
	}
	option = { 
		name = gondor.0120.a # Man your posts!
		add_stress = 25
# 		spawn_army = { # Garrison of Osgiliath and Ithilien Rangers are mobilized
# 			levies = 1000
# 			men_at_arms = {
# 				type = rangers_of_ithilien
# 				stacks = 5
# 			}	
# 			men_at_arms = {
# 				type = gondorian_footmen
# 				stacks = 10
# 			}
# 			location = capital_province
# #			war = war # optional. If set, the stack will disband after the war ends
# 			inheritable = yes
# 			uses_supply = no
# 			name = garrisons_of_osgiliath		
# 		}
	}
}

#### Events about Boromir

gondor.0200 = { # Introduction to Boromir.
	content_source = realms_dlc
	type = character_event
	title = gondor.0200.t
	desc = gondor.0200.desc
	theme = martial
	override_background = {
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = personality_bold
	}
	
	immediate = {
		play_music_cue = lotr_base_evil_18
	}
	
	option = { 
		name = gondor.0200.a
		spawn_army = {		 
			uses_supply = no
			inheritable = yes
			name = gondorian_honorguard_force
			men_at_arms = {
				type = guard_of_the_citadel
				stacks = 3
			}
			men_at_arms = {
				type = armored_horsemen
				stacks = 3
			}
			location = capital_province
		}
	}
}

#### Events about Faramir

gondor.0300 = { # Introduction to Faramir.
	content_source = realms_dlc
	type = character_event
	title = gondor.0300.t
	desc = gondor.0300.desc
	theme = martial
	override_background = {
		reference = on_river
	}
	left_portrait = {
		character = root
		animation = personality_content
	}
	
	immediate = {
		play_music_cue = lotr_base_evil_18
	}
	
	option = { 
		name = gondor.0300.a
		spawn_army = {		 
			uses_supply = no
			inheritable = yes
			name = ithilien_rangers_force
			men_at_arms = {
				type = rangers_of_ithilien
				stacks = 5
			}
			location = capital_province
		}
		trigger_event = {
			id = gondor.0301
			days = 3
		} 	
	}
}

gondor.0301 = { 
	content_source = realms_dlc
	type = character_event
	title = gondor.0301.t
	desc = gondor.0301.desc
	theme = martial
	override_background = {
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = personality_content
	}
	
	option = { 
		name = gondor.0301.a # Gondor and its people need me now more than ever.
		custom_tooltip = gondor.0301.a.tt
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { 
		name = gondor.0301.b # Love and affection is all I have ever desired...
		remove_trait = cannot_marry
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

gondor.0302 = { # Faramir marries Eowyn
	content_source = realms_dlc
	type = character_event
	title = gondor.0302.t
	desc = gondor.0302.desc
	theme = family
	override_background = {
		reference = on_river
	}

	left_portrait = {
		character = root
		animation = love
	}
	right_portrait = {
		character = character:6000035
		animation = admiration
	}

	option = {
		name = gondor.0302.a # Marries Eowyn.
		remove_trait = cannot_marry
		marry = character:6000035
		set_relation_soulmate = character:6000035
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = {
		name = gondor.0302.b # Does not marry Eowyn.
		remove_trait = cannot_marry
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

gondor.0303 = { # Aragorn marries Eowyn.
	content_source = realms_dlc
	type = character_event
	title = gondor.0303.t
	desc = gondor.0303.desc
	theme = family
	override_background = {
		reference = minas_tirith
	}

	right_portrait = {
		character = root
		animation = sadness
	}

	option = {
		name = gondor.0303.a # It was foolish of me to wait...
		remove_trait = cannot_marry
	}
}

gondor.0304 = { # Eowyn marries Faramir
	content_source = realms_dlc
	type = character_event
	title = gondor.0304.t
	desc = gondor.0304.desc
	theme = family
	override_background = {
		reference = minas_tirith
	}

	left_portrait = {
		character = root
		animation = admiration
	}
	right_portrait = {
		character = character:linesteward40
		animation = love
	}

	option = {
		name = gondor.0304.a # Marries Faramir.
		remove_trait = cannot_marry
		character:linesteward40 = { remove_trait = cannot_marry }
		marry = character:linesteward40
		set_relation_soulmate = character:linesteward40
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = {
		name = gondor.0304.b # Marries Faramir matrilinealy.
		remove_trait = cannot_marry
		character:linesteward40 = { remove_trait = cannot_marry }
		marry_matrilineal = character:linesteward40
		set_relation_soulmate = character:linesteward40
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 0
			}
		}
	}
	option = {
		name = gondor.0304.c # Does not marry Faramir.
		remove_trait = cannot_marry
		character:linesteward40 = { remove_trait = cannot_marry }
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

#### Events about Dol Amroth

gondor.0400 = { # Introduction to Dol Amroth.
	content_source = realms_dlc
	type = character_event
	title = gondor.0400.t
	desc = gondor.0400.desc
	theme = stewardship_duty_focus
	override_background = {
		reference = dol_amroth
	}
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	
	option = { 
		name = gondor.0400.a
		spawn_army = {		 
			uses_supply = no
			inheritable = yes
			name = swan_knights_force
			levies = 50
			men_at_arms = {
				type = swan_knights
				stacks = 4
			}
			location = capital_province
		}
	}
}

# gondor.0401 = { # Reformation of the Order of the Swan
	# title = gondor.0401.t
	# desc = gondor.0401.desc
	# theme = martial_chivalry_focus
	# override_background = {
		# reference = docks_dunedain
	# }
	# left_portrait = {
		# character = root
		# animation = war_defender
	# }
	
	# option = { 
		# name = gondor.0401.a # There is much work to be done.
	# }
# }

# gondor.0402 = { # Expand the Amrothian Reserves
	# title = gondor.0402.t
	# desc = gondor.0402.desc
	# theme = martial_chivalry_focus
	# left_portrait = {
		# character = root
		# animation = war_defender
	# }
	
	# option = { 
		# name = gondor.0402.a # Sound the trumpets! Let every man know of his prince's needs!
		# trigger_event = {
			# id = gondor.0403
			# days = 360
		# }
	# }
# }

# gondor.0403 = { # Amrothian Reserves Recruited
	# title = gondor.0403.t
	# desc = gondor.0403.desc
	# theme = martial_chivalry_focus
	# left_portrait = {
		# character = root
		# animation = war_defender
	# }
	
	# option = { 
		# name = gondor.0403.a 
		# spawn_army = {		 
			# uses_supply = yes
			# inheritable = yes
			# name = amrothian_reserves
			# levies = 50
			# men_at_arms = {
				# type = gondorian_bowmen
				# stacks = 2
			# }
			# men_at_arms = {
				# type = gondorian_footmen
				# stacks = 3
			# }
			# location = capital_province
		# }
	# }
# }

# gondor.0404 = { # Recruit the Men of Edhellond
	# title = gondor.0404.t
	# desc = gondor.0404.desc
	# theme = martial_chivalry_focus
	# left_portrait = {
		# character = root
		# animation = war_defender
	# }
	
	# option = { 
		# name = gondor.0404.a # Send our fastest rider to gather the men!
		# trigger_event = {
			# id = gondor.0405
			# days = 270
		# }
	# }
# }

# gondor.0405 = { # Men of Edhellond Recruited
	# title = gondor.0405.t
	# desc = gondor.0405.desc
	# theme = martial_chivalry_focus
	# left_portrait = {
		# character = root
		# animation = war_defender
	# }
	
	# option = { 
		# name = gondor.0405.a 
		# spawn_army = {		 
			# uses_supply = yes
			# inheritable = yes
			# name = edhellond_soldiers
			# levies = 50
			# men_at_arms = {
				# type = nimrodel_rangers
				# stacks = 3
			# }
			# men_at_arms = {
				# type = edhellond_horse_archers
				# stacks = 3
			# }
			# location = capital_province
		# }
	# }
# }

# gondor.0406 = { # Expanding the Sea-ward Regiments
	# title = gondor.0406.t
	# desc = gondor.0406.desc
	# theme = martial_chivalry_focus
	# override_background = {
		# reference = docks_dunedain
	# }
	# left_portrait = {
		# character = root
		# animation = war_defender
	# }
	
	# option = { 
		# name = gondor.0406.a # Begin the training at once!
		# trigger_event = {
			# id = gondor.0407
			# days = 460
		# }
	# }
# }

# gondor.0407 = { # The Sea-ward Regiments Expanded
	# title = gondor.0407.t
	# desc = gondor.0407.desc
	# theme = martial_chivalry_focus
	# override_background = {
		# reference = docks_dunedain
	# }
	# left_portrait = {
		# character = root
		# animation = war_defender
	# }
	
	# option = { 
		# name = gondor.0407.a 
		# spawn_army = {		 
			# uses_supply = yes
			# inheritable = yes
			# name = seaward_soldiers
			# levies = 50
			# men_at_arms = {
				# type = seaward_footmen
				# stacks = 4
			# }
			# men_at_arms = {
				# type = seaward_spearmen
				# stacks = 3
			# }
		    # men_at_arms = {
				# type = haven_guard
				# stacks = 2
			# }
			# location = capital_province
		# }
	# }
# }

# gondor.0408 = { # Reforging the Tirith Aear
	# title = gondor.0408.t
	# desc = gondor.0408.desc
	# theme = martial_chivalry_focus
	# override_background = {
		# reference = docks_dunedain
	# }
	# left_portrait = {
		# character = root
		# animation = war_defender
	# }
	
	# option = { 
		# name = gondor.0408.a # The old oaths shall be spoken once again.
		# trigger_event = {
			# id = gondor.0409
			# days = 600
		# }
	# }
# }

# gondor.0409 = { # The Oaths Reforged
	# title = gondor.0409.t
	# desc = gondor.0409.desc
	# theme = martial_chivalry_focus
	# override_background = {
		# reference = docks_dunedain
	# }
	# left_portrait = {
		# character = root
		# animation = war_defender
	# }
	
	# option = { 
		# name = gondor.0409.a 
		# spawn_army = {		 
			# uses_supply = no
			# inheritable = yes
			# name = tirith_aear_soldiers
			# levies = 50
			# men_at_arms = {
				# type = tirith_aear_knights
				# stacks = 3
			# }
			# location = capital_province
		# }
	# }
# }

# gondor.0410 = { # Reform the Swan-guard
	# title = gondor.0410.t
	# desc = gondor.0410.desc
	# theme = martial_chivalry_focus
	# override_background = {
		# reference = docks_dunedain
	# }
	# left_portrait = {
		# character = root
		# animation = war_defender
	# }
	
	# option = { 
		# name = gondor.0410.a # Only the noblest, most virtuous of knights shall be given membership.
		# trigger_event = {
			# id = gondor.0411
			# days = 760
		# }
	# }
# }

# gondor.0411 = { # The Royal Swan-guard Reformed
	# title = gondor.0411.t
	# desc = gondor.0411.desc
	# theme = martial_chivalry_focus
	# override_background = {
		# reference = docks_dunedain
	# }
	# left_portrait = {
		# character = root
		# animation = war_defender
	# }
	
	# option = { 
		# name = gondor.0411.a 
		# spawn_army = {		 
			# uses_supply = no
			# inheritable = yes
			# name = royal_swan_guard_troops
			# levies = 50
			# men_at_arms = {
				# type = swan_squires
				# stacks = 2
			# }
			# men_at_arms = {
				# type = swan_knights
				# stacks = 1
			# }
			# men_at_arms = {
				# type = royal_swan_guard
				# stacks = 4
			# }
			# men_at_arms = {
				# type = talon_knights
				# stacks = 3
			# }
			# location = capital_province
		# }
		# culture = { 
			# add_innovation = innovation_silver_swan
		# }
		# add_piety = 500
		# add_diplomacy_skill = 1
		# add_martial_skill = 2
	# }
# }


#### Events about Aragorn

## The Return of the King 
gondor.0500 = { 
	content_source = realms_dlc
	type = character_event
	title = gondor.0500.t
	desc = gondor.0500.desc
	theme = diplomacy_majesty_focus
	override_background = {
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = personality_honorable
	}
	
	option = { 
		name = gondor.0500.a # It is time...
		title:e_gondor_steward.holder = { # Denethor reacts
			trigger_event = {
				id = gondor.0501
				days = 15
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { 
		name = gondor.0500.b # The North is my home
		
		trigger_event = { # Aragorn decides whether or not to claim Arnor
			id = gondor.0520
			days = 15
		}
		
		remove_trait = celibate	
		remove_trait = cannot_marry
		
		hidden_effect = { # everyone can marry now
			character:dolamroth31 = {
				remove_trait = cannot_marry
			}
			character:6000035 = {
				remove_trait = cannot_marry
			}
			character:linefinwe30 = {
				remove_trait = cannot_marry
			}
			character:linesteward40 = {
				remove_trait = cannot_marry
			} 
			character:6000018 = {
				remove_trait = cannot_marry
			}
		}


		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

gondor.0501 = { # Denethor reacts to Aragorn's return
	content_source = realms_dlc
	type = character_event
	title = gondor.0501.t
	desc = gondor.0501.desc
	theme = stewardship_duty_focus
	override_background = {
		reference = throne_room
	}
	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = character:lineisildur42
		animation = personality_honorable
	}

	immediate = {
		character:lineisildur42 = { save_scope_as = aragorn }
		title:e_gondor_steward.holder = { save_scope_as = steward_of_gondor }
	}

	option = { 
		name = gondor.0501.a # I have no choice but to accept.
		custom_tooltip = gondor.0501.a.tt1
		custom_tooltip = gondor.0501.a.tt2
		character:lineisildur42 = { # Aragorn is allowed into Minas Tirith
			trigger_event = {
				id = gondor.0502
				days = 2
			}
		}
		title:e_arnor = {
			every_de_jure_county_holder = {
            	limit = {
					is_independent_ruler = yes
					NOT = { THIS = character:lineisildur42 }
					capital_county = { # If capital is in Arnor
						title_province = { geographical_region = middleearth_west_arnor }
					}
				}
				trigger_event = {
					id = gondor.0503
					days = 5
				}
			}
		}


		hidden_effect = {
			if = {
				limit = {
					OR = { 
						has_title = title:c_osgiliath
						any_vassal_or_below = { 
							has_title = title:c_osgiliath
							is_ai = yes
						} 
					}
				}			
				get_title = title:c_osgiliath
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { 
		name = gondor.0501.b # Steward refuses
		custom_tooltip = gondor.0501.b.tt1
		custom_tooltip = gondor.0501.b.tt2
		add_legitimacy = massive_legitimacy_loss
		title:k_belfalas.holder = { # The Prince of Dol Amroth calls a meeting
			trigger_event = {
				id = gondor.0550
				days = 60
			}
		}
		every_vassal = { # Invite to the meeting at Dol Amroth
			limit = {
				NOT = { has_title = title:k_belfalas }
			}
			trigger_event = {
				id = gondor.0551
				days = 60
			}		
		}
		trigger_event = { # Steward hears whispers of discontent
			id = gondor.0552 
			days = 60
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
			
			modifier = { # Steward under Sauron's Ifluence
				faith = faith:lidless_eye
				add = 500
			}
		}
	}
}

gondor.0502 = { # Aragorn is allowed into Minas Tirith and is coronated
	content_source = realms_dlc
	type = character_event
	title = gondor.0502.t
	desc = gondor.0502.desc
	theme = diplomacy_majesty_focus
	override_background = {
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = personality_honorable
	}
	
	option = { 
		name = gondor.0502.a # Gondor kingdom restored and given to Aragorn
		add_character_modifier = {	# To give him a fighting chance after loosing all the MAA - for some time, the gondorians fighting spirit is renewed
			modifier = return_of_the_king_modifier
			years = 20
		}
		add_character_modifier = { #To give him time to get married in peace
			modifier = fp1_reprieve_from_sa_modifier
			years = 5
		}
		create_artifact_crown_of_gondor_effect = { OWNER = this }
		root = { # Give Aragorn his banners!
            save_scope_as = banner_ruler
            # House Banner
            set_variable = banner_from_house
            set_variable = startup_banner
            create_artifact_wall_banner_effect = {
                OWNER = scope:banner_ruler
                CREATOR = scope:banner_ruler
                TARGET = scope:banner_ruler.house
            }
            # Dynasty Banner
            if = { 
                limit = {
                    OR = {
                        this = dynasty.dynast # Dynasty Head
                        any_parent = { # Parent landless Dynasty Head
                            employer = prev
                            dynasty = prev.dynasty
                            this = dynasty.dynast
                        }
                    }
                }
                set_variable = banner_from_dynasty
                set_variable = startup_banner
                create_artifact_wall_banner_effect = {
                    OWNER = scope:banner_ruler
                    CREATOR = scope:banner_ruler
                    TARGET = scope:banner_ruler.dynasty
                }
            }
		}
		every_artifact = { #The Rod is now tied to the kingdom tier title
			limit = { has_variable = stewards_rod }
			set_variable = {
				name = artifact_succession_title
				value = title:k_gondor_steward
			}
		}
		every_artifact = { #The Black Chair is now tied to the King tier title
			limit = { has_variable = black_chair_stewards }
			set_variable = {
				name = artifact_succession_title
				value = title:k_gondor_steward
			}
		}
		title:e_gondor_steward.holder = { # Aragorn inherits the royal artifacts from the steward and the Steward gets his Black Chair Replica
#			create_artifact_black_chair_replica_effect = { OWNER = this }
			every_character_artifact = {
				limit = {
					OR = {
						has_variable = palantir_minasanor
						#has_variable = black_chair_stewards
						has_variable = throne_of_gondor
					}
				}
				set_owner = {
					target = root
					history = {
						type = inherited
						recipient = root
					}
				}
			}
		}
		hidden_effect = {
			title:e_gondor_steward.holder = {
				if = { # Handling of death of suzerain
					limit = {
						this = {
							exists = var:suzerain
						}
					}
					every_in_list = {
						variable = permanent_tributaries
						free_tributary = yes
					}		
					every_in_list = {
						variable = non_permanent_tributaries
						remove_variable = my_suzerain
						remove_variable = tributary_type
						remove_variable = overlord_type
						remove_variable = overlord_protector
						remove_variable = overlord_suzerain
						remove_variable = tribute_gold_percent
						remove_variable = monthly_prestige_suzerain
						remove_variable = monthly_prestige_tributary
						remove_variable = monthly_piety_suzerain
						remove_variable = monthly_piety_tributary
					}	
					remove_variable = suzerain
				}
			}
		}
		set_culture = culture:gondorian
		create_title_and_vassal_change = {
			type = returned
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:e_gondor = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}

		title:e_arnor = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}

		title:e_gondor_steward.holder = {
			every_held_title = {
				limit = { 
					NOT = { 
						this = title:c_osgiliath
					}
				}
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
		}
		hidden_effect = {
			house = {
				add_house_modifier = {
					modifier = unity_house_organized_for_war_modifier
					years = 150
				}
			}
			if = {
				limit = {
					OR = {
						title:c_tarmabar.holder = title:c_annuminas.holder
						title:c_tarmabar.holder = title:k_wastelands.holder
						title:c_tarmabar.holder = title:d_northern_dunedain.holder
					}
				}
				title:c_tarmabar = {
					add_to_list = transfer_list
				}	
			}
			if = {
				limit = {
					OR = {
						title:c_rhovanduin.holder = title:c_annuminas.holder
						title:c_rhovanduin.holder = title:k_wastelands.holder
						title:c_rhovanduin.holder = title:d_northern_dunedain.holder
					}
				}
				title:c_rhovanduin = {
					add_to_list = transfer_list
				}	
			}

			if = {
				limit = {
					OR = {
						title:c_cargilin.holder = title:c_annuminas.holder
						title:c_cargilin.holder = title:k_wastelands.holder
						title:c_cargilin.holder = title:d_northern_dunedain.holder
					}
				}
				title:c_cargilin = {
					add_to_list = transfer_list
				}	
			}
			if = {
				limit = {
					OR = {
						title:c_laegsant.holder = title:c_annuminas.holder
						title:c_laegsant.holder = title:k_wastelands.holder
						title:c_laegsant.holder = title:d_northern_dunedain.holder
					}
				}
				random_list = {
					33 = {
						title:c_laegsant = {
							add_to_list = transfer_list
						}
					}
					67 = {}
				}	
			}			
			if = {
				limit = {
					OR = {
						title:c_nothrimos.holder = title:c_annuminas.holder
						title:c_nothrimos.holder = title:k_wastelands.holder
						title:c_nothrimos.holder = title:d_northern_dunedain.holder
					}
				}
				random_list = {
					33 = {
						title:c_nothrimos = {
							add_to_list = transfer_list
						}
					}
					67 = {}
				}
			}
			if = {
				limit = {
					OR = {
						title:c_annuminas.holder.top_liege = title:d_northern_dunedain.holder
						title:c_annuminas.holder = title:d_northern_dunedain.holder
					}
				}
				every_in_list = {
					list = transfer_list
					if = {
						limit = {
							NOT = {
								holder = title:k_wastelands.holder
							}
							faith_is_good = yes
						}
						title:c_annuminas = {
							change_development_level = 1
						}
					}
					resolve_title_and_vassal_change = scope:change
					every_county_province = {
						limit = {
							OR = {
								has_holding_type = wastelands_holding
								has_holding_type = settlement_holding
							}			
						}
						ai_colonisation_effect = { WASTELANDS = this }
						set_holding_type = castle_holding
					}
					
					change_title_holder = {
						holder = title:d_northern_dunedain.holder
						change = scope:change
						take_baronies = yes
					}
					set_county_faith = root.faith
					set_county_culture = culture:dunedain_ranger
					random_list = {
						33 = {
							change_development_level = 2
						}
						33 = {
							change_development_level = 3
						}
						33 = {
							change_development_level = 4
						}
					}
					#generate_coa = yes
					
				}
				title:c_annuminas.holder = {
					trigger_event = {
						id = gondor.0522
						days = 20
					}
				}
			}
		}
		#title:e_gondor_steward = {
		#	transfer_vassals = title:e_gondor
		#}
		hidden_effect = {
			title:e_gondor_steward = {
				every_in_de_jure_hierarchy = {
					limit = { tier = tier_kingdom }
					set_de_jure_liege_title = title:e_gondor
				}
			}
			#title:e_gondor.holder = { # Vector Note - Aragorn already has male preference in place and retains it upon ascending the throne, tested 1/30/24
			#	add_realm_law = male_preference_law # To stop the house of Telcontar from losing the throne immediately if Eldarion dies
			#}
		}
		resolve_title_and_vassal_change = scope:change
		destroy_title = title:d_northern_dunedain 
		destroy_title = title:e_gondor_steward
		trigger_event = {
			id = gondor.0507 
			days = 20
		}
		trigger_event = {
			id = gondor.0504 
			days = 90
		}
		trigger_event = {
			id = lotr_artifact.0005
			days = 3
		}
		if = {
			limit = { # Major News
				NOT = { has_game_rule = no_news }
			}
			every_player = { #Global News Announcement
				trigger_event = news_event.0011
			}
		}
		title:c_osgiliath.holder = { # Denethor chooses who he will play as.
			trigger_event = {
				id = gondor.0516
			}
		}
		hidden_effect = {
			IF = {
				limit = { is_ai = yes } 
			
				add_character_modifier = {
					modifier = siege_of_gondor
					years = 50
				}
			}
		}
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:aragorn_returned_to_gondor
		}
	}
	
	after = {
		if = {
			limit = {
				title:d_druadan_forest.holder = {
					is_independent_ruler = yes
				}
			}
			make_tributary = {
				TYPE = tributary_protectorate
				SUZERAIN = character:lineisildur42
				TRIBUTARY = title:d_druadan_forest.holder
			}
		}
	}
}
gondor.0503 = { # Vassalization offers are sent to the people of Arnor
	type = letter_event
	sender = scope:sender
#	content_source = realms_dlc
	opening = {
		desc = gondor.0503.opening
	}
	desc = gondor.0503.desc
#	theme = diplomacy_majesty_focus
#	left_portrait = {
#		character = root
#		animation = personality_honorable
#	}
#	right_portrait = {
#		character = character:lineisildur42
#		animation = personality_honorable
#	}
	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = gondor.0503
			days = 1
		}
	}

	immediate = {
		title:e_arnor.holder = {
			save_scope_as = sender
		}
		ROOT = {
			save_scope_as = recipient
		}
	}

	option = { 
		name = gondor.0503.a # I accept vassalization to Aragorn.
#		trigger_event = {
#			id = gondor.0506 
#			days = 50
#		}

		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
			add_claim_on_loss = no
		}
		change_liege = {
			liege = scope:sender
			change = scope:change
		}
		resolve_title_and_vassal_change = scope:change

		ai_chance = {
			base = 0

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				faith_is_good = yes
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				is_dwarf = yes
				add = -1000
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				has_culture = culture:druedain
				add = -1000
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				faith_is_neutral = yes
				add = 20
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				faith_is_evil = yes
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				faith_is_good = yes
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				is_dwarf = yes
				add = -100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				has_culture = culture:druedain
				add = -100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				faith_is_neutral = yes
				add = 35
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				faith_is_evil = yes
				add = 25
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
			opinion_modifier = {
				opinion_target = scope:sender
				multiplier = 1
			}
			modifier = {
				add = {
					value = root.ai_boldness
					multiply = -1
				}
			}
			modifier = {
				add = {
					value = root.ai_rationality
					multiply = 1
				}
			}
		}
	}

	option = { 
		name = gondor.0503.b # I will remain independent
#		trigger_event = {
#			id = gondor.0506 
#			days = 50
#		}
		if = {
			limit = { is_ai = yes }
			lotr_get_aggressive = yes
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				faith_is_good = yes
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				faith_is_neutral = yes
				add = 80
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				is_dwarf = yes
				add = 1000
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				has_culture = culture:druedain
				add = 1000
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				faith_is_evil = yes
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				faith_is_good = yes
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				faith_is_neutral = yes
				add = 65
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				faith_is_evil = yes
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

#gondor.0503 = { # Denethor is overthrown by the citizens of Minas Tirith - effectively defunct now due to civil war chain...
#	title = gondor.0503.t
#	desc = gondor.0503.desc
#	theme = stewardship_duty_focus
#	left_portrait = {
#		character = root
#		animation = rage
#	}
#	
#	option = { 
#		name = gondor.0503.a 
#		character:lineisildur42 = { # Aragorn is allowed into Minas Tirith
#			trigger_event = {
#				id = gondor.0502
#				days = 2
#			}
#		}
#		hidden_effect = { 
#			get_title = title:c_osgiliath
#		}
#	}
#}

gondor.0504 = { # Elessar, Aragorn, or Nimruzimir? 
	content_source = realms_dlc
	type = character_event
	title = gondor.0504.t
	desc = gondor.0504.desc
	theme = diplomacy_majesty_focus
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	
	option = { 
		name = gondor.0504.a # Elessar
		change_first_name = "Elessar"
		trigger_event = {
			id = gondor.0505 
			days = 15
		}
		add_character_flag = has_regnal_name
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 34
			}
		}
	}
	option = { 
		name = gondor.0504.b # I shall remain Aragorn
		trigger_event = {
			id = gondor.0505 
			days = 15
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 20
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}
	option = { 
		name = gondor.0504.c # Nimruzimir
		change_first_name = "Nimruzimir"
		trigger_event = {
			id = gondor.0505 
			days = 15
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 10
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}
}

### fixed ;)
gondor.0505 = { # A new house for a new age?
	content_source = realms_dlc
	type = character_event
	title = gondor.0505.t
	desc = gondor.0505.desc
	theme = diplomacy_majesty_focus
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	
	option = { 
		name = gondor.0505.a # The house of Telcontar shall endure in my kindred.
		set_house = house:house_telcontar
		root = { # Give Aragorn his banner!
            save_scope_as = banner_ruler
            # House Banner
            set_variable = banner_from_house
            set_variable = startup_banner
            create_artifact_wall_banner_effect = {
                OWNER = scope:banner_ruler
                CREATOR = scope:banner_ruler
                TARGET = scope:banner_ruler.house
            }
		}
		hidden_effect = {
			house = {
				add_house_modifier = {
					modifier = unity_house_organized_for_war_modifier
					years = 150
				}
			}
		}
		trigger_event = {
			id = gondor.0506 
			days = 50
		}
		if = {
			limit = { is_ai = yes }
			lotr_get_aggressive = yes
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 75
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { 
		name = gondor.0505.b # I will remain a member of the house of Isildur
		trigger_event = {
			id = gondor.0506 
			days = 50
		}
		if = {
			limit = { is_ai = yes }
			lotr_get_aggressive = yes
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
			has_game_rule = default_ai_behavior
				add = 0
			}
			
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 25
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

gondor.0506 = { # A dream from long ago... Will Aragorn marry Arwen?
	title = gondor.0506.t
	desc = gondor.0506.desc
	theme = love
	left_portrait = {
		character = root
		animation = happiness
	}
	
	immediate = {
		remove_trait = celibate	
		remove_trait = cannot_marry
		hidden_effect = {
			character:dolamroth31 = {
				remove_trait = cannot_marry
			}
			character:6000035 = {
				remove_trait = cannot_marry
			}
			character:linefinwe30 = {
				remove_trait = cannot_marry
			}
		}
	}
	
	option = { # I cannot betray my heart's desire. Marry Arwen.
		name = gondor.0506.a
		trigger = { character:linefinwe30 = { is_alive = yes } }
		
		if = {
			limit = {
				has_dlc_feature = tours_and_tournaments
				has_dlc_feature = advanced_activities
			}
			
			#Setting up the betrothal
			create_betrothal = character:linefinwe30
			set_grand_wedding_betrothal_variables = {
				SPOUSE_1 = root
				SPOUSE_2 = character:linefinwe30
				HOST = root
				PROMISEE = character:linefinwe27
			}
			add_character_flag = aragorn_gw
			
			#Opening the Grand Wedding window
			if = {
				limit = { is_ai = no }
				open_view_data = {
					view = activity_list_detail_host_window
					data = activity_type:activity_wedding
				}
			}
		}
		else = {
			marry = character:linefinwe30
			set_relation_lover = character:linefinwe30
			set_relation_friend = character:linefinwe30
			set_relation_soulmate = character:linefinwe30
			
			character:linefinwe36 = { # Galadriel sends a royal gift
				trigger_event = {
					id = elven.0103
					days = 1
				}
			}
			
			trigger_event = {
				id = gondor.0508 
				days = 100
			}
		}
		
		hidden_effect = {
			character:6000018 = { # Eomer marries Lothíriel.
				if = { 
					limit = { 
						is_married = no
					}
					trigger_event = {
						id = rohan.1208
					}
				}
			}
			character:linesteward40 = { # Faramir marries Eowyn.
				if = { 
					limit = { 
						is_married = no
						character:6000035 = { is_ai = yes }
					}
					trigger_event = {
						id = gondor.0302
					}
				}
				else_if = { 
					limit = { 
						is_married = no
						character:6000035 = { is_ai = no }
					}
					character:6000035 = {
						trigger_event = {
							id = gondor.0304
						}
					}
				}
			}
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:aragorn_married_arwen
			}
		}
		custom_tooltip = gondor.0506.a.tt
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 25
			}
		}
	}
	
	option = {  # Perhaps there is another. Marry Éowyn.
		name = gondor.0506.b	
		trigger = { character:6000035 = { is_alive = yes } }
		
		if = {
			limit = {
				has_dlc_feature = tours_and_tournaments
				has_dlc_feature = advanced_activities
			}
			#Setting up the betrothal
			create_betrothal = character:6000035
			set_grand_wedding_betrothal_variables = {
				SPOUSE_1 = root
				SPOUSE_2 = character:6000035
				HOST = root
				PROMISEE = character:6000035.liege
			}
			add_character_flag = aragorn_gw
			
			#Opening the Grand Wedding window		
			if = {
				limit = { is_ai = no }
				open_view_data = {
					view = activity_list_detail_host_window
					data = activity_type:activity_wedding
				}
			}
		}
		else = {
			marry = character:6000035
		}
		
		hidden_effect = {
			character:6000018 = { # Eomer marries Lothíriel.
				if = { 
					limit = { 
						is_married = no
					}
					trigger_event = {
						id = rohan.1208
					}
				}
			}
			character:linesteward40 = { # Faramir is sad.
				if = { 
					limit = { 
						is_married = no
					}
					trigger_event = {
						id = gondor.0303
					}
				}
			}
		}
		custom_tooltip = gondor.0506.b.tt
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 10
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 25
			}
		}
	}
	
	option = {  # Marry Lothíriel of Dol Amroth.
		name = gondor.0506.c	
		trigger = { character:dolamroth31 = { is_alive = yes } }
		
		if = {
			limit = {
				has_dlc_feature = tours_and_tournaments
				has_dlc_feature = advanced_activities
			}
			#Setting up the betrothal
			create_betrothal = character:dolamroth31
			set_grand_wedding_betrothal_variables = {
				SPOUSE_1 = root
				SPOUSE_2 = character:dolamroth31
				HOST = root
				PROMISEE = character:dolamroth31.liege
			}
			add_character_flag = aragorn_gw
			
			#Opening the Grand Wedding window		
			if = {
				limit = { is_ai = no }
				open_view_data = {
					view = activity_list_detail_host_window
					data = activity_type:activity_wedding
				}
			}
		}
		else = {
			marry = character:dolamroth31
		}
		
		hidden_effect = {
			character:6000018 = { # Eomer is sad...
				if = { 
					limit = { 
						is_married = no
					}
					trigger_event = {
						id = rohan.1209
					}
				}
			}
			character:linesteward40 = { # Faramir marries Eowyn.
				if = { 
					limit = { 
						is_married = no
						character:6000035 = { is_ai = yes }
					}
					trigger_event = {
						id = gondor.0302
					}
				}
				else_if = { 
					limit = { 
						is_married = no
						character:6000035 = { is_ai = no }
					}
					character:6000035 = {
						trigger_event = {
							id = gondor.0304
						}
					}
				}
			}
		}
		custom_tooltip = gondor.0506.c.tt
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 10
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 25
			}
		}
	}
	
	option = {  # A flower from the South... Marry Ladnokali
		name = gondor.0506.d

		trigger = {
			title:e_gondor.holder ?= { in_diplomatic_range = title:e_bellakar.holder }
			title:e_bellakar.holder ?= { faith_is_good = yes }
			character:lineoftumakveh86 = { is_alive = yes }
		}

		if = {
			limit = {
				has_dlc_feature = tours_and_tournaments
				has_dlc_feature = advanced_activities
			}
			#Setting up the betrothal
			create_betrothal = character:lineoftumakveh86
			set_grand_wedding_betrothal_variables = {
				SPOUSE_1 = root
				SPOUSE_2 = character:lineoftumakveh86
				HOST = root
				PROMISEE = character:lineoftumakveh86.liege
			}
			add_character_flag = aragorn_gw
			
			#Opening the Grand Wedding window		
			if = {
				limit = { is_ai = no }
				open_view_data = {
					view = activity_list_detail_host_window
					data = activity_type:activity_wedding
				}
			}
		}
		else = {
			marry = character:lineoftumakveh86
		}
		
		hidden_effect = {
			character:6000018 = { # Eomer marries Lothíriel.
				if = { 
					limit = { 
						is_married = no
					}
					trigger_event = {
						id = rohan.1208
					}
				}
			}
			character:linesteward40 = { # Faramir marries Eowyn.
				if = { 
					limit = { 
						is_married = no
						character:6000035 = { is_ai = yes }
					}
					trigger_event = {
						id = gondor.0302
					}
				}
				else_if = { 
					limit = { 
						is_married = no
						character:6000035 = { is_ai = no }
					}
					character:6000035 = {
						trigger_event = {
							id = gondor.0304
						}
					}
				}
			}
		}
		custom_tooltip = gondor.0506.d.tt
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 10
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 25
			}
		}
	}
	option = {  # It was but a dream. Do not marry any of the above options
		name = gondor.0506.e
		hidden_effect = {
			character:6000018 = { # Eomer marries Lothíriel.
				if = { 
					limit = { 
						is_married = no
					}
					trigger_event = {
						id = rohan.1208
					}
				}
			}
			character:linesteward40 = { # Faramir marries Eowyn.
				if = { 
					limit = { 
						is_married = no
						character:6000035 = { is_ai = yes }
					}
					trigger_event = {
						id = gondor.0302
					}
				}
				else_if = { 
					limit = { 
						is_married = no
						character:6000035 = { is_ai = no }
					}
					character:6000035 = {
						trigger_event = {
							id = gondor.0304
						}
					}
				}
			}
		}
		custom_tooltip = gondor.0506.e.tt
		ai_chance = {
			base = 0
		}
	}
	
	after = { 
		trigger_event = {
			id = gondor.0517
			days = 1094 # One day before time-out
		}
	}
}

gondor.0517 = { #Aragorn wedding if he was too stupid to do it himself
	type = character_event
	hidden = yes
	
	immediate = {
		if = {
			limit = {
				has_character_flag = aragorn_gw
			}
			
			if = {
				limit = { root.betrothed = character:linefinwe30 } #Arwen marriage handling
				
				#So Aragorn doesn't have multiple lovers/soulmates
				every_relation = {
					type = lover
					remove_relation_lover = root
				}
				every_relation = {
					type = soulmate
					remove_relation_soulmate = root
				}	
				
				set_relation_lover = character:linefinwe30
				set_relation_friend = character:linefinwe30
				set_relation_soulmate = character:linefinwe30
				
				character:linefinwe36 = { # Galadriel sends a royal gift
					trigger_event = {
						id = elven.0103
						days = 1
					}
				}
			}
			marry = root.betrothed
			remove_character_flag = aragorn_gw
			
			if = { #So Aragorn doesn't get married twice to the same person
				limit = {
					has_variable = promised_grand_wedding_marriage_countdown
				}
				remove_variable = promised_grand_wedding_marriage_countdown
			}
		}
	}
	
	after = {
		trigger_event = { #Incepting Eldarion
			id = gondor.0508 
			days = 100
		}
	}
}

gondor.0507 = { # The Glory of Gondor Restored
	content_source = realms_dlc
	type = character_event
	title = gondor.0507.t
	desc = gondor.0507.desc
	theme = diplomacy_majesty_focus
	override_background = {
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = personality_bold
	}
	
	option = { 
		name = gondor.0507.a # We must now face the Enemy in the east.
		add_prestige = 5000 #1250
		add_piety = 500
		add_gold = 500
		give_nickname = nick_the_renewer_dunedain
		add_character_flag = had_nickname_event
		spawn_army = { 
			uses_supply = no
			inheritable = yes
			name = grey_company_force
			men_at_arms = {
				type = grey_company
				stacks = 1
			}
			location = capital_province
		}
		spawn_army = {		 
			uses_supply = no
			inheritable = yes
			name = aragorn_southern_host
			men_at_arms = {
				type = gondorian_footmen
				stacks = 6
			}
			men_at_arms = {
				type = gondorian_footmen
				stacks = 6
			}
			men_at_arms = {
				type = gondorian_bowmen
				stacks = 4
			}
			men_at_arms = {
				type = swan_knights
				stacks = 8
			}
			men_at_arms = {
				type = guard_of_the_citadel
				stacks = 10
			}
			location = capital_province
		}
		hidden_effect = { # To give Aragorn breathing room
			title:e_mordor.holder = {
				add_truce_one_way = {
					character = root
					years = 3
					override = yes
					name = TRUCE_GONDOR_MORDOR
				}
			}
		}
	}
}

gondor.0508 = { # Arwen is pregnant!
	content_source = realms_dlc
	type = character_event
	title = gondor.0508.t
	desc = gondor.0508.desc
	theme = family
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = root.primary_spouse
		animation = love
	}
	
	cooldown = { years = 10 }
	
	trigger = {
		has_character_flag = is_aragorn
		any_spouse = { has_character_flag = is_arwen }
	}

	option = { 
		name = gondor.0508.a 
		character:linefinwe30 = {
			add_trait = pregnant 
		}
		trigger_event = {
			id = gondor.0509 
			days = 270
		}
		character:linefinwe30 = {
			trigger_event = {
				id = gondor.0509 
				days = 270
			}
		}
	}
}

gondor.0509 = { # First Child of Arwen and Aragorn - Eldarion
	content_source = realms_dlc
	type = character_event
	title = gondor.0509.t
	desc = gondor.0509.desc
	theme = family
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = root.primary_spouse
		animation = admiration
	}
	
	trigger = {
		character:linefinwe30 = { is_alive = yes }
		OR = {
			has_character_flag = is_aragorn
			AND = {
				character:lineisildur42 = { is_alive = no }
				has_character_flag = is_arwen
			}
		}
	}
	
	option = { 
		name = gondor.0509.a # His name will be Eldarion!
		create_character = {
			dynasty_house = root.house
			name = "Eldarion"
			faith = root.faith
			culture = root.culture				
			gender_female_chance = 0
			age = 0	
			mother = character:linefinwe30
			father = character:lineisildur42
			employer = character:lineisildur42
			trait = blood_of_numenor_3
			
			save_scope_as = eldarion
			after_creation = {
				add_character_flag = is_eldarion
				copy_inheritable_appearance_from = character:eldariondna 
			}
		}
		character:linefinwe30 = {
			remove_trait = pregnant 
		}
		trigger_event = {
			id = gondor.0510 
			days = 548
		}
	}
}

gondor.0510 = { # Arwen is pregnant again!
	content_source = realms_dlc
	type = character_event
	title = gondor.0510.t
	desc = gondor.0510.desc
	theme = pregnancy
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = root.primary_spouse
		animation = love
	}
	
	trigger = {
		has_character_flag = is_aragorn
		any_spouse = { has_character_flag = is_arwen }
	}
	
	option = { 
		name = gondor.0510.a 
		character:linefinwe30 = {
			add_trait = pregnant 
		}
		trigger_event = {
			id = gondor.0511
			days = 270
		}
		character:linefinwe30 = {
			trigger_event = {
				id = gondor.0511 
				days = 270
			}
		}
	}
}

gondor.0511 = { # Second Child of Arwen and Aragorn - Lúthien
	content_source = realms_dlc
	type = character_event
	title = gondor.0511.t
	desc = gondor.0511.desc
	theme = pregnancy
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = root.primary_spouse
		animation = admiration
	}
	
	trigger = {
		character:linefinwe30 = { is_alive = yes }
		OR = {
			has_character_flag = is_aragorn
			AND = {
				character:lineisildur42 = { is_alive = no }
				has_character_flag = is_arwen
			}
		}
	}
	
	option = { 
		name = gondor.0511.a # Her name will be Lúthien!
		create_character = {
			dynasty_house = root.house
			name = "Lúthien"
			faith = root.faith
			culture = root.culture		
			gender_female_chance = 100
			age = 0	
			mother = character:linefinwe30
			father = character:lineisildur42
			employer = character:lineisildur42
			trait = blood_of_numenor_3
			
			save_scope_as = luthien
			after_creation = {
				add_character_flag = is_luthien
				copy_inheritable_appearance_from = character:luthiendna 
			}
		}
		character:linefinwe30 = {
			remove_trait = pregnant 
		}
		trigger_event = {
			id = gondor.0512 
			days = 764
		}
	}
}

gondor.0512 = { # Arwen is pregnant for the third time!
	content_source = realms_dlc
	type = character_event
	title = gondor.0512.t
	desc = gondor.0512.desc
	theme = pregnancy
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = root.primary_spouse
		animation = love
	}
	
	trigger = {
		has_character_flag = is_aragorn
		any_spouse = { has_character_flag = is_arwen }
	}
	
	option = { 
		name = gondor.0512.a 
		character:linefinwe30 = {
			add_trait = pregnant 
		}
		trigger_event = {
			id = gondor.0513
			days = 270
		}
		character:linefinwe30 = {
			trigger_event = {
				id = gondor.0511 
				days = 270
			}
		}
	}
}

gondor.0513 = { # Third Child of Arwen and Aragorn - Indis
	content_source = realms_dlc
	type = character_event
	title = gondor.0513.t
	desc = gondor.0513.desc
	theme = pregnancy
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = root.primary_spouse
		animation = admiration
	}
	
	trigger = {
		character:linefinwe30 = { is_alive = yes }
		OR = {
			has_character_flag = is_aragorn
			AND = {
				character:lineisildur42 = { is_alive = no }
				has_character_flag = is_arwen
			}
		}
	}
	
	option = { 
		name = gondor.0513.a # Her name will be Indis!
		create_character = {
			dynasty_house = root.house
			name = "Indis"
			faith = root.faith
			culture = root.culture			
			gender_female_chance = 100
			age = 0	
			mother = character:linefinwe30
			father = character:lineisildur42
			employer = character:lineisildur42
			trait = blood_of_numenor_3
			
			save_scope_as = indis
			after_creation = {
				add_character_flag = is_indis
				copy_inheritable_appearance_from = character:indisdna 
			}		
		}
		character:linefinwe30 = {
			remove_trait = pregnant 
		}
		trigger_event = {
			id = gondor.0514 
			days = 1112
		}
	}
}

gondor.0514 = { # Arwen is pregnant for the fourth time!
	content_source = realms_dlc
	type = character_event
	title = gondor.0514.t
	desc = gondor.0514.desc
	theme = pregnancy
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = root.primary_spouse
		animation = love
	}
	
	trigger = {
		has_character_flag = is_aragorn
		any_spouse = { has_character_flag = is_arwen }
	}
	
	option = { 
		name = gondor.0514.a 
		character:linefinwe30 = {
			add_trait = pregnant 
		}
		trigger_event = {
			id = gondor.0515
			days = 270
		}
		character:linefinwe30 = {
			trigger_event = {
				id = gondor.0515
				days = 270
			}
		}
	}
}

gondor.0515 = { # Fourth Child of Arwen and Aragorn - Altáriel
	content_source = realms_dlc
	type = character_event
	title = gondor.0515.t
	desc = gondor.0515.desc
	theme = pregnancy
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = root.primary_spouse
		animation = admiration
	}
	
	trigger = {
		character:linefinwe30 = { is_alive = yes }
		OR = {
			has_character_flag = is_aragorn
			AND = {
				character:lineisildur42 = { is_alive = no }
				has_character_flag = is_arwen
			}
		}
	}
	
	option = { 
		name = gondor.0515.a # Her name will be Altáriel!
		create_character = {
			dynasty_house = root.house
			name = "Altáriel"
			faith = root.faith
			culture = root.culture			
			gender_female_chance = 100
			age = 0	
			mother = character:linefinwe30
			father = character:lineisildur42
			employer = character:lineisildur42
			trait = blood_of_numenor_3
			
			save_scope_as = altariel
			after_creation = {
				add_character_flag = is_altariel
				copy_inheritable_appearance_from = character:altarieldna 
			}
		}
		character:linefinwe30 = {
			remove_trait = pregnant 
		}
	}
}

gondor.0516 = { # Denethor chooses who he will play as.
	content_source = realms_dlc
	type = character_event
	title = gondor.0516.t
	desc = gondor.0516.desc
	theme = stewardship_duty_focus
	left_portrait = {
		character = root
		animation = anger
	}
	
	option = { 
		name = gondor.0516.a # I will remain as Denethor
		get_title = title:k_gondor_steward
		title:k_gondor_steward = { 
			copy_title_history = title:e_gondor_steward
			}
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		title:k_gondor_steward.holder = {
			change_liege = {
				liege = character:lineisildur42
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change
		ai_chance = {
			base = 100
		}
	}
	option = { 
		name = gondor.0516.b # A new age of men. I will become Aragorn!
		get_title = title:k_gondor_steward
		title:k_gondor_steward = { 
			copy_title_history = title:e_gondor_steward
			}
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		title:k_gondor_steward.holder = {
			change_liege = {
				liege = character:lineisildur42
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change
		set_player_character = character:lineisildur42
		ai_chance = {
			base = 0
		}
	}
}

gondor.0518 = { #Aragorn Death handling
	content_source = realms_dlc
	type = character_event
	hidden = yes
	
	trigger = {
		this = character:lineisildur42
	}
	
	immediate = {
		save_scope_as = dead_aragorn
		every_spouse = {
			limit = { 
				this = character:linefinwe30
				character:linefinwe30 = { is_alive = yes }
			}
			add_trait = depressed_1
			add_trait = cannot_marry
			if = {
				limit = {
					any_child = {
						age < 16
					}
				}
				trigger_event = {
					id = gondor.0519
					years = { 10 15 }
				}
			}
			else = {
				trigger_event = {
					id = gondor.0519
					years = 1
				}
			}
		}
	}
}

gondor.0519 = { #Arwen dies one year after Aragorn if spouse
	content_source = realms_dlc
	type = character_event
	hidden = yes
	
	trigger = {
		is_alive = yes
	}
	
	immediate = {
		death = { death_reason = death_faded_grief }
	}
}

gondor.0520 = { # Aragorn decides whether or not to claim Arnor
	content_source = realms_dlc
	type = character_event
	title = gondor.0520.t
	desc = gondor.0520.desc
	theme = stewardship_duty_focus
	override_background = {
		reference = throne_room
	}
	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = character:linehalbarad9
		animation = personality_honorable
	}

	immediate = {
		character:lineisildur42 = { save_scope_as = aragorn }
		character:linehalbarad9 = { save_scope_as = halbarad }
	}

	option = { 
		name = gondor.0520.a # Aragorn decides to become King of Arnor
		custom_tooltip = gondor.0520.a.tt1
		title:e_arnor = {
			every_de_jure_county_holder = {
            	limit = {
					is_independent_ruler = yes
					NOT = { THIS = character:lineisildur42 }
					capital_county = { # If capital is in Arnor
						title_province = { geographical_region = middleearth_west_arnor }
					}
				}
				trigger_event = {
					id = gondor.0521
					days = 5
				}
			}
		}
		add_prestige = major_prestige_gain
		add_piety = major_piety_gain

		root = { # Give Aragorn his banners!
            save_scope_as = banner_ruler
            # House Banner
            set_variable = banner_from_house
            set_variable = startup_banner
            create_artifact_wall_banner_effect = {
                OWNER = scope:banner_ruler
                CREATOR = scope:banner_ruler
                TARGET = scope:banner_ruler.house
            }
            # Dynasty Banner
            if = { 
                limit = {
                    OR = {
                        this = dynasty.dynast # Dynasty Head
                        any_parent = { # Parent landless Dynasty Head
                            employer = prev
                            dynasty = prev.dynasty
                            this = dynasty.dynast
                        }
                    }
                }
                set_variable = banner_from_dynasty
                set_variable = startup_banner
                create_artifact_wall_banner_effect = {
                    OWNER = scope:banner_ruler
                    CREATOR = scope:banner_ruler
                    TARGET = scope:banner_ruler.dynasty
                }
            }
		}
		set_culture = culture:arnorian
		trigger_event = {
			id = lotr_artifact.0005
			days = 3
		}
		if = {
			limit = { 
				any_spouse = { 
					is_landed = no 
					OR = {
						culture = culture:dunedain_ranger
						culture = culture:gondorian
					}
				} 
			}
			every_spouse = {
				limit = {
					is_landed = no
					OR = {
						culture = culture:dunedain_ranger
						culture = culture:gondorian
					}
				}
				if = {
					limit = { is_ai = yes }
					set_culture = culture:arnorian
				}
			}
		}
		if = {
			limit = {
				any_close_family_member = {
					is_landed = no
					NOT = { is_spouse_of = root }
					OR = {
						culture = culture:dunedain_ranger
						culture = culture:gondorian
					}
				}
			}
			every_close_family_member = {
				limit = {
					is_landed = no
					NOT = { is_spouse_of = root }
					OR = {
						culture = culture:dunedain_ranger
						culture = culture:gondorian
					}
				}
				custom = all_unlanded_family_members
				if = {
					limit = { is_ai = yes }
					set_culture = culture:arnorian
				}
			}
		}
		if = {
			limit = {
				any_child = {
					OR = {
						culture = culture:dunedain_ranger
						culture = culture:gondorian
					}
				}
			}
			every_child = {
				limit = {
					NOT = { 
					OR = {
						culture = culture:dunedain_ranger
						culture = culture:gondorian
					}
					}
				}
				custom = all_children_custom
				if = {
					limit = { is_ai = yes }
					set_culture = culture:arnorian
				}
			}
		}

		#Convert appropriate vassals, and their family
		if = {
			limit = {
				any_vassal_or_below = {
					OR = {
						culture = culture:dunedain_ranger
						culture = culture:gondorian
					}
				}
			}
			every_vassal_or_below = {
				custom = embrace_arnorian_culture_vassals_custom
				limit = {
					OR = {
						culture = culture:dunedain_ranger
						culture = culture:gondorian
					}
				}
				if = {
					limit = { is_ai = yes }
					set_culture = culture:arnorian
				}
				hidden_effect = {
					if = {
						limit = { 
							any_spouse = { 
								is_landed = no
								OR = {
									culture = culture:dunedain_ranger
									culture = culture:gondorian
								}
							}
						}
						every_spouse = {
							limit = {
								is_landed = no
								OR = {
									culture = culture:dunedain_ranger
									culture = culture:gondorian
								}
							}
							if = {
								limit = { is_ai = yes }
								set_culture = culture:arnorian
							}
						}
					}
					if = {
						limit = {
							any_close_family_member = {
								is_landed = no
								NOT = { is_spouse_of = prev }
								OR = {
									culture = culture:dunedain_ranger
									culture = culture:gondorian
								}
							}
						}
						every_close_family_member = {
							limit = {
								is_landed = no
								NOT = { is_spouse_of = prev }
								OR = {
									culture = culture:dunedain_ranger
									culture = culture:gondorian
								}
							}
							custom = all_unlanded_family_members
							if = {
								limit = { is_ai = yes }
								set_culture = culture:arnorian
							}
						}
					}
					if = {
						limit = {
							any_child = {
								OR = {
									culture = culture:dunedain_ranger
									culture = culture:gondorian
								}
							}
						}
						every_child = {
							limit = {
								OR = {
									culture = culture:dunedain_ranger
									culture = culture:gondorian
								}
							}
							custom = all_children_custom
							if = {
								limit = { is_ai = yes }
								set_culture = culture:arnorian
							}
						}
					}
					if = {
						limit = {
							any_vassal_or_below = {
								OR = {
									culture = culture:dunedain_ranger
									culture = culture:gondorian
								}
							}
						}
						every_vassal_or_below = {
							custom = embrace_arnorian_culture_vassals_custom
							limit = {
								OR = {
									culture = culture:dunedain_ranger
									culture = culture:gondorian
								}
							}
							if = {
								limit = { is_ai = yes }
								set_culture = culture:arnorian
							}
							hidden_effect = {
								if = {
									limit = { 
										any_spouse = { 
											is_landed = no 
											OR = {
												culture = culture:dunedain_ranger
												culture = culture:gondorian
											}
										} 
									}
									every_spouse = {
										limit = {
											is_landed = no
											OR = {
												culture = culture:dunedain_ranger
												culture = culture:gondorian
											}
										}
										if = {
											limit = { is_ai = yes }
											set_culture = culture:arnorian
										}
									}
								}
								if = {
									limit = {
										any_close_family_member = {
											is_landed = no
											NOT = { is_spouse_of = prev }
											OR = {
												culture = culture:dunedain_ranger
												culture = culture:gondorian
											}
										}
									}
									every_close_family_member = {
										limit = {
											is_landed = no
											NOT = { is_spouse_of = prev }
											OR = {
												culture = culture:dunedain_ranger
												culture = culture:gondorian
											}
										}
										custom = all_unlanded_family_members
										if = {
											limit = { is_ai = yes }
											set_culture = culture:arnorian
										}
									}
								}
								if = {
									limit = {
										any_child = {
											OR = {
												culture = culture:dunedain_ranger
												culture = culture:gondorian
											}
										}
									}
									every_child = {
										limit = {
											OR = {
												culture = culture:dunedain_ranger
												culture = culture:gondorian
											}
										}
										custom = all_children_custom
										if = {
											limit = { is_ai = yes }
											set_culture = culture:arnorian
										}
									}
								}
							}
						}
					}
				}
			}
		}

		#Flip Counties
		every_county = {
			custom = embrace_arnorian_culture_counties_custom
			limit = {
				OR = {
					holder = root
					holder.top_liege = root
				}
				culture = { has_cultural_pillar = heritage_dunedain }
			}
			random = {
				chance = 100
				set_county_culture = culture:arnorian
			}
		}

		create_title_and_vassal_change = {
			type = returned
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:e_arnor = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}

		hidden_effect = {
			if = {
				limit = {
					OR = {
						title:c_tarmabar.holder = title:c_annuminas.holder
						title:c_tarmabar.holder = title:k_wastelands.holder
						title:c_tarmabar.holder = title:d_northern_dunedain.holder
					}
				}
				title:c_tarmabar = {
					add_to_list = transfer_list
				}	
			}
			if = {
				limit = {
					OR = {
						title:c_rhovanduin.holder = title:c_annuminas.holder
						title:c_rhovanduin.holder = title:k_wastelands.holder
						title:c_rhovanduin.holder = title:d_northern_dunedain.holder
					}
				}
				title:c_rhovanduin = {
					add_to_list = transfer_list
				}	
			}

			if = {
				limit = {
					OR = {
						title:c_cargilin.holder = title:c_annuminas.holder
						title:c_cargilin.holder = title:k_wastelands.holder
						title:c_cargilin.holder = title:d_northern_dunedain.holder
					}
				}
				title:c_cargilin = {
					add_to_list = transfer_list
				}	
			}
			if = {
				limit = {
					OR = {
						title:c_laegsant.holder = title:c_annuminas.holder
						title:c_laegsant.holder = title:k_wastelands.holder
						title:c_laegsant.holder = title:d_northern_dunedain.holder
					}
				}
				title:c_laegsant = {
					add_to_list = transfer_list
				}
			}			
			if = {
				limit = {
					OR = {
						title:c_nothrimos.holder = title:c_annuminas.holder
						title:c_nothrimos.holder = title:k_wastelands.holder
						title:c_nothrimos.holder = title:d_northern_dunedain.holder
					}
				}
				title:c_nothrimos = {
					add_to_list = transfer_list
				}
			}
			if = {
				limit = {
					OR = {
						title:c_annuminas.holder.top_liege = title:d_northern_dunedain.holder
						title:c_annuminas.holder = title:d_northern_dunedain.holder
					}
				}
				every_in_list = {
					list = transfer_list
					if = {
						limit = {
							NOT = {
								holder = title:k_wastelands.holder
							}
							faith_is_good = yes
						}
						title:c_annuminas = {
							change_development_level = 2
						}
					}
					resolve_title_and_vassal_change = scope:change
					every_county_province = {
						limit = {
							OR = {
								has_holding_type = wastelands_holding
								has_holding_type = settlement_holding
							}			
						}
						ai_colonisation_effect = { WASTELANDS = this }
						set_holding_type = castle_holding
					}
					
					change_title_holder = {
						holder = title:d_northern_dunedain.holder
						change = scope:change
						take_baronies = yes
					}
					set_county_faith = root.faith
					set_county_culture = culture:arnorian
					random_list = {
						33 = {
							change_development_level = 3
						}
						33 = {
							change_development_level = 4
						}
						33 = {
							change_development_level = 5
						}
					}
					#generate_coa = yes
				}
				title:c_annuminas.holder = {
					trigger_event = {
						id = gondor.0522
						days = 20
					}
				}
			}
		}

		resolve_title_and_vassal_change = scope:change
		hidden_effect = {
			title:e_arnor.holder = {
				every_held_title = {
					add_title_law = male_preference_law # To stop the house of Telcontar from losing the throne immediately if Eldarion dies
				}
			}
		}
		destroy_title = title:d_northern_dunedain
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { 
		name = gondor.0520.b # Aragorn decides to remain Chief of the Dunedain
		custom_tooltip = gondor.0520.b.tt1
		add_trait = content
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
			
			modifier = { # Steward under Sauron's Ifluence
				faith = faith:lidless_eye
				add = 500
			}
		}
	}
}
gondor.0521 = { # Vassalization offers are sent to the people of Arnor aragorn stays north edition
	type = letter_event
	sender = scope:sender
#	content_source = realms_dlc
	opening = {
		desc = gondor.0521.opening
	}
	desc = gondor.0521.desc
#	theme = diplomacy_majesty_focus
#	left_portrait = {
#		character = root
#		animation = personality_honorable
#	}
#	right_portrait = {
#		character = character:lineisildur42
#		animation = personality_honorable
#	}
	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = gondor.0521
			days = 1
		}
	}

	immediate = {
		title:e_arnor.holder = {
			save_scope_as = sender
		}
		ROOT = {
			save_scope_as = recipient
		}
	}

	option = { 
		name = gondor.0521.a # I accept vassalization to Aragorn. (buffed for aragorn because he stayed north)
#		trigger_event = {
#			id = gondor.0506 
#			days = 50
#		}

		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
			add_claim_on_loss = no
		}
		change_liege = {
			liege = scope:sender
			change = scope:change
		}
		resolve_title_and_vassal_change = scope:change

		ai_chance = {
			base = 0

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				faith_is_good = yes
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				is_dwarf = yes
				add = -50
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				has_culture = culture:druedain
				add = -20
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				faith_is_neutral = yes
				add = 80
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				faith_is_evil = yes
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				faith_is_good = yes
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				is_dwarf = yes
				add = -10
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				has_culture = culture:druedain
				add = -10
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				faith_is_neutral = yes
				add = 60
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				faith_is_evil = yes
				add = 25
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
			opinion_modifier = {
				opinion_target = scope:sender
				multiplier = 1
			}
			modifier = {
				add = {
					value = root.ai_boldness
					multiply = -1
				}
			}
			modifier = {
				add = {
					value = root.ai_rationality
					multiply = 1
				}
			}
		}
	}

	option = { 
		name = gondor.0521.b # I will remain independent
#		trigger_event = {
#			id = gondor.0506 
#			days = 50
#		}
		if = {
			limit = { is_ai = yes }
			lotr_get_aggressive = yes
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				faith_is_good = yes
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				faith_is_neutral = yes
				add = 10
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				faith_is_evil = yes
				add = 80
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				faith_is_good = yes
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				faith_is_neutral = yes
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				faith_is_evil = yes
				add = 60
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

gondor.0522 = { # holder of annuminas decides whether or not to cede the land to aragorn
	content_source = realms_dlc
	type = character_event
	title = gondor.0522.t
	desc = gondor.0522.desc
	theme = vassal
	override_background = {
		reference = minas_tirith
	}
	left_portrait = {
		character = root
		animation = stress
	}
	option = { 
		name = gondor.0522.a # I will give up Annuminas
		create_title_and_vassal_change = {
			type = returned
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:c_annuminas = {
			change_title_holder = {
				holder = title:e_arnor.holder
				change = scope:change
			}
		}
		every_in_list = {
			list = transfer_list
			change_title_holder = {
				holder = root
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change
		ai_chance = {
			base = 0

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { 
		name = gondor.0522.b # Annuminas is mine now and forever
		if = {
			limit = { is_ai = yes }
			lotr_get_aggressive = yes
		}
		title:e_arnor.holder = {
			add_pressed_claim = title:c_annuminas
		}
		ai_chance = {
			base = 0

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

### The King Strife alt-lore events

gondor.0550 = { # The King Denied - Dol Amroth hosts a meeting of lords
	content_source = realms_dlc
	type = character_event
	title = gondor.0550.t
	desc = gondor.0550.desc
	theme = vassal
	override_background = {
		reference = dol_amroth
	}
	left_portrait = {
		character = root
		animation = disbelief
	}
	
	option = { 
		name = gondor.0550.a # I must attend this meeting!
		trigger_event = {
			id = gondor.0553
			days = 30
		}
	}
}

gondor.0551 = { # The King Denied - the lords plan to meet
	content_source = realms_dlc
	type = character_event
	title = gondor.0551.t
	desc = gondor.0551.desc
	theme = vassal
	override_background = {
		reference = dol_amroth
	}
	left_portrait = {
		character = root
		animation = disbelief
	}
	
	option = { 
		name = gondor.0551.a # I must attend this meeting!
		trigger_event = {
			id = gondor.0554
			days = 30
		}
	}
	option = { 
		name = gondor.0551.b # I've got better things to do.
	}
}
gondor.0552 = { # Murmurings in Minas Tirith
	content_source = realms_dlc
	type = character_event
	title = gondor.0552.t
	desc = gondor.0552.desc
	theme = vassal
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = anger
	}
	
	option = { 
		name = gondor.0552.a # Let them talk!
	}
}

gondor.0553 = { # The Accord of Dol Amroth - Dol Amroth perspective
	content_source = realms_dlc
	type = character_event
	title = gondor.0553.t
	desc = gondor.0553.desc
	theme = vassal
	override_background = {
		reference = dol_amroth
	}
	right_portrait = {
		character = root
		animation = anger
	}
	
	option = { 
		name = gondor.0553.a # I shall sign!
		title:e_gondor_steward.holder = { # Denethor reacts
			trigger_event = {
				id = gondor.0555
				days = 30
			}
		}
	}
}

gondor.0554 = { # The Accord of Dol Amroth - attendees' perspective
	content_source = realms_dlc
	type = character_event
	title = gondor.0554.t
	desc = gondor.0554.desc
	theme = vassal
	override_background = {
		reference = dol_amroth
	}
	left_portrait = {
		character = root
		animation = personality_cynical
	}
	
	option = { 
		name = gondor.0554.a # I shall sign!
	}
	option = { 
		name = gondor.0554.b # This is madness!
	}
}

gondor.0555 = { # An ultimatum to the steward
	content_source = realms_dlc
	type = character_event
	title = gondor.0555.t
	desc = gondor.0555.desc
	theme = vassal
	override_background = {
		reference = minas_tirith
	}
	left_portrait = {
		character = root
		animation = stress
	}
	
	option = { 
		name = gondor.0555.a # We have no choice. Gondor shall have its king
		every_vassal = { # Notify the lords!
			trigger_event = {
				id = gondor.0556
			}		
		}
		character:lineisildur42 = { # Aragorn is allowed into Minas Tirith
			trigger_event = {
				id = gondor.0502
				days = { 30 60 }
			}
		}
		ai_chance = {
			base = 20 # LotR: The AI has already made its choice - this is a last check for the player, but give a small chance for variety
		}
	}
	option = { 
		name = gondor.0555.b # I shall not be blackmailed... to war!
		# Start war
		title:k_belfalas.holder = { # Notify the Prince of Dol Amroth
			start_war = { 
				casus_belli = kingstrife_cb
				target = root
			}
			trigger_event = {
				id = gondor.0557
			}
		}
		every_vassal = { # Let all other lords pick their side
			limit = {
				NOT = { has_title = title:k_belfalas }
			}
			trigger_event = {
				id = gondor.0558
				days = 1
			}		
		}
		title:e_mordor.holder = { # Notify Sauron after some time
			trigger_event = {
				id = gondor.0559
				days = { 30 180 }
			}
		}
		every_living_character = {
			limit = {
				NOT = { root = this }
			}
			trigger_event = { 
				id = gondor.0560
				days = 14
			}
		}
		ai_chance = {
			base = 80 # LotR: The AI has already made its choice - this is a last check for the player, but give a small chance for variety
		}
	}
}

gondor.0556 = { # The King Strife avoided - ultimatum accepted
	content_source = realms_dlc
	type = character_event
	title = gondor.0556.t
	desc = gondor.0556.desc
	theme = vassal
	override_background = {
		reference = minas_tirith
	}
	left_portrait = {
		character = root
		animation = happiness
	}
	
	option = { 
		name = gondor.0556.a # That was close...
	}
}

gondor.0557 = { # The King Strife - Dol Amroth goes to war - ultimatum refused
	content_source = realms_dlc
	type = character_event
	title = gondor.0557.t
	desc = gondor.0557.desc
	theme = war
	override_background = {
		reference = dol_amroth
	}
	left_portrait = {
		character = root
		animation = anger
	}
	
	option = { 
		name = gondor.0557.a # So it is to be war...
	}
}

gondor.0558 = { # The King Strife - Time to pick a side - ultimatum refused
	content_source = realms_dlc
	type = character_event
	title = gondor.0558.t
	desc = gondor.0558.desc
	theme = war
	left_portrait = {
		character = root
		animation = personality_cynical
	}
	
	option = { 
		name = gondor.0558.a # The Royalists
		title:k_belfalas.holder = {
			every_character_war = {
				limit = {
					primary_defender = title:e_gondor_steward.holder
				}
				add_attacker = root
			}
		}
		ai_chance = {
			base = 60
			modifier = { # Scripted Royalists
				OR = {
					root.primary_title.kingdom = title:k_lamedon
					root.primary_title.kingdom = title:k_anfalas
					root.primary_title.kingdom = title:k_belfalas
					root.primary_title.kingdom = title:k_lebennin
				}
				add = 40
			}
			modifier = { # Expected Stewardists
				OR = {
					root.primary_title.kingdom = title:k_anorien
					root.primary_title.kingdom = title:k_ithilien
					has_title = title:d_lossarnach
				}
				add = -60
			}
			modifier = { # Expected Independants
				NOT = { culture = { has_cultural_pillar = heritage_dunedain } }
				NOT = { root.primary_title.empire = title:e_gondor_steward }
				add = -60
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 800
			}
		}
	}
	option = { 
		name = gondor.0558.b # The Stewardists
		title:k_belfalas.holder = {
			every_character_war = {
				limit = {
					primary_defender = title:e_gondor_steward.holder
				}
				add_defender = root
			}
		}
		ai_chance = {
			base = 30
			modifier = { # Expected Stewardists
				OR = {
					root.primary_title.kingdom = title:k_anorien
					root.primary_title.kingdom = title:k_ithilien
					has_title = title:d_lossarnach
				}
				add = 70
			}
			modifier = { # Expected Royalists
				OR = {
					root.primary_title.kingdom = title:k_lamedon
					root.primary_title.kingdom = title:k_anfalas
					root.primary_title.kingdom = title:k_belfalas
					root.primary_title.kingdom = title:k_lebennin
				}
				add = -30
			}
			modifier = { # Expected Independants
				NOT = { culture = { has_cultural_pillar = heritage_dunedain } }
				NOT = { root.primary_title.empire = title:e_gondor_steward }
				add = -30
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 800
			}
		}
	}
	option = { 
		name = gondor.0558.c # Independence
		trigger = {
			NOT = { culture = { has_cultural_pillar = heritage_dunedain } }
			NOT = { primary_title.empire = title:e_gondor_steward }
		}
		every_held_title = {
			save_scope_as = target_title
			title:e_gondor_steward.holder = {
				add_pressed_claim = scope:target_title
			}
		}
		create_title_and_vassal_change = {
			type = independency
			save_scope_as = independence_change
			add_claim_on_loss = no
		}
		becomes_independent = {
			change = scope:independence_change
		}
		resolve_title_and_vassal_change = scope:independence_change
		ai_chance = {
			base = 100
		}
	}
}

gondor.0559 = { # Discord in Gondor - an opportunity for Mordor?
	content_source = realms_dlc
	type = character_event
	title = gondor.0559.t
	desc = gondor.0559.desc
	theme = war
	override_background = {
		reference = barad_dur
	}
	left_portrait = {
		character = root
		animation = schadenfreude
	}
	
	option = { 
		name = gondor.0559.a # To war for Ithilien!
		trigger = {
			NOT = { completely_controls = title:k_ithilien }
		}
		start_war = {
			casus_belli = invasion_war
			target = title:e_gondor_steward.holder
			target_title = title:k_ithilien
		}
		ai_chance = {
			base = 75
		}
	}
	option = { 
		name = gondor.0559.b # To war for Anorien!
		trigger = {
			completely_controls = title:k_ithilien
			NOT = { completely_controls = title:k_anorien }
		}
		start_war = {
			casus_belli = invasion_war	
			target = title:e_gondor_steward.holder
			target_title = title:k_anorien
		}
		every_living_character = {
			limit = {
				NOT = { root = this }
			}
			trigger_event = { 
				id = gondor.0561
				days = 14
			}
		}
		ai_chance = {
			base = 75
		}
	}	
	option = { 
		name = gondor.0559.c # Bide our time...
		ai_chance = {
			base = 25
		}
	}
}

gondor.0560 = { # Notify all of King Strife
	content_source = realms_dlc
	type = character_event
	title = gondor.0560.t
	desc = gondor.0560.desc
	theme = war
	left_portrait = {
		character = title:k_belfalas.holder
		animation = anger
	}
	right_portrait = {
		character = title:e_gondor_steward.holder
		animation = personality_bold
	}
	
	option = { 
		name = gondor.0560.a
	}
}

gondor.0561 = { # Notify all of Mordor intervention
	content_source = realms_dlc
	type = character_event
	title = gondor.0561.t
	desc = gondor.0561.desc
	theme = war
	left_portrait = {
		character = title:e_mordor.holder
		animation = schadenfreude
	}
	right_portrait = {
		character = title:e_gondor_steward.holder
		animation = stress
	}
	
	option = { 
		name = gondor.0561.a # To war for Ithilien!
	}
}

gondor.0562 = { # Royalist victory - Aragorn is crowned
	content_source = realms_dlc
	type = character_event
	title = gondor.0562.t
	desc = gondor.0562.desc
	theme = crown
	override_background = {     
    	reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = personality_honorable
	}
	
	option = { 
		name = gondor.0562.a # I will protect my people
		set_culture = culture:gondorian
		create_title_and_vassal_change = {
			type = faction_demand
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:e_gondor = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		title:d_minas_tirith = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		title:c_minas_tirith = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		scope:defender = {
			change_liege = {
				liege = root
				change = scope:change
			}
		}
		title:e_gondor_steward = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		title:e_arnor = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		add_character_modifier = {	# To give him a fighting chance after loosing all the MAA - for some time, the gondorians fighting spirit is renewed
			modifier = return_of_the_king_modifier
			years = 20
		}
		add_character_modifier = { #To give him time to get married in peace
			modifier = fp1_reprieve_from_sa_modifier
			years = 5
		}
		create_artifact_crown_of_gondor_effect = { OWNER = this }
		root = { # Give Aragorn his banners!
            save_scope_as = banner_ruler
            # House Banner
            set_variable = banner_from_house
            set_variable = startup_banner
            create_artifact_wall_banner_effect = {
                OWNER = scope:banner_ruler
                CREATOR = scope:banner_ruler
                TARGET = scope:banner_ruler.house
            }
            # Dynasty Banner
            if = { 
                limit = {
                    OR = {
                        this = dynasty.dynast # Dynasty Head
                        any_parent = { # Parent landless Dynasty Head
                            employer = prev
                            dynasty = prev.dynasty
                            this = dynasty.dynast
                        }
                    }
                }
                set_variable = banner_from_dynasty
                set_variable = startup_banner
                create_artifact_wall_banner_effect = {
                    OWNER = scope:banner_ruler
                    CREATOR = scope:banner_ruler
                    TARGET = scope:banner_ruler.dynasty
                }
            }
		}
		title:e_gondor_steward.holder = { # Aragorn inherits the Palantir of Minas Tirith from the steward
			every_character_artifact = {
				limit = {
					OR = {
						has_variable = palantir_minasanor
						has_variable = black_chair_stewards
						has_variable = throne_of_gondor
						has_variable = stewards_rod
					}
				}
				set_owner = {
					target = root
					history = {
						type = inherited
						recipient = root
					}
				}
			}
		}
		hidden_effect = {
			house = {
				add_house_modifier = {
					modifier = unity_house_organized_for_war_modifier
					years = 150
				}
			}
			if = {
				limit = {
					OR = {
						title:c_tarmabar.holder = title:c_annuminas.holder
						title:c_tarmabar.holder = title:k_wastelands.holder
						title:c_tarmabar.holder = title:d_northern_dunedain.holder
					}
				}
				title:c_tarmabar = {
					add_to_list = transfer_list
				}	
			}
			if = {
				limit = {
					OR = {
						title:c_rhovanduin.holder = title:c_annuminas.holder
						title:c_rhovanduin.holder = title:k_wastelands.holder
						title:c_rhovanduin.holder = title:d_northern_dunedain.holder
					}
				}
				title:c_rhovanduin = {
					add_to_list = transfer_list
				}	
			}

			if = {
				limit = {
					OR = {
						title:c_cargilin.holder = title:c_annuminas.holder
						title:c_cargilin.holder = title:k_wastelands.holder
						title:c_cargilin.holder = title:d_northern_dunedain.holder
					}
				}
				title:c_cargilin = {
					add_to_list = transfer_list
				}	
			}
			if = {
				limit = {
					OR = {
						title:c_laegsant.holder = title:c_annuminas.holder
						title:c_laegsant.holder = title:k_wastelands.holder
						title:c_laegsant.holder = title:d_northern_dunedain.holder
					}
				}
				random_list = {
					33 = {
						title:c_laegsant = {
							add_to_list = transfer_list
						}
					}
					67 = {}
				}	
			}			
			if = {
				limit = {
					OR = {
						title:c_nothrimos.holder = title:c_annuminas.holder
						title:c_nothrimos.holder = title:k_wastelands.holder
						title:c_nothrimos.holder = title:d_northern_dunedain.holder
					}
				}
				random_list = {
					33 = {
						title:c_nothrimos = {
							add_to_list = transfer_list
						}
					}
					67 = {}
				}
			}
			if = {
				limit = {
					OR = {
						title:c_annuminas.holder.top_liege = title:d_northern_dunedain.holder
						title:c_annuminas.holder = title:d_northern_dunedain.holder
					}
				}
				every_in_list = {
					list = transfer_list
					if = {
						limit = {
							NOT = {
								holder = title:k_wastelands.holder
							}
							faith_is_good = yes
						}
						title:c_annuminas = {
							change_development_level = 1
						}
					}
					resolve_title_and_vassal_change = scope:change
					every_county_province = {
						limit = {
							OR = {
								has_holding_type = wastelands_holding
								has_holding_type = settlement_holding
							}			
						}
						ai_colonisation_effect = { WASTELANDS = this }
						set_holding_type = castle_holding
					}
					
					change_title_holder = {
						holder = title:d_northern_dunedain.holder
						change = scope:change
						take_baronies = yes
					}
					set_county_faith = root.faith
					set_county_culture = culture:dunedain_ranger
					random_list = {
						33 = {
							change_development_level = 2
						}
						33 = {
							change_development_level = 3
						}
						33 = {
							change_development_level = 4
						}
					}
					#generate_coa = yes
				}
				title:c_annuminas.holder = {
					trigger_event = {
						id = gondor.0522
						days = 20
					}
				}
			}
			title:e_arnor = {
				every_de_jure_county_holder = {
            		limit = {
						is_independent_ruler = yes
						NOT = { THIS = character:lineisildur42 }
						capital_county = { # If capital is in Arnor
							title_province = { geographical_region = middleearth_west_arnor }
						}
					}
					trigger_event = {
						id = gondor.0503
						days = 5
					}
				}
			}
			title:e_gondor_steward = {
				every_in_de_jure_hierarchy = {
					limit = { tier = tier_kingdom }
					set_de_jure_liege_title = title:e_gondor
				}
			}
		}
		resolve_title_and_vassal_change = scope:change
		destroy_title = title:d_northern_dunedain 
		destroy_title = title:e_gondor_steward
		trigger_event = gondor.0563
		trigger_event = {
			id = gondor.0504 
			days = 90
		}
		every_living_character = {
			limit = {
				NOT = { root = this }
			}
			trigger_event = gondor.0564
		}
		trigger_event = {
			id = gondor.0507 
			days = 20
		}
		trigger_event = {
			id = lotr_artifact.0005
			days = 3
		}
		hidden_effect = {
			IF = {
				limit = { is_ai = yes } 
				add_character_modifier = {
					modifier = siege_of_gondor
					years = 50
				}
			}
		}
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:aragorn_returned_to_gondor
		}
	}
}

gondor.0563 = { # The fate of the Stewards
	content_source = realms_dlc
	type = character_event
	title = gondor.0563.t
	desc = gondor.0563.desc
	theme = prison
	left_portrait = {
		character = root
		animation = personality_vengeful
	}
	right_portrait = {
		character = scope:defender
		animation = prisonhouse
	}
	
	option = { 
		name = gondor.0563.a # Execute
		scope:defender.primary_heir = {
			death = {
				killer = root
				death_reason = death_execution
			}
		}
		scope:defender = {
			death = {
				killer = root
				death_reason = death_execution
			}
		}
		ai_chance = {
			base = 33
		}
	}
	option = { 
		name = gondor.0563.b # Arrest
		imprison = {
			target = scope:defender
			type = house_arrest
		}
		ai_chance = {
			base = 33
		}
	}
	option = { 
		name = gondor.0563.c # Banish
		scope:defender = {
			banish = yes
		}
		ai_chance = {
			base = 33
		}
	}
}

gondor.0564 = { # Global Announcement - The Return of Aragorn
	content_source = realms_dlc
	type = character_event
	title = gondor.0564.t
	desc = gondor.0564.desc
	theme = crown
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = character:lineisildur42
		animation = personality_honorable
	}
	
	option = { 
		name = gondor.0564.a
	}
	option = { 
		name = gondor.0564.b
	}
}

gondor.0565 = { # Royalist victory - Aragorn is dead, we must find a new king
	content_source = realms_dlc
	type = character_event
	title = gondor.0565.t
	desc = gondor.0565.desc
	theme = vassal
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = worry
	}
	
	option = { 
		name = gondor.0565.a # Send a horse - surviving ruler of the Dúnedain
		trigger = {
			exists = title:d_northern_dunedain
			title:d_northern_dunedain.holder.dynasty = dynasty:dynasty_elros
		}
		trigger_event = gondor.0566
	}
	option = { 
		name = gondor.0565.b # Send a horse - no surviving ruler of the Dúnedain
		trigger = {
			OR = {
				NOT = { exists = title:d_northern_dunedain }
				NOT = { title:d_northern_dunedain.holder.dynasty = dynasty:dynasty_elros }
			}
		}
		trigger_event = gondor.0569
	}
}

gondor.0566 = { # Royalist victory - A Dúnedain King has been found! 
	content_source = realms_dlc
	type = character_event
	title = gondor.0566.t
	desc = gondor.0566.desc
	theme = vassal
	override_background = {     
      reference = minas_tirith
	}
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = title:d_northern_dunedain.holder
		animation = personality_irrational
	}
	
	option = { 
		name = gondor.0566.a # Surviving ruler of the Dúnedain
		title:d_northern_dunedain.holder = {
			trigger_event = gondor.0567
		}
		ai_chance = {
			base = 1
		}
	}
	option = { 
		name = gondor.0566.b # Surviving ruler of the Dúnedain married into Dol Amroth
		trigger = {
			title:d_northern_dunedain.holder = { is_married = no }
			character:dolamroth31 = { is_alive = yes }
		}
		character:dolamroth31 = {
			marry = title:d_northern_dunedain.holder
		}
		# title:d_northern_dunedain.holder = {
		# 	set_house = house:house_indilzar
		# }	
		create_alliance = {
			target = title:d_northern_dunedain.holder
			allied_through_owner = root
			allied_through_target = character:dolamroth31
		}
		hidden_effect = {
			character:dolamroth31 = {
				remove_trait = cannot_marry
			}
		}
		title:d_northern_dunedain.holder = {
			trigger_event = gondor.0567
		}
		ai_chance = {
			base = 500
		}
	}
}

gondor.0567 = { # Royalist victory - A new Dúnedain King is crowned
	content_source = realms_dlc
	type = character_event
	title = gondor.0567.t
	desc = gondor.0567.desc
	theme = crown
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = personality_irrational
	}
	
	option = { 
		name = gondor.0567.a # I will protect my people
		set_culture = culture:gondorian
		create_title_and_vassal_change = {
			type = faction_demand
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:e_gondor = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		title:d_minas_tirith = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		title:c_minas_tirith = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		scope:defender = {
			change_liege = {
				liege = root
				change = scope:change
			}
		}
		title:e_gondor_steward = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		title:e_gondor_steward.holder = { # The new King inherits the royal artifacts from the steward
			every_character_artifact = {
				limit = {
					OR = {
						has_variable = palantir_minasanor
						has_variable = black_chair_stewards
						has_variable = throne_of_gondor
						has_variable = stewards_rod
					}
				}
				set_owner = {
					target = root
					history = {
						type = inherited
						recipient = root
					}
				}
			}
		}
		trigger_event = {
			id = lotr_artifact.0005
			days = 3
		}
		hidden_effect = {
			title:e_gondor_steward = {
				every_in_de_jure_hierarchy = {
					limit = { tier = tier_kingdom }
					set_de_jure_liege_title = title:e_gondor
				}
			}
		}
		resolve_title_and_vassal_change = scope:change
		destroy_title = title:d_northern_dunedain 
		destroy_title = title:e_gondor_steward
		trigger_event = gondor.0563
		character:6000018 = { # Eomer marries Lothíriel.
			if = { 
				limit = { 
					is_married = no
				}
				trigger_event = {
					id = rohan.1208
				}
			}
		}
		character:linesteward40 = { # Faramir marries Eowyn.
			if = { 
				limit = { 
					is_married = no
				}
				trigger_event = {
					id = gondor.0302
				}
			}
		}
		every_living_character = {
			limit = {
				NOT = { root = this }
			}
			trigger_event = gondor.0568
		}
	}
}

gondor.0568 = { # Global Announcement - The Return of the Dúnedain
	content_source = realms_dlc
	type = character_event
	title = gondor.0568.t
	desc = gondor.0568.desc
	theme = crown
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = title:e_gondor.holder
		animation = personality_irrational
	}
	
	option = { 
		name = gondor.0568.a
	}
	option = { 
		name = gondor.0568.b
	}
}

gondor.0569 = { # Royalist victory - No heir to the throne available
	content_source = realms_dlc
	type = character_event
	title = gondor.0569.t
	desc = gondor.0569.desc
	theme = vassal
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = pain
	}
	
	option = { 
		name = gondor.0569.a # Dol Amroth shall take the helm
		add_character_flag = { 
			flag = law_change_event 
			days = 2 
		}
		trigger_event = gondor.0570
	}
}

gondor.0570 = { # Royalist victory - Dol Amroth is crowned, Gondor is changed
	content_source = realms_dlc
	type = character_event
	title = gondor.0570.t
	desc = gondor.0570.desc
	theme = crown
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = war_attacker
	}
	
	option = { 
		name = gondor.0570.a # I will protect my people
		create_title_and_vassal_change = {
			type = faction_demand
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:e_gondor = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		title:d_minas_tirith = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		title:c_minas_tirith = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		scope:defender = {
			change_liege = {
				liege = root
				change = scope:change
			}
		}
		title:e_gondor_steward = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		title:e_gondor_steward.holder = { # The new King inherits the royal artifacts from the steward
			every_character_artifact = {
				limit = {
					OR = {
						has_variable = palantir_minasanor
						has_variable = black_chair_stewards
						has_variable = throne_of_gondor
						has_variable = stewards_rod
					}
				}
				set_owner = {
					target = root
					history = {
						type = inherited
						recipient = root
					}
				}
			}
		}
		hidden_effect = {
			title:e_gondor_steward = {
				every_in_de_jure_hierarchy = {
					limit = { tier = tier_kingdom }
					set_de_jure_liege_title = title:e_gondor
				}
			}
		}
		resolve_title_and_vassal_change = scope:change
		destroy_title = title:e_gondor_steward
		title:e_gondor = {
			add_title_law = feudal_elective_succession_law
		}
		add_realm_law_skip_effects = crown_authority_0
		trigger_event = gondor.0563
		character:6000018 = { # Eomer marries Lothíriel.
			if = { 
				limit = { 
					is_married = no
				}
				trigger_event = {
					id = rohan.1208
				}
			}
		}
		character:linesteward40 = { # Faramir marries Eowyn.
			if = { 
				limit = { 
					is_married = no
				}
				trigger_event = {
					id = gondor.0302
				}
			}
		}
		every_living_character = {
			limit = {
				NOT = { root = this }
			}
			trigger_event = gondor.0571
		}
	}
}

gondor.0571 = { # Global Announcement - The Swan-Crowned King
	content_source = realms_dlc
	type = character_event
	title = gondor.0571.t
	desc = gondor.0571.desc
	theme = crown
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = title:e_gondor.holder
		animation = war_attacker
	}
	
	option = { 
		name = gondor.0571.a
	}
	option = { 
		name = gondor.0571.b
	}
	option = { 
		name = gondor.0571.c
	}
}

gondor.0572 = { # Royalist defeat
	content_source = realms_dlc
	type = character_event
	title = gondor.0572.t
	desc = gondor.0572.desc
	theme = war
	left_portrait = {
		character = root
		animation = personality_bold
	}
	
	option = { 
		name = gondor.0572.a
		trigger_event = gondor.0573
	}
}

gondor.0573 = { # Option for Stewards to become Kings
	content_source = realms_dlc
	type = character_event
	title = gondor.0573.t
	desc = gondor.0573.desc
	theme = crown
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = personality_cynical
	}
	
	option = { # Stewards no longer!
		name = gondor.0573.a
		create_artifact_crown_of_gondor_effect = { OWNER = this }
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:e_gondor = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		hidden_effect = {
			title:e_gondor_steward = {
				every_in_de_jure_hierarchy = {
					limit = { tier = tier_kingdom }
					set_de_jure_liege_title = title:e_gondor
				}
			}
		}
		resolve_title_and_vassal_change = scope:change
		destroy_title = title:e_gondor_steward
		add_realm_law_skip_effects = crown_authority_3
		add_piety_level = -1
		every_living_character = {
			limit = {
				NOT = { root = this }
			}
			trigger_event = gondor.0574
		}
		ai_chance = {
			base = 80
		}
	}
	option = { # Stewards we shall remain.
		name = gondor.0573.b
		add_piety_level = 1
		every_living_character = {
			limit = {
				NOT = { root = this }
			}
			trigger_event = gondor.0575
		}
		ai_chance = {
			base = 20
		}
	}
	
	after = {
		character:6000018 = { # Eomer marries Lothíriel.
			if = { 
				limit = { 
					is_married = no
				}
				trigger_event = {
					id = rohan.1208
				}
			}
		}
		character:linesteward40 = { # Faramir marries Eowyn.
			if = { 
				limit = { 
					is_married = no
				}
				trigger_event = {
					id = gondor.0302
				}
			}
		}
		character:lineisildur42 = { #Aragorn can marry
			remove_trait = cannot_marry
			remove_trait = celibate
		}
	}
}

gondor.0574 = { # Global Announcement - The Steward a King
	content_source = realms_dlc
	type = character_event
	title = gondor.0574.t
	desc = gondor.0574.desc
	theme = vassal
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = title:e_gondor.holder
		animation = schadenfreude
	}
	
	option = { 
		name = gondor.0574.a
	}
}

gondor.0575 = { # Global Announcement - The Steward Triumphs
	content_source = realms_dlc
	type = character_event
	title = gondor.0575.t
	desc = gondor.0575.desc
	theme = vassal
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = title:e_gondor_steward.holder
		animation = schadenfreude
	}

	option = { 
		name = gondor.0575.a
	}
}

### Events about Andrast Governors

gondor.0600 = { # Introduction to Tharagrondost
	content_source = realms_dlc
	type = character_event
	title = gondor.0600.t
	desc = gondor.0600.desc
	theme = martial
	override_background = {
		reference = throne_room_dunedain
	}
	right_portrait = {
		character = root
		animation = personality_bold
	}
	
	option = { 
		name = gondor.0600.a
		custom_tooltip = gondor.0600.tt
		add_pressed_claim = title:c_ulond
		add_pressed_claim = title:d_nan_enqui
		spawn_army = {
			uses_supply = no
			inheritable = yes
			name = men_of_tharagrondost
			men_at_arms = {
				type = gondorian_footmen 
				stacks = 1
			}
			location = capital_province
		}
	}
}

gondor.0601 = { # Introduction to Corsairs in Andrast
	content_source = realms_dlc
	type = character_event
	title = gondor.0601.t
	desc = gondor.0601.desc
	theme = martial
	override_background = {
		reference = royal_shipyard
	}
	right_portrait = {
		character = root
		animation = personality_bold
	}
	
	option = { 
		name = gondor.0601.a
		custom_tooltip = gondor.0601.tt
		add_prestige = 150
	}
}


###

gondor.1000 = {		# Harondor Restored
	content_source = realms_dlc
	type = character_event
	title = gondor.1000.t
	desc = gondor.1000.desc
	theme = stewardship_duty_focus
	left_portrait = {
		character = root
		animation = personality_bold
	}
	option = { 
		name = gondor.1000.a # The long lost province reclaimed!
	}
}
	
gondor.1001 = {		# Harondor Restored
	content_source = realms_dlc
	type = character_event
	title = gondor.1001.t
	desc = gondor.1001.desc
	theme = stewardship_duty_focus
	left_portrait = {
		character = root
		animation = personality_bold
	}
	option = { 
		name = gondor.1001.a # Pro-Gondor
		}
	option = {
		name = gondor.1001.b # Anti-Gondor
	}
}

gondor.1002 = {		# Andrast Restored
	content_source = realms_dlc
	type = character_event
	title = gondor.1002.t
	desc = gondor.1002.desc
	theme = stewardship_duty_focus
	override_background = {
		reference = wilderness_mountains
	}
	left_portrait = {
		character = root
		animation = personality_bold
	}
	option = { 
		name = gondor.1002.a # Andrast at last is secure
	}
}

gondor.1003 = {		# Umbar Restored
	content_source = realms_dlc
	type = character_event
	title = gondor.1003.t
	desc = gondor.1003.desc
	theme = stewardship_duty_focus
	override_background = {
		reference = docks_adunai
	}
	left_portrait = {
		character = root
		animation = personality_bold
	}
	option = { 
		name = gondor.1003.a # Hyarmendacil come again!
	}
}

#### GONDOR REGNAL NAMES

gondor.1100 = {
	content_source = realms_dlc
	type = character_event
	title = gondor.1100.t
	desc = gondor.1100.desc
	theme = diplomacy_majesty_focus
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = personality_bold
	}
	option = { 
		name = gondor.1100.a # I will assume a new name.
		trigger_event = {
			id = gondor.1101 
		}
		ai_chance = {
			base = 100
		}
	}
	option = {
		name = gondor.1100.b # My name is fine as is.
		ai_chance = {
			base = 0
		}
	}
}

gondor.1101 = {
	content_source = realms_dlc
	type = character_event
	title = gondor.1101.t # Names 1
	desc = gondor.1101.desc
	theme = diplomacy_majesty_focus
	left_portrait = {
		character = root
		animation = personality_bold
	}
	option = { 
		name = gondor.1101.a 
		change_first_name = "Elendil"
		custom_tooltip = gondor.1101.a.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 2
		}
	}
	option = { 
		name = gondor.1101.b 
		change_first_name = "Isildur"
		custom_tooltip = gondor.1101.b.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 3
		}
	}
	option = { 
		name = gondor.1101.c 
		change_first_name = "Anárion"
		custom_tooltip = gondor.1101.c.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 4
		}
	}
	option = { 
		name = gondor.1101.d 
		change_first_name = "Meneldil"
		custom_tooltip = gondor.1101.d.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 5
		}
	}
	option = { 
		name = gondor.1101.e # Next page.
		trigger_event = {
			id = gondor.1102
		}
		ai_chance = {
			base = 86
		}
	}
}

gondor.1102 = {
	content_source = realms_dlc
	type = character_event
	title = gondor.1102.t # Names 2
	desc = gondor.1102.desc
	theme = diplomacy_majesty_focus
	left_portrait = {
		character = root
		animation = personality_bold
	}
	option = { 
		name = gondor.1102.a 
		change_first_name = "Eärendil"
		custom_tooltip = gondor.1102.a.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 7
		}
	}
	option = { 
		name = gondor.1102.b 
		change_first_name = "Rómendacil"
		custom_tooltip = gondor.1102.b.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 7
		}
	}
	option = { 
		name = gondor.1102.c 
		change_first_name = "Turambar"
		custom_tooltip = gondor.1102.c.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 7
		}
	}
	option = { 
		name = gondor.1102.d 
		change_first_name = "Tarannon"
		custom_tooltip = gondor.1102.d.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 7
		}
	}
	option = { 
		name = gondor.1102.e # Next page.
		trigger_event = {
			id = gondor.1103
		}
		ai_chance = {
			base = 72
		}
	}
}

gondor.1103 = {
	content_source = realms_dlc
	type = character_event
	title = gondor.1103.t # Names 3
	desc = gondor.1103.desc
	theme = diplomacy_majesty_focus
	left_portrait = {
		character = root
		animation = personality_bold
	}
	option = { 
		name = gondor.1103.a 
		change_first_name = "Eärnil"
		custom_tooltip = gondor.1103.a.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 10
		}
	}
	option = { 
		name = gondor.1103.b 
		change_first_name = "Ciryandil"
		custom_tooltip = gondor.1103.b.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 10
		}
	}
	option = { 
		name = gondor.1103.c 
		change_first_name = "Hyarmendacil"
		custom_tooltip = gondor.1103.c.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 10
		}
	}
	option = { 
		name = gondor.1103.d 
		change_first_name = "Atanatar"
		custom_tooltip = gondor.1103.d.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 10
		}
	}
	option = { 
		name = gondor.1103.e # Next page.
		trigger_event = {
			id = gondor.1104
		}
		ai_chance = {
			base = 60
		}
	}
}

gondor.1104 = {
	content_source = realms_dlc
	type = character_event
	title = gondor.1104.t # Names 4
	desc = gondor.1104.desc
	theme = diplomacy_majesty_focus
	left_portrait = {
		character = root
		animation = personality_bold
	}
	option = { 
		name = gondor.1104.a 
		change_first_name = "Narmacil"
		custom_tooltip = gondor.1104.a.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 10
		}
	}
	option = { 
		name = gondor.1104.b 
		change_first_name = "Valacar"
		custom_tooltip = gondor.1104.b.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 10
		}
	}
	option = { 
		name = gondor.1104.c 
		change_first_name = "Eldacar"
		custom_tooltip = gondor.1104.c.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 10
		}
	}
	option = { 
		name = gondor.1104.d 
		change_first_name = "Aldamir"
		custom_tooltip = gondor.1104.d.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 10
		}
	}
	option = { 
		name = gondor.1104.e # Next page.
		trigger_event = {
			id = gondor.1105
		}
		ai_chance = {
			base = 60
		}
	}
}

gondor.1105 = {
	content_source = realms_dlc
	type = character_event
	title = gondor.1105.t # Names 5
	desc = gondor.1105.desc
	theme = diplomacy_majesty_focus
	left_portrait = {
		character = root
		animation = personality_bold
	}
	option = { 
		name = gondor.1105.a 
		change_first_name = "Minardil"
		custom_tooltip = gondor.1105.a.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 25
		}
	}
	option = { 
		name = gondor.1105.b 
		change_first_name = "Tarondor"
		custom_tooltip = gondor.1105.b.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 25
		}
	}
	option = { 
		name = gondor.1105.c 
		change_first_name = "Telumehtar"
		custom_tooltip = gondor.1105.c.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 25
		}
	}
	option = { 
		name = gondor.1105.d 
		change_first_name = "Eärnur"
		custom_tooltip = gondor.1105.d.tt
		trigger_event = {
			id = gondor.1106
		}
		ai_chance = {
			base = 25
		}
	}
	option = { 
		name = gondor.1105.e # None of these suit me.
		ai_chance = {
			base = 0
		}
	}
}

gondor.1106 = {
	content_source = realms_dlc
	type = character_event
	title = gondor.1106.t # A new name!
	desc = gondor.1106.desc
	theme = diplomacy_majesty_focus
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = personality_bold
	}
	option = { 
		name = gondor.1106.a 
		add_prestige = 500
		add_character_flag = has_regnal_name
	}
}

# gondor.1200 = { # Pelargir Marines finished training!
# 	title = gondor.1200.t 
# 	desc = gondor.1200.desc
# 	theme = war
# 	override_background = {     
#       reference = docks_dunedain
# 	}
# 	left_portrait = {
# 		character = root
# 		animation = personality_bold
# 	}
# 	option = { 
# 		name = gondor.1200.a
# 		spawn_army = {
# 			levies = 50
# 			men_at_arms = {
# 				type = pelargir_mariners
# 				stacks = 6
# 				}
# 			inheritable = yes
# 			uses_supply = yes
# 			name = pelargir_mariners
# 			location = capital_province
# 			}
# 	}
# }

gondor.2000 = { # The Oath of Eorl - Rohan calls for aid!
	content_source = realms_dlc
	type = character_event
	title = gondor.2000.t
	desc = gondor.2000.desc
	theme = diplomacy_majesty_focus
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = personality_rational
	}
	
	immediate = { play_music_cue = lotr_cue_beacons }
	
	option = { # We shall join you in the field
		name = gondor.2000.a 
		scope:rohan = {
			every_character_war = {
				limit = {
					is_attacker = scope:rohan
					any_war_defender = { highest_held_title_tier >= tier_kingdom }
				}
				add_attacker = root
			}
			every_character_war = {
				limit = {
					is_defender = scope:rohan
					any_war_attacker = { highest_held_title_tier >= tier_kingdom }
				}
				add_defender = root
			}
			trigger_event = {
				id = rohan.2001
				days = 1
			}
		}
		add_prestige = 250
		add_piety = 100
		ai_chance = {
			base = 50

			modifier = { # Double likelihood if not outnumbered
				lotr_armies_are_outnumbered = no
				factor = 2
			}

			ai_value_modifier = { # Honour can swing up to +/- 50, compassion and boldness up to +/- 25
				ai_honor = 0.5
				ai_compassion = 0.25
				ai_boldness = 0.25
			}	

			modifier = { # Zero likelihood if outnumbered
				lotr_armies_are_outnumbered = yes
				factor = 0
			}
		}
	}
	option = { # We shall send a large host
		name = gondor.2000.b
		add_character_modifier = {
			modifier = raised_large_oath_host_modifier
			years = 5
		}
		add_prestige = 200
		add_piety = 50
		remove_short_term_gold = 600
		scope:rohan = {
			trigger_event = {
				id = rohan.2002
				days = 1
			}
		}
		ai_chance = {
			base = 50

			modifier = { # Zero likelihood if outnumbered and in debt
				lotr_armies_are_outnumbered = yes
				gold < 0
				factor = 0
			}

			modifier = { # Double likelihood if outnumbered and not in debt
				lotr_armies_are_outnumbered = yes
				gold > 0
				factor = 2
			}

			modifier = { # Zero likelihood if not outnumbered
				lotr_armies_are_outnumbered = no
				factor = 0
			}

			ai_value_modifier = { # Greedy can swing up to +/- 50, honour up to +/- 25
				ai_greed = 0.5
				ai_honor = -0.25
			}		
		}
	}
	option = { # We shall send a meager host
		name = gondor.2000.c 
		add_character_modifier = {
			modifier = raised_small_oath_host_modifier
			years = 5
		}
		add_prestige = 100
		add_piety = 25
		remove_short_term_gold = 300
		scope:rohan = {
			trigger_event = {
				id = rohan.2003
				days = 1
			}
		}
		ai_chance = {
			base = 50

			modifier = { # Half likelihood if outnumbered and in debt
				lotr_armies_are_outnumbered = yes
				gold < 0
				factor = 0.5
			}

			modifier = { # Normal likelihood if outnumbered and not in debt
				lotr_armies_are_outnumbered = yes
				gold > 0
				factor = 1
			}

			modifier = { # Zero likelihood if not outnumbered
				lotr_armies_are_outnumbered = no
				factor = 0
			}

			ai_value_modifier = { # Greedy and honour can swing up to +/- 25
				ai_greed = 0.25
				ai_honor = -0.25
			}
		}
	}
	option = { # We have our own problems to deal with
		name = gondor.2000.d 
		scope:rohan = {
			add_opinion = {
				modifier = dishonoured_oath_of_eorl_opinion
				target = root
			}
			trigger_event = {
				id = rohan.2004
				days = 1
			}
		}
		ai_chance = {
			base = 50

			modifier = { # Double likelihood if outnumbered and in debt
				lotr_armies_are_outnumbered = yes
				gold < 0
				factor = 2
			}

			modifier = { # Zero likelihood if outnumbered and not in debt
				lotr_armies_are_outnumbered = yes
				gold > 0
				factor = 0
			}

			modifier = { # Zero likelihood if not outnumbered
				lotr_armies_are_outnumbered = no
				factor = 0
			}

			ai_value_modifier = { # Honour can swing up to +/- 50, boldness up to +/- 25
				ai_honor = -0.5
				ai_boldness = -0.25
			}
		}
	}
}

gondor.2001 = { # Rohan joins as an ally in our wars
	content_source = realms_dlc
	type = character_event
	title = gondor.2001.t
	desc = gondor.2001.desc
	theme = diplomacy_majesty_focus
	override_background = {     
      reference = minas_tirith
	}
	
	immediate = { play_music_cue = lotr_cue_rohan }
	
	right_portrait = {
		character = root
		animation = happiness
	}
	option = {
		name = gondor.2001.a
		custom_tooltip = "rohan_will_join_your_wars"
	}
}

gondor.2002 = { # Rohan sends a large host
	content_source = realms_dlc
	type = character_event
	title = gondor.2002.t
	desc = gondor.2002.desc
	theme = diplomacy_majesty_focus
	override_background = {     
      reference = minas_tirith
	}
	
	immediate = { play_music_cue = lotr_cue_rohan }
	
	right_portrait = {
		character = root
		animation = personality_bold
	}
	option = {
		name = gondor.2002.a 
		spawn_army = {
			levies = 1000
			men_at_arms = {
				type = helmingas_warriors
				stacks = 8
			}
			men_at_arms = {
				type = eotheod_horse_axemen
				stacks = 6
			}	
			men_at_arms = {
				type = eotheod_horse_archers
				stacks = 6
			}
			location = capital_province
			# war = war # optional. If set, the stack will disband after the war ends
			inheritable = yes
			uses_supply = yes
			name = oath_of_eorl_host_rohan_large		
		}
	}
}

gondor.2003 = { # Rohan sends a small host
	content_source = realms_dlc
	type = character_event
	title = gondor.2003.t
	desc = gondor.2003.desc
	theme = diplomacy_majesty_focus
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = disapproval
	}
	option = {
		name = gondor.2003.a 
		spawn_army = {
			levies = 1000
			men_at_arms = {
				type = eotheod_horse_axemen
				stacks = 2
			}	
			men_at_arms = {
				type = eotheod_horse_archers
				stacks = 3
			}
			men_at_arms = {
				type = westfolders
				stacks = 5
			}
			location = capital_province
			# war = war # optional. If set, the stack will disband after the war ends
			inheritable = yes
			uses_supply = yes
			name = oath_of_eorl_host_rohan_small		
		}
	}
}

gondor.2004 = { # Rohan did not answer the call
	content_source = realms_dlc
	type = character_event
	title = gondor.2004.t
	desc = gondor.2004.desc
	theme = diplomacy_majesty_focus
	override_background = {     
      reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = anger
	}
	option = {
		name = gondor.2004.a 
	}
}

gondor.2100 = { # Begin the assault on Mordor
	content_source = realms_dlc
	type = character_event
	title = gondor.2100.t
	desc = gondor.2100.desc
	theme = war
	
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = character:lineofsauron
		animation = anger
	}
	override_background = {
		reference = minas_tirith
	}
	
	immediate = { play_music_cue = lotr_cue_gondor }
	
	option = {
		name = gondor.2100.a
		if = {
			limit = { exists = title:e_mordor }
			start_war = {
				casus_belli = final_battle_gondor_cb
				target = title:e_mordor.holder
				target_title = title:e_mordor
			}
		}
	}
}

gondor.2101 = {
	content_source = realms_dlc
	type = character_event
	title = gondor.2101.t
	desc = gondor.2101.desc
	theme = war
	left_portrait = {
		character = root
		animation = anger
	}
	
	immediate = { play_music_cue = lotr_cue_gondor }
	
	option = {
		name = gondor.2101.a
	}
}

gondor.2102 = { # Victory, Mordor Shattered
	content_source = realms_dlc
	type = character_event
	title = gondor.2102.t
	desc = gondor.2102.desc
	theme = war
	left_portrait = {
		character = root
		animation = bold
	}
	override_background = {
		reference = barad_dur
	}
	
	immediate = { play_music_cue = lotr_cue_gondor }
	
	option = {
		name = gondor.2102.a
		dynasty = { 
			add_dynasty_modifier = {
				modifier = easy_arnor_settle
				years = 30
			}
		}
	}
}

gondor.2103 = { # Victory, Every other ruler gets news
	content_source = realms_dlc
	type = character_event
	title = gondor.2103.t
	desc = gondor.2103.desc
	theme = diplomacy_majesty_focus
	override_background = {
		reference = barad_dur
	}
	left_portrait = {
		character = root
		animation = disbelief
	}
	right_portrait = {
		character = title:e_gondor.holder
		animation = bold
	}
	trigger = {
		NOR = {
			has_title = title:e_gondor
			has_title = title:e_gondor_steward
		}
	}
	immediate = {
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:mordor_is_destroyed_by_gondor
		}
		play_music_cue = lotr_cue_gondor
	}
	option = {
		name = gondor.2103.a
		trigger = { NOT = { this = character:mouthofsauron } }
	}
	option = {	#for the mouth of sauron only
		name = gondor.2103.b
		trigger = { this = character:mouthofsauron }
		set_character_faith = faith:lidless_eye
		add_stress = 250
		add_trait = lunatic_1
		add_trait = depressed_1
	}
}

gondor.2104 = {	#triggered if sauron dies from a bug or unexpectedly, without proper cause
	content_source = realms_dlc
	type = character_event
	title = gondor.2104.t
	desc = gondor.2104.desc
	theme = diplomacy_majesty_focus
	override_background = {
		reference = barad_dur
	}
	left_portrait = {
		character = root
		animation = disbelief
	}
	
	option = {
		name = gondor.2104.a
		trigger = { NOT = { this = character:mouthofsauron } }
	}
	option = {	#for the mouth of sauron only
		name = gondor.2104.b
		trigger = { this = character:mouthofsauron }
		set_character_faith = faith:lidless_eye
		add_stress = 250
		add_trait = lunatic_1
		add_trait = depressed_1
	}
}

gondor.2105 = { #Event that handles unexpected sauron death effects
	hidden = yes
	content_source = realms_dlc
	type = character_event
	
	trigger = {
		exists = global_var:sauron_destroyed
		global_var:sauron_destroyed = no
		#sauron_is_alive = 0
		this = character:lineofsauron
	}
	
	immediate = {
		save_scope_as = deadsauron
		set_global_variable = {
			name = sauron_destroyed
			value = yes
		}
		every_independent_ruler = {
			limit = {
				exists = var:my_suzerain
				var:my_suzerain = scope:deadsauron
			}
			free_tributary = yes
		}
		
		character:lineofsauron = {
			every_held_title = {
					limit = {
						tier > tier_county
					}
					holder = { # Destroy that title
						destroy_title = prev
					}
				}
			every_held_title = { # Distribute excess non-capital counties to new characters			
					limit = { # For every non-capital county
						tier = tier_county
					}
					set_county_faith = faith:sons_of_sauron
					save_temporary_scope_as = excess_title
	
					create_character = { # Create a new character to hold the title
						employer = root
						culture = culture:burgulhai
						faith = faith:sons_of_sauron
						gender_female_chance = 0
						after_creation = {
							save_temporary_scope_as = new_holder
						}
					}
				
					create_title_and_vassal_change = { # Define type of title change as a granting of the title
						type = granted
						save_scope_as = title_change
						add_claim_on_loss = no
					}
				
					scope:excess_title = { # Set the new character to be the new holder of the title
						change_title_holder = {
							holder = scope:new_holder
							change = scope:title_change
						}
					}
				
					resolve_title_and_vassal_change = scope:title_change # Take a look at yourself, and then make that... change!
					
					# game_rule_create_spouse_and_children = { CHARACTER = scope:new_holder } # Create a family for the new holder
				}
			
		}
		title:c_barad_dur.title_province = {
			remove_building = wonder_baraddur	
		}
		title:k_nurn = {
			if = {
				limit = {
					holder = {
						faith_is_evil = yes
					}
				}
				holder = { # Destroy that title
					destroy_title = prev
				}
			}
		}
		
		character:mouthofsauron = {
			hidden_effect = {
				every_held_title = {
					limit = {
						tier > tier_county
					}
					holder = { # Destroy that title
						destroy_title = prev
					}
				}
				every_held_title = { # Distribute excess non-capital counties to new characters
				
					limit = { # For every non-capital county
						tier = tier_county
					}
		
					set_county_faith = faith:sons_of_sauron
		
					save_temporary_scope_as = excess_title
		
					create_character = { # Create a new character to hold the title
						employer = root
						culture = culture:burgulhai
						faith = faith:sons_of_sauron
						gender_female_chance = 0
						after_creation = {
							save_temporary_scope_as = new_holder
						}
					}
					
					create_title_and_vassal_change = { # Define type of title change as a granting of the title
						type = granted
						save_scope_as = title_change
						add_claim_on_loss = no
					}
					
					scope:excess_title = { # Set the new character to be the new holder of the title
						change_title_holder = {
							holder = scope:new_holder
							change = scope:title_change
						}
					}
					
					resolve_title_and_vassal_change = scope:title_change # Take a look at yourself, and then make that... change!
		
					# game_rule_create_spouse_and_children = { CHARACTER = scope:new_holder } # Create a family for the new holder
					
				}
			}
			get_title = title:c_barad_dur
		}
		
		#juke note: moved nazgul to scripted effect
		kill_nazgul_effect = yes
		
		every_living_character = {
			trigger_event = {
				id = gondor.2104
				#days = 30
			}
		}
		faith:lidless_eye = {
			change_fervor = {
				value = -100
				desc = fervor_dark_lord_defeated
			}
		}
		faith:cult_of_zigur = {
			change_fervor = {
				value = -100
				desc = fervor_dark_lord_defeated
			}
		}
		faith:red_eye_cult = {
			change_fervor = {
				value = -30
				desc = fervor_dark_lord_defeated
			}
		}
		#faith:faith_haruze = {		#removed for now, cause weird conversions
		#	change_fervor = {
		#		value = -30
		#		desc = fervor_dark_lord_defeated
		#	}
		#}
		#faith:faith_kerkassk = {
		#	change_fervor = {
		#		value = -30
		#		desc = fervor_dark_lord_defeated
		#	}
		#}
		#faith:faith_khandish_sauronic = {
		#		change_fervor = {
		#			value = -30
		#			desc = fervor_dark_lord_defeated
		#		}
		#}
			
		#juke note: moved religious conversion to a scripted effect
		lidless_eye_destroyed_effect = yes
		
	}
}

gondor.2200 = { # Search Orthanc
	content_source = realms_dlc
	type = character_event
	title = gondor.2200.t
	desc = gondor.2200.desc
	theme = war
	override_background = {     
      reference = flooded_isengard
	}
	left_portrait = {
		character = root
		animation = bold
	}
	option = {
		name = gondor.2200.a
		trigger_event = {
			id = gondor.2201
			days = 3
		}
	}
	option = {
		name = gondor.2200.b
		add_learning_lifestyle_xp = major_lifestyle_experience
		}
}		
gondor.2201 = { # The Fate of Isildur
	content_source = realms_dlc
	type = character_event
	title = gondor.2201.t
	desc = gondor.2201.desc
	theme = crown
	override_background = {     
		reference = flooded_isengard
	  }
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = character:lineisildur0
	}
	option = {
		name = gondor.2201.a
		add_prestige = major_prestige_gain
		add_martial_lifestyle_xp = major_lifestyle_experience
		add_stewardship_lifestyle_xp = major_lifestyle_experience
		add_diplomacy_lifestyle_xp = major_lifestyle_experience
		create_artifact_elendilmir_elendil_effect = { OWNER = this }
	}
}

#gondor.2202 = { # Orc Smakurr corpse 
#	title = gondor.2202.t
#	desc = gondor.2202.desc
#	theme = hunt_activity
#	left_portrait = {
#		character = root
#		animation = personality_rational
#	}
#	trigger = {
#		NOT = { has_character_flag = had_event_martial_authority_2040 } #Can only happen once every 5 years.
#		has_culture = culture:gondorian 
#
#		#Only trigger if we've been at war for at least a few days.
#		days_of_continuous_war >= 5
#		is_available_adult_or_is_commanding = yes
#
#		any_knight = {
#			martial_authority_2040_first_trigger = yes
#		}
#		any_knight = {
#			martial_authority_2040_second_trigger = yes
#		}
#	}
#	option = {
#		name = gondor.2202.a
#		add_martial_skill = 2
#		add_prestige = 50
#	}
#	option = {
#		name = gondor.2202.b
#		add_stress = 25
#		add_prestige = -50
#		add_martial_skill = 6
#	}
#	option = {
#		name = gondor.2202.c
#		add_stress = 35
#		add_prestige = -50
#		add_prowess_skill = 6
#		add_trait = wrathful
#	}
#}

gondor.2300 = { # Reclamation of Minas Ithil, corruption festers
	content_source = realms_dlc
	type = character_event
	title = gondor.2300.t
	desc = gondor.2300.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = fear
	}
	
	cooldown = { years = 10 }
	
	trigger = {
		NOT = { religion = { is_in_family = rf_forcesofevil } }
		has_title = title:c_minas_ithil
		title:c_minas_ithil = {
			has_county_modifier = morgul_corruption_modifier
		}
		NOT = {	has_character_flag = had_event_minas_ithil_reclamation }
	}
	
	immediate = { play_music_cue = lotr_cue_gondor }
	
	option = {
		name = gondor.2300.a
		title:c_minas_ithil = {
			remove_county_modifier = morgul_corruption_modifier
			add_county_modifier = {
				modifier = fading_morgul_corruption_modifier
				years = 50
			}
			hidden_effect = {
				title:c_osgiliath.holder = {
					trigger_event = {
						id = gondor.2301 # Minas Ithil Purified
						years = 50
					}
				}
			}
		}
		add_character_flag = had_event_minas_ithil_reclamation
	}
}

gondor.2301 = { # Minas Ithil purified
	content_source = realms_dlc
	type = character_event
	title = gondor.2301.t
	desc = gondor.2301.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_bold
	}
	
	cooldown = { years = 10 }
	
	immediate = { play_music_cue = lotr_cue_gondor }
	
	trigger = {
		NOT = { religion = { is_in_family = rf_forcesofevil } }
		has_title = title:c_minas_ithil
	}
	option = { # The Witch-King's shadow ends
		name = gondor.2301.a
		# title:c_minas_ithil = { # Ithilien culture doesn't exists anymore
		# 	set_county_culture = culture:culture_ithilien
		# 	set_county_faith = root
		# }
		add_piety = 1000
		hidden_effect = {
			add_to_global_variable_list = {
				name = global_flags
				target = flag:minas_ithil_purification_complete
			}
		}
	}
}

#gondor.2302 = { # Hidden check on status of purification
#	hidden = yes
#	theme = stewardship
#	trigger = {
#		title:c_minas_ithil.holder = {
#			NOT = { religion = { is_in_family = rf_forcesofevil } }
#		}
#		title:c_minas_ithil = {
#			has_county_modifier = fading_morgul_corruption_modifier
#		}
#	}
#	option = { # Trigger Gondor.2301
#		name = gondor.2302.a
#		title:c_minas_ithil.holder = {
#			trigger_event = {
#				id = gondor.2301 # Purify Minas Ithil permanently
#			}
#		}
#	}
#}

gondor.2400 = { # Reclaim Calenardhon
	content_source = realms_dlc
	type = character_event
	title = gondor.2400.t
	desc = gondor.2400.desc
	theme = war
	override_background = {     
    	reference = edoras
	}
	
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:rohan_controller
		animation = anger
	}

	immediate = { # For localization to work
        title:k_rohan.holder = { save_scope_as = rohan_controller }
		play_music_cue = lotr_cue_gondor
    }

	option = {
		name = gondor.2400.a
		if = {
			limit = { 
				exists = title:k_rohan.holder
				title:k_rohan.holder = { is_independent_ruler = yes }
			}
			start_war = {
				casus_belli = reclaim_calenardhon_cb
				target = title:k_rohan.holder
				target_title = title:k_rohan
			}
		}
		else_if = {
			limit = { 
				exists = title:k_rohan.holder
				title:k_rohan.holder = { is_independent_ruler = no }
			}
			start_war = {
				casus_belli = reclaim_calenardhon_cb
				target = title:k_rohan.holder.top_liege
				target_title = title:k_rohan
			}
		}
	}
}

gondor.2401 = { # Reclaim Calenardhon - Rohan event
	content_source = realms_dlc
	type = character_event
	immediate = { # For localization to work
		if = {
			limit = { exists = title:e_gondor.holder }
			title:e_gondor.holder = { save_scope_as = gondor_controller }
		}
		else_if = {
			limit = { exists = title:e_gondor_steward.holder }
			title:e_gondor_steward.holder = { save_scope_as = gondor_controller }
		}
	}
	title = gondor.2401.t
	desc = gondor.2401.desc
	theme = war
	override_background = {     
    	reference = edoras
	}
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:gondor_controller
		animation = anger
	}
	option = {
		name = gondor.2401.a
	}
}

gondor.2500 = { # Integrate Calenardhon
	content_source = realms_dlc
	type = character_event
	title = gondor.2500.t
	desc = gondor.2500.desc
	theme = stewardship_duty_focus
	override_background = {     
    	reference = edoras
	}
	right_portrait = {
		character = root
		animation = personality_honorable
	}
	
	immediate = { play_music_cue = lotr_cue_gondor }

	option = {
		name = gondor.2500.a
	}
}

gondor.2501 = { # Integrate Calenardhon reaction
	content_source = realms_dlc
	type = character_event
	title = gondor.2501.t
	desc = gondor.2501.desc
	theme = stewardship_duty_focus
	override_background = {     
    	reference = edoras
	}
	
	immediate = { play_music_cue = lotr_cue_gondor }
	
	right_portrait = {
		character = root
		animation = personality_honorable
	}

	option = {
		name = gondor.2501.a
	}
}

gondor.2502 = { # Vassalization offers to independent rulers in rohan
	type = letter_event
	sender = scope:sender
	opening = {
		desc = gondor.2502.opening
	}
	desc = gondor.2502.desc
	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = gondor.2502
			days = 1
		}
	}
	immediate = {
		title:c_minas_tirith.holder = {
			save_scope_as = sender
		}
		ROOT = {
			save_scope_as = recipient
		}
	}
	override_background = {     
    	reference = edoras
	}
	right_portrait = {
		character = root
		animation = personality_honorable
	}

	option = {
		name = gondor.2502.a
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
			add_claim_on_loss = no
		}
		change_liege = {
			liege = scope:sender
			change = scope:change
		}
		resolve_title_and_vassal_change = scope:change
	}
	option = {
		name = gondor.2502.b
		trigger = {
			is_ai = no
		}
	}
}

gondor.2600 = { # The Siege of Gondor
	content_source = realms_dlc
	type = character_event
	title = gondor.2600.t
	desc = gondor.2600.desc
	theme = war
	override_background = {     
		reference = grond
	}
	right_portrait = {
		character = root
		animation = worry
	}
	
	immediate = {
		play_music_cue = lotr_cue_sauron
	}
	
	option = { # Light the beacons !
		name = gondor.2600.a
		if = {
			limit = { 
				and = {
					exists = title:k_lebennin.holder 
					title:k_lebennin.holder.liege = root
				}
			}
			title:k_lebennin.holder = {
				trigger_event = {
					id = gondor.2601
					days = 1
				}
			}
		}
		if = {
			limit = { 
				and = {
					exists = title:k_belfalas.holder 
					title:k_belfalas.holder.liege = root
				}
			}
			title:k_belfalas.holder = {
				trigger_event = {
					id = gondor.2601
					days = 1
				}
			}
		}
		if = {
			limit = { 
				and = {
					exists = title:d_tolfalas.holder 
					title:d_tolfalas.holder.liege = root
				}
			}
			title:d_tolfalas.holder = {
				trigger_event = {
					id = gondor.2601
					days = 1
				}
			}
		}
		if = {
			limit = { 
				and = {
					exists = title:k_anfalas.holder 
					title:k_anfalas.holder.liege = root
				}
			}
			title:k_anfalas.holder = {
				trigger_event = {
					id = gondor.2601
					days = 1
				}
			}
		}
		if = {
			limit = { 
				and = {
					exists = title:k_lamedon.holder 
					title:k_lamedon.holder.liege = root
				}
			}
			title:k_lamedon.holder = {
				trigger_event = {
					id = gondor.2601
					days = 1
				}
			}
		}
		if = {
			limit = { 
				and = {
					exists = title:k_pinnath_gelin.holder 
					title:k_pinnath_gelin.holder.liege = root
				}
			}
			title:k_pinnath_gelin.holder = {
				trigger_event = {
					id = gondor.2601
					days = 1
				}
			}
		}
		if = {
			limit = { 
				and = {
					exists = title:k_andrast.holder.liege
					title:k_andrast.holder.liege = root
				}
			}
			title:k_andrast.holder = {
				trigger_event = {
					id = gondor.2601
					days = 1
				}
			}
		}
		if = {
			limit = { 
				and = {
					exists = title:k_harondor.holder
					title:k_harondor.holder.liege = root
				}
			}
			title:k_harondor.holder = {
				trigger_event = {
					id = gondor.2601
					days = 1
				}
			}
		}
		if = {
			limit = { 
				and = {
					exists = title:k_mirlond.holder
					title:k_mirlond.holder.liege = root
				}
			}
			title:k_mirlond.holder = {
				trigger_event = {
					id = gondor.2601
					days = 1
				}
			}
		}
		if = {
			limit = { 
				and = {
					exists = title:k_umbar.holder
					title:k_umbar.holder.liege = root
				}
			}
			title:k_umbar.holder = {
				trigger_event = {
					id = gondor.2601
					days = 1
				}
			}
		}
		if = {
			limit = { 
				and = {
					exists = title:k_rohan.holder
					title:k_rohan.holder.liege = root
				}
			}
			title:k_rohan.holder = {
				trigger_event = {
					id = gondor.2601
					days = 1
				}
			}
		}
		ai_chance = 100
	}
	
	option = { # None will come to our help
		name = gondor.2600.b
		ai_chance = 0
	}
}

gondor.2601 = { # Gondor calls for aid
	content_source = realms_dlc
	type = character_event
	title = gondor.2601.t
	desc = gondor.2601.desc
	theme = war
	override_background = {     
		reference = grond
	}
	right_portrait = {
		character = cp:councillor_marshal
		animation = worry
	}
	left_portrait = {
		character = root
		animation = personality_rational
	}
	
	immediate = {
		root.liege = { save_scope_as = liege }
		cp:councillor_marshal = { save_scope_as = marshal }
		play_music_cue = lotr_cue_beacons
	}
	
	option = { # We shall join you in the field
		name = gondor.2601.a 
		scope:liege = {
			every_character_war = {
				limit = {
					is_attacker = title:e_mordor.holder
				}
				add_defender = root
			}
		}
		if = {
			limit = {
				root = { has_title = title:k_lebennin }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2602
					days = 1
				}
			}
		}
		if = {
			limit = {
				root = { has_title = title:k_belfalas }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2603
					days = 2
				}
			}
		}
		if = {
			limit = {
				root = { has_title = title:d_tolfalas }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2604
					days = 3
				}
			}
		}
		if = {
			limit = {
				root = { has_title = title:k_anfalas }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2605
					days = 4
				}
			}
		}
		if = {
			limit = {
				root = { has_title = title:k_lamedon }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2606
					days = 5
				}
			}
		}
		if = {
			limit = {
				root = { has_title = title:k_pinnath_gelin }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2607
					days = 6
				}
			}
		}
		if = {
			limit = {
				root = { has_title = title:k_andrast }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2608
					days = 7
				}
			}
		}
		if = {
			limit = {
				root = { has_title = title:k_harondor }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2609
					days = 8
				}
			}
		}
		if = {
			limit = {
				root = { has_title = title:k_mirlond }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2610
					days = 9
				}
			}
		}
		if = {
			limit = {
				root = { has_title = title:k_umbar }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2611
					days = 10
				}
			}
		}
		if = {
			limit = {
				root = { has_title = title:k_rohan }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2612
					days = 11
				}
			}
		}
		add_prestige = 500
		add_piety = 200
		ai_chance = {
			base = 50

			modifier = { # Double likelihood if not outnumbered
				lotr_armies_are_outnumbered = no
				factor = 2
			}

			ai_value_modifier = { # Honour can swing up to +/- 50, compassion and boldness up to +/- 25
				ai_honor = 0.5
				ai_compassion = 0.25
				ai_boldness = 0.25
			}	

			modifier = { # Zero likelihood if outnumbered
				lotr_armies_are_outnumbered = yes
				factor = 0
			}
			
			modifier = { # Reduced likelihood if hostile faith
				exists = title:e_gondor_steward.holder
				faith = {
					faith_hostility_level = {
						target = title:e_gondor_steward.holder.faith
						value = 2
					}
				}
				add = -25
			}

			modifier = { # Reduced likelihood if hostile faith
				exists = title:e_gondor.holder
				faith = {
					faith_hostility_level = {
						target = title:e_gondor.holder.faith
						value = 2
					}
				}
				add = -25
			}

			modifier = { # Reduced likelihood if hostile faith
				exists = title:e_castamir.holder
				faith = {
					faith_hostility_level = {
						target = title:e_castamir.holder.faith
						value = 2
					}
				}
				add = -25
			}

			modifier = { # Reduced likelihood if hostile faith
				exists = title:e_gondor_steward.holder
				faith = {
					faith_hostility_level = {
						target = title:e_gondor_steward.holder.faith
						value = 3
					}
				}
				factor = 0
			}

			modifier = { # Reduced likelihood if hostile faith
				exists = title:e_gondor.holder
				faith = {
					faith_hostility_level = {
						target = title:e_gondor.holder.faith
						value = 3
					}
				}
				factor = 0
			}

			modifier = { # Reduced likelihood if hostile faith
				exists = title:e_castamir.holder
				faith = {
					faith_hostility_level = {
						target = title:e_castamir.holder.faith
						value = 3
					}
				}
				factor = 0
			}
		}
	}

	option = { # We shall send a meager host
		name = gondor.2601.b 
		add_character_modifier = {
			modifier = raised_small_oath_host_modifier
			years = 5
		}
		add_prestige = 100
		add_piety = 25
		remove_short_term_gold = 300
		if = {
			limit = {
				root = { has_title = title:k_lebennin }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2602
					days = 1
				}
			}
		}
		else_if = {
			limit = {
				root = { has_title = title:k_belfalas }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2603
					days = 2
				}
			}
		}
		else_if = {
			limit = {
				root = { has_title = title:d_tolfalas }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2604
					days = 3
				}
			}
		}
		else_if = {
			limit = {
				root = { has_title = title:k_anfalas }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2605
					days = 4
				}
			}
		}
		else_if = {
			limit = {
				root = { has_title = title:k_lamedon }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2606
					days = 5
				}
			}
		}
		else_if = {
			limit = {
				root = { has_title = title:k_pinnath_gelin }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2607
					days = 6
				}
			}
		}
		else_if = {
			limit = {
				root = { has_title = title:k_andrast }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2608
					days = 7
				}
			}
		}
		else_if = {
			limit = {
				root = { has_title = title:k_harondor }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2609
					days = 8
				}
			}
		}
		else_if = {
			limit = {
				root = { has_title = title:k_mirlond }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2610
					days = 9
				}
			}
		}
		else_if = {
			limit = {
				root = { has_title = title:k_umbar }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2611
					days = 10
				}
			}
		}
		else_if = {
			limit = {
				root = { has_title = title:k_rohan }
			}
			scope:liege = {
				trigger_event = {
					id = gondor.2612
					days = 11
				}
			}
		}
		ai_chance = {
			base = 50

			modifier = { # Half likelihood if outnumbered and in debt
				lotr_armies_are_outnumbered = yes
				gold < 0
				factor = 0.5
			}

			modifier = { # Normal likelihood if outnumbered and not in debt
				lotr_armies_are_outnumbered = yes
				gold > 0
				factor = 1
			}

			modifier = { # Zero likelihood if not outnumbered
				lotr_armies_are_outnumbered = no
				factor = 0
			}

			ai_value_modifier = { # Greedy and honour can swing up to +/- 25
				ai_greed = 0.25
				ai_honor = -0.25
			}
		}
	}
	
	option = { # We have our own problems to deal with
		name = gondor.2601.c 
		root.liege = {
			add_opinion = {
				modifier = dishonoured_oath_of_alliegeance_opinion
				target = root
			}
		}
		ai_chance = {
			base = 50

			modifier = { # Double likelihood if outnumbered and in debt
				lotr_armies_are_outnumbered = yes
				gold < 0
				factor = 2
			}

			modifier = { # Zero likelihood if outnumbered and not in debt
				lotr_armies_are_outnumbered = yes
				gold > 0
				factor = 0
			}

			modifier = { # Zero likelihood if not outnumbered
				lotr_armies_are_outnumbered = no
				factor = 0
			}

			ai_value_modifier = { # Honour can swing up to +/- 50, boldness up to +/- 25
				ai_honor = -0.5
				ai_boldness = -0.25
			}
		}
	}
}

gondor.2602 = { # Soldiers of Pelargir
	content_source = realms_dlc
	type = character_event
	title = gondor.2602.t
	desc = {
		desc = gondor.2602.desc
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = {
						title:k_lebennin.holder = {
								any_character_war = {
									is_attacker = title:e_mordor.holder
								}
						}
					}
					desc = gondor.2602.desc.a
				}
				desc = gondor.2602.desc.b
			}
		}
		desc = gondor.2602.desc.c
	}
	theme = war
	override_background = { 
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = war_defender
	}

		
	option = {
		name = gondor.2602.a
		trigger = {
			title:k_lebennin.holder = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
			}
		}
	}
	
	option = {
		name = gondor.2602.b
		trigger = {
			title:k_lebennin.holder = {
				NOT = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
				}
			}
		}
		spawn_army = {
			levies = 500
			men_at_arms = {
				type = pelargir_mariners
				stacks = 3
			}
			location = capital_province
			inheritable = no
			uses_supply = no
			name = pelargir_marines		
		}
	}
}

gondor.2603 = { # Knights of Dol Amroth
	content_source = realms_dlc
	type = character_event
	title = gondor.2603.t
	desc = {
		desc = gondor.2603.desc
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = {
						title:k_belfalas.holder = {
								any_character_war = {
									is_attacker = title:e_mordor.holder
								}
						}
					}
					desc = gondor.2603.desc.a
				}
				desc = gondor.2603.desc.b
			}
		}
		desc = gondor.2603.desc.c
	}
	theme = war
	override_background = {     
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = war_defender
	}
		
	option = {
		name = gondor.2602.a
		trigger = {
			title:k_belfalas.holder = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
			}
		}
	}
	
	option = {
		name = gondor.2602.b
		trigger = {
			title:k_belfalas.holder = {
				NOT = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
				}
			}
		}
		spawn_army = {
			levies = 500
			men_at_arms = {
				type = swan_knights
				stacks = 3
			}
			location = capital_province
			inheritable = no
			uses_supply = no
			name = knights_of_dol_amroth		
		}
	}
}
		
gondor.2604 = { # Fishermen of Tolfalas
	content_source = realms_dlc
	type = character_event
	title = gondor.2604.t
	desc = {
		desc = gondor.2604.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					title:d_tolfalas.holder = {
						any_character_war = {
							is_attacker = title:e_mordor.holder
						}
					}
				}
				desc = gondor.2604.desc.a
			}
			desc = gondor.2604.desc.b
		}
		desc = gondor.2604.desc.c
	}
	theme = war
	override_background = {     
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = war_defender
	}
	
	option = {
		name = gondor.2602.a
		trigger = {
			title:d_tolfalas.holder = {
				any_character_war = {
					is_attacker = title:e_mordor.holder
				}
			}
		}
	}
	
	option = {
		name = gondor.2602.b
		trigger = {
			title:d_tolfalas.holder = {
				NOT = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
				}
			}
		}
		spawn_army = {
			levies = 500
			men_at_arms = {
				type = light_footmen 
				stacks = 3
			}	
			location = capital_province
			# war = war # optional. If set, the stack will disband after the war ends
			inheritable = no
			uses_supply = no
			name = fishermen_of_tolfalas		
		}
	}
}

gondor.2605 = { # Far Away Langstrand
	content_source = realms_dlc
	type = character_event
	title = gondor.2605.t
	desc = {
		desc = gondor.2605.desc
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = {
						title:k_anfalas.holder = {
								any_character_war = {
									is_attacker = title:e_mordor.holder
								}
						}
					}
					desc = gondor.2605.desc.a
				}
				desc = gondor.2605.desc.b
			}
		}
		desc = gondor.2605.desc.c
	}
	theme = war
	override_background = {     
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = war_defender
	}
		
	option = {
		name = gondor.2602.a
		trigger = {
			title:k_anfalas.holder = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
			}
		}
	}
	
	option = {
		name = gondor.2602.b
		trigger = {
			title:k_anfalas.holder = {
				NOT = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
				}
			}
		}
		spawn_army = {
			levies = 700
			men_at_arms = {
				type = light_footmen 
				stacks = 3
			}	
			location = capital_province
			# war = war # optional. If set, the stack will disband after the war ends
			inheritable = no
			uses_supply = no
			name = anfalas_country_folk		
		}
	}
}

gondor.2606 = { # Archers of Lamedon
	content_source = realms_dlc
	type = character_event
	title = gondor.2606.t
	desc = {
		desc = gondor.2606.desc
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = {
						title:k_lamedon.holder = {
								any_character_war = {
									is_attacker = title:e_mordor.holder
								}
						}
					}
					desc = gondor.2606.desc.a
				}
				desc = gondor.2606.desc.b
			}
		}
		desc = gondor.2606.desc.c
	}
	theme = war
	override_background = {     
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = war_defender
	}
		
	option = {
		name = gondor.2602.a
		trigger = {
			title:k_lamedon.holder = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
			}
		}
	}
	
	option = {
		name = gondor.2602.b
		trigger = {
			title:k_lamedon.holder = {
				NOT = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
				}
			}
		}
		spawn_army = {
			levies = 300
			men_at_arms = {
				type = gondorian_bowmen 
				stacks = 5
			}	
			location = capital_province
			# war = war # optional. If set, the stack will disband after the war ends
			inheritable = no
			uses_supply = no
			name = archers_of_lamedon		
		}
	}
}

gondor.2607 = { # Green Pinnath Gelin
	content_source = realms_dlc
	type = character_event
	title = gondor.2607.t
	desc = {
		desc = gondor.2607.desc
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = {
						title:k_pinnath_gelin.holder = {
								any_character_war = {
									is_attacker = title:e_mordor.holder
								}
						}
					}
					desc = gondor.2607.desc.a
				}
				desc = gondor.2607.desc.b
			}
		}
		desc = gondor.2607.desc.c
	}
	theme = war
	override_background = {     
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = war_defender
	}
		
	option = {
		name = gondor.2602.a
		trigger = {
			title:k_pinnath_gelin.holder = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
			}
		}
	}
	
	option = {
		name = gondor.2602.b
		trigger = {
			title:k_pinnath_gelin.holder = {
				NOT = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
				}
			}
		}
		spawn_army = {
			levies = 300
			men_at_arms = {
				type = gondorian_footmen
				stacks = 5
			}	
			location = capital_province
			# war = war # optional. If set, the stack will disband after the war ends
			inheritable = no
			uses_supply = no
			name = pinnath_gelin_gallant_men		
		}
	}
}

gondor.2608 = { # Distant Andrast
	content_source = realms_dlc
	type = character_event
	title = gondor.2608.t
	desc = {
		desc = gondor.2608.desc
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = {
						title:k_andrast.holder = {
								any_character_war = {
									is_attacker = title:e_mordor.holder
								}
						}
					}
					desc = gondor.2608.desc.a
				}
				desc = gondor.2608.desc.b
			}
		}
		desc = gondor.2608.desc.c
	}
	theme = war
	override_background = {     
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = war_defender
	}
		
	option = {
		name = gondor.2602.a
		trigger = {
			title:k_andrast.holder = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
			}
		}
	}
	
	option = {
		name = gondor.2602.b
		trigger = {
			title:k_andrast.holder = {
				NOT = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
				}
			}
		}
		spawn_army = {
			levies = 500
			men_at_arms = {
				type = clan_swordsmen
				stacks = 3
			}	
			location = capital_province
			# war = war # optional. If set, the stack will disband after the war ends
			inheritable = no
			uses_supply = no
			name = andrast_mountaineers		
		}
	}
}

gondor.2609 = { # Loyal Harondorim
	content_source = realms_dlc
	type = character_event
	title = gondor.2609.t
	desc = {
		desc = gondor.2609.desc
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = {
						title:k_harondor.holder = {
								any_character_war = {
									is_attacker = title:e_mordor.holder
								}
						}
					}
					desc = gondor.2609.desc.a
				}
				desc = gondor.2609.desc.b
			}
		}
		desc = gondor.2609.desc.c
	}
	theme = war
	override_background = {     
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = war_defender
	}
		
	option = {
		name = gondor.2602.a
		trigger = {
			title:k_harondor.holder = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
			}
		}
	}
	
	option = {
		name = gondor.2602.b
		trigger = {
			title:k_harondor.holder = {
				NOT = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
				}
			}
		}
		spawn_army = {
			levies = 300
			men_at_arms = {
				type = gondorian_footmen
				stacks = 5
			}	
			location = capital_province
			# war = war # optional. If set, the stack will disband after the war ends
			inheritable = no
			uses_supply = no
			name = harondor_spahi		
		}
	}
}

gondor.2610 = { # The Golden Prince of Mirlond
	content_source = realms_dlc
	type = character_event
	title = gondor.2610.t
	desc = {
		desc = gondor.2610.desc
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = {
						title:k_mirlond.holder = {
								any_character_war = {
									is_attacker = title:e_mordor.holder
								}
						}
					}
					desc = gondor.2610.desc.a
				}
				desc = gondor.2610.desc.b
			}
		}
		desc = gondor.2610.desc.c
	}
	theme = war
	override_background = {     
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = war_defender
	}
		
	option = {
		name = gondor.2602.a
		trigger = {
			title:k_mirlond.holder = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
			}
		}
	}
	
	option = {
		name = gondor.2602.b
		trigger = {
			title:k_mirlond.holder = {
				NOT = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
				}
			}
		}
		spawn_army = {
			levies = 300
			men_at_arms = {
				type = guard_of_the_citadel
				stacks = 3
			}	
			location = capital_province
			# war = war # optional. If set, the stack will disband after the war ends
			inheritable = no
			uses_supply = no
			name = mirlond_guard		
		}
	}
}

gondor.2611 = { # Captains of Umbar
	content_source = realms_dlc
	type = character_event
	title = gondor.2611.t
	desc = {
		desc = gondor.2611.desc
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = {
						title:k_umbar.holder = {
								any_character_war = {
									is_attacker = title:e_mordor.holder
								}
						}
					}
					desc = gondor.2611.desc.a
				}
				desc = gondor.2611.desc.b
			}
		}
		desc = gondor.2611.desc.c
	}
	theme = war
	override_background = {     
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = war_defender
	}
		
	option = {
		name = gondor.2602.a
		trigger = {
			title:k_umbar.holder = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
			}
		}
	}
	
	option = {
		name = gondor.2602.b
		trigger = {
			title:k_umbar.holder = {
				NOT = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
				}
			}
		}
		spawn_army = {
			levies = 300
			men_at_arms = {
				type = abrazanim_legion
				stacks = 3
			}	
			location = capital_province
			# war = war # optional. If set, the stack will disband after the war ends
			inheritable = no
			uses_supply = no
			name = corsairs_of_umbar		
		}
	}
}

gondor.2612 = { # Reclaimed Calenardhon
	content_source = realms_dlc
	type = character_event
	title = gondor.2612.t
	desc = {
		desc = gondor.2612.desc
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = {
						title:k_rohan.holder = {
								any_character_war = {
									is_attacker = title:e_mordor.holder
								}
						}
					}
					desc = gondor.2612.desc.a
				}
				desc = gondor.2612.desc.b
			}
		}
		desc = gondor.2612.desc.c
	}
	theme = war
	override_background = {     
		reference = minas_tirith
	}
	right_portrait = {
		character = root
		animation = war_defender
	}
		
	option = {
		name = gondor.2602.a
		trigger = {
			title:k_rohan.holder = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
			}
		}
	}
	
	option = {
		name = gondor.2602.b
		trigger = {
			title:k_rohan.holder = {
				NOT = {
					any_character_war = {
						is_attacker = title:e_mordor.holder
					}
				}
			}
		}
		spawn_army = {
			levies = 300
			men_at_arms = {
				type = helmingas_warriors
				stacks = 3
			}	
			location = capital_province
			# war = war # optional. If set, the stack will disband after the war ends
			inheritable = no
			uses_supply = no
			name = riders_of_calenardhon		
		}
	}
}


gondor.2700 = { # Reclaim Dor Rhúnen
	content_source = realms_dlc
	type = character_event
	title = gondor.2700.t
	desc = gondor.2700.desc
	theme = stewardship_duty_focus
	override_background = {     
		reference = rhun
	}
	right_portrait = {
		character = root
		animation = personality_honorable
	}

	option = {
		name = gondor.2700.a
		if = {
			limit = { NOT = { exists = title:k_south_rhovanion.holder } }
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_south_rhovanion = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		give_nickname = nick_romendacil
		add_prestige = 500
	}
}

# gondor.2701 = { # Reclaim Dor Rhúnen reaction
# 	title = gondor.2701.t
# 	desc = gondor.2701.desc
# 	theme = stewardship_duty_focus

# 	right_portrait = {
# 		character = root
# 		animation = personality_honorable
# 	}

# 	option = {
# 		name = gondor.2701.a
# 	}
# }

scripted_effect upgrade_edhellond = {
	province:420 = {
		add_building = elven_forges_01
		add_building = wonder_edhellond_03
		add_building = elven_settlement_02
	}
}

gondor.2800 = { # Invite elves to Edhellond
	content_source = realms_dlc
	type = character_event
	title = gondor.2800.t
	desc = gondor.2800.desc
	theme = stewardship_duty_focus

	override_background = {     
		reference = docks_elf
	}

	right_portrait = {
		character = root
		animation = personality_honorable
	}

	left_portrait = {
		## add a trigger here to display special elf if exists
		character = scope:elf_lothlorien
		animation = personality_honorable
	}
	lower_left_portrait = {
		character = scope:elf_lasgalen
		animation = personality_cynical
	}
	lower_right_portrait = {
		character = scope:elf_nelornieth
		animation = personality_irrational
	}
	lower_center_portrait = {
		character = scope:elf_noldor
		animation = personality_irrational
	}

	immediate = {
		hidden_effect = { # Create elf
			if = { # Lothlorien
				limit = {  # check for friends with Lothlorien ruler + whether special char is still alive
					title:k_lothlorien.holder = {
						has_relation_friend = root
						is_elf = yes
					}
				}
				create_character = { # Lothlorien Elf
					location = root.capital_province
					culture = culture:galadhrim
					faith = faith:faith_eldar
					gender = male
					age = { 100 6950 }
					random_traits = yes
					gender_female_chance = 50
					save_scope_as = elf_lothlorien
				}
				scope:elf_lothlorien = { # Theres an error showing up in error log for the replace_unelven_traits effect, maybe talk to Brice/Jamie, not sure why there is an error
					replace_unelven_traits = yes
				}
			}
			if = { # Greenwood
				limit = {  # check for friends with Lasgalen ruler + whether special char is still alive
					title:k_lasgalen.holder = {
						has_relation_friend = root
						is_elf = yes
					}
				}
				create_character = { # Lasgalen Elf
					location = root.capital_province
					culture = culture:lasgalendrim
					faith = faith:faith_eldar
					gender = male
					age = { 100 6950 }
					random_traits = yes
					gender_female_chance = 50
					save_scope_as = elf_lasgalen
				}
				scope:elf_lasgalen = {
					replace_unelven_traits = yes
				}
			}
			if = { # Penni
				limit = {  # check for friends with Penni ruler + whether special char is still alive
					title:k_nelornieth.holder = {
						has_relation_friend = root
						is_elf = yes
					}
				}
				create_character = { # Penni Elf
					location = root.capital_province
					culture = culture:penni
					faith = faith:faith_moriquendi
					gender = male
					age = { 100 6950 }
					random_traits = yes
					gender_female_chance = 50
					save_scope_as = elf_nelornieth
				}
				scope:elf_nelornieth = {
					replace_unelven_traits = yes
				}
			}
			if = { # Noldor
				limit = {  # check for friends with Penni ruler + whether special char is still alive
					title:k_imladris.holder = {
						has_relation_friend = root
						is_elf = yes
					}
				}
				create_character = { # Noldor Elf
					location = root.capital_province
					culture = culture:noldor
					faith = faith:faith_eldar
					gender = male
					age = { 100 6950 }
					random_traits = yes
					gender_female_chance = 50
					save_scope_as = elf_noldor
				}
				scope:elf_noldor = {
					replace_unelven_traits = yes
				}
			}
		}

		hidden_effect = {
			title:c_edhellond = {
				set_de_jure_liege_title = title:d_edhellond
				title:d_edhellond = {
					set_de_jure_liege_title = title:k_anfalas
				}
			}
		}
		
		every_province = { # Changes province to elven holding
			limit = { 
				county = title:c_edhellond
				has_holding = yes
			}
			set_holding_type = elven_holding			
		}

	}

	option = { # Invite Elves from Lothlorien
		name = gondor.2800.a
		custom_tooltip = gondor.2800.a_tt
		trigger = {
			title:k_lothlorien.holder = {
				has_relation_friend = root
			}
		}
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:c_edhellond = {
			change_title_holder = {
				holder = scope:elf_lothlorien
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_edhellond = {
			set_county_culture = scope:elf_lothlorien.culture
			set_county_faith = scope:elf_lothlorien.faith
		}
		scope:elf_lothlorien = {
			add_opinion = {
				target = root
				modifier = invite_elves_edhellond
				years = 10
			}
			hidden_effect = {
				add_gold = 150
				add_prestige = 750
				add_piety = 500
			}
		}
		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:d_edhellond = {
			change_title_holder = {
				holder = scope:elf_lothlorien
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
		
		apply_elven_influence = yes
		upgrade_edhellond = yes
	}

	option = { # Invite Elves from Woodland Realm
		name = gondor.2800.b
		custom_tooltip = gondor.2800.b_tt
		trigger = {
			title:k_lasgalen.holder = {
				has_relation_friend = root
			}
		}
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:c_edhellond = {
			change_title_holder = {
				holder = scope:elf_lasgalen
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_edhellond = {
			set_county_culture = scope:elf_lasgalen.culture
			set_county_faith = scope:elf_lasgalen.faith
		}
		scope:elf_lasgalen = {
			add_opinion = {
				target = root
				modifier = invite_elves_edhellond
				years = 10
			}
			hidden_effect = {
				add_gold = 150
				add_prestige = 750
				add_piety = 500
			}
		}

		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:d_edhellond = {
			change_title_holder = {
				holder = scope:elf_lasgalen
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change

		apply_elven_influence = yes
		upgrade_edhellond = yes
	}

	option = { # Invite Elves from Penni Realm
		name = gondor.2800.c
		custom_tooltip = gondor.2800.c_tt
		trigger = {
			title:k_nelornieth.holder = {
				has_relation_friend = root
			}
		}
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:c_edhellond = {
			change_title_holder = {
				holder = scope:elf_nelornieth
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_edhellond = {
			set_county_culture = scope:elf_nelornieth.culture
			set_county_faith = scope:elf_nelornieth.faith
		}
		
		scope:elf_nelornieth = {
			add_opinion = {
				target = root
				modifier = invite_elves_edhellond
				years = 25
			}
			hidden_effect = {
				add_gold = 150
				add_prestige = 750
				add_piety = 500
			}
		}

		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:d_edhellond = {
			change_title_holder = {
				holder = scope:elf_nelornieth
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change

		apply_elven_influence = yes
		upgrade_edhellond = yes
	}

	option = { # Invite Elves from Noldor Realm
		name = gondor.2800.d
		custom_tooltip = gondor.2800.d_tt
		trigger = {
			title:k_imladris.holder = {
				has_relation_friend = root
			}
		}
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:c_edhellond = {
			change_title_holder = {
				holder = scope:elf_noldor
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_edhellond = {
			set_county_culture = scope:elf_noldor.culture
			set_county_faith = scope:elf_noldor.faith
		}
		
		scope:elf_noldor = {
			add_opinion = {
				target = root
				modifier = invite_elves_edhellond
				years = 25
			}
			hidden_effect = {
				add_gold = 150
				add_prestige = 750
				add_piety = 500
			}
		}

		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:d_edhellond = {
			change_title_holder = {
				holder = scope:elf_noldor
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change

		apply_elven_influence = yes
		upgrade_edhellond = yes
	}

	after = {
		trigger_event = gondor.2802

		# Some elven characters to make sure the elf has some nice courtiers
		create_character = { 
			employer = title:c_edhellond.holder
			culture = culture:lasgalendrim
			faith = faith:faith_eldar
			gender = female
			age = { 100 6950 }
			random_traits = yes
		}
		create_character = {
			employer = title:c_edhellond.holder
			culture = culture:galadhrim
			faith = faith:faith_eldar
			gender = female
			age = { 100 6950 }
			random_traits = yes
		}
		create_character = {
			employer = title:c_edhellond.holder
			culture = culture:noldor
			faith = faith:faith_eldar
			gender = male
			age = { 100 6950 }
			random_traits = yes
		}
		create_character = { 
			employer = title:c_edhellond.holder
			culture = culture:penni
			faith = faith:faith_moriquendi
			gender = male
			age = { 100 6950 }
			random_traits = yes
		}
	}
}

gondor.2801 = { # Gondor elevates Edhellond into a kingdom, maybe add a choice to give Dol Amroth back to them
	content_source = realms_dlc
	type = character_event
	title = gondor.2801.t # still debating on whether the actually have an event for this decision.
	desc = gondor.2801.desc
	theme = stewardship_duty_focus

	override_background = {     
		reference = armenelos
	}

	right_portrait = {
		character = scope:high_king_of_gondor
		animation = happiness
	}

	left_portrait = {
		character = title:c_edhellond.holder
		animation = personality_bold
	}

	immediate = {
		if = {
			limit = { exists = title:e_gondor.holder }
			title:e_gondor.holder = {
				save_scope_as = high_king_of_gondor
			}
		} else = {
			title:e_gondor_steward.holder = {
				save_scope_as = high_king_of_gondor
			}
		}
	}

	option = { # Accept Kingdom of Edhellond
		name = gondor.2801.a

		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:k_edhellond = {
			change_title_holder = {
				holder = title:d_edhellond.holder
				change = scope:change
			}
		}
		if = {
			limit = { 
				title:c_edhellond.holder = {
					has_title = title:c_dol_amroth
				}
			}
			title:c_dol_amroth = {
				set_de_jure_liege_title = title:d_edhellond
			}
			title:k_belfalas = {
				set_capital_county = title:c_nargond
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:k_edhellond = {
			set_de_jure_liege_title = root.top_liege.primary_title
		}
		title:d_edhellond = {
			set_de_jure_liege_title = title:k_edhellond
		}

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:elves_edhellond_kingdom
		}

		root.top_liege = {
			trigger_event = {
				id = gondor.2803
				days = { 15 30 }
			}
		}

		ai_chance = {
			base = 75
			modifier = {
				title:d_edhellond.holder = {
					has_title = title:c_dol_amroth
				}
				add = -50
			}
		}
	}

	option = { # Deny Kingdom of Edhellond
		name = gondor.2801.b

		scope:high_king_of_gondor = {
			trigger_event = {
				id = gondor.2804
				days = { 10 15 }
			}
		}

		ai_chance = {
			base = 25
			modifier = {
				title:d_edhellond.holder = {
					has_title = title:c_dol_amroth
				}
				add = 50
			}
		}
	}
}

gondor.2802 = { # Swap over to elves in Edhellond event
	content_source = realms_dlc
	type = character_event
	title = gondor.2802.t
	desc = gondor.2802.desc
	theme = stewardship_duty_focus

	override_background = {     
		reference = elven_town
	}

	right_portrait = {
		character = root
		animation = admiration
	}

	left_portrait = {
		character = title:c_edhellond.holder
		animation = personality_content
	}
	
	option = {
		name = gondor.2802.a
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = gondor.2802.b
		set_player_character = title:c_edhellond.holder

		ai_chance = {
			base = 0
		}
	}
}

gondor.2803 = { # Gondor gets event for elevating Edhellond IF elves accept
	content_source = realms_dlc
	type = character_event
	title = gondor.2803.t
	desc = gondor.2803.desc
	theme = stewardship_duty_focus

	override_background = {     
		reference = elven_town
	}
	right_portrait = {
		character = root
		animation = admiration
	}

	left_portrait = {
		character = title:k_edhellond.holder
		animation = personality_content
	}

	option = {
		name = gondor.2803.a

		if = { # Mega lothlorien
			limit = { exists = title:e_laurelindorenan.holder }
			title:e_laurelindorenan.holder = {
				add_opinion = {	
					target = root
					modifier = restored_edhellond_as_kingdom
					years = 30
				}
			}
		} else = {
			title:k_lothlorien.holder ?= {
				add_opinion = {	
					target = root
					modifier = restored_edhellond_as_kingdom
					years = 30
				}
			}
		}

		if = { # Greenwood
			limit = { exists = title:e_greenwood.holder }
			title:e_greenwood.holder = {
				add_opinion = {	
					target = root
					modifier = restored_edhellond_as_kingdom
					years = 30
				}
			}
		} else = {
			title:k_lasgalen.holder ?= {
				add_opinion = {	
					target = root
					modifier = restored_edhellond_as_kingdom
					years = 30
				}
			}
		}

		set_relation_friend = title:k_edhellond.holder

		ai_chance = {
			base = 100
		}
	}
}

gondor.2804 = {
	type = letter_event
	sender = title:c_edhellond.holder

	immediate = {
		if = {
			limit = { exists = title:e_gondor.holder }
			title:e_gondor.holder = {
				save_scope_as = high_king_of_gondor
			}
		} else = {
			title:e_gondor_steward.holder = {
				save_scope_as = high_king_of_gondor
			}
		}
	}

	opening = {
		desc = gondor.2804.opening
	}

	desc = gondor.2804.desc


	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = gondor.2804
			days = 1
		}
	}

	option = {
		name = gondor.2804.a
		add_gold = 500
	}	
}

gondor.2900 = { # Maintenance event to start the combination of Bellakar x Gondor
	orphan = no # referenced in yearly_on_actions
	hidden = yes

	trigger = {
		NOT = {
			is_target_in_global_variable_list = { # Event chain has not yet started (Need this so it only fires once)
				name = unavailable_unique_decisions
				target = flag:gondor_x_bellakar_event_chain
			}
		}
		is_target_in_global_variable_list = { # Mordor has been destroyed
			name = unavailable_unique_decisions
			target = flag:mordor_is_destroyed_by_gondor
		}
		title:e_bellakar.holder = {
			is_allied_to = title:e_gondor.holder
		}
		title:e_gondor.holder ?= { 
			OR = {
				primary_heir = { 
					any_parent = {
						even_if_dead = yes
						dynasty ?=  dynasty:dynasty_tumakveh 
					}
				}
				any_ancestor = { 
					even_if_dead = yes  
					dynasty ?= dynasty:dynasty_tumakveh
				}
			}
		}
	}

	immediate = {
		title:e_bellakar.holder = { trigger_event = bellakar.0200 }

		add_to_global_variable_list = { # To stop this event chain from happening again
			name = unavailable_unique_decisions
			target = flag:gondor_x_bellakar_event_chain
		}

		if = {
			limit = { 
				exists = title:k_felaya.holder 
				title:k_felaya.holder.top_liege.primary_title = {
					tier <= tier_kingdom
				}
			}
			title:k_felaya.holder = { trigger_event = bellakar.0208 }
		}
	}
}

gondor.2901 = { # Initial event in Uniting Faithful realms chain
	content_source = realms_dlc
	type = character_event
	title = gondor.2901.t
	desc = gondor.2901.desc
	theme = stewardship_duty_focus

	override_background = { reference = minas_tirith }

	right_portrait = {
		character = title:e_gondor.holder
		animation = personality_honorable
	}

	left_portrait = {
		character = title:e_bellakar.holder
		animation = personality_content
	}

	immediate = { title:k_felaya.holder ?= { save_scope_as = king_of_felaya } }

	option = { # Gives Bellakar choice on whether it wants to unite
		name = gondor.2901.a

		title:e_bellakar.holder = {
			trigger_event = {
				id = bellakar.0202
				days = { 15 30 }
			}
		}

		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	option = { # Nothing happens, Gondor rescinds its claim on bellakar
		name = gondor.2901.b
		
		title:e_bellakar.holder = {
			trigger_event = {
				id = bellakar.0203
				days = { 15 30 }
			}
		}

		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	after = {
		if = {
			limit = { # Felaya is independent
				scope:king_of_felaya.top_liege.primary_title = {
					tier <= tier_kingdom
				}
				
			}
			trigger_event = {
				id = gondor.2902
				days = { 5 10 }
			}
		}
	}
}

gondor.2902 = { # Gondor gets option to ask Felaya to join them as-well IF FELAYA NOT VASSALIZED TO BELLAKAR
	content_source = realms_dlc
	type = character_event
	title = gondor.2902.t
	desc = gondor.2902.desc
	theme = stewardship_duty_focus

	override_background = {
		reference = minas_tirith
	}

	right_portrait = {
		character = root
		animation = personality_honorable
	}

	left_portrait = {
		character = scope:king_of_felaya
		animation = personality_rational
	}

	immediate = {
		title:k_felaya.holder ?= { save_scope_as = king_of_felaya }
	}

	option = { # Ask them to join you
		name = gondor.2902.a
		scope:king_of_felaya = {
			trigger_event = {
				id = bellakar.0201
				days = { 10 20 }
			}
		}

		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	option = { # Let them be...
		name = gondor.2902.b

		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.

			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}

			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}

			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

gondor.2950 = { # Bellakar receives message about making alliance with Gondor
	content_source = realms_dlc
	type = character_event
	title = gondor.2950.t
	desc = gondor.2950.desc
	theme = stewardship_duty_focus

	left_portrait = {
		character = scope:high_king_of_gondor
		animation = personality_honorable
	}

	right_portrait = {
		character = root
		animation = personality_content
	}

	immediate = { 
		title:e_gondor.holder = { save_scope_as = high_king_of_gondor }
		play_music_cue = lotr_cue_gondor
	}

	option = { # Bellakar accepts alliance proposal
		name = gondor.2950.a

		custom_tooltip = gondor.2950.a.tt
		
		scope:high_king_of_gondor = { 
			trigger_event = {
				id = gondor.2951
				days = { 15 30 }
			}
		}

		ai_chance = {
			base = 100
		}
	}

	option = { # Bellakar declines alliance proposal
		name = gondor.2950.b

		scope:high_king_of_gondor = {
			trigger_event = {
				id = gondor.2952
				days = { 15 30 }
			}
		}

		ai_chance = {
			base = 0
		}
	}
}

gondor.2951 = { # Bellakar accepts alliance offer
	content_source = realms_dlc
	type = character_event
	title = gondor.2951.t
	desc = gondor.2951.desc
	theme = stewardship_duty_focus
	# orphan = no # Referenced in on_title_gain

	override_background = { reference = bp1_courtyard_indian } # bellakar.0250

	left_portrait = {
		character = root
		animation = toast_goblet
	}

	right_portrait = {
		character = scope:high_king_of_bellakar
		animation = chancellor
	}

	immediate = { 
		title:e_bellakar.holder = { save_scope_as = high_king_of_bellakar } 
		play_music_cue = lotr_cue_gondor
	}

	option = {
		name = gondor.2951.a

		add_character_flag = bellakar_x_gondor_alliance
		scope:high_king_of_bellakar = { add_character_flag = bellakar_x_gondor_alliance }

		create_alliance = {
			target = scope:high_king_of_bellakar
			allied_through_owner = root
			allied_through_target = scope:high_king_of_bellakar
		}

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:recurring_bellakar_gondor_alliance
		}
		if = { # Message to Bellakar that Gondor accepts the alliance
			limit = {
				is_target_in_global_variable_list = {
					name = unavailable_unique_decisions
					target = flag:bellakar_x_gondor
				}
			}
			title:e_bellakar.holder = {
				trigger_event = {
					id = gondor.2952
					days = { 15 30 }
				}
			}
		}

		ai_chance = {
			base = 100
		}
	}
}

gondor.2952 = { # Bellakar declines alliance offer # Bellakar recieves message of Gondor accepting alliance
	content_source = realms_dlc
	type = character_event
	title = gondor.2952.t
	desc = gondor.2952.desc
	theme = stewardship_duty_focus

	override_background = { reference = bp1_courtyard_indian } # bellakar.0251

	left_portrait = {
		character = root
		animation = disbelief
	}

	right_portrait = {
		character = scope:high_king_of_bellakar
		animation = stress
	}

	immediate = { title:e_bellakar.holder = { save_scope_as = high_king_of_bellakar } }

	option = {
		name = gondor.2952.a

		ai_chance = {
			base = 100
		}
	}
}

gondor.2953 = { # Gondor received message that Bellakar ruler died, renew alliance
	content_source = realms_dlc
	type = character_event
	title = gondor.2953.t
	desc = gondor.2953.desc
	theme = stewardship_duty_focus
 
	left_portrait = { # gondor.2951
		character = scope:high_king_of_bellakar
		animation = grief
	}

	right_portrait = {
		character = root
		animation = disbelief
	}

	lower_center_portrait = {
		character = scope:dead_high_king_of_bellakar
		animation = idle
	}

	immediate = {
		title:e_bellakar.holder = { save_scope_as = high_king_of_bellakar }
		scope:high_king_of_bellakar = { add_character_flag = bellakar_x_gondor_alliance }
		scope:high_king_of_bellakar.primary_title.previous_holder = { save_scope_as = dead_high_king_of_bellakar } 
	}

	option = {  # renew alliance between Gondor x Bellakar
		name = gondor.2953.a

		create_alliance = {
			target = scope:high_king_of_bellakar
			allied_through_owner = root
			allied_through_target = scope:high_king_of_bellakar
		}

		ai_chance = {
			base = 100
		}
	}

	option = { # no, DONT renew alliance between Gondor x Bellakar
		name = gondor.2953.b

		ai_chance = {
			base = 0
		}
	}
}

gondor.3500 = {
	content_source = realms_dlc
	type = character_event
	title = gondor.3500.t
	desc = gondor.3500.desc
	theme = stewardship_duty_focus
	override_background = {
		reference = armenelos
	}
	right_portrait = {
		character = root
		animation = personality_honorable
	}
	
	immediate = { play_music_cue = lotr_cue_gondor }
	
	option = { 
		name = gondor.3500.a
	}
}