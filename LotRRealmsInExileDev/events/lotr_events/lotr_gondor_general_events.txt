namespace = gondor

# General Events
#		gondor.3000 Pelargir / Umbar Trade Influx
#		gondor.3001 Pelargir / Umbar Trade Recession
#		gondor.4001 Recreate the Watch on Mordor
#		gondor.4002 Abandon the Watch on Mordor
#		gondor.5001 Rebuild the Royal Road
#		gondor.6001 Retaking the Morannon 
#		gondor.6002 Fall of Minas Tirith
#		gondor.6003 Reconquest of Minas Tirith
#		gondor.6003 Conquest of Umbar
#		gondor.6500 Restore Gondor CB events

#### General Gondor Events

gondor.3000 = { # Pelargir / Umbar Trade Influx
	content_source = realms_dlc
	type = character_event
	title = gondor.3000.t
	desc = gondor.3000.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = happiness
	}
	
	trigger = { 
		OR = { 
			has_title = title:c_pelargir
			has_title = title:c_umbar
		}
		NOR = {
			has_character_modifier = minor_trade_influx_modifier
			has_character_modifier = average_trade_influx_modifier
			has_character_modifier = large_trade_influx_modifier
			has_character_modifier = massive_trade_influx_modifier
			has_character_modifier = minor_trade_recession_modifier
			has_character_modifier = average_trade_recession_modifier
			has_character_modifier = large_trade_recession_modifier
			has_character_modifier = massive_trade_recession_modifier
		}
	}
	
	option = {
		name = gondor.3000.a
		random_list = {
			30 = {
				add_character_modifier = {
					modifier = minor_trade_influx_modifier
					years = 3
				}
				add_gold = 120
			}
			50 = {
				add_character_modifier = {
					modifier = average_trade_influx_modifier
					years = 3
				}
				add_gold = 250
			}
			15 = {
				add_character_modifier = {
					modifier = large_trade_influx_modifier
					years = 3
				}
				add_gold = 400
			}
			5 = {
				add_character_modifier = {
					modifier = massive_trade_influx_modifier
					years = 3
				}
				add_gold = 750
			}
		}
	}
}

gondor.3001 = { # Pelargir / Umbar Trade Shortage
	content_source = realms_dlc
	type = character_event
	title = gondor.3001.t
	desc = gondor.3001.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = disbelief
	}
	
	trigger = { 
		OR = { 
			has_title = title:c_pelargir
			has_title = title:c_umbar
		}
		NOR = {
			has_character_modifier = minor_trade_influx_modifier
			has_character_modifier = average_trade_influx_modifier
			has_character_modifier = large_trade_influx_modifier
			has_character_modifier = massive_trade_influx_modifier
			has_character_modifier = minor_trade_recession_modifier
			has_character_modifier = average_trade_recession_modifier
			has_character_modifier = large_trade_recession_modifier
			has_character_modifier = massive_trade_recession_modifier
		}
	}
	
	immediate = {
		cp:councillor_steward = {
			save_scope_as = steward
		}
	}
	
	option = {
		name = gondor.3001.a
		random_list = {
			30 = {
				add_character_modifier = {
					modifier = minor_trade_recession_modifier
					years = 3
				}
			}
			50 = {
				add_character_modifier = {
					modifier = average_trade_recession_modifier
					years = 3
				}
			}
			15 = {
				add_character_modifier = {
					modifier = large_trade_recession_modifier
					years = 3
				}
			}
			5 = {
				add_character_modifier = {
					modifier = massive_trade_recession_modifier
					years = 3
				}
			}
		}
	}
}

## Watch on Mordor events ##

gondor.4001 = { # Recreate the Watch on Mordor
	content_source = realms_dlc
	type = character_event
	title = gondor.4001.t
	theme = martial
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					root = { has_character_flag = wanted_new_watch_candidates }
				}
				desc = gondor.4001.desc.new
			}
			desc = gondor.4001.desc
		}
	}
	left_portrait = {
		character = root
		animation = marshal
	}
	lower_left_portrait = { character = scope:candidate1 }
	lower_center_portrait = { character = scope:candidate2 }
	lower_right_portrait = { character = scope:candidate3 }
	
	immediate = {
		random_knight = { 
			limit = {
				is_landed = no
			}
			save_scope_as = candidate1 
		}
		random_close_family_member = { save_scope_as = candidate2 }
		random_courtier_or_guest = { save_scope_as = candidate3 }
		if = {
			limit =  {
				exists = title:d_udun
			}
			destroy_title = title:d_udun
		}
		if = {
			limit =  {
				exists = title:d_ephel_duath
			}
			destroy_title = title:d_ephel_duath
		}
	}
	
	option = { # A knight
		name = gondor.4001.a
		custom_tooltip = event_gondor_4001_a
		
		hidden_effect = {
			title:c_morannon = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:c_cirith_ungol = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:c_durthang = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:c_lhingris = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:d_watch_on_mordor = {
				set_de_jure_liege_title = title:k_ithilien
			}
			
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = morannon_change
				add_claim_on_loss = yes
			}
			title:c_morannon = {
				change_title_holder = {
					holder = scope:candidate1
					change = scope:morannon_change
					take_baronies = yes
				}	
			}
			resolve_title_and_vassal_change = scope:morannon_change
			
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = durthang_change
				add_claim_on_loss = yes
			}
			title:c_durthang = {
				change_title_holder = {
					holder = scope:candidate1
					change = scope:durthang_change
					take_baronies = yes
				}	
			}
			resolve_title_and_vassal_change = scope:durthang_change
			
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = lhingris_change
				add_claim_on_loss = yes
			}
			title:c_lhingris = {
				change_title_holder = {
					holder = scope:candidate1
					change = scope:lhingris_change
					take_baronies = yes
				}	
			}
			resolve_title_and_vassal_change = scope:lhingris_change
			
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = cirith_ungol_change
				add_claim_on_loss = yes
			}
			title:c_cirith_ungol = {
				change_title_holder = {
					holder = scope:candidate1
					change = scope:cirith_ungol_change
					take_baronies = yes
				}	
			}
			resolve_title_and_vassal_change = scope:cirith_ungol_change
			
		}
		
		scope:candidate1 = {
			get_title = title:d_watch_on_mordor
			set_primary_title_to = title:d_watch_on_mordor
		}
	}
	
	option = { # A relative
		name = gondor.4001.b
		custom_tooltip = event_gondor_4001_a
		
		hidden_effect = {
			title:c_morannon = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:c_cirith_ungol = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:c_durthang = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:c_lhingris = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:d_watch_on_mordor = {
				set_de_jure_liege_title = title:k_ithilien
			}
			
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = morannon_change
				add_claim_on_loss = yes
			}
			title:c_morannon = {
				change_title_holder = {
					holder = scope:candidate2
					change = scope:morannon_change
					take_baronies = yes
				}	
			}
			resolve_title_and_vassal_change = scope:morannon_change
			
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = durthang_change
				add_claim_on_loss = yes
			}
			title:c_durthang = {
				change_title_holder = {
					holder = scope:candidate2
					change = scope:durthang_change
					take_baronies = yes
				}	
			}
			resolve_title_and_vassal_change = scope:durthang_change
			
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = lhingris_change
				add_claim_on_loss = yes
			}
			title:c_lhingris = {
				change_title_holder = {
					holder = scope:candidate2
					change = scope:lhingris_change
					take_baronies = yes
				}	
			}
			resolve_title_and_vassal_change = scope:lhingris_change
			
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = cirith_ungol_change
				add_claim_on_loss = yes
			}
			title:c_cirith_ungol = {
				change_title_holder = {
					holder = scope:candidate2
					change = scope:cirith_ungol_change
					take_baronies = yes
				}	
			}
			resolve_title_and_vassal_change = scope:cirith_ungol_change
			
		}
		
		scope:candidate2 = {
			get_title = title:d_watch_on_mordor
			set_primary_title_to = title:d_watch_on_mordor
		}
	}
	
	option = { # A courtier
		name = gondor.4001.c
		custom_tooltip = event_gondor_4001_a
		
		hidden_effect = {

			title:c_morannon = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:c_cirith_ungol = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:c_durthang = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:c_lhingris = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:d_watch_on_mordor = {
				set_de_jure_liege_title = title:k_ithilien
			}
			
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = morannon_change
				add_claim_on_loss = yes
			}
			title:c_morannon = {
				change_title_holder = {
					holder = scope:candidate3
					change = scope:morannon_change
					take_baronies = yes
				}	
			}
			resolve_title_and_vassal_change = scope:morannon_change
			
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = durthang_change
				add_claim_on_loss = yes
			}
			title:c_durthang = {
				change_title_holder = {
					holder = scope:candidate3
					change = scope:durthang_change
					take_baronies = yes
				}	
			}
			resolve_title_and_vassal_change = scope:durthang_change
			
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = lhingris_change
				add_claim_on_loss = yes
			}
			title:c_lhingris = {
				change_title_holder = {
					holder = scope:candidate3
					change = scope:lhingris_change
					take_baronies = yes
				}	
			}
			resolve_title_and_vassal_change = scope:lhingris_change
			
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = cirith_ungol_change
				add_claim_on_loss = yes
			}
			title:c_cirith_ungol = {
				change_title_holder = {
					holder = scope:candidate3
					change = scope:cirith_ungol_change
					take_baronies = yes
				}	
			}
			resolve_title_and_vassal_change = scope:cirith_ungol_change
			
		}
		
		scope:candidate3 = {
			get_title = title:d_watch_on_mordor
			set_primary_title_to = title:d_watch_on_mordor
		}
	}
	
	option = { # I don't like any of these candidates
		name = gondor.4001.d
		custom_tooltip = event_gondor_4001_d
		if = {
			limit = {
				NOT = {
					has_character_flag = wanted_new_watch_candidates
				}
			}
			add_character_flag = wanted_new_watch_candidates
		}
		trigger_event = {
			id = gondor.4001
			days = 1
		}
	}
	
	option = { # I myself will command the Watch
		name = gondor.4001.e
		custom_tooltip = event_gondor_4001_a
		
		hidden_effect = {
			title:c_morannon = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:c_cirith_ungol = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:c_durthang = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:c_lhingris = {
				set_de_jure_liege_title = title:d_watch_on_mordor
			}
			title:d_watch_on_mordor = {
				set_de_jure_liege_title = title:k_ithilien
			}
		}
		get_title = title:d_watch_on_mordor
	}
	
	after = { #Give the new watch commander his chronicle
		if = {
			limit = {
				exists = title:d_watch_on_mordor.holder 
			}
			title:d_watch_on_mordor.holder = {
				create_artifact_watch_chronicle_effect = { OWNER = title:d_watch_on_mordor.holder }
			}
		}
	}
}


gondor.4002 = { # Abandon the Watch on Mordor 
	content_source = realms_dlc
	type = character_event
	title = gondor.4002.t
	desc = {
		first_valid = {
			# You are the watch's commander
			triggered_desc = {
				trigger = {
					exists = scope:watch_commander
					scope:watch_commander = { this = root }
				}
				desc = gondor.4002.desc.self
			}	
			desc = gondor.4002.desc
		}
	}
	theme = stewardship
	left_portrait = {
		character = root
		animation = steward
	}
	right_portrait = {
		character = scope:watch_commander
		trigger = {
			exists = scope:watch_commander
			NOT = { this = root }
		}
		animation = marshal_shield
	}
	
	immediate = {
		title:d_watch_on_mordor.holder = { save_scope_as = watch_commander }
		title:d_watch_on_mordor =  { save_scope_as = watch_duchy }
		
		hidden_effect = { # Turn the titles held by the watch into Wilderness
			every_county = {
				limit = {
					duchy = scope:watch_duchy
				}
				make_settlement_county_wilderness = { COUNTY = this }
				ordered_county_province = { #add the mordor colonization blocker
					add_building = shadow_of_mordor
					add_building = ghosts
				}
			}	
		}
		
		destroy_title = title:d_watch_on_mordor
		
		title:c_morannon = {
			set_de_jure_liege_title = title:d_udun
		}
		title:c_cirith_ungol = {
			set_de_jure_liege_title = title:d_ephel_duath
		}
		title:c_lhingris = {
			set_de_jure_liege_title = title:d_ephel_duath
		}
		title:c_durthang = {
			set_de_jure_liege_title = title:d_udun
		}
		
		spawn_army = { #Get the watchmen as special soldiers
			uses_supply = no
			inheritable = yes
			name = mordor_watchmen
			men_at_arms = {
				type = gondorian_footmen
				stacks = 6
			}
			men_at_arms = {
				type = gondorian_bowmen
				stacks = 3
			}
			location = root.location
		}
	}
	
	option = { # I have a place at my court for you
		name = gondor.4002.a
		trigger = {
			exists = scope:watch_commander
			NOT = { this = root }
		}
		add_prestige = 50
		add_courtier = scope:watch_commander
	}
	
	option = { # Your watch has ended. Go in peace.
		name = gondor.4002.b
		trigger = {
			exists = scope:watch_commander
			NOT = { this = root }
		}
		scope:watch_commander = {
			add_prestige = 100
			add_gold = 50
		}
	}
	
	option = { # And now, my watch has ended
		name = gondor.4002.c 
		trigger = {
			exists = scope:watch_commander
			scope:watch_commander = { this = root }
		}
		add_prestige = minor_prestige_gain
		dynasty = {
			add_dynasty_prestige = minor_dynasty_prestige_gain
		}	
	}
}

### Rebuild the Royal Road ###

gondor.5001 = { # Royal Road construction begun
	content_source = realms_dlc
	type = character_event
	title = gondor.5001.t
	desc = gondor.5001.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = steward
	}
	
	option = { #A great effort, but greatly rewarded!
		name = gondor.5001.a
		#custom_tooltip = gondor.5001.a.tt
		root.capital_county = { save_temporary_scope_as = capital }
		custom_tooltip = rebuild_royal_road_tt1
		custom_tooltip = rebuild_royal_road_tt2
		trigger_event = {
			id = gondor.5002
			days = { 365 730 }
		}
	}
}

gondor.5002 = { # Royal Road is finished
	content_source = realms_dlc
	type = character_event
	title = gondor.5002.t
	desc = gondor.5002.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = happiness
	}
	
	option = { #We did it!
		name = gondor.5002.a

		# JUKE NOTE: IF YOU CHANGE THE EFFECTS, UPDATE THESE TOOLTIPS: rebuild_royal_road_tt1 rebuild_royal_road_tt2
		custom_tooltip = gondor.5002.a.tt
		root.capital_county = {
			add_county_modifier = {
				modifier = royal_road_rebuilt_province_modifier
			}
		}
		title:c_tharbad = {
			add_county_modifier = {
				modifier = royal_road_rebuilt_county_modifier
			}
		}
		title:c_fornost = {
			add_county_modifier = {
				modifier = royal_road_rebuilt_county_modifier
			}
		}
		title:c_riverwatch = {
			add_county_modifier = {
				modifier = royal_road_rebuilt_county_modifier
			}
		}
		title:c_bree = {
			add_county_modifier = {
				modifier = royal_road_rebuilt_county_modifier
			}
		}
		title:c_galtrev = {
			add_county_modifier = {
				modifier = royal_road_rebuilt_county_modifier
			}
		}
	}
}
	
### Enter Realm Events - Gondor ###

gondor.6001 = { # Morannon reconquered
	content_source = realms_dlc
	type = character_event
	title = gondor.6001.t
	desc = gondor.6001.desc
	theme = war
	trigger = { culture = { has_cultural_pillar = heritage_dunedain } } #Should only trigger for Dúnedain
	cooldown = { days = 3 }
	left_portrait = {
		character = root
		animation = marshal_shield
	}
	
	option = { #We did it!
		name = gondor.6001.a
		add_prestige = minor_prestige_gain
	}
}

gondor.6002 = { # Fall of Minas Tirith
	content_source = realms_dlc
	type = character_event
	title = gondor.6002.t
	desc = gondor.6002.desc
	theme = battle
	override_background = {
		reference = minas_tirith
	}
	trigger = { 
		culture = { has_cultural_pillar = heritage_dunedain } #Should only trigger for Dúnedain
		NOT = { has_character_flag = try_rotk }
	} 
	cooldown = { days = 3 }
	left_portrait = {
		character = root
		animation = rage
	}
	
	option = { #This can't be happening...
		name = gondor.6002.a
		add_prestige = minor_prestige_loss
	}
}

gondor.6003 = { # Minas Tirith reclaimed
	content_source = realms_dlc
	type = character_event
	title = gondor.6003.t
	desc = gondor.6003.desc
	theme = war
	trigger = { culture = { has_cultural_pillar = heritage_dunedain } } #Should only trigger for Dúnedain
	cooldown = { days = 3 }
	override_background = {
		reference = minas_tirith
	}
	left_portrait = {
		character = root
		animation = marshal_shield
	}
	
	option = { #We did it!
		name = gondor.6003.a
		add_prestige = medium_prestige_gain
	}
}

gondor.6004 = { # Conquest of Umbar
	content_source = realms_dlc
	type = character_event
	title = gondor.6004.t
	desc = gondor.6004.desc
	theme = war
	override_background = { reference = docks_adunai }
	trigger = { culture = { has_cultural_pillar = heritage_dunedain } } #Should only trigger for Dúnedain
	cooldown = { days = 3 }
	left_portrait = {
		character = root
		animation = marshal_shield
	}
	
	option = { #We did it!
		name = gondor.6004.a
		add_prestige = medium_prestige_gain
	}
}

### Restore Gondor CB events ###

gondor.6500 = { # The War for Gondor begins
	content_source = realms_dlc
	type = character_event
	title = gondor.6500.t
	desc = gondor.6500.desc
	theme = war
	override_background = { reference = minas_tirith }
	left_portrait = {
		character = root
		animation = marshal_shield
	}
	right_portrait = {
		character = scope:sauron
		animation = menacing
	}
	immediate = {
		character:lineofsauron = { save_scope_as = sauron }
	}
	option = { #We shall reclaim Gondor for the Dúnedain!
		name = gondor.6500.a
		add_prestige = minor_prestige_gain
	}
}

gondor.6501 = { # The War for Gondor begins - Sauron perspective
	content_source = realms_dlc
	type = character_event
	title = gondor.6501.t
	desc = gondor.6501.desc
	theme = war
	override_background = { reference = minas_tirith }
	left_portrait = {
		character = root
		animation = menacing
	}
	right_portrait = {
		character = scope:attacker
		animation = marshal_shield
	}
	option = { #The fools! I will scatter their armies like leaves in the wind.
		name = gondor.6501.a
		add_prestige = minor_prestige_gain
	}
}

scripted_effect set_gondor_ruler_to_chosen_candidate = {
	$CANDIDATE$ = {
		get_title = title:c_minas_tirith
		get_title = title:c_minas_tirith.empire
		get_title = title:k_anorien
		get_title = title:k_ithilien
		hidden_effect = {
			get_title = title:c_osgiliath
			get_title = title:c_malridh
			get_title = title:d_minas_tirith
		}
	}
	hidden_effect = { #Transfering of de jure gondorian vassals
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
		}
		title:c_minas_tirith.empire = {
			every_dejure_vassal_title_holder = {
				limit = {
					NOT = { liege = $CANDIDATE$ }
					OR = {
						culture = culture:gondorian
						culture = culture:belfalathrim
						has_title = title:k_pinnath_gelin
					}
				}
				change_liege = {
					liege = $CANDIDATE$
					change = scope:change
				}
			}
		}
		title:k_anorien = {
			every_de_jure_county = {
				limit = {
					holder = { faith_is_evil = yes }
				}
				change_title_holder = {
					holder = $CANDIDATE$
					change = scope:change
					take_baronies = yes
				}
				set_county_culture = culture:gondorian
				set_county_faith = faith:faith_edain
			}
		}
		title:k_ithilien = {
			every_de_jure_county = {
				limit = {
						NOT = { duchy = title:d_minas_ithil }
					holder = { faith_is_evil = yes }
				}
				change_title_holder = {
					holder = $CANDIDATE$
					change = scope:change
					take_baronies = yes
				}
				set_county_culture = culture:gondorian
				set_county_faith = faith:faith_edain
			}
		}
		resolve_title_and_vassal_change = scope:change
	}
}

gondor.6502 = { # After the War - choosing a new ruler for Gondor
	content_source = realms_dlc
	type = character_event
	title = gondor.6502.t
	desc = gondor.6502.desc
	theme = war
	window = visit_settlement_window
	override_background = { reference = minas_tirith }
	left_portrait = {
		character = root
		animation = celebrate_sword
	}
	right_portrait = {
		character = scope:sauron
		animation = rage
	}
	lower_center_portrait = { character = scope:candidate1 }
	lower_right_portrait = { character = scope:candidate2 }
	lower_left_portrait = { character = scope:candidate3 }
	immediate = {
		character:lineofsauron = { save_scope_as = sauron }
		random_courtier_or_guest = {
			limit = {
				faith_is_good = yes 
				OR = {
					culture = culture:dunedain_ranger
					culture = culture:gondorian
					culture = culture:belfalathrim
					culture = culture:harondorim
					culture = culture:arnorian
					culture = culture:dunedain
				}
			}
			save_scope_as = candidate1 
		}
		hidden_effect = { # Arnorians
			if = {
				limit = {
					character:lineisildur42 = { # Aragorn
						is_alive = yes
					}
				}
				character:lineisildur42 = { save_scope_as = candidate2 }
			}
			else_if = {
				limit = {
					character:linehalbarad9 = { # Halbarad
						is_alive = yes
					}
				}
				character:linehalbarad9 = { save_scope_as = candidate2 }
			}
			else = { #Fetch a fallback character from Arnorian nobility
				title:e_arnor = {
					ordered_de_jure_county_holder = {
						limit = {
							OR = {
								culture = culture:dunedain_ranger
								culture = culture:arnorian
							}
							dynasty = { dynasty_prestige_level >= 5 } #Equal or more than Well-Known
							is_independent_ruler = yes
						}
						alternative_limit = {
							OR = {
								culture = culture:dunedain_ranger
								culture = culture:arnorian
							}
							dynasty = {
								dynasty_prestige_level >= 5 #Equal or more than Well-Known
								any_dynasty_member = {
									is_independent_ruler = yes
									save_temporary_scope_as = candidate2
								}
							} 
						}
						order_by = highest_held_title_tier
						if = {
							limit = { NOT = { exists = scope:candidate2 } }
							save_scope_as = candidate2
						}
					}
				}
				if = { #Ultimate fallback
					limit = { NOT = { exists = scope:candidate2 } }
					create_character = { 
						location = root.location
						age = { 20 35 }
						culture = culture:dunedain_ranger
						faith = faith:faith_edain
						dynasty = generate
						gender_female_chance = 25
						diplomacy = 10
						martial = 12
						stewardship = 9
						intrigue = 7
						learning = 5
						prowess = 8
						trait = legitimized_bastard
						trait = blood_of_numenor_5
						save_scope_as = candidate2
					}
				}

			}	
		}
		hidden_effect = { # Gondorians
			if = { 
				limit = {
					character:linesteward38 = { # Denethor
						is_alive = yes
					}
				}
				character:linesteward38 = { save_scope_as = candidate3 }
			}
			else_if = {
				limit = {
					character:linesteward39 = { # Boromir
						is_alive = yes
					}
				}
				character:linesteward39 = { save_scope_as = candidate3 }
			}
			else_if = {
				limit = {
					character:linesteward40 = { # Faramir
						is_alive = yes
					}
				}
				character:linesteward40 = { save_scope_as = candidate3 }
			}
			else = { # Create a fallback character
				title:c_minas_tirith.empire = { #First check for any existing title holders which are gondorian
					ordered_de_jure_county_holder = {
						limit = {
							culture = culture:gondorian
							# dynasty = { dynasty_prestige_level >= 1 } #Equal or more than Well-Known
						}
						alternative_limit = {
							culture = culture:gondorian
							dynasty = {
								dynasty_prestige_level >= 1 #Equal or more than Well-Known
								any_dynasty_member = {
									save_temporary_scope_as = candidate3
								}
							}
						}
						order_by = highest_held_title_tier
						if = {
							limit = { NOT = { exists = scope:candidate3 } }
							save_scope_as = candidate3
						}
					}
				}
				if = { #If no title holders existed, check for any PREVIOUS title holders
					limit = { NOT = { exists = scope:candidate3 } }
					title:c_minas_tirith.empire = {
						ordered_de_jure_county = {
							limit = {
								previous_holder ?= {
									culture = culture:gondorian
									dynasty = { dynasty_prestige_level >= 1 } #Equal or more than Well-Known
								}
							}
							alternative_limit = {
								previous_holder ?= {
									culture = culture:gondorian
									dynasty = {
										dynasty_prestige_level >= 1 #Equal or more than Well-Known
										any_dynasty_member = {
											save_temporary_scope_as = candidate3
										}
									}
								}
							}
							order_by = highest_held_title_tier
							if = {
								limit = { NOT = { exists = scope:candidate3 } }
								save_scope_as = candidate3
							}
						}
					}
				}
				if = {
					limit = { NOT = { exists = scope:candidate3 } }
					create_character = { 
						location = root.location
						age = { 20 35 }
						culture = culture:gondorian
						faith = faith:faith_edain
						dynasty = generate
						gender_female_chance = 25
						diplomacy = 10
						martial = 12
						stewardship = 9
						intrigue = 7
						learning = 5
						prowess = 8
						trait = legitimized_bastard
						trait = blood_of_numenor_2
						save_scope_as = candidate3
					}
				}
			}	
		}
		hidden_effect = { # Belfalathrim
			if = { 
				limit = {
					character:dolamroth27 = { # Imrahil
						is_alive = yes
					}
				}
				character:dolamroth27 = { save_scope_as = candidate4 }
			}
			else_if = {
				limit = {
					character:dolamroth28 = { # Elphir
						is_alive = yes
					}
				}
				character:dolamroth28 = { save_scope_as = candidate4 }
			}
			else_if = {
				limit = {
					character:dolamroth29 = { # Erchirion
						is_alive = yes
					}
				}
				character:dolamroth29 = { save_scope_as = candidate4 }
			}
			else = { # Create a fallback character
				title:c_dol_amroth.kingdom = { #First check for any existing title holders which are belfalathrim
					ordered_de_jure_county_holder = {
						limit = {
							culture = culture:belfalathrim
							dynasty = { dynasty_prestige_level >= 5 } #Equal or more than Well-Known
						}
						alternative_limit = {
							culture = culture:belfalathrim
							dynasty = {
								dynasty_prestige_level >= 5 #Equal or more than Well-Known
								any_dynasty_member = {
									save_temporary_scope_as = candidate4
								}
							}
						}
						order_by = highest_held_title_tier
						if = {
							limit = { NOT = { exists = scope:candidate4 } }
							save_scope_as = candidate4
						}
					}
				}
				if = { #If no title holders existed, check for any PREVIOUS title holders
					limit = { NOT = { exists = scope:candidate4 } }
					title:c_dol_amroth.kingdom = {
						ordered_de_jure_county = {
							limit = {
								previous_holder ?= {
									culture = culture:belfalathrim
									dynasty = { dynasty_prestige_level >= 5 } #Equal or more than Well-Known
								}
							}
							alternative_limit = {
								previous_holder ?= {
									culture = culture:belfalathrim
									dynasty = {
										dynasty_prestige_level >= 5 #Equal or more than Well-Known
										any_dynasty_member = {
											save_temporary_scope_as = candidate4
										}
									}
								}
							}
							order_by = highest_held_title_tier
							if = {
								limit = { NOT = { exists = scope:candidate4 } }
								save_scope_as = candidate4
							}
						}
					}
				}
				if = {
					limit = { NOT = { exists = scope:candidate4 } }
					create_character = { 
						location = root.location
						age = { 20 35 }
						culture = culture:belfalathrim
						faith = faith:faith_edain
						dynasty = generate
						gender_female_chance = 25
						diplomacy = 10
						martial = 12
						stewardship = 9
						intrigue = 7
						learning = 5
						prowess = 8
						trait = legitimized_bastard
						trait = blood_of_numenor_2
						save_scope_as = candidate4
					}
				}
			}	
		}
	}
	option = { # I have the perfect candidate at my court
		name = gondor.6502.a
		custom_tooltip = gondor.6502.a.tt
		
		hidden_effect = {
			title:c_minas_tirith.empire = {
				every_in_de_jure_hierarchy = {
					limit = { tier = tier_kingdom }
					set_de_jure_liege_title = title:e_gondor_steward
				}
			}
		}

		set_gondor_ruler_to_chosen_candidate = { CANDIDATE = scope:candidate1 }
	}
	option = { # Aragorn, or Halbarad, or a random ranger
		name = gondor.6502.b
		add_prestige = minor_prestige_gain
		
		hidden_effect = {
			title:c_minas_tirith.empire = {
				every_in_de_jure_hierarchy = {
					limit = { tier = tier_kingdom }
					set_de_jure_liege_title = title:e_gondor
				}
			}
		}

		set_gondor_ruler_to_chosen_candidate = { CANDIDATE = scope:candidate2 }
	}
	option = { # Denethor, Boromir, Faramir, or a random gondorian
		name = gondor.6502.c
		add_prestige = minor_prestige_gain
		
		hidden_effect = {
			title:c_minas_tirith.empire = {
				every_in_de_jure_hierarchy = {
					limit = { tier = tier_kingdom }
					set_de_jure_liege_title = title:e_gondor_steward
				}
			}
		}

		set_gondor_ruler_to_chosen_candidate = { CANDIDATE = scope:candidate3 }
	}
	option = { # Imrahil, his sons, or a random Belfalathrim
		name = gondor.6502.d
		add_prestige = minor_prestige_gain
		
		hidden_effect = {
			title:c_minas_tirith.empire = {
				every_in_de_jure_hierarchy = {
					limit = { tier = tier_kingdom }
					set_de_jure_liege_title = title:e_gondor
				}
			}
		}

		set_gondor_ruler_to_chosen_candidate = { CANDIDATE = scope:candidate4 }
	}
	option = { # I claim Gondor for myself.
		trigger = { is_human = yes }
		name = gondor.6502.e
		add_prestige = minor_prestige_gain
		
		hidden_effect = {
			title:c_minas_tirith.empire = {
				every_in_de_jure_hierarchy = {
					limit = { tier = tier_kingdom }
					set_de_jure_liege_title = title:e_gondor_steward
				}
			}
		}

		set_gondor_ruler_to_chosen_candidate = { CANDIDATE = root }
	}

	after = {
		if = {
			limit = { # Major News
				NOT = { has_game_rule = no_news }
			}
			every_player = { #Global News Announcement
				trigger_event = news_event.0040
			}
		}
	}
}