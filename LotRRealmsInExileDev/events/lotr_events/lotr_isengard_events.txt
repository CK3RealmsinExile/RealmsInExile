namespace = isengard

#### INDEX ####
### Maintenance & Shared: 0000-0099
# 0001 - Check for valid war targets in Dunland unification
# 0002 - The War for Rohan (placed here as it can fire from multiple events)
# 0003 - The War for Rohan - Isengard Victory (placed here as it can fire from multiple events)
# 0004 - The War for Rohan - Rohan Victory (placed here as it can fire from multiple events)
# 0005 - A Puppet in Rohan
# 0006 - A Marriage for the New King
# 0007 - An Offer of Marriage
# 0008 - Muster the Rohirrim!
# 0009 - Muster the Rohirrim! (Recipient event)
# 0010 - Muster the Rohirrim! - Men Arrive at Edoras
# 0011 - Muster the Rohirrim! - No Men for Edoras
#
### General: 0100-0199
## Introduction
# 0101 - The Lord of Isengard
# 0102 - My Search for the One
# 0103 - The Palantír
#04
### Align with Sauron: 0200-0299
## General Align Events
# 0201 - An Army Worthy of Mordor
# 0202 - Wildmen of the West
# 0203 - A New Breed of Uruk
#
## Dunlendings
# 0210 - The Petty Kings of Dunland
# 0211 - A Messenger from the White Wizard
# 0212 - A High King Bends the Knee
# 0213 - An Offer Refused
#
## Uruk Hai
# 0220 - The Infantry of the Uruk-hai
# 0221 - The Archers of the Uruk-hai
# 0222 - My Army's Secret Weapon
# 0223 - The Most Loyal of Uruks
#
## The Industry of Isengard
# 0230 - The Engines of War
# 0231 - A Shortage of Materials
# 0232 - The Pits of Isengard
# 0233 - A Hunger for Steel
# 0234 - Logging in Fangorn
# 0235 - The Forges of Isengard
# 0236 - The Endless Drive of Industry
# 0237 - An Ancient Horror Uncovered
# 0238 - A Horror Vanquished
# 0239 - A Subterranean Complex
#
## Dealing with Rohan
# 0250 - The Question of Rohan
# 0251 - An Ultimatum from Isengard
# 0252 - The Folly of Rohan
# 0253 - The Submission of Rohan
# 0260 - Our Man in Edoras
# 0261 - Corruption of Theoden
# 0262 - The Ailing of the King
# 0263 - The White Wizard Arrives
# 0270 - Organise Raids on the Westfold
# 0271 - Reports of Raiders
# 0272 - Pillaging of the Westfold
# 0273 - The Fall of Theodred
# 0274 - The Treachery of Isengard
# 0276 - Signs of Treachery
# 0277 - A Worm Exposed
# 0278 - The Rot of the Riddermark
# 0279 - The Worm Submits
# 0280 - Developments in Rohan
# 0281 - Seeking Alliances
# 0290 - The Execution of Theodred
#
### Evil Post-War Events: 0300-0399
## General Align Events
# 0300 - The Extent of my Ambitions
#
### Resist Sauron: 0500-0599
## General Resist Events
# 0500 - The Fate of the Palantír
# 0501 - A New Way Forward
#
## The White Council
# 0510 - Summon the White Council
# 0511 - The Wisdom of Gandalf
# 0512 - The Counsel of Elrond
# 0513 - The Intellect of Galadriel
# 0513 - The Intuition of Radagast - Pre-emptive strike on Dol Guldur?
# 0514 - The Wisdom of Alatar
# 0515 - The Vision of Pallando
# 0516 - The Alliance of the Wise
#
## Swear Fealty to Gondor
# 0520 - An Advisor to Gondor
# 0521 - MATT STUFF
#
## Swear Fealty to Rohan
# 0530 - An Advisor to Rohan
# 0531 - Rapproachment with Dunland
#
## Remain Independent
# 0550 - Warden of the West
#
## Dunlending White-Hand	#Juke note: WIP, events to convert dunlendings to the post-saruman faith
# 0700 - Legacy of the White Hand	#converts white hand cult/ lidless eye Dunlendings after saruman is gone. Possibly tie to a news event
#
#--------------------------------------------------------------------------#

### Maintenance & Shared ###

isengard.0001 = { # Check for valid war targets in Dunland unification
	hidden = yes
	scope = none

	trigger = {
		exists = scope:respondent
		is_ai = yes
	}

	immediate = {
		if = {
			limit = {
				scope:respondent = {
					any_character_to_title_neighboring_county = {
						kingdom = title:k_dunland
						holder = { 
							is_independent_ruler = yes
							NOT = { this = scope:saruman }
						}
					}
					is_at_war = no
				}
			}
			scope:respondent = {
				random_character_to_title_neighboring_county = {
					limit = {
						kingdom = title:k_dunland
						holder = { 
							is_independent_ruler = yes
							NOT = { this = scope:saruman }
						}
					}
					save_scope_as = newtarget
					holder = { save_scope_as = newenemy }
				}
			}
			start_war = {
				cb = claim_cb
				target = scope:newenemy
				claimant = scope:respondent
				target_title = scope:newtarget
			}
			## Removed this for County Conquests to lessen toll on AI Saruman
			# every_character_war = {
			# 	add_attacker = scope:saruman
			# }
			# scope:saruman = {
			# 	send_interface_toast = {
			# 		left_icon = root
			# 		right_icon = scope:newenemy
			# 		title = isengard.0001.toast.t
			# 		custom_tooltip = isengard.0001.toast.desc
			# 	}
			# }
		}
		else_if = {
			limit = {
				scope:respondent = {
					any_character_to_title_neighboring_duchy = {
						kingdom = title:k_dunland
						exists = holder
						holder = { 
							is_independent_ruler = yes
							NOT = { this = scope:saruman }
						}
					}
					is_at_war = no
				}
			}
			scope:respondent = {
				random_character_to_title_neighboring_duchy = {
					limit = {
						kingdom = title:k_dunland
						holder = { 
							is_independent_ruler = yes
							NOT = { this = scope:saruman }
						}
					}
					save_scope_as = newtarget
					holder = { save_scope_as = newenemy }
				}
			}
			start_war = {
				cb = claim_cb
				target = scope:newenemy
				claimant = scope:respondent
				target_title = scope:newtarget
			}
			every_character_war = {
				add_attacker = scope:saruman
			}
			scope:saruman = {
				send_interface_toast = {
					left_icon = root
					right_icon = scope:newenemy
					title = isengard.0001.toast.t
					custom_tooltip = isengard.0001.toast.desc
				}
			}
		}
		scope:respondent = {
			trigger_event = {
				id = isengard.0001
				days = { 350 500 }
			}
		}
	}

}

isengard.0002 = { # The War for Rohan
	content_source = realms_dlc
	type = character_event
	title = isengard.0002.t
	desc = isengard.0002.desc
	theme = war
	override_background = {
		reference = edoras
	}

	left_portrait = {
		character = root
		animation = dismissal
	}

	right_portrait = {
		character = title:k_rohan.holder
		animation = personality_callous
	}

	immediate = {
		if = {
			limit = { has_truce = title:k_rohan.holder }
			cancel_truce_both_ways = title:k_rohan.holder
		}
	}

	option = { # Begin the War
		debug_log = "Isengard: Rohan War Begins"
		name = isengard.0002.a
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_isengard_puppet_rohan
		}
		every_vassal = {
			limit = { this = title:k_dunland.holder }
			save_scope_as = ally
		}
		every_character_war = {
			add_attacker = scope:ally
		}
		if = {
			limit = { title:k_rohan.holder = { faith_is_good = yes } }
		    title:k_rohan.holder = {
		    	trigger_event = isengard.0015
		    }
		    start_war = {
		    	casus_belli = rohan_war_cb
		    	target = title:k_rohan.holder
		    	target_title = title:k_rohan
		    }
		}
		# Start event loop to check for Gondor entering to prompt Mordor to intervene
		character:lineofsauron = {
			trigger_event = isengard.0017
		}
	}
}

isengard.0003 = { # The War for Rohan - Isengard Victory
	content_source = realms_dlc
	type = character_event
	title = isengard.0003.t
	desc = isengard.0003.desc
	theme = dread
	override_background = {
		reference = edoras
	}
	right_portrait = {
		character = root
		animation = war_over_win
	}

	option = {
		name = isengard.0003.a
		debug_log = "Isengard: Rohan War - Isengard Victory"
		add_character_flag = rohan_war_victory
		trigger_event = {
			id = isengard.0300
			months = 3
		}
	}
}

isengard.0004 = { # The War for Rohan - Rohan Victory (Rohan Perspective)
	content_source = realms_dlc
	type = character_event
	title = isengard.0004.t
	desc = isengard.0004.desc
	theme = dread
	override_background = {
		reference = flooded_isengard
	}
	left_portrait = {
		character = root
		animation = war_over_win
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = prisondungeon
	}

	immediate = {
		debug_log = "Isengard: Rohan War - Rohan Victory"
		save_scope_as = victor
		
		destroy_title = title:e_isengard_unleashed
		destroy_title = title:k_isengard
		
		character:lineofsaruman = { # The King of Rohan seizes the Palantir
			every_character_artifact = {
				limit = { has_variable = palantir_orthanc }
				set_owner = {
					target = root
					history = {
						type = inherited
						recipient = root
					}
				}
			}
		}
		
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:c_isengard = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
		
		title:c_isengard = {
			if = {
				limit = { has_county_modifier = industrialised_isengard_1_county_modifier }
				remove_county_modifier = industrialised_isengard_1_county_modifier
			}
			if = {
				limit = { has_county_modifier = industrialised_isengard_2_county_modifier }
				remove_county_modifier = industrialised_isengard_2_county_modifier
			}
			if = {
				limit = { has_county_modifier = industrialised_isengard_3_county_modifier }
				remove_county_modifier = industrialised_isengard_3_county_modifier
			}
			if = {
				limit = { has_county_modifier = loyal_dunlendings_of_isengard_county_modifier }
				remove_county_modifier = loyal_dunlendings_of_isengard_county_modifier
			}
			set_county_culture = root.culture
			set_county_faith = root.faith
		}
		
		title:c_isengard.title_province = {
			if = {
				limit = { has_province_modifier = industrialised_isengard_1_province_modifier }
				remove_province_modifier = industrialised_isengard_1_province_modifier
			}
			if = {
				limit = { has_province_modifier = industrialised_isengard_2_province_modifier }
				remove_province_modifier = industrialised_isengard_2_province_modifier
			}
			if = {
				limit = { has_province_modifier = industrialised_isengard_3_province_modifier }
				remove_province_modifier = industrialised_isengard_3_province_modifier
			}
		}
	}
	
	option = { #Kill him
		name = isengard.0004.a
		destroy_title = title:e_isengard_unleashed
		show_as_tooltip = {
			character:lineofsaruman = { 
				death = { 
					death_reason = death_decapitated
					killer = scope:victor
				}
			}
		}
		character:lineofsaruman = { 
			trigger_event = isengard.0018
		}
	}

	option = { #Banish him
		name = isengard.0004.b
		destroy_title = title:e_isengard_unleashed
		show_as_tooltip = {
			character:lineofsaruman = { 
				depose = yes
				hidden_effect = { move_to_pool = yes }
			}
		}
		character:lineofsaruman = { 
			trigger_event = isengard.0019
		}
	}
}

isengard.0005 = { # A Puppet in Rohan
	content_source = realms_dlc
	type = character_event
	title = isengard.0005.t
	desc = isengard.0005.desc
	theme = intrigue
	override_background = {
		reference = edoras
	}
	left_portrait = {
		character = root
		animation = war_over_win
	}
	right_portrait = {
		character = title:k_rohan.holder
		animation = war_over_loss
	}
	lower_left_portrait = scope:dunlendingcandidate
	lower_right_portrait = scope:agent
	lower_center_portrait = scope:urukcandidate

	immediate = {
		debug_log = "Isengard: Rohan Puppet Installed"
		add_character_flag = rohan_war_victory
		save_agent_in_edoras_scope = yes # Find head agent in Edoras and save_scope_as agent
		save_urukcandidate_high_martial_urukhai_scope = yes # Find a high martial Uruk-hai and save_scope_as urukcandidate
		save_dunlendingcandidate_scope = yes # Find a Dunlending and save_scope_as dunlendingcandidate
		become_isengard_unleashed_if_not_emperor = yes # Get imperial title if not already earned
	}

	option = { # Install the chief of my agents
		name = isengard.0005.a
		trigger = { 
			exists = scope:agent
			NOT = { has_character_flag = grima_won_civil_war }
		}
		make_target_character_ruler_of_rohan = { TARGET = scope:agent }
		scope:agent = {
			make_character_submit_to_root = yes
			trigger_event = isengard.0006
			set_character_faith_with_conversion = root.faith
		}
		add_hook = { 
			type = loyalty_hook
			target = scope:agent
		}
	}

	option = { # Install one of my loyal Uruk-hai
		name = isengard.0005.b
		trigger = { 
			exists = scope:urukcandidate
			NOT = { has_character_flag = grima_won_civil_war }
		}
		make_target_character_ruler_of_rohan = { TARGET = scope:urukcandidate }
		scope:urukcandidate = {
			make_character_submit_to_root = yes
			set_character_faith_with_conversion = root.faith
		}
		add_hook = { 
			type = loyalty_hook
			target = scope:urukcandidate
		}
	}

	option = { # Restore Dunlending rule to Rohan
		name = isengard.0005.c
		trigger = { 
			exists = scope:dunlendingcandidate
			NOT = { has_character_flag = grima_won_civil_war }
		}
		make_target_character_ruler_of_rohan = { TARGET = scope:dunlendingcandidate }
		scope:dunlendingcandidate = {
			make_character_submit_to_root = yes
			set_character_faith_with_conversion = root.faith
		}
		add_hook = { 
			type = loyalty_hook
			target = scope:dunlendingcandidate
		}
	}

	option = { # Keep it all for myself...
		name = isengard.0005.d
		trigger = {
			NOT = { has_character_flag = grima_won_civil_war }
		}
		make_target_character_ruler_of_rohan = { TARGET = root }
	}

	option = { # My agent took control in a civil war
		name = isengard.0005.e
		trigger = {
			has_character_flag = grima_won_civil_war
		}
		make_target_character_ruler_of_rohan = { TARGET = scope:defender }
		scope:defender = {
			make_character_submit_to_root = yes
			trigger_event = isengard.0006
			if = {
				limit = { has_title = title:c_kingstead }
				set_realm_capital = title:c_kingstead
			}
			set_character_faith_with_conversion = root.faith
		}
	}

	after = {
		trigger_event = {
			id = isengard.0300
			months = 3
		}
		faith:faith_rohirric = {
			change_fervor = {
				value = -60
				desc = fervor_loss_great_holy_war
			}
		}
		hidden_effect = {
			title:k_rohan.holder = {
				every_vassal = {
					limit = { is_ai = yes }
					random = {
						chance = 66
						set_character_faith_with_conversion = root.faith
					}
				}
				if = {
					limit = { is_ai = yes }
					add_dread = 60
				}
			}
		}
	}
}

isengard.0006 = { # A Marriage for the New King
	content_source = realms_dlc
	type = character_event
	title = isengard.0006.t
	desc = isengard.0006.desc
	theme = marriage
	left_portrait = {
		character = root
		animation = flirtation_left
	}
	right_portrait = {
		character = character:6000035
		animation = admiration
	}
	
	trigger = {
		is_married = no
		character:6000035 = {
			is_alive = yes
			is_married = no
		}
	}

	option = { # Attempt to marry Eowyn
		name = isengard.0006.a
		character:6000035 = {
			trigger_event = isengard.0007
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	option = { # My heart longs for another
		name = isengard.0006.b
		remove_trait = cannot_marry
	}
}

isengard.0007 = { # A Marriage Offer from the King of Rohan
	content_source = realms_dlc
	type = character_event
	title = isengard.0007.t
	desc = isengard.0007.desc
	theme = dread
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = title:k_rohan.holder
		animation = flirtation
	}
	
	trigger = {
		is_married = no
		title:k_rohan.holder = {
			is_alive = yes
			is_married = no
		}
	}

	immediate = {
		title:k_rohan.holder = {
			save_scope_as = suitor
		}
		save_scope_as = eowyn
	}

	option = { # Accept
		name = isengard.0007.a
		remove_trait = cannot_marry
		show_as_tooltip = {
			marry = title:k_rohan.holder
		}
		title:k_rohan.holder = {
			remove_trait = cannot_marry
			send_interface_toast = {
				left_icon = title:k_rohan.holder
				right_icon = character:6000035
				title = isengard.0007.a.toast
				marry = character:6000035				
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	option = { # Refuse and flee
		name = isengard.0007.b
		trigger = {
			OR = {
				exists = title:e_gondor_steward.holder
				exists = title:e_gondor.holder
				exists = title:e_castamir.holder
			}
		}
		if = {
			limit = {
				exists = title:e_gondor_steward.holder
			}
			set_employer = title:e_gondor_steward.holder
		}
		else_if = {
			limit = {
				exists = title:e_gondor.holder
			}
			set_employer = title:e_gondor.holder
		}
		else = {
			limit = {
				exists = title:e_castamir.holder
			}
			set_employer = title:e_castamir.holder
		}
		title:k_rohan.holder = {
			send_interface_toast = {
				left_icon = title:k_rohan.holder
				right_icon = character:6000035
				title = isengard.0007.b.toast
				remove_trait = cannot_marry
			}
		}	
	}
}

isengard.0008 = { # Muster the Rohirrim!
	content_source = realms_dlc
	type = character_event
	title = isengard.0008.t
	desc = isengard.0008.desc
	theme = martial
	override_background = {
		reference = edoras
	}
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:saruman
		animation = personality_callous
	}

	immediate = {
		save_scope_as = rohanking
		character:lineofsaruman = { save_scope_as = saruman }
		character:6000000 = { save_scope_as = eorl }
	}

	option = { # Send out the riders!
		debug_log = "Isengard: Rohirrim Mustered"
		name = isengard.0008.a
		custom_tooltip = isengard.0008.a.tt
		every_powerful_vassal = {
			trigger_event = isengard.0009
		}
		scope:saruman = {
			trigger_event = {
				id = isengard.0002
				days = 30
			}
		}
	}
}

isengard.0009 = { # Muster the Rohirrim - Recipient Event
	content_source = realms_dlc
	type = character_event
	title = isengard.0009.t
	desc = isengard.0009.desc
	theme = martial
	override_background = {
		reference = edoras
	}
	right_portrait = {
		character = scope:rohanking
		animation = personality_bold
	}
	
	left_portrait = {
		character = root
		animation = admiration
	}

	immediate = {
		save_scope_as = powerful_vassal
		title:k_rohan.holder = { save_scope_as = rohanking }
	}

	option = { # Send reinforcments to Edoras!
		name = isengard.0009.a
		scope:rohanking = {
			trigger_event = {
				id = isengard.0010
				days = { 7 29 }
			}
		}
		remove_short_term_gold = 100
		add_prestige = 200
		add_character_modifier = {
			modifier = mustered_rohirrim_character_modifier
			years = 3
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { # Do not send reinforcments to Edoras.
		name = isengard.0009.b
		scope:rohanking = {
			trigger_event = {
				id = isengard.0011
				days = 2
			}
		}
		add_prestige = -200
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

isengard.0010 = { # Muster the Rohirrim - Men Arrive at Edoras
	content_source = realms_dlc
	type = character_event
	title = isengard.0010.t
	desc = isengard.0010.desc
	theme = martial
	override_background = {
		reference = edoras
	}

	left_portrait = {
		character = root
		animation = personality_bold
	}

	right_portrait = {
		character = scope:powerful_vassal
		animation = personality_honorable
	}
	
	option = { 
		name = isengard.0010.a
		if = {
			limit = {
				scope:powerful_vassal = { highest_held_title_tier = tier_kingdom }
			}
			spawn_army = {		  
				uses_supply = no
				inheritable = no
				name = mustered_rohirrim_event_troops
				men_at_arms = {
					type = eotheod_horse_archers
					stacks = 2
				}
				men_at_arms = {
					type = helmingas_warriors
					stacks = 2
				}
				location = capital_province
			}
		}
		else_if = {
			limit = {
				scope:powerful_vassal = { highest_held_title_tier = tier_duchy }
			}
			spawn_army = {		  
				uses_supply = no
				inheritable = no
				name = mustered_rohirrim_event_troops
				men_at_arms = {
					type = eotheod_horse_archers
					stacks = 1
				}
				men_at_arms = {
					type = helmingas_warriors
					stacks = 1
				}
				location = capital_province
			}
		}
		else_if = {
			limit = {
				scope:powerful_vassal = { highest_held_title_tier = tier_county }
			}
			spawn_army = {		  
				uses_supply = no
				inheritable = no
				name = mustered_rohirrim_event_troops
				men_at_arms = {
					type = eotheod_light_horsemen
					stacks = 1
				}
				men_at_arms = {
					type = eotheod_horse_axemen
					stacks = 1
				}
				location = capital_province
			}
		}
		else = {
			spawn_army = {		  
				uses_supply = no
				inheritable = no
				name = mustered_rohirrim_event_troops
				levies = 250
				location = capital_province
			}
		}
	}
}

isengard.0011 = { # Muster the Rohirrim - No Support for Edoras
	content_source = realms_dlc
	type = character_event
	title = isengard.0011.t
	desc = isengard.0011.desc
	theme = martial
	override_background = {
		reference = edoras
	}

	left_portrait = {
		character = root
		animation = personality_bold
	}

	right_portrait = {
		character = scope:powerful_vassal
		animation = personality_dishonorable
	}
	
	option = { 
		name = isengard.0011.a
		add_opinion = {
			target = scope:powerful_vassal
			modifier = refusal_opinion
			#years = 10
			opinion = -30
		}
	}
}

isengard.0012 = { # Seek Support in Civil War - Petitioner Perspective
	content_source = realms_dlc
	type = character_event
	title = isengard.0012.t
	desc = {
		desc = isengard.0012.desc.start
		triggered_desc = { ## If Grima is alive, talk about him being your agent
			trigger = { 
				scope:recipient = {
					opinion = {
						target = root
						value < 20
					}
				}
			} 
			desc = isengard.0012.desc.bargain
		}
		triggered_desc = { ## If Grima is alive, talk about him being your agent
			trigger = { 
				scope:recipient = {
					opinion = {
						target = root
						value >= 20
					}
				}
			} 
			desc = isengard.0012.desc.unconditional
		}
		desc = isengard.0012.desc.end
	}
	theme = diplomacy

	left_portrait = {
		character = root
		animation = personality_bold
	}

	right_portrait = {
		character = scope:recipient
		animation = personality_cynical
	}

	lower_left_portrait = {
		character = scope:rohanking
	}

	lower_right_portrait = {
		character = scope:agent
	}
	
	trigger = {
		scope:recipient = { is_alive = yes }
		scope:petitioner = { is_alive = yes }
	}

	option = { # Offer Gold
		name = isengard.0012.a
		trigger = { 
			scope:recipient = {
				opinion = {
					target = root
					value < 20
				}
			}
		}
		if = {
			limit = { 
				scope:recipient = {
					is_ai = yes
				}
			}
			scope:recipient = {
				random_list = {
					1 = {
						root = { 
							custom_tooltip = isengard.0012.supports
							if = {
								limit = {
									scope:recipient = {
										highest_held_title_tier = tier_county
									}
								}
								send_interface_toast = {
									title = isengard.0012.supports.t
									left_icon = root
									right_icon = scope:recipient
									remove_short_term_gold = 50
								}
							}
							else_if = {
								limit = {
									scope:recipient = {
										highest_held_title_tier = tier_duchy
									}
								}
								send_interface_toast = {
									title = isengard.0012.supports.t
									left_icon = root
									right_icon = scope:recipient
									remove_short_term_gold = 150
								}
							}
							else_if = {
								limit = {
									scope:recipient = {
										highest_held_title_tier = tier_kingdom
									}
								}
								send_interface_toast = {
									title = isengard.0012.supports.t
									left_icon = root
									right_icon = scope:recipient
									remove_short_term_gold = 300
								}
							}
						}
						opinion_modifier = {
							opinion_target = scope:petitioner
						}
						modifier = {
							add = 50
						}
						modifier = {
							has_trait = disloyal
							add = 80
						}
						modifier = {
							has_trait = greedy
							add = 50
						}
						modifier = {
							has_trait = ambitious
							add = 40
						}
						add_character_flag = promised_to_support_civil_war_rohan
					}
					1 = {
						custom_tooltip = isengard.0012.refuses
						root = {
							send_interface_toast = {
								title = isengard.0012.refuses.t
								left_icon = root
								right_icon = scope:recipient
							}
						}
						opinion_modifier = {
							opinion_target = scope:rohanking 
						}
						modifier = {
							has_trait = loyal
							add = 80
						}
						modifier = {
							has_trait = lazy
							add = 40
						}
						modifier = {
							has_trait = craven
							add = 30
						}
					}
				}
			}
		}
		else = {
			custom_tooltip = isengard.0012.support_decision_human
			scope:recipient = {
				add_character_flag = offered_cash
			}
			trigger_event = isengard.0013
		}
		ai_chance = {
			base = 10
		}
	}

	option = { # Offer a Hook
		name = isengard.0012.b
		trigger = {
			NOT = {
				scope:recipient = {
					has_hook = root
				}
			}
			scope:recipient = {
				opinion = {
					target = root
					value < 20
				}
			}
		}
		if = {
			limit = { 
				scope:recipient = {
					is_ai = yes
				}
			}
			scope:recipient = {
				random_list = {
					1 = {
						root = { 
							custom_tooltip = isengard.0012.supports
							send_interface_toast = {
								title = isengard.0012.supports.t
								left_icon = root
								right_icon = scope:recipient
								scope:recipient = { 
									add_hook_no_toast = {
										type = indebted_hook
										target = root
									}
								}
							}
						}
						opinion_modifier = {
							opinion_target = scope:petitioner
						}
						modifier = {
							add = 70
						}
						modifier = {
							has_trait = disloyal
							add = 80
						}
						modifier = {
							has_trait = deceitful
							add = 50
						}
						modifier = {
							has_trait = ambitious
							add = 80
						}
						add_character_flag = promised_to_support_civil_war_rohan
					}
					1 = {
						custom_tooltip = isengard.0012.refuses
						root = {
							send_interface_toast = {
								title = isengard.0012.refuses.t
								left_icon = root
								right_icon = scope:recipient
							}
						}
						opinion_modifier = {
							opinion_target = scope:rohanking 
						}
						modifier = {
							has_trait = loyal
							add = 80
						}
						modifier = {
							has_trait = lazy
							add = 40
						}
						modifier = {
							has_trait = craven
							add = 30
						}
					}
				}
			}
		}
		else = {
			custom_tooltip = isengard.0012.support_decision_human
			scope:recipient = {
				add_character_flag = offered_hook
			}
			trigger_event = isengard.0013
		}
		ai_chance = {
			base = 70
		}
	}

	option = { # Offer Nothing
		name = isengard.0012.c
		trigger = { 
			scope:recipient = {
				opinion = {
					target = root
					value < 20
				}
			}
		}
		if = {
			limit = { 
				scope:recipient = {
					is_ai = yes
				}
			}
			scope:recipient = {
				random_list = {
					1 = {
						root = { 
							custom_tooltip = isengard.0012.supports
							send_interface_toast = {
								title = isengard.0012.supports.t
								left_icon = root
								right_icon = scope:recipient
							}
						}
						opinion_modifier = {
							opinion_target = scope:petitioner 
						}
						modifier = {
							has_trait = disloyal
							add = 80
						}
						modifier = {
							has_trait = trusting
							add = 20
						}
						modifier = {
							has_trait = ambitious
							add = 40
						}
						add_character_flag = promised_to_support_civil_war_rohan
					}
					1 = {
						custom_tooltip = isengard.0012.refuses
						root = {
							send_interface_toast = {
								title = isengard.0012.refuses.t
								left_icon = root
								right_icon = scope:recipient
							}
						}
						opinion_modifier = {
							opinion_target = scope:rohanking 
						}
						modifier = {
							has_trait = loyal
							add = 80
						}
						modifier = {
							has_trait = lazy
							add = 40
						}
						modifier = {
							has_trait = craven
							add = 30
						}
					}
				}
			}
		}
		else = {
			custom_tooltip = isengard.0012.support_decision_human
			scope:recipient = {
				add_character_flag = offered_nothing
			}
			trigger_event = isengard.0013
		}
		ai_chance = {
			base = 20
		}
	}

	option = { # Unconditional Support if Opinion > 20
		name = isengard.0012.d
		custom_tooltip = isengard.0012.d.tt
		trigger = { 
			scope:recipient = {
				is_ai = yes
				opinion = {
					target = root
					value >= 20
				}
			}
		}
		custom_tooltip = isengard.0012.supports
		send_interface_toast = {
			title = isengard.0012.supports.t
			left_icon = root
			right_icon = scope:recipient
		}
		scope:recipient = {
			add_character_flag = promised_to_support_civil_war_rohan
		}
	}
}

isengard.0013 = { # Seek Support in Civil War - Human Recipient Perspective
	content_source = realms_dlc
	type = character_event
	title = isengard.0013.t
	desc = isengard.0013.desc
	theme = diplomacy

	left_portrait = {
		character = scope:petitioner
		animation = personality_bold
	}

	right_portrait = {
		character = root
		animation = personality_cynical
	}

	lower_left_portrait = {
		character = scope:rohanking
	}

	lower_right_portrait = {
		character = scope:agent
	}

	trigger = {
		scope:recipient = { is_alive = yes }
		scope:petitioner = { is_alive = yes }
	}

	option = { # Accept
		name = isengard.0013.a
		add_character_flag = promised_to_support_civil_war_rohan
		if = {
			limit = { has_character_flag = offered_cash }
			if = {
				limit = {
					scope:recipient = {
						highest_held_title_tier = tier_county
					}
				}
				scope:petitioner = {
					send_interface_toast = {
						title = isengard.0012.supports.t
						left_icon = scope:petitioner
						right_icon = scope:recipient
						remove_short_term_gold = 50
					}
				}
				add_gold = 50
			}
			else_if = {
				limit = {
					scope:recipient = {
						highest_held_title_tier = tier_duchy
					}
				}
				scope:petitioner = {
					send_interface_toast = {
						title = isengard.0012.supports.t
						left_icon = scope:petitioner
						right_icon = scope:recipient
						remove_short_term_gold = 150
					}
				}
				add_gold = 150
			}
			else_if = {
				limit = {
					scope:recipient = {
						highest_held_title_tier = tier_kingdom
					}
				}
				scope:petitioner = {
					send_interface_toast = {
						title = isengard.0012.supports.t
						left_icon = scope:petitioner
						right_icon = scope:recipient
						remove_short_term_gold = 300
					}
				}
				add_gold = 300
			}
		}
		else_if = {
			limit = { has_character_flag = offered_hook }
			scope:petitioner = {
				send_interface_toast = {
					title = isengard.0012.supports.t
					left_icon = scope:petitioner
					right_icon = scope:recipient
					scope:recipient = { 
						add_hook_no_toast = {
							type = indebted_hook
							target = root
						}
					}
				}
			}
		}
		else = {
			scope:petitioner = {
				send_interface_toast = {
					title = isengard.0012.supports.t
					left_icon = scope:petitioner
					right_icon = scope:recipient
				}
			}
		}
	}

	option = { # Reject
		name = isengard.0013.b
		scope:petitioner = {
			send_interface_toast = {
				title = isengard.0012.refuses.t
				left_icon = scope:petitioner
				right_icon = scope:recipient
			}
		}
	}
}

isengard.0014 = { # Start Civil War - Petitioner Perspective
	content_source = realms_dlc
	type = character_event
	title = isengard.0014.t
	desc = isengard.0014.desc
	theme = diplomacy
	override_background = {
		reference = edoras
	}
	left_portrait = {
		character = root
		animation = personality_bold
	}

	right_portrait = {
		character = scope:agent
		animation = anger
	}

	immediate = {
		debug_log = "Isengard: Rohan Civil War begins"
		save_agent_in_edoras_scope = yes # Find head agent in Edoras and save_scope_as agent
		title:k_rohan.holder = {
			every_held_title = {
				limit = {
					tier = tier_county
					NOT = { this = title:k_rohan.title_capital_county}
				}
				create_title_and_vassal_change = {
					type = usurped
					save_scope_as = change
					add_claim_on_loss = no
				}
				change_title_holder = {
					holder = scope:agent
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
				hidden_effect = { title:k_rohan.holder = { add_pressed_claim = prev } }
			}
		}
		start_war = {
			casus_belli = rohan_civil_war_cb
			target = scope:agent
		}
		scope:agent = {
			spawn_army = {
				levies = 1000
				men_at_arms = { 
				   type = isengard_dunlending_axemen
				   stacks = 1
				}
				men_at_arms = {
				   type = isengard_dunlending_huntsmen
				   stacks = 2
				}
				location = capital_province
				inheritable = yes
				uses_supply = no
				name = dunlending_detachment
			}
		}
	}

	option = { # To War!
		name = isengard.0014.a
		hidden_effect = {
			random_character_war = {
				limit = { using_cb = rohan_civil_war_cb }
				save_scope_as = war_to_join
			}
			every_ruler = {
				limit = {
					has_character_flag = promised_to_support_civil_war_rohan
				}
				scope:war_to_join = {
					add_attacker = prev
				}
			}
		}
		scope:war_to_join = {
			add_defender = title:k_rohan.holder
		}
	}

	
}

isengard.0015 = { # The Horselords ride to war!
	content_source = realms_dlc
	type = character_event
	title = isengard.0015.t
	desc = isengard.0015.desc
	theme = war
	override_background = {
		reference = edoras
	}
	left_portrait = {
		character = root
		animation = personality_bold
	}

	right_portrait = {
		character = scope:saruman
		animation = anger
	}

	immediate = {
		character:lineofsaruman = { save_scope_as = saruman }
	}

	option = { # Send out the riders!
		name = isengard.0015.a
	}
}

isengard.0016 = { # Mordor joins the fray?
	content_source = realms_dlc
	type = character_event
	title = isengard.0016.t
	desc = isengard.0016.desc
	theme = war
	override_background = {
		reference = throne_room_sauron
	}
	left_portrait = {
		character = root
		animation = personality_bold
	}

	right_portrait = {
		character = scope:saruman
		animation = anger
	}

	immediate = {
		character:lineofsaruman = { save_scope_as = saruman }
	}

	option = { # Order my Uruks to March
		debug_log = "Isengard: Rohan War - Sauron Joins"
		name = isengard.0016.a
		add_prestige = 200
		scope:saruman = {
			every_character_war = {
				add_attacker = root
			}
		}
		add_character_flag = support_saruman_decision_made
		ai_chance = {
			base = 100
		}
	}

	option = { # Leave the wizard to perish
		debug_log = "Isengard: Rohan War - Sauron Stays Out of War"	
		name = isengard.0016.b
		add_character_flag = support_saruman_decision_made
		ai_chance = {
			base = 0
		}
	}
}

isengard.0017 = { # Mordor war join checks event
	hidden = yes
	scope = none

	trigger = {
		character:lineofsaruman = {
			is_at_war_with = title:k_rohan.holder
		}
		NOT = { has_character_flag = support_saruman_decision_made }
	}

	immediate = {
		if = {
			limit = {
				character:lineofsaruman = {
					OR = {
						is_at_war_with = title:e_gondor.holder
						is_at_war_with = title:e_gondor_steward.holder
						is_at_war_with = title:e_castamir.holder
					}
				}
			}
			trigger_event = isengard.0016
		}
		else = {
			trigger_event = {
				id = isengard.0017
				days = 14
			}
		}
	}
}

isengard.0018 = { # The War for Rohan - Rohan Victory (Saruman Perspective - Death)
	content_source = realms_dlc
	type = character_event
	title = isengard.0018.t
	desc = isengard.0018.desc
	theme = dread
	override_background = {
		reference = flooded_isengard
	}
	left_portrait = {
		character = scope:victor
		animation = war_over_win
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = prisondungeon
	}
	
	immediate = { show_as_tooltip = { destroy_title = title:e_isengard_unleashed } }

	option = { #And so, I die
		name = isengard.0018.a
		death = { 
			death_reason = death_decapitated
			killer = scope:victor
		}
	}
}

isengard.0019 = { # The War for Rohan - Rohan Victory (Saruman Perspective - Banishment)
	content_source = realms_dlc
	type = character_event
	title = isengard.0019.t
	desc = isengard.0019.desc
	theme = dread
	override_background = {
		reference = flooded_isengard
	}
	left_portrait = {
		character = scope:victor
		animation = war_over_win
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = prisondungeon
	}
	immediate = {
		hidden_effect = {
			#handles religious conversion
			saruman_destroyed_effect = yes
		}
	}
	option = { #I won't forget this
		name = isengard.0019.a
		depose = yes
		hidden_effect = { move_to_pool = yes }
	}
}

isengard.0020 = { # Timer event for Gandalf to free King of Rohan and start war
	hidden = yes
	scope = none

	trigger = {
		NOT = { 
			trigger_if = { # Check if Rohan hasn't been taken by Saruman 
				limit = { exists = title:k_rohan.holder.top_liege }
				title:k_rohan.holder.top_liege = title:e_isengard_unleashed.holder
			}
		}
	}

	immediate = {
		if = {
			limit = {
				current_year >= 7055
			}
			debug_log = "Isengard: Timer's up! Sending Gandalf to Rohan..."
			title:k_rohan.holder = {
				trigger_event = isengard.0287
			}
		}
		else = {
			debug_log = "Isengard: Not time to send Gandalf to Rohan yet..."
			trigger_event = {
				id = isengard.0020
				years = 1
			}
		}
	}
}

isengard.0021 = { # The March of the Ents
	content_source = realms_dlc
	type = character_event
	title = isengard.0021.t
	desc = isengard.0021.desc
	theme = war
	override_background = {
		reference = flooded_isengard
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = fear
	}
	
	immediate = {
		character:lineofsaruman = { save_scope_as = saruman }
		debug_log = "Isengard: Rohan War - March of the Ents"
	}

	trigger = {
		any_character_war = {
			using_cb = rohan_war_cb
		}
	}

	option = { # Oh no!
		name = isengard.0021.a
		if = {
			limit = { # Major News
				NOT = { has_game_rule = no_news }
			}
			every_player = { #Global News Announcement
				trigger_event = news_event.0010
			}
		}
		every_character_war = {
			limit = { using_cb = rohan_war_cb }
			end_war = defender
		}
	}
}

### Introduction ###

isengard.0101 = { # The Lord of Isengard
	content_source = realms_dlc
	type = character_event
	content_source = realms_dlc
	title = isengard.0101.t
	desc = isengard.0101.desc
	theme = stewardship_domain_focus
	left_portrait = {
		character = root
		animation = personality_bold
	}
	lower_left_portrait = scope:beren
	lower_right_portrait = scope:helm
	right_portrait = {
		character = scope:frealaf
		animation = personality_content
	}

	immediate = {
		character:linesteward31 = { save_scope_as = beren }
		character:linesteward38 = { save_scope_as = denethor }
		character:6000010 = { save_scope_as = frealaf }
		character:6000008 = { save_scope_as = helm }
		character:lineoffreca3 = { save_scope_as = wulf }
		title:c_isengard = { save_scope_as = title_c_isengard }
		#Remove cannot marry for Grima if player
		if = {
			limit = {
				character:6000044 = { is_ai = no } 
			}
			hidden_effect = { character:6000044 = { remove_trait = cannot_marry } }
		}
	}

	option = { # And so have I remained for the last 240 years...
		name = isengard.0101.a
		trigger_event = {
			id = isengard.0102
			days = 5
		}
	}
}

isengard.0102 = { # My Search for the One
	content_source = realms_dlc
	type = character_event
	title = isengard.0102.t
	desc = isengard.0102.desc
	theme = stewardship_domain_focus
	left_portrait = {
		character = root
		animation = personality_rational
	}
	artifact = {
		target = scope:palantir_orthanc
		position = lower_center_portrait
		trigger = { exists = scope:palantir_orthanc }
	}

	immediate = {
		character:lineofsauron = { save_scope_as = sauron }
		create_artifact_palantir_orthanc_effect = { OWNER = this }
		random_character_artifact = {
			limit = { has_variable = palantir_orthanc }
			save_scope_as = palantir_orthanc
		}
	}

	option = { # I must find the One Ring and bring order to Middle-earth!
		name = isengard.0102.a
		custom_tooltip = isengard.0102.a.tt
		# root.culture = { add_innovation = innovation_numenorean_architecture_01 } #Why?
		add_character_flag = saruman_palantir_introduction
		trigger_event = {
			id = isengard.0103
			days = 5
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { # This stone has corrupted my heart for long enough...
		name = isengard.0102.b
		debug_log = "Isengard: Saruman chose the Path of Good"
		custom_tooltip = isengard.0102.b.tt
		add_character_flag = saruman_good
		trigger_event = {
			id = isengard.0500
			days = 5
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	# 	add_prestige = medium_prestige_loss
	# 	add_piety = minor_piety_gain
	# 	create_title_and_vassal_change = {
	# 		type = swear_fealty
	# 		save_scope_as = title_change
	# 		add_claim_on_loss = no
	# 	}
	# 	change_liege = {
	# 		liege = scope:denethor
	# 		change = scope:title_change
	# 	}
	# 	root = { save_scope_as = recipient }
	# 	scope:denethor = { save_scope_as = actor }
	# 	scope:actor = { trigger_event = char_interaction.0101 }
	# 	resolve_title_and_vassal_change = scope:title_change
	# 	hidden_effect = { # A most advantagous vassalship.
	# 		set_vassal_contract_modification_blocked = yes
	# 		vassal_contract_set_obligation_level = { type = feudal_government_taxes level = 0 }
	# 		vassal_contract_set_obligation_level = { type = feudal_government_levies level = 0 }
	# 		vassal_contract_set_obligation_level = { type = religious_rights level = 1 }
	# 		vassal_contract_set_obligation_level = { type = council_rights level = 1 }
	# #		vassal_contract_set_obligation_level = { type = war_declaration_rights level = 1 }
	# 		vassal_contract_set_obligation_level = { type = title_revocation_rights level = 1 }
	# 	}
	# 	# A Wizard in the Hall of Kings.
	# 	trigger_event = {
	# 		id = saruman.0005
	# 		days = { 900 3300 }
	# 	}
	# 	# Consolidation of Dunland.
	# 	trigger_event = {
	# 		id = saruman.0007
	# 		days = { 900 3300 }
	# 	}
	# 	ai_chance = { base = 0 }
	}
}

isengard.0103 = { # The Palantír
	content_source = realms_dlc
	type = character_event
	title = isengard.0103.t
	desc = isengard.0103.desc
	theme = intrigue
	left_portrait = {
		character = root
		animation = fear
	}
	override_background = {
		reference = throne_room_sauron
	}
	right_portrait = {
		character = scope:sauron
		animation = anger
	}
	artifact = {
		target = scope:palantir_orthanc
		position = lower_center_portrait
		trigger = { exists = scope:palantir_orthanc }
	}
	
	immediate = {
		play_music_cue = "lotr_action_evil_01"
		random_character_artifact = {
			limit = { has_variable = palantir_orthanc }
			save_scope_as = palantir_orthanc
		}
	}

	option = { # Saruman pledges allegiance to you, Lord Sauron.
		name = isengard.0103.a
		debug_log = "Isengard: Saruman chose the Path of Evil"
		custom_tooltip = isengard.0103.a.tt
		create_title_and_vassal_change = {
			type = created
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		title:k_isengard = {
			change_title_holder = {
				holder = root
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change
		set_culture = culture:istari_evil
		set_character_faith = faith:lidless_eye
		capital_county = { set_county_faith = faith:lidless_eye }
		add_character_flag = saruman_accepted_sauron
		add_character_flag = saruman_many_coloured
		add_stress = medium_stress_impact_gain
		scope:sauron = {
			add_opinion = {
				modifier = pleased_opinion
				target = root
				opinion = 40
			}
		}
		#Replace Good Buildings with Evil Buildings
		hidden_effect = {
			title:b_orthanc.title_province = {
				remove_building = garrison_tower_02
				add_building = slave_farms_02
#				remove_building = pastures_05
				add_building = hunting_outposts_05
				remove_building = barracks_05
				add_building = uruk_pits_05
			}
		}
		trigger_event = { # Build me an army worth of Mordor
			id = isengard.0201
			months = 6
		}
		ai_chance = {
			base = 100
		}
	}
	option = { # You shall not have the Orthanc Stone, Dark Lord.
		debug_log = "Isengard: Saruman chose the Path of Good"
		name = isengard.0103.b
		custom_tooltip = isengard.0103.b.tt
		add_dread = 26
		add_stress = 285
		#Add permanent modifier stress gain
		add_character_flag = saruman_rejected_sauron
		add_character_flag = saruman_good
		trigger_event = {
			id = isengard.0500
			days = 5
		}
		ai_chance = {
			base = 0
		}
	}
}

### Evil: General Align with Sauron Events ###

isengard.0201 = { # The First Command of Sauron
	content_source = realms_dlc
	type = character_event
	title = isengard.0201.t
	desc = isengard.0201.desc
	theme = martial
	left_portrait = {
		character = root
		animation = personality_bold
	}
	override_background = {
		reference = throne_room_sauron
	}
	right_portrait = {
		character = scope:sauron
		animation = anger
	}
	lower_right_portrait = scope:gazmog

	immediate = {
		debug_log = "Isengard: Orders from Sauron Received"
		character:lineofsauron = { save_scope_as = sauron }
		create_character = {
			name = Gazmog
			gender = male
			age = 49
			culture = culture:ungurhai
			faith = faith:lidless_eye	
			trait = impatient
			trait = ambitious
			trait = callous
			trait = education_martial_2
			trait = military_engineer
			trait = scarred
			learning = 10
			save_scope_as = gazmog
			location = capital_province
			after_creation = {
				add_character_flag = is_gazmog
				copy_inheritable_appearance_from = character:weakorc2
			}
		}
	}

	option = { # We have work to do.
		name = isengard.0201.a
		custom_tooltip = isengard.0201.a.tt
		scope:gazmog = {
			set_employer = root
		}
		spawn_army = {
			uses_supply = no
			inheritable = no
			name = isengard_orc_event_troops
			men_at_arms = {
				type = orc_warriors
				stacks = 2
			}
			men_at_arms = {
				type = orc_rabble
				stacks = 2
			}
			location = capital_province
		}
		add_character_flag = saruman_build_me_an_army
	}
}

### Evil: Dunlending ###

isengard.0210 = { # The Petty Kings of Dunland
	content_source = realms_dlc
	type = character_event
	title = isengard.0210.t
	desc = isengard.0210.desc
	theme = diplomacy
	left_portrait = {
		character = root
		animation = personality_rational
	}
	lower_left_portrait = scope:dunlandfellsruler
	lower_right_portrait = scope:dathabharuler
	lower_center_portrait = scope:thirdruler
	right_portrait = {
		character = scope:warmonger
		animation = anger
	}

	immediate = {
		debug_log = "Isengard: Meddling in Dunland"
		if = {
			limit = {
				exists = title:d_dunlandfells.holder
				NOT = {
					title:d_dunlandfells.holder = root
				}
			}
			title:d_dunlandfells.holder = { save_scope_as = dunlandfellsruler }
		}
		if = {
			limit = {
				exists = title:d_dathabha.holder
				NOR = {
					title:d_dathabha.holder = title:d_dunlandfells.holder
					title:d_dathabha.holder = root
				}
			}
			title:d_dathabha.holder = { save_scope_as = dathabharuler }
		}
		else_if = {
			limit = {
				exists = title:d_dunfearan.holder
				NOR = {
					title:d_dunfearan.holder = title:d_dunlandfells.holder
					title:d_dunfearan.holder = title:d_dathabha.holder
					title:d_dunfearan.holder = root
				}
			}
			title:d_dunfearan.holder = { save_scope_as = thirdruler }
		}
		if = {
			limit = {
				any_courtier = {
					is_orc = yes 
				}
			}
			random_courtier = {
				limit = { is_orc = yes }
				save_scope_as = warmonger
			}
		}
		else = {
			random_courtier = {
				save_scope_as = warmonger
			}
		}
		if = {
			limit = {
				any_courtier = {
					is_orc = no
				}
			}
			random_courtier = {
				limit = { is_orc = no }
				save_scope_as = emissary
			}
		}
		else = {
			random_courtier = {
				save_scope_as = emissary
			}
		}
		character:6000010 = { save_scope_as = frealaf }
		character:lineoffreca3 = { save_scope_as = wulf }
		save_scope_as = saruman
	}

	option = { # Send Emissary to potential ruler of Dunlandfells
		name = isengard.0210.a
		trigger = { exists = scope:dunlandfellsruler }
		if = {
			limit = { scope:dunlandfellsruler.dynasty = dynasty:dynasty_freca }
			custom_tooltip = isengard.0210.a.tt
			custom_tooltip = isengard.0210.a.tt2
		}
		else = { custom_tooltip = isengard.0210.a.tt.alt }
		add_character_flag = offer_to_dunlandfells
		scope:dunlandfellsruler = {
			trigger_event = {
				id = isengard.0211
				days = 1
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}

	option = { # Send Emissary to potential ruler of Dathabha
		name = isengard.0210.b
		trigger = { exists = scope:dathabharuler }
		if = {
			limit = { scope:dathabharuler = { has_trait = education_intrigue }  }
			custom_tooltip = isengard.0210.b.tt
			custom_tooltip = isengard.0210.b.tt2
		}
		else = { custom_tooltip = isengard.0210.b.tt.alt }
		add_character_flag = offer_to_dathabha
		scope:dathabharuler = {
			trigger_event = {
				id = isengard.0211
				days = 1
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 15
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}

	option = { # Send Emissary to potential third ruler
		name = isengard.0210.c
		trigger = { exists = scope:thirdruler }
		custom_tooltip = isengard.0210.c.tt
		add_character_flag = offer_to_thirdruler
		scope:thirdruler = {
			trigger_event = {
				id = isengard.0211
				days = 1
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 15
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}

	option = { # These backward men have nothing to offer us.
		name = isengard.0210.d
		custom_tooltip = isengard.0210.d.tt
		add_character_modifier = enemy_of_the_dunlendings_character_modifier
		hidden_effect = {
			if = {
				limit ={ 
					exists = scope:dunlandfellsruler
					exists = scope:dathabharuler
					scope:dunlandfellsruler = {
						NOT = { any_war_enemy = { this = scope:dathabharuler } }
					}
				}
				scope:dunlandfellsruler = { 
					create_alliance = scope:dathabharuler
					scope:dathabharuler = {
						add_opinion = {
							target = scope:dunlandfellsruler
							modifier = perk_negotiated_alliance_opinion
						}
					}
				}
			}
			if = {
				limit ={ 
					exists = scope:dunlandfellsruler
					exists = scope:thirdruler
					scope:dunlandfellsruler = {
						NOT = { any_war_enemy = { this = scope:thirdruler } }
					}
				}
				scope:dunlandfellsruler = { 
					create_alliance = scope:thirdruler
					scope:thirdruler = {
						add_opinion = {
							target = scope:dunlandfellsruler
							modifier = perk_negotiated_alliance_opinion
						}
					}
				}
			}
			if = {
				limit ={ 
					exists = scope:dathabharuler
					exists = scope:thirdruler
					scope:dathabharuler = {
						NOT = { any_war_enemy = { this = scope:thirdruler } }
					}
				}
				scope:dathabharuler = { 
					create_alliance = scope:thirdruler
					scope:thirdruler = {
						add_opinion = {
							target = scope:dathabharuler
							modifier = perk_negotiated_alliance_opinion
						}
					}
				}
			}
		}
		add_pressed_claim = title:k_dunland
		every_county = {
			limit = {
				kingdom = title:k_dunland
			}
			root = { add_pressed_claim = prev }
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 15
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}
}

isengard.0211 = { # A Messenger from the White Wizard
	content_source = realms_dlc
	type = character_event
	title = isengard.0211.t
	desc = {
		desc = isengard.0211.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					dynasty = dynasty:dynasty_freca
				}
				desc = isengard.0211.desc1
			}
			desc =isengard.0211.desc2
		}
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = personality_cynical
	}
	lower_center_portrait = scope:saruman
	right_portrait = {
		character = scope:emissary
		animation = personality_forgiving
	}

	immediate = {
		save_scope_as = respondent
	}

	option = { # For all this? Saruman shall have my allegiance...
		name = isengard.0211.a
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
		}
		change_liege = {
			liege = scope:saruman
			change = scope:change
		}
		resolve_title_and_vassal_change = scope:change
		stress_impact = {
			ambitious = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
		}
		add_pressed_claim = title:k_dunland
		every_county = {
			limit = {
				kingdom = title:k_dunland
				holder = { 
					NOR = { 
						this = root
						any_liege_or_above = { this = root } 
					} 
				}
				NOT = { root = { has_claim_on = prev } }
			}
			root = { add_pressed_claim = prev }
		}
		scope:saruman = {
			add_hook = { 
				type = loyalty_hook
				target = root
			}
			trigger_event = isengard.0212
		}
		add_character_flag = promised_kingdom_of_dunland
		trigger_event = {
			id = isengard.0001 #Rolling war pulse
			days = { 30 60 }
		}
		ai_chance = { # LotR: This should be tied to WotR mode.
			base = 0 
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				dynasty = dynasty:dynasty_freca
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				NOT = { dynasty = dynasty:dynasty_freca }
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				dynasty = dynasty:dynasty_freca
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				NOT = { dynasty = dynasty:dynasty_freca }
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
			modifier = { # Never if Rival
				OR = {
					has_relation_rival = scope:saruman
					has_relation_nemesis = scope:saruman
				}
				add = -1000
			}
			modifier = { # Always if friend
				OR = {
					has_relation_friend = scope:saruman
					has_relation_best_friend = scope:saruman
				}
				add = 1000
			}
		}
	}

	option = { # I will never bend the knee!
		name = isengard.0211.b
		add_pressed_claim = title:c_isengard
		set_relation_rival = {
			target = scope:saruman
			reason = tried_to_subjugate_me
		}
		add_prestige = medium_prestige_gain
		scope:saruman = {
			trigger_event = isengard.0213
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				dynasty = dynasty:dynasty_freca
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				NOT = { dynasty = dynasty:dynasty_freca }
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				dynasty = dynasty:dynasty_freca
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				NOT = { dynasty = dynasty:dynasty_freca }
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
			modifier = { # Never if Rival
				OR = {
					has_relation_rival = scope:saruman
					has_relation_nemesis = scope:saruman
				}
				add = 1000
			}
			modifier = { # Always if friend
				OR = {
					has_relation_friend = scope:saruman
					has_relation_best_friend = scope:saruman
				}
				add = -1000
			}
		}
	}
}

isengard.0212 = { # A High King Bends the Knee
	content_source = realms_dlc
	type = character_event
	title = isengard.0212.t
	desc = isengard.0212.desc
	theme = diplomacy
	left_portrait = {
		character = root
		animation = happy
	}
	right_portrait = {
		character = scope:respondent
		animation = personality_compassionate
	}

	option = { # May he be a loyal servant of Isengard...
		name = isengard.0212.a
		add_character_flag = saruman_dunlending_auxilliaries
		custom_tooltip = isengard.0212.a.tt1
		custom_tooltip = isengard.0212.a.tt2
		custom_tooltip = isengard.0212.a.tt3
		show_as_tooltip = {
			scope:respondent = {
				create_title_and_vassal_change = {
					type = swear_fealty
					save_scope_as = change
				}
				change_liege = {
					liege = scope:saruman
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
				stress_impact = {
					ambitious = medium_stress_impact_gain
					arrogant = medium_stress_impact_gain
				}
				add_pressed_claim = title:k_dunland
			}
			scope:saruman = {
				add_hook = { 
					type = loyalty_hook
					target = scope:respondent
				}
			}
		}
		scope:respondent = {
			create_alliance = root
			root = {
				add_opinion = {
					target = scope:respondent
					modifier = perk_negotiated_alliance_opinion
				}
			}
		}
		
		remove_character_flag = offer_to_dunlandfells
		remove_character_flag = offer_to_dathabha
		remove_character_flag = offer_to_thirdruler
	}
}

isengard.0213 = { # An Offer Refused
	content_source = realms_dlc
	type = character_event
	title = isengard.0213.t
	desc = {
		desc = isengard.0213.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					AND = {
						OR = {
							NOT = { exists = scope:dunlandfellsruler }
							has_character_flag = offer_to_dunlandfells
						}
						OR = {
							NOT = { exists = scope:dathabharuler }
							has_character_flag = offer_to_dathabha
						}
						OR = {
							NOT = { exists = scope:thirdruler }
							has_character_flag = offer_to_thirdruler
						}
					}
				}
				desc = isengard.0213.desc2
			}
			desc =isengard.0213.desc1
		}
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:respondent
		animation = anger
	}

	option = { # Send Emissary to potential ruler of Dunlandfells
		name = isengard.0210.a
		trigger = { 
			exists = scope:dunlandfellsruler
			NOT = { has_character_flag = offer_to_dunlandfells }
		}
		if = {
			limit = { scope:dunlandfellsruler.dynasty = dynasty:dynasty_freca }
			custom_tooltip = isengard.0210.a.tt
			custom_tooltip = isengard.0210.a.tt2
		}
		else = { custom_tooltip = isengard.0210.a.tt.alt }
		add_character_flag = offer_to_dunlandfells
		scope:dunlandfellsruler = {
			trigger_event = {
				id = isengard.0211
				days = 1
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 15
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}

	option = { # Send Emissary to potential ruler of Dathabha
		name = isengard.0210.b
		trigger = { 
			exists = scope:dathabharuler
			NOT = { has_character_flag = offer_to_dathabha }
		}
		if = {
			limit = { scope:dathabharuler = { has_trait = education_intrigue }  }
			custom_tooltip = isengard.0210.b.tt
			custom_tooltip = isengard.0210.b.tt2
		}
		else = { custom_tooltip = isengard.0210.b.tt.alt }
		add_character_flag = offer_to_dathabha
		scope:dathabharuler = {
			trigger_event = {
				id = isengard.0211
				days = 1
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}

	option = { # Send Emissary to potential third ruler
		name = isengard.0210.c
		trigger = { 
			exists = scope:thirdruler
			NOT = { has_character_flag = offer_to_thirdruler }
		}
		custom_tooltip = isengard.0210.c.tt
		add_character_flag = offer_to_thirdruler
		scope:thirdruler = {
			trigger_event = {
				id = isengard.0211
				days = 1
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 1
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 1
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 1
			}
		}
	}

	option = { # These backward men have nothing to offer us.
		name = isengard.0210.d
		custom_tooltip = isengard.0210.d.tt
		add_character_modifier = enemy_of_the_dunlendings_character_modifier
		hidden_effect = {
			if = {
				limit ={ 
					exists = scope:dunlandfellsruler
					exists = scope:dathabharuler
					scope:dunlandfellsruler = {
						NOT = { any_war_enemy = { this = scope:dathabharuler } }
					}
				}
				scope:dunlandfellsruler = { 
					create_alliance = scope:dathabharuler
					scope:dathabharuler = {
						add_opinion = {
							target = scope:dunlandfellsruler
							modifier = perk_negotiated_alliance_opinion
						}
					}
				}
			}
			if = {
				limit ={ 
					exists = scope:dunlandfellsruler
					exists = scope:thirdruler
					scope:dunlandfellsruler = {
						NOT = { any_war_enemy = { this = scope:thirdruler } }
					}
				}
				scope:dunlandfellsruler = { 
					create_alliance = scope:thirdruler
					scope:thirdruler = {
						add_opinion = {
							target = scope:dunlandfellsruler
							modifier = perk_negotiated_alliance_opinion
						}
					}
				}
			}
			if = {
				limit ={ 
					exists = scope:dathabharuler
					exists = scope:thirdruler
					scope:dathabharuler = {
						NOT = { any_war_enemy = { this = scope:thirdruler } }
					}
				}
				scope:dathabharuler = { 
					create_alliance = scope:thirdruler
					scope:thirdruler = {
						add_opinion = {
							target = scope:dathabharuler
							modifier = perk_negotiated_alliance_opinion
						}
					}
				}
			}
		}
		add_pressed_claim = title:k_dunland
		every_county = {
			limit = {
				kingdom = title:k_dunland
			}
			root = { add_pressed_claim = prev }
		}
		remove_character_flag = offer_to_dunlandfells
		remove_character_flag = offer_to_dathabha
		remove_character_flag = offer_to_thirdruler
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 15
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}
}

### Evil: Uruk-hai ###

isengard.0220 = { # The Infantry of the Uruk-hai
	content_source = realms_dlc
	type = character_event
	title = isengard.0220.t
	desc = isengard.0220.desc
	theme = martial
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:ugluk
		animation = anger
	}

	immediate = {
		debug_log = "Isengard: Creation of the Uruk-hai"
		create_character = {
			name = Ugluk
			gender = male
			age = 21
			culture = culture:isengard_urukhai
			faith = faith:lidless_eye	
			trait = stubborn
			trait = content
			trait = brave
			trait = education_martial_3
			trait = loyal
			trait = logistician
			trait = strong
			location = capital_province
			save_scope_as = ugluk
		}
	}

	option = { # They shall harry my enemies and swarm over the land!
		name = isengard.0220.a
		custom_tooltip = isengard.0220.a.tt
		custom_tooltip = isengard.0220.a.tt2
		add_character_flag = saruman_uruks_light_infantry
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}		
	}
	option = { # They shall be different from their forefathers, disciplined and well-armed!
		name = isengard.0220.b
		custom_tooltip = isengard.0220.b.tt
		custom_tooltip = isengard.0220.b.tt2
		add_character_flag = saruman_uruks_heavy_infantry
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	after = {
		trigger_event = isengard.0221
		scope:ugluk = { set_employer = root }
	}
}

isengard.0221 = { # The Archers of the Uruk-hai
	content_source = realms_dlc
	type = character_event
	title = isengard.0221.t
	desc = isengard.0221.desc
	theme = martial
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = character:isengardlurtz
		animation = anger
	}

	immediate = {
		add_courtier = character:isengardlurtz
		character:isengardlurtz = { set_employer = root }
	}

	option = { # Traditional bows, will be worth the investment.
		name = isengard.0221.a
		custom_tooltip = isengard.0221.a.tt
		add_character_flag = saruman_uruks_archers
		if = {
			limit = {
				has_character_flag = saruman_uruks_light_infantry
			}
			spawn_army = {
				uses_supply = no
				inheritable = no
				name = first_uruk_hai_troops
				men_at_arms = {
					type = urukhai_skirmishers
					stacks = 3
				}
				men_at_arms = {
					type = urukhai_spearmen
					stacks = 3
				}
				men_at_arms = {
					type = urukhai_archers
					stacks = 6
				}
				location = capital_province
			}
		}
		else = {
			limit = {
				has_character_flag = saruman_uruks_heavy_infantry
			}
			spawn_army = {
				uses_supply = no
				inheritable = no
				name = first_uruk_hai_troops
				men_at_arms = {
					type = urukhai_fighting
					stacks = 2
				}
				men_at_arms = {
					type = urukhai_pikemen
					stacks = 2
				}
				men_at_arms = {
					type = urukhai_archers
					stacks = 6
				}
				location = capital_province
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { # We shall darken the skies in an onslaught of crossbow bolts!
		name = isengard.0221.b
		custom_tooltip = isengard.0221.b.tt
		add_character_flag = saruman_uruks_crossbowmen
		if = {
			limit = {
				has_character_flag = saruman_uruks_light_infantry
			}
			spawn_army = {
				uses_supply = no
				inheritable = no
				name = first_uruk_hai_troops
				men_at_arms = {
					type = urukhai_skirmishers
					stacks = 3
				}
				men_at_arms = {
					type = urukhai_spearmen
					stacks = 3
				}
				men_at_arms = {
					type = urukhai_crossbowmen
					stacks = 4
				}
				location = capital_province
			}
		}
		else = {
			limit = {
				has_character_flag = saruman_uruks_heavy_infantry
			}
			spawn_army = {
				uses_supply = no
				inheritable = no
				name = first_uruk_hai_troops
				men_at_arms = {
					type = urukhai_fighting
					stacks = 2
				}
				men_at_arms = {
					type = urukhai_pikemen
					stacks = 2
				}
				men_at_arms = {
					type = urukhai_crossbowmen
					stacks = 4
				}
				location = capital_province
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	after = {
		trigger_event = isengard.0222
		scope:isengardlurtz = { set_employer = root }
	}
}

isengard.0222 = { # My Army's Secret Weapon
	content_source = realms_dlc
	type = character_event
	title = isengard.0222.t
	desc = isengard.0222.desc
	theme = martial
	left_portrait = {
		character = root
		animation = personality_rational
	}

	option = { # All shall come to fear the fire of Isengard.
		name = isengard.0222.a
		custom_tooltip = isengard.0222.a.tt
		add_character_flag = saruman_uruks_fire_of_isengard
		spawn_army = {
			uses_supply = no
			inheritable = no
			name = uruk_hai_sappers_troops
			men_at_arms = {
				type = urukhai_sappers
				stacks = 3
			}
			location = capital_province
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}
	option = { # My Uruk-hai and their vicious wargs shall tear my enemies apart!
		name = isengard.0222.b
		custom_tooltip = isengard.0222.b.tt
		add_character_flag = saruman_uruks_cavalry
		spawn_army = {
			uses_supply = no
			inheritable = no
			name = uruk_hai_warg_troops
			men_at_arms = {
				type = urukhai_warg_riders
				stacks = 2
			}
			location = capital_province
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 15
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}
	option = { # I shall use my darkest of crafts to create the ultimate warbeast...
		name = isengard.0222.c
		custom_tooltip = isengard.0222.c.tt
		add_character_flag = saruman_uruks_monstrosity
		spawn_army = {
			uses_supply = no
			inheritable = no
			name = uruk_hai_monstrosity_troops
			men_at_arms = {
				type = urukhai_monstrosity
				stacks = 1
			}
			location = capital_province
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 15
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}

	after = {
		trigger_event = {
			id = isengard.0223
			days = { 365 1000 }
		}
	}
}

isengard.0223 = { # The Most Loyal of Uruks
	content_source = realms_dlc
	type = character_event
	title = isengard.0223.t
	desc = isengard.0223.desc
	theme = martial
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:gorluk
		animation = anger
	}

	immediate = {
		debug_log = "Isengard: Uruk-hai Berserkers Arise"
		create_character = {
			name = Gorl_uk
			gender = male
			age = 22
			culture = culture:isengard_urukhai
			faith = faith:lidless_eye	
			trait = wrathful
			trait = zealous
			trait = sadistic
			trait = education_martial_3
			trait = lifestyle_blademaster
			trait = aggressive_attacker
			trait = physique_good_2
			trait = urukhai_berserker
			trait = loyal
			location = capital_province
			save_scope_as = gorluk
		}
		hidden_effect = {
			create_character = {
				name = Zaglag
				gender = male
				age = 35
				culture = culture:isengard_urukhai
				faith = faith:lidless_eye	
				trait = brave
				trait = lustful
				trait = ambitious
				trait = education_martial_3
				trait = lifestyle_blademaster
				trait = flexible_leader
				trait = physique_good_1
				location = capital_province
			}
			create_character = {
				name = Lugthak
				gender = male
				age = 29
				culture = culture:isengard_urukhai
				faith = faith:lidless_eye	
				trait = stubborn
				trait = vengeful
				trait = greedy
				trait = education_martial_2
				trait = lifestyle_blademaster
				trait = reckless
				trait = physique_good_1
				location = capital_province
			}
			create_character = {
				name = Gorgash
				gender = male
				age = 41
				culture = culture:isengard_urukhai
				faith = faith:lidless_eye	
				trait = arrogant
				trait = zealous
				trait = brave
				trait = education_martial_4
				trait = lifestyle_blademaster
				trait = open_terrain_expert
				trait = physique_good_2
				location = capital_province
			}
			add_character_flag = saruman_orc_accolades # juke note: to toggle use of orc-specific accolade names
		}
	}

	option = { # These Berserkers shall bring me the heads of my enemies!
		name = isengard.0223.a
		custom_tooltip = isengard.0223.a.tt
		add_character_flag = saruman_uruks_berserkers
	}

	after = {
		scope:gorluk = { set_employer = root }
		spawn_army = {
			uses_supply = no
			inheritable = no
			name = uruk_hai_berserker_troops
			men_at_arms = {
				type = urukhai_berserker
				stacks = 2
			}
			location = capital_province
		}
	}
}

### Evil: Industry ###

isengard.0230 = { # The Gardens of Isengard
	content_source = realms_dlc
	type = character_event
	title = isengard.0230.t
	desc = isengard.0230.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:overseer
		animation = personality_bold
	}
	override_background = {
		reference = garden
	}

	immediate = {
		if = {
			limit = {
				any_courtier = {
					is_orc = yes
				}
			}
			random_courtier = {
				limit = { is_orc = yes }
				save_scope_as = overseer
			}
		}
		else = {
			random_courtier = {
				save_scope_as = overseer
			}
		}
		character:lineofsauron = { save_scope_as = sauron }
	}

	option = { # Rip them all down
		name = isengard.0230.a
		custom_tooltip = isengard.0230.a.tt
		trigger_event = {
			id = isengard.0231
			months = 6 
		}
	}
}

isengard.0231 = { # A Shortage of Materials
	content_source = realms_dlc
	type = character_event
	title = isengard.0231.t
	desc = isengard.0231.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:overseer
		animation = beg
	}

	trigger = {
		has_title = title:c_isengard
	}

	immediate = {
		if = {
			limit = { NOT = { exists = scope:overseer } }
			if = {
				limit = {
					any_courtier = {
						is_orc = yes
					}
				}
				random_courtier = {
					limit = { is_orc = yes }
					save_scope_as = overseer
				}
			}
			else = {
				random_courtier = {
					save_scope_as = overseer
				}
			}
		}
	}

	option = { # Venture beyond the walls, take all that you need.
		name = isengard.0231.a
		custom_tooltip = isengard.0231.a.tt
		title:c_isengard = {
			add_county_modifier = stripped_of_raw_resources_county_modifier
		}
		trigger_event = {
			id = isengard.0232
			months = { 12 24 }
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	option = { # We will seek out supplies from our neighbours.
		name = isengard.0231.b
		custom_tooltip = isengard.0231.b.tt
		remove_short_term_gold = 150
		trigger_event = {
			id = isengard.0232
			months = { 18 30 }
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

isengard.0232 = { # The Pits of Isengard
	content_source = realms_dlc
	type = character_event
	title = isengard.0232.t
	desc = isengard.0232.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:overseer
		animation = beg
	}

	trigger = {
		has_title = title:c_isengard
	}

	immediate = {
		debug_log = "Isengard: Stage 1 Industrialisation Complete"
		if = {
			limit = { NOT = { exists = scope:overseer } }
			if = {
				limit = {
					any_courtier = {
						is_orc = yes
					}
				}
				random_courtier = {
					limit = { is_orc = yes }
					save_scope_as = overseer
				}
			}
			else = {
				random_courtier = {
					save_scope_as = overseer
				}
			}
		}
	}

	option = { # ...and this is just the beginning!
		name = isengard.0232.a
		title:c_isengard = {
			add_county_modifier = industrialised_isengard_1_county_modifier
			set_variable = { name = industry_level value = 1 }
		}
		title:c_isengard.title_province = {
			add_province_modifier = industrialised_isengard_1_province_modifier
		}
	}
}

isengard.0233 = { # A Hunger for Steel
	content_source = realms_dlc
	type = character_event
	title = isengard.0233.t
	desc = isengard.0233.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:overseer
		animation = personality_bold
	}

	immediate = {
		if = {
			limit = {
				any_courtier = {
					is_orc = yes
				}
			}
			random_courtier = {
				limit = { is_orc = yes }
				save_scope_as = overseer
			}
		}
		else = {
			random_courtier = {
				save_scope_as = overseer
			}
		}
	}

	option = { # Ore I can find beneath Isengard, but fuel...
		name = isengard.0233.a
		custom_tooltip = isengard.0233.a.tt
		trigger_event = {
			id = isengard.0234
			months = 6 
		}
	}
}

isengard.0234 = { # Logging in Fangorn
	content_source = realms_dlc
	type = character_event
	title = isengard.0234.t
	desc = isengard.0234.desc
	theme = stewardship
	override_background = {
		reference = fangorn
	}
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:overseer
		animation = beg
	}

	trigger = {
		has_title = title:c_isengard
	}

	immediate = {
		if = {
			limit = { NOT = { exists = scope:overseer } }
			if = {
				limit = {
					any_courtier = {
						is_orc = yes
					}
				}
				random_courtier = {
					limit = { is_orc = yes }
					save_scope_as = overseer
				}
			}
			else = {
				random_courtier = {
					save_scope_as = overseer
				}
			}
		}
	}

	option = { # The woods exist to feed the fires of industry!
		name = isengard.0234.a
		custom_tooltip = isengard.0234.a.tt
		custom_tooltip = isengard.0234.a.tt2
		add_character_flag = logged_fangorn
		add_gold = 100
		trigger_event = {
			id = isengard.0235
			years = { 1 3 }
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	option = { # I shall seek fuel elsewhere.
		name = isengard.0234.b
		custom_tooltip = isengard.0234.b.tt
		add_character_modifier = {
			modifier = shoddy_steel_character_modifier
			years = 25
		}
		trigger_event = {
			id = isengard.0235
			years = { 2 4 }
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

isengard.0235 = { # The Forges of Isengard
	content_source = realms_dlc
	type = character_event
	title = isengard.0235.t
	desc = isengard.0235.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:overseer
		animation = beg
	}

	trigger = {
		has_title = title:c_isengard
	}

	immediate = {
		debug_log = "Isengard: Stage 2 Industrialisation Complete"
		if = {
			limit = { NOT = { exists = scope:overseer } }
			if = {
				limit = {
					any_courtier = {
						is_orc = yes
					}
				}
				random_courtier = {
					limit = { is_orc = yes }
					save_scope_as = overseer
				}
			}
			else = {
				random_courtier = {
					save_scope_as = overseer
				}
			}
		}
	}

	option = { # ...and this is just the beginning!
		name = isengard.0235.a
		title:c_isengard = {
			hidden_effect = {
				remove_county_modifier = industrialised_isengard_1_county_modifier
			}
			add_county_modifier = industrialised_isengard_2_county_modifier
			set_variable = { name = industry_level value = 2 }
		}
		title:c_isengard.title_province = {
			remove_province_modifier = industrialised_isengard_1_province_modifier
		}
		title:c_isengard.title_province = {
			add_province_modifier = industrialised_isengard_2_province_modifier
		}
		if = {
			limit = {
				title:c_isengard.title_province = {
					NOT = { has_building_or_higher = furnaces_03 }
				}
			}
			title:c_isengard.title_province = { add_building = furnaces_03 }
		}
		trigger_event = {
			id = isengard.0250
			years = 1
		}
	}
}

isengard.0236 = { # The Endless Drive of Industry
	content_source = realms_dlc
	type = character_event
	title = isengard.0236.t
	desc = isengard.0236.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:overseer
		animation = personality_bold
	}

	immediate = {
		if = {
			limit = {
				any_courtier = {
					is_orc = yes
				}
			}
			random_courtier = {
				limit = { is_orc = yes }
				save_scope_as = overseer
			}
		}
		else = {
			random_courtier = {
				save_scope_as = overseer
			}
		}
	}

	option = { # Rip them all down
		name = isengard.0236.a
		custom_tooltip = isengard.0236.a.tt
		trigger_event = {
			id = isengard.0237
			years = 1
		}
	}
}

isengard.0237 = { # An Ancient Horror Uncovered
	content_source = realms_dlc
	type = character_event
	title = isengard.0237.t
	desc = isengard.0237.desc
	theme = war
	override_background = {
		reference = burning_building
	}
	left_portrait = {
		character = root
		animation = personality_callous
	}
	right_portrait = {
		character = scope:overseer
		animation = fear
	}

	trigger = {
		has_title = title:c_isengard
	}

	immediate = {
		if = {
			limit = {
				any_courtier = {
					is_orc = yes
				}
			}
			random_courtier = {
				limit = { is_orc = yes }
				save_scope_as = overseer
			}
		}
		else = {
			random_courtier = {
				save_scope_as = overseer
			}
		}
	}

	option = { # I shall fight the beast myself!
		name = isengard.0237.a
		custom_tooltip = isengard.0237.a.tt
		duel = {
			skill = learning
			value = 38
			20 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 2
				}
				trigger_event = isengard.0238
				show_as_tooltip = {
					add_prestige = 500
				}
				debug_log = "Isengard: Ancient Horror Slain"
			}

			20 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
				}
				trigger_event = isengard.0239
				show_as_tooltip = {
					add_trait = one_eyed
					add_trait = one_legged
					add_trait = scarred
					title:c_isengard = {
						remove_county_modifier = industrialised_isengard_2_county_modifier
					}
					title:c_isengard.title_province = {
						remove_province_modifier = industrialised_isengard_2_province_modifier
					}
				}
				debug_log = "Isengard: Ancient Horror Destroys Industry"
			}
		}
	}

	option = { # Abandon everything
		name = isengard.0237.b
		custom_tooltip = isengard.0237.b.tt
		title:c_isengard = {
			remove_county_modifier = industrialised_isengard_2_county_modifier
		}
		title:c_isengard.title_province = {
			remove_province_modifier = industrialised_isengard_2_province_modifier
		}
		debug_log = "Isengard: Ancient Horror Destroys Industry"
	}
}

isengard.0238 = { # A Horror Vanquished
	content_source = realms_dlc
	type = character_event
	title = isengard.0238.t
	desc = isengard.0238.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:overseer
		animation = personality_bold
	}

	immediate = {
		if = {
			limit = {
				any_courtier = {
					is_orc = yes
				}
			}
			random_courtier = {
				limit = { is_orc = yes }
				save_scope_as = overseer
			}
		}
		else = {
			random_courtier = {
				save_scope_as = overseer
			}
		}
	}

	option = { # Now, nothing can stop my works!
		name = isengard.0238.a
		add_prestige = 500
		trigger_event = {
			id = isengard.0240
			months = 6 
		}
	}
}

isengard.0239 = { # The Horror Prevails
	content_source = realms_dlc
	type = character_event
	title = isengard.0239.t
	desc = isengard.0239.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:overseer
		animation = beg
	}

	trigger = {
		has_title = title:c_isengard
	}

	immediate = {
		if = {
			limit = { NOT = { exists = scope:overseer } }
			if = {
				limit = {
					any_courtier = {
						is_orc = yes
					}
				}
				random_courtier = {
					limit = { is_orc = yes }
					save_scope_as = overseer
				}
			}
			else = {
				random_courtier = {
					save_scope_as = overseer
				}
			}
		}
	}

	option = { # No...!
		name = isengard.0239.a
		add_trait = one_eyed
		add_trait = one_legged
		add_trait = scarred
		title:c_isengard = {
			remove_county_modifier = industrialised_isengard_2_county_modifier
		}
		title:c_isengard.title_province = {
			remove_province_modifier = industrialised_isengard_2_province_modifier
		}
	}
}

isengard.0240 = { # A Subterranean Complex
	content_source = realms_dlc
	type = character_event
	title = isengard.0240.t
	desc = isengard.0240.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:overseer
		animation = beg
	}

	trigger = {
		has_title = title:c_isengard
	}

	immediate = {
		if = {
			limit = { NOT = { exists = scope:overseer } }
			if = {
				limit = {
					any_courtier = {
						is_orc = yes
					}
				}
				random_courtier = {
					limit = { is_orc = yes }
					save_scope_as = overseer
				}
			}
			else = {
				random_courtier = {
					save_scope_as = overseer
				}
			}
		}
	}

	option = { # ...and this is just the beginning!
		name = isengard.0240.a
		title:c_isengard = {
			hidden_effect = {
				remove_county_modifier = industrialised_isengard_2_county_modifier
			}
			add_county_modifier = industrialised_isengard_3_county_modifier
			set_variable = { name = industry_level value = 3 }
		}
		title:c_isengard.title_province = {
			remove_province_modifier = industrialised_isengard_2_province_modifier
		}
		title:c_isengard.title_province = {
			add_province_modifier = industrialised_isengard_3_province_modifier
		}
	}
}

### Evil: Rohan ###

isengard.0250 = { # The Question of the Horselords
	content_source = realms_dlc
	type = character_event
	title = isengard.0250.t
	desc = {
		## Introduction wording
		desc = isengard.0250.desc.start
		triggered_desc = { ## If Grima is alive, talk about him being your agent
			trigger = { 
				exists = scope:grima
				scope:grima = { is_alive = yes }
				OR = {
					is_landed = no
					AND = {
						is_landed = yes
						any_liege_or_above = { this = scope:rohanking }
					}
				}
			} 
			desc = isengard.0250.desc.grima
		}
		triggered_desc = { ## If Grima is not around for any reason, talk about alternative agents
			trigger = { 
				exists = scope:grima
				OR = {
					scope:grima = { is_alive = no }
					AND = {
						is_landed = yes
						NOT = { any_liege_or_above = { this = scope:rohanking } }
					}
				}
			} 
			desc = isengard.0250.desc.nogrima
		}
		triggered_desc = { ## If the line of Eorl holds the kingdom, talk about its few successors
			trigger = { 
				scope:rohanking.dynasty = scope:theodred.dynasty
			} 
			desc = isengard.0250.desc.eorl
		}
		triggered_desc = { ## If the line of Eorl does not hold the kingdom, talk about its recent fall
			trigger = { 
				NOT = { scope:rohanking.dynasty = scope:theodred.dynasty }
			} 
			desc = isengard.0250.desc.noneorl
		}
		triggered_desc = { ## If all others are dead, talk about the iminent doom
			trigger = { 
				exists = scope:theodred
				scope:theodred = { is_alive = no }
				exists = scope:eomer
				scope:eomer = { is_alive = no }
				exists = scope:eowyn
				scope:eowyn = { is_alive = no }
			} 
			desc = isengard.0250.desc.notheodrednoeomernoeowyn
		}
		triggered_desc = { ## If Theodred is alive, talk about him being a potential target
			trigger = { 
				exists = scope:theodred
				scope:theodred = { is_alive = yes }
			} 
			desc = isengard.0250.desc.theodred
		}
		triggered_desc = { ## If Eomer is alive, talk about him also being a potential target
			trigger = { 
				exists = scope:eomer
				scope:eomer = { is_alive = yes }
			} 
			desc = isengard.0250.desc.eomer
		}
		triggered_desc = { ## If Eomer is dead but Eowyn alive, talk about her being the last strong claimant
			trigger = { 
				exists = scope:eomer
				scope:eomer = { is_alive = no }
				exists = scope:eowyn
				scope:eowyn = { is_alive = yes }
			} 
			desc = isengard.0250.desc.noeomereowyn
		}
		triggered_desc = { ## If Eomer is alive but Eowyn is dead, talk about no other successors
			trigger = { 
				exists = scope:eomer
				scope:eomer = { is_alive = yes }
				exists = scope:eowyn
				scope:eowyn = { is_alive = no }
			} 
			desc = isengard.0250.desc.eomernoeowyn
		}
		triggered_desc = { ## If Eowyn is alive, talk about her being a political wedding match
			trigger = { 
				exists = scope:eowyn
				scope:eowyn = { is_alive = yes }
			} 
			desc = isengard.0250.desc.eowyn
		}
		triggered_desc = { ## If Eowyn and Grima are alive, talk about them as the pairing
			trigger = { 
				exists = scope:eowyn
				scope:eowyn = { is_alive = yes }
				exists = scope:grima
				scope:grima = { is_alive = yes }
			} 
			desc = isengard.0250.desc.eowyngrima
		}
		triggered_desc = { ## If Eowyn is alive but Grima is not, talk about a paring with a weak-willed noble
			trigger = { 
				exists = scope:eowyn
				scope:eowyn = { is_alive = yes }
				exists = scope:grima
				scope:grima = { is_alive = no }
			} 
			desc = isengard.0250.desc.eowynother
		}
		desc = isengard.0250.desc.end
	}
	theme = intrigue
	override_background = {
		reference = edoras
	}
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:rohanking
		animation = personality_honorable
	}
	lower_right_portrait = scope:eomer
	lower_left_portrait = scope:theodred
	lower_center_portrait = scope:grima

	trigger = {
		exists = title:k_rohan.holder
	}

	immediate = {
		save_scope_as = saruman
		title:k_rohan.holder = {
			save_scope_as = rohanking
		}
		character:6000018 = { save_scope_as = eomer }
		character:6000035 = { save_scope_as = eowyn }
		character:6000034 = { save_scope_as = theodred }
		character:6000044 = { save_scope_as = grima }
		if = { ## If Grima is unlanded, make sure he's put in the king's court
			limit = {
				scope:grima = { 
					is_alive = yes
					is_landed = no
				}
			}
			hidden_effect = { 
				scope:grima = { 
					set_employer = scope:rohanking
					set_character_faith = faith:lidless_eye
				}
			}
		}
	}

	option = { # Designs in the shadows will prevail in bringing Rohan under my control
		name = isengard.0250.a
		debug_log = "Isengard: The Question of Rohan... Sneaky"
		custom_tooltip = isengard.0250.a.tt
		custom_tooltip = isengard.0250.a.tt2
		add_character_flag = isengard_seeks_to_subdue_rohan
		trigger_event = isengard.0020
		## AI should typically taking this option
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	option = { # Gather the Dunlendings and Uruk-hai. We shall subjugate the Rohirrim in a single swoop
		name = isengard.0250.b
		debug_log = "Isengard: The Question of Rohan... Blitzkrieg"
		custom_tooltip = isengard.0250.b.tt
		custom_tooltip = isengard.0250.b.tt2
		add_character_flag = isengard_seeks_to_blitzkrieg_rohan
		# Consider spawning of even troops or mechanics to do so.
		scope:rohanking = {
			trigger_event = {
				id = isengard.0251
				months = 11
			}
		}
		## AI shouldn't typically be taking this option
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

isengard.0251 = { # An Ultimatum from Isengard
	content_source = realms_dlc
	type = character_event
	title = isengard.0251.t
	desc = isengard.0251.desc
	theme = diplomacy
	override_background = {
		reference = edoras
	}
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	right_portrait = {
		character = scope:saruman
		animation = personality_callous
	}

	option = { # Muster the Rohirrim and form the Éoherë!
		name = isengard.0251.a
		debug_log = "Isengard: Rohan Resists Blitzkrieg"
		## Muster the Rohirrim
		trigger_event = isengard.0008
		## Let Saruman know the bad news
		scope:saruman = {
			trigger_event = isengard.0252
		}
		## AI should typically taking this option
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 80
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	option = { # How can we hope to defeat such evil?
		name = isengard.0251.b
		debug_log = "Isengard: Rohan Surrenders without a Fight"
		## An imperial Rohan would never submit
		trigger = {
			highest_held_title_tier < tier_empire
		}
		## If Isengard is not Empire tier, it needs to be...
		scope:saruman = {
			if = {
				limit = {
					title:e_isengard_unleashed = { is_title_created = no }
					highest_held_title_tier < tier_empire
				}
				create_title_and_vassal_change = {
					type = created
					save_scope_as = title_change
					add_claim_on_loss = no
				}
				title:e_isengard_unleashed = {
					change_title_holder = {
						holder = scope:saruman
						change = scope:title_change
					}
				}
				resolve_title_and_vassal_change = scope:title_change
			}
		}
		## Swear fealty to Isengard
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
		}
		change_liege = {
			liege = scope:saruman
			change = scope:change
		}
		resolve_title_and_vassal_change = scope:change
		## Impacts on Theoden
		set_character_faith = scope:saruman.faith
		add_prestige = -1000
		add_stress = 100
		## Let Saruman know the good news
		scope:saruman = {
			trigger_event = {
				id = isengard.0253
				days = 1
			}
		}
		## AI should rarely do this
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 20
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

isengard.0252 = { # The Folly of Rohan
	content_source = realms_dlc
	type = character_event
	title = isengard.0252.t
	desc = isengard.0252.desc
	theme = martial
	override_background = {
		reference = edoras
	}
	left_portrait = {
		character = root
		animation = dismissal
	}
	right_portrait = {
		character = scope:rohanking
		animation = personality_callous
	}

	option = { # Cue up war
		name = isengard.0252.a
		custom_tooltip = isengard.0252.a.tt
	}
}

isengard.0253 = { # The Submission of Rohan
	content_source = realms_dlc
	type = character_event
	title = isengard.0252.t
	desc = isengard.0252.desc
	theme = martial
	left_portrait = {
		character = root
		animation = dismissal
	}
	right_portrait = {
		character = scope:rohanking
		animation = personality_callous
	}

	option = { # A wise decision
		name = isengard.0252.a
		##Show submission as tooltip to match on-map reality
		show_as_tooltip = {
			scope:rohanking = {
				create_title_and_vassal_change = {
					type = swear_fealty
					save_scope_as = change
				}
				change_liege = {
					liege = scope:saruman
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		trigger_event = {
			id = isengard.0300
			months = 3
		}
	}
}

isengard.0260 = { # Our Man in Edoras
	content_source = realms_dlc
	type = character_event
	title = isengard.0260.t
	desc = isengard.0260.desc
	theme = intrigue
	override_background = {
		reference = edoras
	}
	left_portrait = {
		character = scope:agent
		animation = schadenfreude
	}
	right_portrait = {
		character = scope:rohanking
		animation = personality_compassionate
	}

	immediate = {
		save_agent_in_edoras_scope = yes # Find head agent in Edoras and save_scope_as agent
		title:k_rohan.holder = { save_scope_as = rohanking }
	}

	option = {
		name = isengard.0260.a
		scope:agent = {
			duel = {
				skill = intrigue 
				target = scope:rohanking
				50 = { 
					compare_modifier = {
						value = scope:duel_value
						multiplier = 1.5
						max = 40
					}
					desc = isengard.0260.a.duel_success
					root = {
						send_interface_toast = {
							left_icon = scope:agent
							right_icon = scope:rohanking
							title = isengard.0260.toast.success
							add_hook_no_toast = {
								type = influenced_advisors_hook
								target = scope:rohanking
							}
						}
					}
					scope:rohanking = {
						trigger_event = isengard.0261
					}
					debug_log = "Isengard: Successful Influence on Theoden"
				}
				50 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = -1.5
						min = -40
					}
					desc = isengard.0260.a.duel_failure
					root = {
						send_interface_toast = {
							left_icon = scope:agent
							right_icon = scope:rohanking
							title = isengard.0260.toast.failure
							add_character_modifier = {
								modifier = ineffective_agents_character_modifier
								years = 3
							}
						}
					}
					scope:rohanking = {
						trigger_event = isengard.0262
					}
					debug_log = "Isengard: Failed Influence on Theoden"
				}
			}
		}
	}
}

isengard.0261 = { # Our Man in Edoras ( Theoden Perspective - Hooked )
	content_source = realms_dlc
	type = character_event
	title = isengard.0261.t
	desc = isengard.0261.desc
	theme = intrigue
	override_background = {
		reference = edoras
	}
	left_portrait = {
		character = scope:agent
		animation = schadenfreude
	}
	right_portrait = {
		character = scope:rohanking
		animation = personality_compassionate
	}

	option = { # If they say so...
		name = isengard.0261.a
		show_as_tooltip = {
			character:lineofsaruman = {
				add_hook_no_toast = {
					type = influenced_advisors_hook
					target = scope:rohanking
				}
			}
		}
	}
}

isengard.0262 = { # Our Man in Edoras ( Theoden Perspective - Not Hooked )
	content_source = realms_dlc
	type = character_event
	title = isengard.0262.t
	desc = isengard.0262.desc
	theme = intrigue
	override_background = {
		reference = edoras
	}
	left_portrait = {
		character = scope:agent
		animation = schadenfreude
	}
	right_portrait = {
		character = scope:rohanking
		animation = personality_compassionate
	}

	option = { # What was all that about?
		name = isengard.0262.a
	}
}

isengard.0270 = { # Conduct Raids in the Westfold (Saruman Perspective)
	content_source = realms_dlc
	type = character_event
	title = isengard.0270.t
	desc = isengard.0270.desc
	theme = martial_strategy_focus
	override_background = {
		reference = burning_building
	}
	left_portrait = {
		character = root
		animation = schadenfreude
	}

	option = {
		name = isengard.0270.a
	}
}

isengard.0271 = { # Reports of Orcs in the Westfold (Theodred Perspective)
	content_source = realms_dlc
	type = character_event
	title = isengard.0271.t
	desc = {
		## Introduction wording
		desc = isengard.0271.desc.start
		triggered_desc = { ## If Theoden is alive, talk about going to see him
			trigger = { 
				real_father = { is_alive = yes }
				title:k_rohan.holder = real_father
			} 
			desc = isengard.0271.desc.seetheoden
		}
		triggered_desc = { ## If Theoden is alive, talk about going to see him
			trigger = { 
				NOT = { title:k_rohan.holder = real_father }
				NOT = { has_title = title:k_rohan }
			} 
			desc = isengard.0271.desc.seeking
		}
		triggered_desc = { ## If Theoden is alive, talk about going to see him
			trigger = { 
				has_title = title:k_rohan
			} 
			desc = isengard.0271.desc.iamking
		}
	}
	theme = martial
	override_background = {
		reference = burning_building
	}

	left_portrait = {
		character = root
		animation = anger
	}

	immediate = {
		title:k_rohan.holder = { save_scope_as = rohanking }
		show_as_tooltip = {
			title:c_gapofrohan = { 
				add_county_modifier = { 
					modifier = westfold_raided_county_modifier
					years = 5
				}
			}
			title:c_grimslade = { 
				add_county_modifier = { 
					modifier = westfold_raided_county_modifier
					years = 5
				}
			}
		}
	}

	option = { # I must speak with the king. Ride to Edoras.
		name = isengard.0271.a
		debug_log = "Isengard: Westfold Raids - Theodred goes to King"
		trigger = { NOT = { has_title = title:k_rohan } } #Is not the king
		custom_tooltip = isengard.0271.a.tt
		trigger_event = {
			id = isengard.0272
			days = 5
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { # Ride out to meet them.
		name = isengard.0271.b
		debug_log = "Isengard: Westfold Raids - Theodred rides immediately"
		custom_tooltip = isengard.0271.b.tt
		trigger_event = {
			id = isengard.0273
			days = 5
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

isengard.0272 = { # Theodred Reports Westfold Raids
	content_source = realms_dlc
	type = character_event
	title = isengard.0272.t
	desc = isengard.0272.desc
	theme = intrigue
	override_background = {
		reference = edoras
	}

	left_portrait = {
		character = root
		animation = personality_bold
	}

	right_portrait = {
		character = scope:agent
		animation = schadenfreude
	}

	immediate = {
		save_agent_in_edoras_scope = yes # Find head agent in Edoras and save_scope_as agent
	}	

	option = { # Investigate the Attacks
		name = isengard.0272.a
		debug_log = "Isengard: Westfold Raids - Theodred investigates raids"
		custom_tooltip = isengard.0271.b.tt
		trigger_event = {
			id = isengard.0273
			days = 7
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	option = { # Refuse
		name = isengard.0272.b
		debug_log = "Isengard: Westfold Raids - Theodred refuses to go"
		duel = {
			skill = intrigue 
			target = scope:agent
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
				}
				desc = isengard.0272.b.duel_failure
				death = {
					death_reason = death_murder
					killer = scope:agent
				}
			}
			50 = { 
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
				}
				desc = isengard.0272.b.duel_success
				custom_tooltip = isengard.0272.b.effect
				add_character_flag = rohan_civil_war_candidate
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

isengard.0273 = { # The Westfold Aflame
	content_source = realms_dlc
	type = character_event
	title = isengard.0273.t
	desc = isengard.0273.desc
	theme = martial
	override_background = {
		reference = burning_building
	}

	left_portrait = {
		character = root
		animation = paranoia
	}
	right_portrait = {
		character = scope:villager
		animation = pain
	}
	lower_center_portrait = {
		character = scope:saruman
	}

	immediate = {
		create_character = {
			template = generic_peasant_character
			location = title:b_fowlmere.title_province
			culture = root.culture
			faith = root.faith
			health = 1
			trait = wounded_3
			save_scope_as = villager
		}
		character:lineofsaruman = { save_scope_as = saruman }
	}

	option = { # Investigate further. Ford the Isen.
		name = isengard.0273.a
		trigger_event = {
			id = isengard.0274
			days = 2
		}
	}
}

isengard.0274 = { # Ambush at the Isen
	content_source = realms_dlc
	type = character_event
	title = isengard.0274.t
	desc = isengard.0274.desc
	theme = battle

	left_portrait = {
		character = root
		animation = fear
	}
	right_portrait = {
		character = scope:uruk
		scripted_animation = duel_wield_weapon
	}

	immediate = {
		create_character = {
			save_scope_as = uruk
			culture = culture:isengard_urukhai
			faith = character:lineofsaruman.faith
			gender = male
			martial = 10
			employer = character:lineofsaruman
		}
	}

	option = { # It's a trap!
		name = isengard.0274.a
		duel = {
			skill = prowess 
			value = 50
			50 = { 
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
					min = -50
				}
				desc = isengard.0274.a.duel_success
				add_prestige = 250
				trigger_event = {
					id = isengard.0275
					days = 2
				}
			}
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
					min = -50
				}
				desc = isengard.0274.a.duel_failure
				show_as_tooltip = { add_trait_force_tooltip = wounded_3 }
				show_as_tooltip = { 
					random = {
						chance = 80
						death = {
							death_reason = death_wounded_2
						}
					} 
				}
				trigger_event = {
					id = isengard.0276
					days = 2
				}
			}
		}
	}
}

isengard.0275 = { # Theodred Manages to escape relatively unscathed at the Isen
	content_source = realms_dlc
	type = character_event
	title = isengard.0275.t
	desc = isengard.0275.desc
	theme = battle

	left_portrait = {
		character = root
		animation = pain
	}

	immediate = {
		hidden_effect = { add_trait = wounded_1 }
	}

	option = { # Theodred may not survive the ensuing nights. 
		debug_log = "Isengard: Westfold Raids - Theodred unharmed"
		name = isengard.0275.a
		add_trait_force_tooltip = wounded_1
		title:k_rohan.holder = { # Theoden is informed.
			trigger_event = isengard.0280
		}
	}
}

isengard.0276 = { # Theodred Wounded at the Isen
	content_source = realms_dlc
	type = character_event
	title = isengard.0276.t
	desc = isengard.0276.desc
	theme = battle

	left_portrait = {
		character = root
		animation = pain
	}

	immediate = {
		hidden_effect = { add_trait = wounded_3 }
	}

	option = { # Theodred may not survive the ensuing nights. 
		name = isengard.0276.a
		hidden_effect = {
			random_list = {
				80 = { # Death
					trigger_event = {
						id = isengard.0277
						days = 12
					}
				}
				20 = { # Slight Recovery
					trigger_event = {
						id = isengard.0278
						days = 12
					}
				}
			}
		}
		add_trait_force_tooltip = wounded_3
	}
}

isengard.0277 = { # The Death of Theodred ( Theodred Perspective )
	content_source = realms_dlc
	type = character_event
	title = isengard.0277.t
	desc = isengard.0277.desc
	theme = death

	left_portrait = {
		character = root
		animation = sick
	}

	option = { # Theodred dies in his sleep, and his reports of Saruman's treachery die with him
		debug_log = "Isengard: Westfold Raids - Theodred killed"	
		name = isengard.0277.a
		death = {
			death_reason = death_wounded_2
		}
		title:k_rohan.holder = { # Theoden is informed.
			trigger_event = isengard.0279
		}
	}
}

isengard.0278 = { # The Maiming of Theodred ( Theodred Perspective )
	content_source = realms_dlc
	type = character_event
	title = isengard.0278.t
	desc = isengard.0278.desc
	theme = healthcare

	left_portrait = {
		character = root
		animation = sick
	}

	option = { # Theodred is forever changed, but lives long enough to tell his tale
		debug_log = "Isengard: Westfold Raids - Theodred maimed"
		name = isengard.0278.a
		random = {
			chance = 50
			remove_trait = wounded_3
			add_trait = disfigured
			add_trait = one_legged
		}
		title:k_rohan.holder = { # Theoden is informed.
			trigger_event = isengard.0280
		}
	}
}

isengard.0279 = { # The Death of Theodred ( Theoden Perspective )
	content_source = realms_dlc
	type = character_event
	title = isengard.0279.t
	desc = isengard.0279.desc
	theme = death

	left_portrait = {
		character = root
		animation = grief
	}
	
	right_portrait = {
		character = character:6000034
		animation = pain
	}

	option = { # No father should ever have to bury their child.
		name = isengard.0279.a
		if = {
			limit = { character:6000018 = { is_alive = yes } }
			character:6000018 = {
				trigger_event = {
					id = isengard.0282
					days = { 7 30 }
				}
			}
		}
		else = {
			character:lineofsaruman = {
				trigger_event = isengard.0285
			}
		}
		add_stress = 90
	}
}

isengard.0280 = { # The Maiming of Theodred ( Theoden Perspective )
	content_source = realms_dlc
	type = character_event
	title = isengard.0280.t
	desc = isengard.0280.desc
	theme = healthcare

	left_portrait = {
		character = root
		animation = sadness
	}
	
	right_portrait = {
		character = character:6000034
		animation = pain
	}

	option = { # Muster the Rohirrim!
		name = isengard.0280.a
		trigger_event = isengard.0008
		character:lineofsaruman = {
			trigger_event = isengard.0281
		}
		add_stress = 90
	}
}

isengard.0281 = { # The Maiming of Theodred ( Saruman Perspective )
	content_source = realms_dlc
	type = character_event
	title = isengard.0281.t
	desc = isengard.0281.desc
	theme = healthcare

	left_portrait = {
		character = root
		animation = sadness
	}
	
	right_portrait = {
		character = character:6000034
		animation = pain
	}

	option = { # So it is war.
		name = isengard.0281.a
		add_stress = 90
	}
}

isengard.0282 = { # Eomer Confronts Grima
	content_source = realms_dlc
	type = character_event
	title = isengard.0282.t
	desc = isengard.0282.desc
	theme = intrigue
	override_background = {
		reference = edoras
	}

	left_portrait = {
		character = root
		animation = anger
	}
	
	right_portrait = {
		character = scope:agent
		animation = schadenfreude
	}

	lower_center_portrait = {
		character = character:6000034
		animation = pain
	}

	immediate = {
		save_agent_in_edoras_scope = yes # Find head agent in Edoras and save_scope_as agent
	}

	option = { # Banishment it shall be!
		debug_log = "Isengard: Eomer Banished"
		name = isengard.0282.a
		#custom_tooltip = isengard.0282.a.tt	#juke note: unlocalized
		add_character_flag = banished_from_rohan_court
		if = {
			limit = {
				is_councillor_of = title:k_rohan.holder
			}
			title:k_rohan.holder = { fire_councillor = root }
		}
		set_relation_rival = {
			target = scope:agent
			reason = banished_from_rohan
		}
		character:lineofsaruman = {
			trigger_event = isengard.0284
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	option = { # I will back down
		debug_log = "Isengard: Eomer backs down"
		name = isengard.0282.b
		add_stress = 80
		add_prestige = -300
		add_opinion = {
			modifier = suspicion_opinion
			target = scope:agent
			#years = 10
			opinion = -50
		}
		character:lineofsaruman = {
			trigger_event = isengard.0283
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

isengard.0283 = { # The Death of Theodred - Eomer backs down ( Saruman Perspective )
	content_source = realms_dlc
	type = character_event
	title = isengard.0283.t
	desc = isengard.0283.desc
	theme = death

	left_portrait = {
		character = scope:agent
		animation = schadenfreude
	}
	
	right_portrait = {
		character = scope:eomer
		animation = personality_content
	}

	lower_center_portrait = {
		character = character:6000034
		animation = pain
	}

	immediate = {
		character:6000018 = { save_scope_as = eomer }
		character:6000034 = { save_scope_as = theodred }
	}

	option = { # All is going according to plan
		name = isengard.0283.a
	}
}

isengard.0284 = { # The Death of Theodred - Eomer is banished ( Saruman Perspective )
	content_source = realms_dlc
	type = character_event
	title = isengard.0284.t
	desc = isengard.0284.desc
	theme = death

	left_portrait = {
		character = scope:agent
		animation = worry
	}
	
	right_portrait = {
		character = scope:eomer
		animation = anger
	}

	lower_center_portrait = {
		character = scope:theodred
		animation = pain
	}

	immediate = {
		character:6000018 = { save_scope_as = eomer }
		character:6000034 = { save_scope_as = theodred }
	}

	option = { # Time is running short
		name = isengard.0284.a
	}
}

isengard.0285 = { # The Death of Theodred - Eomer is already dead ( Saruman Perspective )
	content_source = realms_dlc
	type = character_event
	title = isengard.0285.t
	desc = isengard.0285.desc
	theme = death

	left_portrait = {
		character = scope:agent
		animation = worry
	}

	right_portrait = {
		character = scope:theodred
		animation = pain
	}

	immediate = {
		character:6000018 = { save_scope_as = eomer }
		character:6000034 = { save_scope_as = theodred }
	}

	option = { # My plan has come to fruition
		name = isengard.0285.a
	}
}

isengard.0286 = { # Eomer discovers Gandalf and the hunters
	content_source = realms_dlc
	type = character_event
	title = isengard.0286.t
	desc = isengard.0286.desc
	theme = hunting
	override_background = {
		reference = white_wizard
	}
	left_portrait = {
		character = root
		animation = personality_bold
	}

	right_portrait = {
		character = character:lineofgandalf
		animation = personality_rational
	}

	lower_center_portrait = {
		character = character:lineisildur42
	}

	lower_right_portrait = {
		character = character:lineofdurin100
	}

	lower_left_portrait = {
		character = character:lineoforopher6
	}

	override_background = {
		reference = wilderness_steppe
	}

	immediate = {
		debug_log = "Isengard: Eomer finds Gandalf"
		hidden_effect = {
			character:lineofgandalf = { #Make sure Gandalf is 'the White'
				give_nickname = nick_the_white_istari
				add_character_flag = {			
					flag = had_nickname_event		
				}
			}
		}
		# I should add substitutes here
		character:lineofgandalf = { save_scope_as = gandalf }
		character:lineisildur42 = { save_scope_as = aragorn }
		character:lineoforopher6 = { save_scope_as = legolas }
		character:lineofdurin100 = { save_scope_as = gimli }
		title:k_rohan.holder = { save_scope_as = rohanking }
	}

	option = { # We make for Edoras at once!
		name = isengard.0286.a
		trigger_event = isengard.0287
		title:k_rohan.holder = {
			trigger_event = isengard.0287
		}
	}
}

isengard.0287 = { # Gandalf cures the King's corruption
	content_source = realms_dlc
	type = character_event
	title = isengard.0287.t
	desc = isengard.0287.desc
	theme = death
	override_background = {
		reference = edoras
	}
	left_portrait = {
		character = character:lineofgandalf
		animation = personality_vengeful
	}

	right_portrait = {
		character = title:k_rohan.holder
		animation = disbelief
	}

	lower_center_portrait = {
		character = scope:agent
	}
	trigger = {
		NOT = { has_character_flag = saved_by_gandalf }
	}
	immediate = {
		save_agent_in_edoras_scope = yes # Find head agent in Edoras and save_scope_as agent
	}

	option = { # At last, he is free
		debug_log = "Isengard: Gandalf cures king's corruption"
		name = isengard.0287.a
		add_character_flag = saved_by_gandalf
		if = {
			limit = { has_title = title:k_rohan }
			character:lineofsaruman = {
				remove_hook = { 
					type = influenced_advisors_hook
					target = scope:rohanking
				}
			}
			# Fate of Grima
			trigger_event = isengard.0288
			# Muster the Rohirrim
			trigger_event = isengard.0008
		}
	}
}

isengard.0288 = { # The Fate of Grima
	content_source = realms_dlc
	type = character_event
	title = isengard.0288.t
	desc = isengard.0288.desc
	theme = death
	
	left_portrait = {
		character = title:k_rohan.holder
		animation = anger
	}

	right_portrait = {
		character = scope:agent
		animation = fear
	}

	immediate = {
		if = {
			limit = {
				NOT = { exists = scope:agent }
			}
			random_living_character = {
				limit = { has_character_flag = isengard_agent }
				save_scope_as = agent
			}
		}
		scope:agent = {
			every_held_title = {
				create_title_and_vassal_change = {
					type = usurped
					save_scope_as = change
					add_claim_on_loss = no
				}
				change_title_holder = {
					holder = root
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
	}

	trigger = {
		OR = {
			exists = scope:agent
			any_living_character = {
				has_character_flag = isengard_agent
			}
		}
	}

	option = { # Execute the traitor
		debug_log = "Isengard: Grima Executed"	
		name = isengard.0288.a
		add_stress = -50
		scope:agent = {
			death = {
				death_reason = death_punishment
				killer = root
			}
		}
		if = {
			limit = { has_trait = forgiving }
			remove_trait = forgiving
			add_trait_force_tooltip = vengeful
		}
		else = { add_trait = vengeful }
		character:lineofsaruman = { add_character_flag = grima_executed }
	}

	option = { # Lock him up
		debug_log = "Isengard: Grima Imprisoned"	
		name = isengard.0288.b
		add_prestige = 100
		imprison = {
			target = scope:agent
			type = dungeon
		}
		character:lineofsaruman = { add_character_flag = grima_imprisoned }
	}

	option = { # Set the rat free
		debug_log = "Isengard: Grima set free"
		name = isengard.0288.c
		add_piety = 250
		scope:agent = {
			set_employer = character:lineofsaruman
		}
		if = {
			limit = { has_trait = vengeful }
			remove_trait = vengeful
			add_trait_force_tooltip = forgiving
		}
		else = { add_trait = forgiving }
		character:lineofsaruman = { add_character_flag = grima_freed }
	}

	after = {
		character:lineofsaruman = {
			trigger_event = isengard.0289
		}
	}
}

isengard.0289 = { # Gandalf cures the King's corruption ( Saruman Perspective )
	content_source = realms_dlc
	type = character_event
	title = isengard.0289.t
	desc = {
		desc = isengard.0289.desc.start
		triggered_desc = {
			trigger = { 
				has_character_flag = grima_executed
			} 
			desc = isengard.0289.desc.grima_executed
		}
		triggered_desc = {
			trigger = { 
				has_character_flag = grima_imprisoned
			} 
			desc = isengard.0289.desc.grima_imprisoned
		}
		triggered_desc = {
			trigger = { 
				has_character_flag = grima_freed
			} 
			desc = isengard.0289.desc.grima_freed
		}
		desc = isengard.0289.desc.end
	}
	theme = death
	override_background = {
		reference = white_wizard
	}

	left_portrait = {
		character = character:lineofgandalf
		animation = personality_bold
	}
	
	right_portrait = {
		character = title:k_rohan.holder
		animation = anger
	}

	lower_center_portrait = {
		character = scope:agent
		animation = pain
	}

	option = { # So it is war
		name = isengard.0289.a
	}
}

### Evil: Post-Rohan War events ###

isengard.0300 = { # The Extent of my Ambitions
	content_source = realms_dlc
	type = character_event
	title = isengard.0300.t
	desc = isengard.0300.desc
	theme = realm
	left_portrait = {
		character = root
		animation = dismissal
	}
	right_portrait = {
		character = scope:sauron
		animation = personality_callous
	}

	immediate = {
		character:lineofsauron = { save_scope_as = sauron }
		add_character_flag = saruman_loyaly_choice_made
	}

	trigger = {
		character:lineofsauron = { is_alive = yes }
		NOT = { has_character_flag = saruman_loyaly_choice_made }
	}

	option = { # Go my own way...
		debug_log = "Isengard: Anti-Sauron Path"
		name = isengard.0300.a
		add_character_flag = betrayed_sauron
		scope:sauron = {
			add_pressed_claim = title:e_isengard_unleashed
			set_relation_nemesis = {
				target = root
				reason = saruman_betrayal
			}
			trigger_event = isengard.0312
		}
		custom_tooltip = isengard.0300.a.tt1
		custom_tooltip = isengard.0300.a.tt2
	}

	option = { # Stay with Sauron
		debug_log = "Isengard: Pro-Sauron Path"
		name = isengard.0300.b
		add_character_flag = loyal_to_sauron
		make_tributary = {
			TYPE = tributary_permanent
			SUZERAIN = character:lineofsauron
			TRIBUTARY = root
		}
		scope:sauron = {
			set_relation_friend = {
				target = root
				reason = saruman_loyalty
			}
			trigger_event = isengard.0313
		}
		custom_tooltip = isengard.0300.b.tt1
		custom_tooltip = isengard.0300.b.tt2
	}
}

isengard.0301 = { # The Cult of the White Hand
	content_source = realms_dlc
	type = character_event
	title = isengard.0301.t
	desc = isengard.0301.desc
	theme = realm
	left_portrait = {
		character = root
		animation = dismissal
	}
	right_portrait = {
		character = scope:rohanking
		animation = personality_callous
	}

	immediate = {
		debug_log = "Isengard: White Hand Cult Formed"
		save_scope_as = saruman
		character:lineofsauron = { save_scope_as = sauron }
	}

	option = { # The White Hand shall not be stopped!
		name = isengard.0301.a
		if = {
			limit = { NOT = { faith = faith:white_hand_cult } }
			set_character_faith_with_conversion = faith:white_hand_cult
			hidden_effect = {
				faith:white_hand_cult = {
					change_fervor = {
						value = 10
						desc = fervor_gain_holy_order_founded
					}
					set_religious_head_title = title:k_the_white_hand
				}
				create_title_and_vassal_change = {
					type = created
					save_scope_as = change
					add_claim_on_loss = no
				}
				title:k_the_white_hand = {
					change_title_holder = {
						holder = scope:saruman
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		if = {
			limit = { NOT = { capital_county = { faith = faith:white_hand_cult } } }
			capital_county = { set_county_faith = faith:white_hand_cult }
		}
		every_held_title = {
			limit = { 
				tier = tier_county
				NOT = { this = root.capital_county }
		 	}
			hidden_effect = {
				random = {
					chance = 80
					set_county_faith = faith:white_hand_cult
				}
			}
		}
		hidden_effect = {
			every_realm_county = {
				if = {
					limit = { faith = faith:lidless_eye }
					set_county_faith = faith:white_hand_cult
				}
				random = {
					chance = 33
					set_county_faith = faith:white_hand_cult
				}
			}
		}
	# 	# Create Holy Order for Cult of the White Hand. Saruman's Manslayers!
	 	custom_tooltip = create_holy_order_decision_effect_message
	 	title:c_isengard = { save_scope_as = designated_county }
	 	# Select an appropriate barony. If there's an empty space in the capital, we create a castle.
	 	# Otherwise, grab an existing non-capital castle/city.
	 	if = {
	 		limit = { scope:designated_county = { any_county_province = { has_holding = no } } }
	 		scope:designated_county = {
	 			random_county_province = {
	 				limit = { has_holding = no }
	 				set_holding_type = castle_holding
	 				barony = { save_scope_as = leased_barony }
				}
	 		}
	 	}
	 	else = {
	 		scope:designated_county = {
	 			random_county_province = {
	 				limit = {
	 					is_county_capital = no
	 					OR = {
	 						has_holding_type = castle_holding
	 						has_holding_type = city_holding
	 					}
	 				}
	 				barony = { save_scope_as = leased_barony }
	 			}
	 		}
	 	}
	 	# Create a suitable leader for the Holy Order.
	 	create_character = {
	 		template = orc_holy_order_character
	 		location = scope:leased_barony.title_province
	 		save_scope_as = leader
	 	}
	 	# Create the actual Holy Order.
	 	create_holy_order = {
	 		leader = scope:leader
	 		capital = scope:leased_barony
	 		save_scope_as = new_holy_order
	 	}
	 	hidden_effect = {
	 		scope:leader = {
	 			add_trait = order_member
	 			add_piety_level = 2
	 			add_gold = holy_order_starting_gold
	 			every_courtier = {
	 				add_trait = order_member
 					set_culture = culture:isengard_urukhai
	 				set_character_faith = faith:white_hand_cult
	 			}
	 		}
	 	}
	 	# Give it some buildings.
		hidden_effect = {
			scope:leased_barony.title_province = {
				if = {
					limit = { NOT = { has_building_or_higher = uruk_pits_01 } }
					if = {
						limit = { free_building_slots > 0 }
					}
					add_building = uruk_pits_03
				}
				if = {
					limit = { NOT = { has_building_or_higher = hunting_outposts_01 } }
					if = {
						limit = { free_building_slots > 0 }
					}
					add_building = hunting_outposts_02
				}
				if = {
					limit = { NOT = { has_building_or_higher = raiding_camps_01 } }
					if = {
						limit = { free_building_slots > 0 }
					}
					add_building = raiding_camps_01
				}
				if = {
					limit = { NOT = { has_building_or_higher = furnaces_01 } }
					if = {
						limit = { free_building_slots > 0 }
					}
					add_building = furnaces_01
				}
			}
		}
	# 	# Some minor misc effects.
		scope:leader.primary_title = {
			set_coa = ho_white_hand_manslayers
			set_title_name = holy_order_white_hand_manslayers
		}
		# Messages.
		send_interface_toast = {
			type = holy_order_founded_message
			desc = i_created_holy_order_message
			left_icon = scope:leader
			right_icon = scope:new_holy_order.title
		}
		save_scope_as = holy_order_creator
		every_ruler = {
			limit = {
				faith = scope:holy_order_creator.faith
				NOT = { this = scope:holy_order_creator }
			}
			send_interface_message = {
				type = holy_order_founded_message
				desc = someone_created_holy_order_message
				left_icon = scope:holy_order_creator
				right_icon = scope:new_holy_order.title
			}
		}
		every_neighboring_top_liege_realm_owner = {
			limit = { NOT = { faith = scope:holy_order_creator.faith } }
			send_interface_message = {
				type = enemy_holy_order_founded_message
				desc = other_faith_neighbor_created_holy_order_message
				left_icon = scope:holy_order_creator
				right_icon = scope:new_holy_order.title
			}
		}
		scope:sauron = {
			add_opinion = {
				modifier = disappointed_opinion
				target = root
				opinion = -50
			}
		}
	}
}

isengard.0302 = { # Isengard Marches on Mordor - Humble Mordor CB
	content_source = realms_dlc
	type = character_event
	title = isengard.0302.t
	desc = isengard.0302.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_defender
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = war_attacker
	}

	option = { # Let them come...
		name = isengard.0302.a
		debug_log = "Isengard: Humble Mordor CB Taken"
	}
}

isengard.0303 = { # Isengard Victory over Mordor - Humble Mordor CB (Isengard Perspective)
	content_source = realms_dlc
	type = character_event
	title = isengard.0303.t
	desc = isengard.0303.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_win
	}
	right_portrait = {
		character = character:lineofsauron
		animation = prisondungeon
	}

	option = { # There can be only one
		name = isengard.0303.a
		debug_log = "Isengard: Humble Mordor CB - Isengard Victory"
	}
}

isengard.0304 = { # Isengard Defeat over Mordor - Humble Mordor CB (Isengard Perspective)
	content_source = realms_dlc
	type = character_event
	title = isengard.0304.t
	desc = isengard.0304.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_loss
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = war_over_win
	}
	option = { # This is bad
		name = isengard.0304.a
		debug_log = "Isengard: Humble Mordor CB - Mordor Victory"
	}
}

isengard.0305 = { # Isengard Defeat over Mordor - Humble Mordor CB (Sauron Perspective)
	content_source = realms_dlc
	type = character_event
	title = isengard.0305.t
	desc = isengard.0305.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_loss
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = war_over_win
	}

	option = { # His fall is inevitable
		name = isengard.0305.a
	}
}

isengard.0306 = { # The Two Towers
	content_source = realms_dlc
	type = character_event
	title = isengard.0306.t
	desc = isengard.0306.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_rational
	}

	immediate = {
		debug_log = "Isengard: Two Towers decision taken"
	}

	option = { # Further strengthen my position in Isengard
		name = isengard.0306.a
		set_realm_capital = title:c_isengard
		title:c_isengard = { add_county_modifier = seat_of_the_new_dark_lord_county_modifier }
	}
	option = { # Establish myself in the land of Shadow in Barad-dur
		name = isengard.0306.b
		set_realm_capital = title:c_barad_dur
		title:c_barad_dur = { add_county_modifier = seat_of_the_new_dark_lord_county_modifier }
	}
	option = { # Set my capital in Minas Ithil to keep a watch on Gondor
		name = isengard.0306.c
		set_realm_capital = title:c_minas_ithil
		title:c_minas_ithil = { add_county_modifier = seat_of_the_new_dark_lord_county_modifier }
	}
}

isengard.0307 = { # Mordor Marches on Isengard - Humble Isengard CB
	content_source = realms_dlc
	type = character_event
	title = isengard.0307.t
	desc = isengard.0307.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_win
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = prisondungeon
	}

	option = { # There can be only one
		name = isengard.0307.a
		debug_log = "Isengard: Humble Isengard CB taken"
	}
}

isengard.0308 = { # Mordor Victory over Isengard - Humble Isengard CB (Mordor Perspective)
	content_source = realms_dlc
	type = character_event
	title = isengard.0308.t
	desc = isengard.0308.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_loss
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = war_over_win
	}
	option = { # Let him rot!
		name = isengard.0308.a
		debug_log = "Isengard: Humble Isengard CB - Mordor Victory"
	}
}

isengard.0309 = { # Mordor Victory over Isengard - Humble Isengard CB (Isengard Perspective)
	content_source = realms_dlc
	type = character_event
	title = isengard.0309.t
	desc = isengard.0309.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_loss
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = war_over_win
	}

	option = { # His fall is inevitable
		name = isengard.0309.a
		debug_log = "Isengard: Humble Isengard CB - Isengard Victory"
	}
}

isengard.0310 = { # Mordor Defeat over Isengard - Humble Isengard CB (Mordor Perspective)
	content_source = realms_dlc
	type = character_event
	title = isengard.0310.t
	desc = isengard.0310.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_loss
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = war_over_win
	}

	option = { # His fall is inevitable
		name = isengard.0310.a
	}
}

isengard.0311 = { # Mordor Defeat over Isengard - Humble Isengard CB (Isengard Perspective)
	content_source = realms_dlc
	type = character_event
	title = isengard.0311.t
	desc = isengard.0311.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_win
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = prisondungeon
	}

	option = { # There can be only one
		name = isengard.0311.a
	}
}

isengard.0312 = { # The Betrayal of Saruman ( Sauron Perspective )
	content_source = realms_dlc
	type = character_event
	title = isengard.0312.t
	desc = isengard.0312.desc
	theme = realm
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = personality_callous
	}

	option = { # The fool...
		name = isengard.0312.a
		show_as_tooltip = {
			add_pressed_claim = title:e_isengard_unleashed
			set_relation_nemesis = {
				target = root
				reason = saruman_betrayal
			}
		}
	}
}

isengard.0313 = { # The Betrayal of Saruman ( Sauron Perspective )
	content_source = realms_dlc
	type = character_event
	title = isengard.0313.t
	desc = isengard.0313.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = personality_honorable
	}

	option = { # Stay with Sauron
		name = isengard.0313.a
		scope:sauron = {
			set_relation_friend = {
				target = root
				reason = saruman_loyalty
			}
		}
		custom_tooltip = isengard.0313.a.tt
	}
}

### Good: Initial Set of Good Events ###

isengard.0500 = { # The Fate of the Palantír
	content_source = realms_dlc
	type = character_event
	title = isengard.0500.t
	desc = isengard.0500.desc
	theme = realm

	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:sauron
		animation = anger
	}
	artifact = {
		target = scope:palantir_orthanc
		position = lower_center_portrait
		trigger = { exists = scope:palantir_orthanc }
	}
	override_background = {
		reference = on_river
	}

	immediate = {
		character:lineofsauron = { save_scope_as = sauron }
		random_character_artifact = {
			limit = { has_variable = palantir_orthanc }
			save_scope_as = palantir_orthanc
		}
		trigger_event = { # Campaign scene-setting for Good Saruman
			id = isengard.0503
			months = 6
		}
	}

	option = { # Keep it at Isengard
		name = isengard.0500.a
		debug_log = "Isengard: Palantir Kept"
	}

	option = { # Send it down the Isen
		name = isengard.0500.b
		debug_log = "Isengard: Palantir sent down Isen"
		custom_tooltip = {
			text = isengard.0500.b.effect1
			destroy_artifact = scope:palantir_orthanc
		}
		custom_tooltip = {
			text = isengard.0500.b.effect2
			random_list = { #Pick a random riverside county for it to wash up in
				89 = {
					#Forever Lost
				}
				1 = {
					title:c_gapofrohan = {
						save_scope_as = palantir_discovery_county
					}
				}
				1 = {
					title:c_riverwatch = {
						save_scope_as = palantir_discovery_county
					}
				}
				1 = {
					title:c_grimslade = {
						save_scope_as = palantir_discovery_county
					}
				}
				1 = {
					title:c_iren = {
						save_scope_as = palantir_discovery_county
					}
				}
				1 = {
					title:c_cadlus = {
						save_scope_as = palantir_discovery_county
					}
				}
				1 = {
					title:c_gaetir = {
						save_scope_as = palantir_discovery_county
					}
				}
				1 = {
					title:c_iarnburn = {
						save_scope_as = palantir_discovery_county
					}
				}
				1 = {
					title:c_frith_grabhail = {
						save_scope_as = palantir_discovery_county
					}
				}
				1 = {
					title:c_lond_angren = {
						save_scope_as = palantir_discovery_county
					}
				}
				1 = {
					title:c_byrig = {
						save_scope_as = palantir_discovery_county
					}
				}
				1 = {
					title:c_angrast = {
						save_scope_as = palantir_discovery_county
					}
				}
			}
			if = {
				limit = {
					exists = scope:palantir_discovery_county
				}
				trigger_event = {
					id = isengard.0501
					days = { 1 15000 }
				}
			}
		}
	}
}

isengard.0501 = { #Maintenance event for Palantir of Orthanc rediscovery
	hidden = yes
	scope = none

	immediate = {
		scope:palantir_discovery_county.holder = {
			trigger_event = isengard.0502
		}
	}
}

isengard.0502 = { # A Stone in the Sands
	content_source = realms_dlc
	type = character_event
	title = isengard.0502.t
	desc = isengard.0502.desc
	theme = realm

	left_portrait = {
		character = root
		animation = personality_honorable
	}
	right_portrait = {
		character = scope:discoverer
		animation = worry
	}
	artifact = {
		target = scope:palantir_orthanc
		position = lower_center_portrait
		trigger = { exists = scope:palantir_orthanc }
	}
	override_background = {
		reference = on_river
	}

	immediate = {
		random_courtier_or_guest = {
			save_scope_as = discoverer
		}
		create_artifact_palantir_orthanc_effect = { OWNER = this }
		random_character_artifact = {
			limit = { has_variable = palantir_orthanc }
			save_scope_as = palantir_orthanc
		}
		scope:palantir_orthanc = {
			add_artifact_history = {
				type = discovered
				actor = scope:discoverer
				recipient = root
				location = scope:palantir_discovery_county.title_province
			}
		}
	}

	option = { # Curious...
		name = isengard.0502.a
		debug_log = "Isengard: Palantir Rediscovered"
		add_prestige = 100
	}

}

isengard.0503 = { # The Council of the Wise
	content_source = realms_dlc
	type = character_event
	title = isengard.0503.t
	desc = isengard.0503.desc
	theme = realm

	left_portrait = {
		character = root
		animation = personality_forgiving
	}
	right_portrait = {
		character = scope:gandalf
		animation = personality_vengeful
	}
	lower_center_portrait = scope:elrond
	lower_left_portrait = scope:galadriel
	lower_right_portrait = scope:cirdan

	override_background = {
		reference = imladris
	}

	immediate = {
		character:lineofgandalf = { save_scope_as = gandalf }
		character:linefinwe36 = { save_scope_as = galadriel }
		character:linefinwe27 = { save_scope_as = elrond }
		character:lineofcirdan = { save_scope_as = cirdan }
		add_character_flag = saruman_white_council_goal_given
	}

	option = { # There is much to do!
		name = isengard.0503.a
	}

}

isengard.0504 = { # Founding a New Academy
	content_source = realms_dlc
	type = character_event
	title = isengard.0504.t
	desc = isengard.0504.desc
	theme = learning
	left_portrait = {
		character = root
		animation = personality_rational
	}
	override_background = {
		reference = study
	}

	immediate = {
		remove_short_term_gold = 1000
	}

	option = { # Minas Tirith - b_harlond
		name = isengard.0504.b_harlond 
		trigger = {
			title:b_harlond_gondor = {
				county = { development_level >= 30 }
				title_province = { has_special_building_slot = no }
				faith_is_good = yes
			}
		}

		title:b_harlond_gondor.title_province = {
			add_special_building = generic_university
		}

		title:b_harlond_gondor = {
			if = {
				limit = { NOT = { holder = root } }
				holder = {
					add_opinion = {
						target = root
						modifier = pleased_opinion
						opinion = 50
					}
				}
			}
		}

		every_player = {
			limit = {
				NOT = { this = root }
				is_within_diplo_range = { CHARACTER = root }
			}
			title:b_harlond_gondor.holder.top_liege = {
				save_scope_as = founder
			}
			trigger_event = isengard.2002
		}
	}

	option = { # Dol Amroth - b_rohallor
		name = isengard.0504.b_rohallor 
		trigger = {
			title:b_rohallor = {
				county = { development_level >= 30 }
				title_province = { has_special_building_slot = no }
				faith_is_good = yes
			}
		}

		title:b_rohallor.title_province = {
			add_special_building = generic_university
		}

		title:b_rohallor = {
			if = {
				limit = { NOT = { holder = root } }
				holder = {
					add_opinion = {
						target = root
						modifier = pleased_opinion
						opinion = 50
					}
				}
			}
		}

		every_player = {
			limit = {
				NOT = { this = root }
				is_within_diplo_range = { CHARACTER = root }
			}
			title:b_rohallor.holder.top_liege = {
				save_scope_as = founder
			}
			trigger_event = isengard.2002
		}
	}

	option = { # Pelargir - b_lebinor
		name = isengard.0504.b_lebinor 
		trigger = {
			title:b_lebinor = {
				county = { development_level >= 30 }
				title_province = { has_special_building_slot = no }
				faith_is_good = yes
			}
		}

		title:b_lebinor.title_province = {
			add_special_building = generic_university
		}

		title:b_lebinor = {
			if = {
				limit = { NOT = { holder = root } }
				holder = {
					add_opinion = {
						target = root
						modifier = pleased_opinion
						opinion = 50
					}
				}
			}
		}

		every_player = {
			limit = {
				NOT = { this = root }
				is_within_diplo_range = { CHARACTER = root }
			}
			title:b_lebinor.holder.top_liege = {
				save_scope_as = founder
			}
			trigger_event = isengard.2002
		}
	}

	option = { # Edoras - b_middlemead
		name = isengard.0504.b_middlemead 
		trigger = {
			title:b_middlemead = {
				county = { development_level >= 30 }
				title_province = { has_special_building_slot = no }
				faith_is_good = yes
			}
		}

		title:b_middlemead.title_province = {
			add_special_building = generic_university
		}

		title:b_middlemead = {
			if = {
				limit = { NOT = { holder = root } }
				holder = {
					add_opinion = {
						target = root
						modifier = pleased_opinion
						opinion = 50
					}
				}
			}
		}

		every_player = {
			limit = {
				NOT = { this = root }
				is_within_diplo_range = { CHARACTER = root }
			}
			title:b_middlemead.holder.top_liege = {
				save_scope_as = founder
			}
			trigger_event = isengard.2002
		}
	}

	option = { # Dale - b_austeinfell
		name = isengard.0504.b_austeinfell 
		trigger = {
			title:b_austeinfell = {
				county = { development_level >= 30 }
				title_province = { has_special_building_slot = no }
				faith_is_good = yes
			}
		}

		title:b_austeinfell.title_province = {
			add_special_building = generic_university
		}

		title:b_austeinfell = {
			if = {
				limit = { NOT = { holder = root } }
				holder = {
					add_opinion = {
						target = root
						modifier = pleased_opinion
						opinion = 50
					}
				}
			}
		}

		every_player = {
			limit = {
				NOT = { this = root }
				is_within_diplo_range = { CHARACTER = root }
			}
			title:b_austeinfell.holder.top_liege = {
				save_scope_as = founder
			}
			trigger_event = isengard.2002
		}
	}

	option = { # Dorwinion - b_eldrast
		name = isengard.0504.b_eldrast 
		trigger = {
			title:b_eldrast = {
				county = { development_level >= 30 }
				title_province = { has_special_building_slot = no }
				faith_is_good = yes
			}
		}

		title:b_eldrast.title_province = {
			add_special_building = generic_university
		}

		title:b_eldrast = {
			if = {
				limit = { NOT = { holder = root } }
				holder = {
					add_opinion = {
						target = root
						modifier = pleased_opinion
						opinion = 50
					}
				}
			}
		}

		every_player = {
			limit = {
				NOT = { this = root }
				is_within_diplo_range = { CHARACTER = root }
			}
			title:b_eldrast.holder.top_liege = {
				save_scope_as = founder
			}
			trigger_event = isengard.2002
		}
	}

	option = { # Mistrand - b_obagalla
		name = isengard.0504.b_obagalla 
		trigger = {
			title:b_obagalla = {
				county = { development_level >= 30 }
				title_province = { has_special_building_slot = no }
				faith_is_good = yes
			}
		}

		title:b_obagalla.title_province = {
			add_special_building = generic_university
		}

		title:b_obagalla = {
			if = {
				limit = { NOT = { holder = root } }
				holder = {
					add_opinion = {
						target = root
						modifier = pleased_opinion
						opinion = 50
					}
				}
			}
		}

		every_player = {
			limit = {
				NOT = { this = root }
				is_within_diplo_range = { CHARACTER = root }
			}
			title:b_obagalla.holder.top_liege = {
				save_scope_as = founder
			}
			trigger_event = isengard.2002
		}
	}

	option = { # Umbar - b_minasthalion
		name = isengard.0504.b_minasthalion 
		trigger = {
			title:b_minasthalion = {
				county = { development_level >= 30 }
				title_province = { has_special_building_slot = no }
				faith_is_good = yes
			}
		}

		title:b_minasthalion.title_province = {
			add_special_building = generic_university
		}

		title:b_minasthalion = {
			if = {
				limit = { NOT = { holder = root } }
				holder = {
					add_opinion = {
						target = root
						modifier = pleased_opinion
						opinion = 50
					}
				}
			}
		}

		every_player = {
			limit = {
				NOT = { this = root }
				is_within_diplo_range = { CHARACTER = root }
			}
			title:b_minasthalion.holder.top_liege = {
				save_scope_as = founder
			}
			trigger_event = isengard.2002
		}
	}

	option = { # Harnen - b_tirith_amrun
		name = isengard.0504.b_tirith_amrun 
		trigger = {
			title:b_tirith_amrun = {
				county = { development_level >= 30 }
				title_province = { has_special_building_slot = no }
				faith_is_good = yes
			}
		}

		title:b_tirith_amrun.title_province = {
			add_special_building = generic_university
		}

		title:b_tirith_amrun = {
			if = {
				limit = { NOT = { holder = root } }
				holder = {
					add_opinion = {
						target = root
						modifier = pleased_opinion
						opinion = 50
					}
				}
			}
		}

		every_player = {
			limit = {
				NOT = { this = root }
				is_within_diplo_range = { CHARACTER = root }
			}
			title:b_tirith_amrun.holder.top_liege = {
				save_scope_as = founder
			}
			trigger_event = isengard.2002
		}
	}

	option = { # fallback in case development somehow tumbles
		trigger = { always = no }
		fallback = yes
		name = major_decisions.2001.fallback
		custom_tooltip = major_decisions.2001.fallback.tt
	}
}

isengard.2002 = {
	content_source = realms_dlc
	type = character_event
	title = major_decisions.2001.t
	desc = major_decisions.2002.desc
	left_portrait = {
		character = scope:founder
		animation = personality_rational
	}
	theme = learning

	option = {
		name = major_decisions.2002.a
	}
}

isengard.0505 = { # Assembling the Council of the Wise
	content_source = realms_dlc
	type = character_event
	title = isengard.0505.t
	desc = isengard.0505.desc
	theme = realm

	left_portrait = {
		character = root
		animation = personality_forgiving
	}

	override_background = {
		reference = imladris
	}

	immediate = {
		character:lineofgandalf = { save_scope_as = gandalf }
		character:linefinwe36 = { save_scope_as = galadriel }
		character:linefinwe27 = { save_scope_as = elrond }
		character:lineofcirdan = { save_scope_as = cirdan }
		add_character_flag = saruman_white_council_goal_given
	}

	option = { # Let us discuss matters
		name = isengard.0505.a
		trigger_event = isengard.0506
	}

}

isengard.0506 = { # Council of the Wise - Galadriel
	content_source = realms_dlc
	type = character_event
	title = isengard.0506.t
	desc = isengard.0506.desc
	theme = realm

	left_portrait = {
		character = root
		animation = personality_forgiving
	}

	right_portrait = {
		character = scope:galadriel
		animation = personality_forgiving
	}

	override_background = {
		reference = imladris
	}

	trigger = {
		character:linefinwe36 = {
			opinion = {
				target = root
				value > 80
			}
		}
	}

	on_trigger_fail = {
		trigger_event = isengard.0507
	}

	option = { # An alliance is in our interests
		name = isengard.0506.a
		add_character_flag = white_council_ally
		scope:galadriel = {
			add_character_flag = white_council_ally
		}
		create_alliance = {
			target = scope:galadriel
			allied_through_owner = root
			allied_through_target = scope:galadriel
		}
	}

	after = {
		trigger_event = isengard.0507
	}

}

isengard.0507 = { # Council of the Wise - Gandalf
	content_source = realms_dlc
	type = character_event
	title = isengard.0507.t
	desc = isengard.0507.desc
	theme = realm

	left_portrait = {
		character = root
		animation = personality_forgiving
	}

	right_portrait = {
		character = scope:gandalf
		animation = personality_forgiving
	}

	override_background = {
		reference = imladris
	}

	trigger = {
		character:lineofgandalf = {
			opinion = {
				target = root
				value > 80
			}
		}
	}

	on_trigger_fail = {
		trigger_event = isengard.0508
	}

	option = { # Let us discuss matters
		name = isengard.0507.a
		scope:gandalf = { set_employer = root }
	}

	after = {
		trigger_event = isengard.0508
	}

}

isengard.0508 = { # Council of the Wise - Elrond
	content_source = realms_dlc
	type = character_event
	title = isengard.0508.t
	desc = isengard.0508.desc
	theme = realm

	left_portrait = {
		character = root
		animation = personality_forgiving
	}

	right_portrait = {
		character = scope:elrond
		animation = personality_forgiving
	}

	override_background = {
		reference = imladris
	}

	trigger = {
		character:linefinwe27 = {
			opinion = {
				target = root
				value > 80
			}
		}
	}

	on_trigger_fail = {
		trigger_event = isengard.0509
	}

	option = { # Let us discuss matters
		name = isengard.0508.a
		add_character_flag = white_council_ally
		scope:elrond = {
			add_character_flag = white_council_ally
		}
		create_alliance = {
			target = scope:elrond
			allied_through_owner = root
			allied_through_target = scope:elrond
		}
		spawn_army = {		  
			uses_supply = no
			inheritable = no
			name = isengard_elrond_ally_event_troops
			men_at_arms = {
				type = noldor_swordsmen
				stacks = 3
			}
			men_at_arms = {
				type = noldor_archers
				stacks = 3
			}
			men_at_arms = {
				type = noldor_veterans
				stacks = 1
			}
			location = capital_province
		}
	}

	after = {
		trigger_event = isengard.0509
	}

}

isengard.0509 = { # Council of the Wise - Cirdan
	content_source = realms_dlc
	type = character_event
	title = isengard.0509.t
	desc = isengard.0509.desc
	theme = realm

	left_portrait = {
		character = root
		animation = personality_forgiving
	}

	right_portrait = {
		character = scope:cirdan
		animation = personality_forgiving
	}

	override_background = {
		reference = imladris
	}

	trigger = {
		character:lineofcirdan = {
			opinion = {
				target = root
				value > 80
			}
		}
	}

	on_trigger_fail = {
		trigger_event = isengard.0510
	}

	option = { # Let us discuss matters
		name = isengard.0509.a
		add_character_flag = white_council_ally
		scope:cirdan = {
			add_character_flag = white_council_ally
		}
		create_alliance = {
			target = scope:cirdan
			allied_through_owner = root
			allied_through_target = scope:cirdan
		}
		spawn_army = {		  
			uses_supply = no
			inheritable = no
			name = isengard_cirdan_ally_event_troops
			men_at_arms = {
				type = falathrim_haven_guard
				stacks = 3
			}
			men_at_arms = {
				type = sindar_nobility
				stacks = 2
			}
			men_at_arms = {
				type = hir_hathol
				stacks = 1
			}
			location = capital_province
		}
	}

	after = {
		trigger_event = isengard.0510
	}

}

isengard.0510 = { # Council of the Wise - End of Meeting
	content_source = realms_dlc
	type = character_event
	title = isengard.0510.t
	desc = isengard.0510.desc
	theme = realm

	left_portrait = {
		character = root
		animation = personality_forgiving
	}

	override_background = {
		reference = imladris
	}

	option = { # All is done
		name = isengard.0510.a
	}

}

# isengard.0520 = { # The Position of Isengard - removed for now
# 	type = character_event
# 	title = isengard.0510.t
# 	desc = isengard.0510.desc
# 	theme = realm

# 	left_portrait = {
# 		character = root
# 		animation = personality_rational
# 	}

# 	option = { # Independent
# 		name = isengard.0510.a
# 		debug_log = "Isengard: Independent Good Isengard"
# 		add_character_flag = good_isengard_independent
# 		create_title_and_vassal_change = {
# 			type = created
# 			save_scope_as = title_change
# 			add_claim_on_loss = no
# 		}
# 		title:k_isengard = {
# 			change_title_holder = {
# 				holder = root
# 				change = scope:title_change
# 			}
# 		}
# 		resolve_title_and_vassal_change = scope:title_change
# 	}

# 	option = { # Rohan
# 		name = isengard.0510.b
# 		debug_log = "Isengard: Saruman aligns with Rohan"
# 		add_character_flag = good_isengard_rohan
# 		create_title_and_vassal_change = {
# 			type = swear_fealty
# 			save_scope_as = title_change
# 			add_claim_on_loss = no
# 		}
# 		change_liege = {
# 			liege = title:k_rohan.holder
# 			change = scope:title_change
# 		}
# 		resolve_title_and_vassal_change = scope:title_change
# 		title:d_isengard = {
# 			set_de_jure_liege_title = title:k_rohan
# 			set_color_from_title = title:c_sutwold
# 		}
# 		title:c_isengard = {
# 			set_color_from_title = title:c_sutwold
# 		}
# 	}

# 	option = { # Gondor
# 		name = isengard.0510.c
# 		debug_log = "Isengard: Saruman aligns with Gondor"
# 		add_character_flag = good_isengard_gondor
# 		create_title_and_vassal_change = {
# 			type = swear_fealty
# 			save_scope_as = title_change
# 			add_claim_on_loss = no
# 		}
# 		change_liege = {
# 			liege = title:e_gondor_steward.holder
# 			change = scope:title_change
# 		}
# 		resolve_title_and_vassal_change = scope:title_change
# 		title:k_isengard = {
# 			set_color_from_title = title:c_astirian
# 		}
# 		title:d_isengard = {
# 			set_color_from_title = title:c_astirian
# 		}
# 		title:c_isengard = {
# 			set_color_from_title = title:c_astirian
# 		}
# 	}

# }



## Dunlending White-Hand by Juke
# After saruman is defeated, white hand cult and lidless eye dunlendings should convert to a new faith
# White-Hand Mysticism is an organized Gwathuirim faith influenced by the legacy of Sarumans rule
# Eventually, add an event for the dunlendings side of view

# Legacy of the White Hand
isengard.0700 = { # Saruman death event that handles conversion
	content_source = realms_dlc
	type = character_event
	title = isengard.0700.t
	desc = isengard.0700.desc
	theme = realm
	override_background = {
		reference = flooded_isengard
	}
	trigger = {
		this = character:lineofsaruman	#note: the conversion event currently fires on sarumans death. in the future, if we have him move to the shire instead, we will have to trigger it differently
		faith_is_evil = yes
	}
	immediate = {
		hidden_effect = {
			#handles religious conversion
			saruman_destroyed_effect = yes
		}
	}
	option = {
		name = isengard.0700.a
	}
}

#isengard.0701 = { # Inform player of conversion
#	type = character_event
#	title = isengard.0701.t
#	desc = isengard.0701.desc
#	theme = realm
#
#	left_portrait = {
#		character = root
#		#animation = personality_forgiving
#	}
#	right_portrait = {
#		character = character:lineofsaruman
#		#animation = personality_vengeful
#	}
#}