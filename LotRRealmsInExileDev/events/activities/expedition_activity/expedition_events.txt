# Events for handling the Mining activity

namespace = expedition

scripted_trigger can_replace_councillor = { 
	NOT = { this = scope:$SAVED_SCOPE$ }
	$SPECIALTY$ > $SKILL$
	NOT = { is_close_family_of = root }
	is_ruler = no
	NOT = { is_councillor_of = root }
	NOR = {
		has_variable = replaced_marshal
		has_variable = replaced_diplomat
		has_variable = replaced_steward
	}
}

# Selecting councillors (Marshal) --> Moving your realm
expedition.0001 = {
	title = expedition.0001.t
	desc = expedition.0001.desc
	theme = stewardship

	override_background = {
		reference = throne_room_dwarf
	}

	right_portrait = {
		character = root
		animation = thinking
	}

	left_portrait = scope:primary_replaced_marshal

	lower_center_portrait = scope:secondary_replaced_marshal

	lower_left_portrait = scope:current_marshal


	immediate = {
		cp:councillor_marshal = { save_scope_as = current_marshal }
		random_knight = { # Marshals
			limit = {
				is_a_minor = no
				can_be_marshal_trigger = { COURT_OWNER = root }
				can_replace_councillor = {
					SAVED_SCOPE = primary_replaced_marshal
					SPECIALTY = martial
					SKILL = 12
				}
			}
			save_scope_as = primary_replaced_marshal
		}
		random_courtier = {
			limit = {
				is_a_minor = no
				can_be_marshal_trigger = { COURT_OWNER = root }
				can_replace_councillor = {
					SAVED_SCOPE = primary_replaced_marshal
					SPECIALTY = martial
					SKILL = 10
				}
			}
			save_scope_as = secondary_replaced_marshal
		}

		if = {
			limit = { NOT = { exists = scope:primary_replaced_marshal } }
			random_courtier = {
				limit = {
					is_a_minor = no
					can_be_marshal_trigger = { COURT_OWNER = root }
					can_replace_councillor = {
						SAVED_SCOPE = secondary_replaced_marshal
						SPECIALTY = martial
						SKILL = 10
					}
				}
				save_scope_as = primary_replaced_marshal
			}
		}
		if = {
			limit = { NOT = { exists = scope:secondary_replaced_marshal } }
			random_courtier = {
				limit = {
					is_a_minor = no
					can_be_marshal_trigger = { COURT_OWNER = root }
					can_replace_councillor = {
						SAVED_SCOPE = primary_replaced_marshal
						SPECIALTY = martial
						SKILL = 8
					}
				}
				save_scope_as = secondary_replaced_marshal
			}
		}

		### Fallback if no courtiers were found at all:
		if = {
			limit = { NOT = { exists = scope:primary_replaced_marshal } }
			create_character = {
				location = root.capital_province
				gender_female_chance = root_faith_dominant_gender_female_chance
				culture = root.culture
				faith = root.faith
				random_traits = yes
				save_scope_as = primary_replaced_marshal
					
				after_creation = {
					set_employer = root
					if = {
						limit = { is_elf = yes }
						change_age = { 100 6950 }
						replace_unelven_traits = yes
					}
					if = {
						limit = { is_dwarf = yes }
						change_age = { 65 180 }
					}
				}
			}
		}
		if = {
			limit = { NOT = { exists = scope:secondary_replaced_marshal } }
			create_character = {
				location = root.capital_province
				gender_female_chance = root_faith_dominant_gender_female_chance
				culture = root.culture
				faith = root.faith
				random_traits = yes
				save_scope_as = secondary_replaced_marshal
					
				after_creation = {
					set_employer = root
					if = {
						limit = { is_elf = yes }
						change_age = { 100 6950 }
						replace_unelven_traits = yes
					}
					if = {
						limit = { is_dwarf = yes }
						change_age = { 65 180 }
					}
				}
			}
		}
	}

	option = { # Pick first option to become new marshal on arrival
		name = expedition.0001.a

		trigger = { exists = scope:primary_replaced_marshal }

		scope:primary_replaced_marshal = {
			set_variable = replaced_marshal
		}
	}
	option = { # Pick second option to become new marshal on arrival
		name = expedition.0001.b

		trigger = { exists = scope:secondary_replaced_marshal }

		scope:secondary_replaced_marshal = {
			set_variable = replaced_marshal
		}
	}
	option = { # Stick with old marshal
		name = expedition.0001.c

		trigger = {
			scope:current_marshal = {
				is_ruler = no
				NOT = { is_close_family_of = root }
			}
		}

		scope:current_marshal = { set_variable = replaced_marshal }
	}

	after = { trigger_event = expedition.0002 }
}

# Selecting councillors (Diplomat) --> Moving your realm
expedition.0002 = {
	title = expedition.0002.t
	desc = expedition.0002.desc
	theme = stewardship

	override_background = {
		reference = throne_room_dwarf
	}

	right_portrait = {
		character = root
		animation = thinking
	}

	left_portrait = scope:primary_replaced_diplomat

	lower_center_portrait = scope:secondary_replaced_diplomat

	lower_left_portrait = scope:current_chancellor

	immediate = {
		cp:councillor_chancellor = { save_scope_as = current_chancellor }
		random_knight = { # Diplomats
			limit = {
				is_a_minor = no
				can_be_chancellor_trigger = { COURT_OWNER = root }
				can_replace_councillor = {
					SAVED_SCOPE = primary_replaced_diplomat
					SPECIALTY = diplomacy
					SKILL = 12
				}
			}
			save_scope_as = primary_replaced_diplomat
		}
		random_courtier = {
			limit = {
				is_a_minor = no
				can_be_chancellor_trigger = { COURT_OWNER = root }
				can_replace_councillor = {
					SAVED_SCOPE = primary_replaced_diplomat
					SPECIALTY = diplomacy
					SKILL = 10
				}
			}
			save_scope_as = secondary_replaced_diplomat
		}

		if = {
			limit = { NOT = { exists = scope:primary_replaced_diplomat } }
			random_courtier = {
				limit = {
					is_a_minor = no
					can_be_chancellor_trigger = { COURT_OWNER = root }
					can_replace_councillor = {
						SAVED_SCOPE = secondary_replaced_diplomat
						SPECIALTY = diplomacy
						SKILL = 10
					}
				}
				save_scope_as = primary_replaced_diplomat
			}
		}
		if = {
			limit = { NOT = { exists = scope:secondary_replaced_diplomat } }
			random_courtier = {
				limit = {
					is_a_minor = no
					can_be_chancellor_trigger = { COURT_OWNER = root }
					can_replace_councillor = {
						SAVED_SCOPE = primary_replaced_diplomat
						SPECIALTY = diplomacy
						SKILL = 8
					}
				}
				save_scope_as = secondary_replaced_diplomat
			}
		}
		

		### Fallback if no courtiers were found at all:
		if = {
			limit = { NOT = { exists = scope:primary_replaced_diplomat } }
			create_character = {
				location = root.capital_province
				gender_female_chance = root_faith_dominant_gender_female_chance
				culture = root.culture
				faith = root.faith
				random_traits = yes
				save_scope_as = primary_replaced_diplomat
					
				after_creation = {
					set_employer = root
					if = {
						limit = { is_elf = yes }
						change_age = { 100 6950 }
						replace_unelven_traits = yes
					}
					if = {
						limit = { is_dwarf = yes }
						change_age = { 65 180 }
					}
				}
			}
		}
		if = {
			limit = { NOT = { exists = scope:secondary_replaced_diplomat } }
			create_character = {
				location = root.capital_province
				gender_female_chance = root_faith_dominant_gender_female_chance
				culture = root.culture
				faith = root.faith
				random_traits = yes
				save_scope_as = secondary_replaced_diplomat
					
				after_creation = {
					set_employer = root
					if = {
						limit = { is_elf = yes }
						change_age = { 100 6950 }
						replace_unelven_traits = yes
					}
					if = {
						limit = { is_dwarf = yes }
						change_age = { 65 180 }
					}
				}
			}
		}
	}

	option = { # Pick first option to become new diplomat on arrival
		name = expedition.0002.a

		trigger = { exists = scope:primary_replaced_diplomat }

		scope:primary_replaced_diplomat = {
			set_variable = replaced_diplomat
		}
	}
	option = { # Pick second option to become new diplomat on arrival
		name = expedition.0002.b

		trigger = { exists = scope:secondary_replaced_diplomat }

		scope:secondary_replaced_diplomat = {
			set_variable = replaced_diplomat
		}
	}
	option = { # Stick with old diplomat
		name = expedition.0002.c

		trigger = {
			scope:current_chancellor = {
				is_ruler = no
				NOT = { is_close_family_of = root }
			}
		}

		scope:current_chancellor = { set_variable = replaced_diplomat }
	}

	after = { trigger_event = expedition.0003 }
}

# Selecting councillors (Steward) --> Moving your realm
expedition.0003 = {
	title = expedition.0003.t
	desc = expedition.0003.desc
	theme = stewardship

	override_background = {
		reference = throne_room_dwarf
	}

	right_portrait = {
		character = root
		animation = thinking
	}

	left_portrait = scope:primary_replaced_steward

	lower_center_portrait = scope:secondary_replaced_steward

	lower_left_portrait = scope:current_steward

	immediate = {
		cp:councillor_steward = { save_scope_as = current_steward }
		random_knight = { # Stewards
			limit = {
				is_a_minor = no
				can_be_steward_trigger = { COURT_OWNER = root }
				can_replace_councillor = {
					SAVED_SCOPE = primary_replaced_steward
					SPECIALTY = stewardship
					SKILL = 12
				}
			}
			save_scope_as = primary_replaced_steward
		}
		random_courtier = {
			limit = {
				is_a_minor = no
				can_be_steward_trigger = { COURT_OWNER = root }
				can_replace_councillor = {
					SAVED_SCOPE = primary_replaced_steward
					SPECIALTY = stewardship
					SKILL = 10
				}
			}
			save_scope_as = secondary_replaced_steward
		}

		if = {
			limit = { NOT = { exists = scope:primary_replaced_steward } }
			random_courtier = {
				limit = {
					is_a_minor = no
					can_be_steward_trigger = { COURT_OWNER = root }
					can_replace_councillor = {
						SAVED_SCOPE = secondary_replaced_steward
						SPECIALTY = stewardship
						SKILL = 10
					}
				}
				save_scope_as = primary_replaced_steward
			}
		}
		if = {
			limit = { NOT = { exists = scope:secondary_replaced_steward } }
			random_courtier = {
				limit = {
					is_a_minor = no
					can_be_steward_trigger = { COURT_OWNER = root }
					can_replace_councillor = {
						SAVED_SCOPE = primary_replaced_steward
						SPECIALTY = stewardship
						SKILL = 8
					}
				}
				save_scope_as = secondary_replaced_steward
			}
		}
		

		### Fallback if no courtiers were found at all:
		if = {
			limit = { NOT = { exists = scope:primary_replaced_steward } }
			create_character = {
				location = root.capital_province
				gender_female_chance = root_faith_dominant_gender_female_chance
				culture = root.culture
				faith = root.faith
				random_traits = yes
				save_scope_as = primary_replaced_steward
					
				after_creation = {
					set_employer = root
					if = {
						limit = { is_elf = yes }
						change_age = { 100 6950 }
						replace_unelven_traits = yes
					}
					if = {
						limit = { is_dwarf = yes }
						change_age = { 65 180 }
					}
				}
			}
		}
		if = {
			limit = { NOT = { exists = scope:secondary_replaced_steward } }
			create_character = {
				location = root.capital_province
				gender_female_chance = root_faith_dominant_gender_female_chance
				culture = root.culture
				faith = root.faith
				random_traits = yes
				save_scope_as = secondary_replaced_steward
					
				after_creation = {
					set_employer = root
					if = {
						limit = { is_elf = yes }
						change_age = { 100 6950 }
						replace_unelven_traits = yes
					}
					if = {
						limit = { is_dwarf = yes }
						change_age = { 65 180 }
					}
				}
			}
		}
	}

	option = {
		name = expedition.0003.a

		trigger = { exists = scope:primary_replaced_steward }

		scope:primary_replaced_steward = {
			set_variable = replaced_steward
		}
	}
	option = {
		name = expedition.0003.b

		trigger = { exists = scope:secondary_replaced_steward }

		scope:secondary_replaced_steward = {
			set_variable = replaced_steward
		}
	}
	option = { # Stick with old steward
		name = expedition.0003.c

		trigger = {
			scope:current_steward = {
				is_ruler = no
				NOT = { is_close_family_of = root }
			}
		}

		scope:current_steward = { set_variable = replaced_steward }
	}

	after = { trigger_event = expedition.0004 }
}

# Selecting councillors (Spymaster) --> Moving your realm
expedition.0004 = {
	title = expedition.0004.t
	desc = expedition.0004.desc
	theme = stewardship

	override_background = {
		reference = throne_room_dwarf
	}

	right_portrait = {
		character = root
		animation = thinking
	}

	left_portrait = scope:primary_replaced_spymaster

	lower_center_portrait = scope:secondary_replaced_spymaster

	lower_left_portrait = scope:current_spymaster

	immediate = {
		cp:councillor_spymaster = { save_scope_as = current_spymaster }
		random_knight = { # Spymasters
			limit = {
				is_a_minor = no
				can_be_spymaster_trigger = { COURT_OWNER = root }
				can_replace_councillor = {
					SAVED_SCOPE = primary_replaced_spymaster
					SPECIALTY = intrigue
					SKILL = 12
				}
			}
			save_scope_as = primary_replaced_spymaster
		}
		random_courtier = {
			limit = {
				is_a_minor = no
				can_be_spymaster_trigger = { COURT_OWNER = root }
				can_replace_councillor = {
					SAVED_SCOPE = primary_replaced_spymaster
					SPECIALTY = intrigue
					SKILL = 10
				}
			}
			save_scope_as = secondary_replaced_spymaster
		}

		if = {
			limit = { NOT = { exists = scope:primary_replaced_spymaster } }
			random_courtier = {
				limit = {
					is_a_minor = no
					can_be_spymaster_trigger = { COURT_OWNER = root }
					can_replace_councillor = {
						SAVED_SCOPE = secondary_replaced_spymaster
						SPECIALTY = intrigue
						SKILL = 10
					}
				}
				save_scope_as = primary_replaced_spymaster
			}
		}
		if = {
			limit = { NOT = { exists = scope:secondary_replaced_spymaster } }
			random_courtier = {
				limit = {
					is_a_minor = no
					can_be_spymaster_trigger = { COURT_OWNER = root }
					can_replace_councillor = {
						SAVED_SCOPE = primary_replaced_spymaster
						SPECIALTY = intrigue
						SKILL = 8
					}
				}
				save_scope_as = secondary_replaced_spymaster
			}
		}
		

		### Fallback if no courtiers were found at all:
		if = {
			limit = { NOT = { exists = scope:primary_replaced_spymaster } }
			create_character = {
				location = root.capital_province
				gender_female_chance = root_faith_dominant_gender_female_chance
				culture = root.culture
				faith = root.faith
				random_traits = yes
				save_scope_as = primary_replaced_spymaster
					
				after_creation = {
					set_employer = root
					if = {
						limit = { is_elf = yes }
						change_age = { 100 6950 }
						replace_unelven_traits = yes
					}
					if = {
						limit = { is_dwarf = yes }
						change_age = { 65 180 }
					}
				}
			}
		}
		if = {
			limit = { NOT = { exists = scope:secondary_replaced_spymaster } }
			create_character = {
				location = root.capital_province
				gender_female_chance = root_faith_dominant_gender_female_chance
				culture = root.culture
				faith = root.faith
				random_traits = yes
				save_scope_as = secondary_replaced_spymaster
					
				after_creation = {
					set_employer = root
					if = {
						limit = { is_elf = yes }
						change_age = { 100 6950 }
						replace_unelven_traits = yes
					}
					if = {
						limit = { is_dwarf = yes }
						change_age = { 65 180 }
					}
				}
			}
		}
	}

	option = {
		name = expedition.0004.a

		trigger = { exists = scope:primary_replaced_spymaster }

		scope:primary_replaced_spymaster = { set_variable = replaced_spymaster }
	}
	option = {
		name = expedition.0004.b

		trigger = { exists = scope:secondary_replaced_spymaster }

		scope:secondary_replaced_spymaster = { set_variable = replaced_spymaster }
	}
	option = { # Stick with old marshal
		name = expedition.0004.c

		trigger = {
			scope:current_spymaster = {
				is_ruler = no
				NOT = { is_close_family_of = root }
			}
		}

		scope:current_spymaster = { set_variable = replaced_spymaster }
	}

	after = {
		trigger_event = expedition.0006
	}
}

# Maintenance event for expedition.0001 - 0004
expedition.0005 = {
	hidden = yes

	immediate = {
		root.involved_activity = { save_scope_as = activity }

		add_new_councill_members_to_journey = { # Marshal 
			REPLACE_VAR = replaced_marshal
			COUNCIL_POS = councillor_marshal
		}
		add_new_councill_members_to_journey = { # Diplomat 
			REPLACE_VAR = replaced_diplomat
			COUNCIL_POS = councillor_chancellor
		}
		add_new_councill_members_to_journey = { # Steward 
			REPLACE_VAR = replaced_steward
			COUNCIL_POS = councillor_steward
		}
		add_new_councill_members_to_journey = { # Spymaster 
			REPLACE_VAR = replaced_spymaster
			COUNCIL_POS = councillor_spymaster
		}
	}
}

# Picking ruler of old place
expedition.0006 = {
	title = expedition.0006.t
	desc = expedition.0006.desc
	theme = stewardship

	override_background = { reference = throne_room_dwarf }

	right_portrait = {
		character = root
		animation = thinking
	}

	left_portrait = scope:powerfull_vassal_replacing_ruler

	lower_center_portrait = scope:vassal_replacing_ruler

	lower_left_portrait = scope:family_replacing_ruler

	lower_right_portrait = scope:opportunistic_dwarf

	immediate = {
		# Selecting a powerful vassal
		random_powerful_vassal = { 
			limit = { NOT = { is_close_or_extended_family_of = root } }
			save_scope_as = powerfull_vassal_replacing_ruler
		}
		random_vassal_or_below = { # Selecting another vassal (NOT POWERFUL)
			limit = {
				NOT = { is_powerful_vassal_of = root }
				NOT = { is_close_or_extended_family_of = root }
			}
			save_scope_as = vassal_replacing_ruler
		}
		random_close_or_extended_family_member = {
			limit = {
				root.primary_title = {
					place_in_line_of_succession = {
						target = prev
						value > 2
					}
				}
			}
			save_scope_as = family_replacing_ruler
		}
		create_character = {
			template = random_dwarf_template
			employer = scope:host
			save_scope_as = opportunistic_dwarf
		}
	}

	option = { # Make powerfull vassal new ruler
		name = expedition.0006.a
		trigger = { exists = scope:powerfull_vassal_replacing_ruler }
		set_variable = {
			name = opportunistic_dwarf
			value = scope:powerfull_vassal_replacing_ruler
		} 
	}

	option = { # Make non-powerful vassal new ruler
		name = expedition.0006.b
		trigger = { exists = scope:vassal_replacing_ruler }
		set_variable = {
			name = opportunistic_dwarf
			value = scope:vassal_replacing_ruler
		}
	}

	option = { # Make family member new ruler
		name = expedition.0006.c
		trigger = { exists = scope:family_replacing_ruler }
		set_variable = {
			name = opportunistic_dwarf
			value = scope:family_replacing_ruler
		}  
	}

	option = { # Make someone random new ruler
		name = expedition.0006.d
		trigger = { exists = scope:opportunistic_dwarf }
		set_variable = {
			name = opportunistic_dwarf
			value = scope:opportunistic_dwarf
		}  
	}

	after = { trigger_event = expedition.0005 }
}

expedition.0007 = {
	title = expedition.0007.t
	desc = expedition.0007.desc
	theme = stewardship

	override_background = { reference = throne_room_dwarf }

	right_portrait = {
		character = root
		animation = thinking
	}

	left_portrait = scope:powerful_vassal_family_member

	lower_center_portrait = scope:vassal_family_member

	lower_left_portrait = scope:root_family_member

	lower_right_portrait = scope:opportunistic_dwarf

	immediate = {
		# Selecting a powerful vassal
		random_powerful_vassal = { 
			limit = { NOT = { is_close_or_extended_family_of = root } }
			save_temporary_scope_as = powerful_vassal
			random_close_or_extended_family_member = {
				limit = {
					scope:powerful_vassal.primary_title = {
						place_in_line_of_succession = {
							target = prev
							value > 2
						}
					}
					is_ruler = no
				}
				save_scope_as = powerful_vassal_family_member
			}
		}
		random_vassal_or_below = { # Selecting another vassal (NOT POWERFUL)
			limit = {
				NOT = { is_powerful_vassal_of = root }
				NOT = { is_close_or_extended_family_of = root }
			}
			save_temporary_scope_as = vassal_of_root
			random_close_or_extended_family_member = {
				limit = {
					scope:vassal_of_root.primary_title = {
						place_in_line_of_succession = {
							target = prev
							value > 2
						}
					}
					is_ruler = no
				}
				save_scope_as = vassal_family_member
			}
		}
		random_close_or_extended_family_member = {
			limit = {
				root.primary_title = {
					place_in_line_of_succession = {
						target = prev
						value > 2
					}
				}
				is_ruler = no
			}
			save_scope_as = root_family_member
		}
		create_character = {
			template = random_dwarf_template
			employer = scope:host
			save_scope_as = opportunistic_dwarf
		}
	}

	option = { # Make powerfull vassal new ruler
		name = expedition.0007.a
		trigger = { exists = scope:powerful_vassal_family_member }
		set_variable = {
			name = opportunistic_dwarf
			value = scope:powerful_vassal_family_member
		} 
	}

	option = { # Make non-powerful vassal new ruler
		name = expedition.0007.b
		trigger = { exists = scope:vassal_family_member }
		set_variable = {
			name = opportunistic_dwarf
			value = scope:vassal_family_member
		}
	}

	option = { # Make family member new ruler
		name = expedition.0007.c
		trigger = { exists = scope:root_family_member }
		set_variable = {
			name = opportunistic_dwarf
			value = scope:root_family_member
		}  
	}

	option = { # Make someone random new ruler
		name = expedition.0007.d
		trigger = { exists = scope:opportunistic_dwarf }
		set_variable = {
			name = opportunistic_dwarf
			value = scope:opportunistic_dwarf
		}  
	}

	after = {
		hidden_effect = { root.current_travel_plan ?= { add_companion = root.var:opportunistic_dwarf } }
		
	}
}

#Tributary gets event to decide if they want to be a vassal#
expedition.0008 = {
	title = expedition.0008.t
	desc = expedition.0008.desc
	theme = stewardship
	
	override_background = { reference = throne_room_dwarf }

	right_portrait = {
		character = root
		animation = thinking
	}

	left_portrait = {
		character = scope:my_suzerain
		animation = thinking
	}

	immediate = {
		root.var:my_suzerain = { save_scope_as = my_suzerain }
		root = { save_scope_as = tributary }
	}

	option = { # Ask for vassalage
		name = expedition.0008.a

		scope:my_suzerain = {
			trigger_event = {
				id = expedition.0009
				days = { 10 15 }
			}
		}

		ai_chance = {
			base = 50
			opinion_modifier = {
				who = scope:tributary
				opinion_target = scope:my_suzerain
				min = 0
				max = 100
				multiplier = 1.5
			}
			modifier = {
				add = 5
				has_trait = gregarious
			}
			modifier = {
				add = 5
				has_trait = honest
			}
			modifier = {
				add = 5
				has_trait = craven
			}
			modifier = {
				add = 5
				has_trait = humble
			}
		}
	}

	option = { # Remain tributary
		name = expedition.0008.b

		ai_chance = {
			base = 50
			modifier = {
				add = 5
				has_trait = ambitious
			}
			modifier = {
				add = 5
				has_trait = stubborn
			}
			modifier = {
				add = 5
				has_trait = paranoid
			}
			modifier = {
				add = 5
				has_trait = deceitful
			}
			modifier = {
				add = 5
				has_trait = content
			}
			modifier = {
				add = -5
				has_trait = gregarious
			}
			modifier = {
				add = -5
				has_trait = honest
			}
			modifier = {
				add = -5
				has_trait = craven
			}
			modifier = {
				add = -5
				has_trait = humble
			}
		}
	}
}

#Suzerain gets letter asking for vassalage#
expedition.0009 = {
	type = letter_event

	opening = expedition.0009.opening
	desc = expedition.0009.desc
	sender = scope:tributary

	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = expedition.0009
			days = 1
		}
	}

	option = { # Accept tributaries as vassall
		name = expedition.0009.a

		random_in_list = {
			variable = permanent_tributaries
			limit = { this ?= scope:tributary }
			free_tributary = yes
		}

		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:tributary = {	
			change_liege = {
				liege = root
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change

		scope:tributary = {
			vassal_contract_set_obligation_level = { type = feudal_government_taxes level = 1 }
			vassal_contract_set_obligation_level = { type = feudal_government_levies level = 1 }
		}

		ai_chance = {
			base = 50

			opinion_modifier = {
				who = scope:tributary
				opinion_target = scope:my_suzerain
				min = 0
				max = 10
				multiplier = 0.5
			}
			modifier = {
				add = 5
				has_trait = gregarious
			}
			modifier = {
				add = 5
				has_trait = honest
			}
			modifier = {
				add = 5
				has_trait = ambitious
			}
		}
	}

	option = { # Reject vassal offer from tributary
		name = expedition.0009.b

		ai_chance = {
			base = 50

			modifier = {
				add = 5
				has_trait = paranoid
			}
			modifier = {
				add = 5
				has_trait = deceitful
			}
			modifier = {
				add = 5
				has_trait = content
			}
		}
	}
}

# Maintenance event for end of activity --> Moving Realm
expedition.9000 = {
	hidden = yes

	immediate = {
		current_travel_plan = { # Marshal
			random_entourage_character = { 
				limit = { has_variable = replaced_marshal }
				save_scope_as = replaced_marshal
			}
		}
		current_travel_plan = { # Diplomat
			random_entourage_character = {
				limit = { has_variable = replaced_diplomat }
				save_scope_as = replaced_diplomat
			}
		}
		current_travel_plan = { # Steward
			random_entourage_character = {
				limit = { has_variable = replaced_steward }
				save_scope_as = replaced_steward
			}
		}
		current_travel_plan = { # Spymaster
			random_entourage_character = {
				limit = { has_variable = replaced_spymaster }
				save_scope_as = replaced_spymaster
			}
		}

		assign_new_councillor = { # Marshal
			TYPE = councillor_marshal
			TARGET = scope:replaced_marshal
		}
		assign_new_councillor = { # Diplomat
			TYPE = councillor_chancellor
			TARGET = scope:replaced_diplomat
		}
		assign_new_councillor = { # Steward
			TYPE = councillor_steward
			TARGET = scope:replaced_steward
		}
		assign_new_councillor = { # Spymaster
			TYPE = councillor_spymaster	
			TARGET = scope:replaced_spymaster
		}
	}
}