
######################################################
################# ADD MEN-AT-ARMS ####################
######################################################

window = {
	name = "menatarmstype_view"
	parentanchor = top|right
	position = { -610 70 }
	size = { 470 880 }
	movable = no
	layer = middle

	using = Window_Background
	using = Window_Decoration

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		position_x = -610
		on_start = "[GetVariableSystem.Set( 'menatarms_details_open', 'true'  )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		position_x = -580
		on_start = "[GetVariableSystem.Clear( 'menatarms_details_open' )]"
	}

	vbox = {
		using = Window_Margins
		set_parent_size_to_minimum = yes

		state = {
			name = "menatarms_details_refresh"
			alpha = 0
			duration = 0.2
			next = "b"
			using = Animation_Curve_Default
		}

		state = {
			name = "b"
			alpha = 1
			duration = 0.2
			using = Animation_Curve_Default
		}

		header_pattern = {
			layoutpolicy_horizontal = expanding
			blockoverride "header_text"
			{
				text = "ADD_MEN_AT_ARMS_LABEL"

			}

			blockoverride "button_close"
			{
				onclick = "[MenAtArmsTypeView.Close]"

			}
		}

		scrollbox = {
			name = "attending_scrollarea"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			size = { 430 0 }
			maximumsize = { -1 340 }
			autoresizescrollarea = yes

			blockoverride "scrollbox_content"
			{
				vbox = {
					name = "types_grid"
					datamodel = "[MenAtArmsTypeView.GetMenAtArmsTypes]"
					layoutpolicy_horizontal = expanding
					spacing = 3

					item = {
						button_standard = {
							name = "select"
							datacontext = "[MenAtArmsTypeViewTypeItem.GetMenAtArmsType]"
							layoutpolicy_horizontal = expanding
							size = { 0 42 }

							down = "[MenAtArmsTypeViewTypeItem.IsSelected]"

							hbox = {
								margin = { 10 0 }
								spacing = 10

								highlight_icon = {
									name = "men_at_arms_icon"
									size = { 35 35 }
									texture = "[MenAtArmsType.GetIcon]"
								}

								text_single = {
									name = "men_at_arms_name"
									layoutpolicy_horizontal = expanding
									text = "[MenAtArmsType.GetNameNoTooltip]"
									default_format = "#high"
								}

								text_single = {
									name = "men_at_arms_cost"
									text = "[MenAtArmsType.GetCostString( GetPlayer )]"
									default_format = "#high"

									tooltip = "[MenAtArmsTypeViewTypeItem.GetCreateWarning]"
									tooltip_visible = "[Not(MenAtArmsTypeViewTypeItem.CanCreate)]"

									background = {
										visible = "[Not(MenAtArmsTypeViewTypeItem.CanCreate)]"

										using = Status_Bad
									}
								}
							}

							button_normal = {
								visible = "[Not(MenAtArmsTypeView.IsAnyMenAtArmsTypeSelected)]"
								size = { 100% 100% }
								onclick = "[MenAtArmsTypeViewTypeItem.OnClick]"
							}

							button_normal = {
								visible = "[MenAtArmsTypeView.IsAnyMenAtArmsTypeSelected]"
								size = { 100% 100% }
								onclick = "[PdxGuiTriggerAllAnimations('add_maa_change')]"

								state = {
									name = _mouse_click
									delay = 0.2
									on_finish = "[MenAtArmsTypeViewTypeItem.OnClick]"
								}
							}
						}
					}
				}
			}
		}

		widget = {
			name = "selected_maa"
			datacontext = "[MenAtArmsTypeView.GetSelectedMenAtArmsType]"
			visible = "[MenAtArmsTypeView.IsAnyMenAtArmsTypeSelected]"
			layoutpolicy_horizontal = expanding
			size = { 0 0 }
			scissor = yes

			widget = {
				visible = "[MenAtArmsTypeView.IsAnyMenAtArmsTypeSelected]"
				parentanchor = bottom
				size = { 100% 250 }

				background = {
					texture = "[MenAtArmsType.GetHorizontalImage]"
					alpha = 0.8
					margin = { -4 0 }

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
						blend_mode = alphamultiply
						mirror = vertical
					}
				}
			}

			state = {
				name = _show

				#using = Animation_FadeIn_Standard
				duration = 0.2

				animation = {
					size = { 0 540 }
					bezier = { 0 0.5 0.5 1 }
				}

				animation = {
					alpha = 1
					bezier = { 0.5 0 1 0.5 }
				}
			}

			state = {
				name = _hide
				size = { 0 0 }
				alpha = 0
			}

			state = {
				name = "add_maa_change"
				alpha = 0
				duration = 0.2
				next = "b"
				using = Animation_Curve_Default
			}

			state = {
				name = "b"
				alpha = 1
				duration = 0.2
				using = Animation_Curve_Default
			}

			widget = {
				size = { 100% 100% }

				state = {
					name = "add_maa_change"
					next = "b"
					position_x = 200
					duration = 0.2
					using = Animation_Transition_Start
				}

				state = {
					name = "b"
					next = "c"
					position_x = -200
					duration = 0
				}

				state = {
					name = "c"
					position_x = -0
					duration = 0.2
					using = Animation_Transition_End
				}

				vbox = {
					maa_regiment_info = {
						layoutpolicy_horizontal = expanding
					}

					spacer = {
						size = { 10 46 }
					}

					text_label_center = {
						visible = "[Not(GetPlayer.GetGovernment.IsType( 'landless_adventurer_government' ))]"
						text = "MV_REGIMENT_START_SIZE"
					}

					text_label_center = {
						visible = "[GetPlayer.GetGovernment.IsType( 'landless_adventurer_government' )]"
						text = "MV_REGIMENT_START_SIZE_ADVENTURER"
					}

					spacer = {
						size = { 10 10 }
					}

					button_primary = {
						size = { 200 40 }
						text = "[MenAtArmsTypeView.GetCostString( GetPlayer )]"
						onclick = "[MenAtArmsTypeView.Create]"
						enabled = "[MenAtArmsTypeView.CanCreate]"
						tooltip = "[MenAtArmsTypeView.GetCreateTooltip]"

						background = {
							using = Background_Area
						}
					}

					spacer = {
						size = { 10 10 }
					}
				}
			}
		}
	}

	coa_title_small = {
		datacontext = "[MenAtArmsTypeView.GetSelectedTitle]"
		visible = "[Title.IsValid]"

		position = { 0 -20 }
		parentanchor = hcenter
	}
}

######################################################
################ TYPES AND TEMPLATES #################
######################################################

types MenAtArms
{
	### Brief: vbox_maa_stats_numbers_base
	#	Base widget for men at arms.
	# 
	#	Requires datacontexts: 
	#		MenAtArmsType:
	#			The type of men at arms we are looking at
	# 
	#		Province:
	#			The province the men at arms are stationed in. If not 
	#			stationed use null object
	#
	#		Title:
	#			The Landed Title these men at arms are owned by, if any.
	#			If Personal MAAs, this should be the null object.
	#
	type vbox_maa_stats_numbers_base = vbox {
		vbox = { # 
			visible = "[Or(Not( MenAtArmsType.FightsInMainPhase ), EqualTo_string(MenAtArmsType.GetIconKey, 'blacklock_engineers'))]"
			layoutpolicy_horizontal = expanding
			margin = { 15 0 }
			margin_bottom = 5

			background = {
				using = Background_Area
				margin = { 3 3 }
				margin_right = 7
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				block "siege_tt"
				{
					tooltip = "REGIMENT_SIEGE_TT"
				}
				using = tooltip_se
				spacing = 3
				margin_left = -5

				icon = {
					block "siege_icon_size"
					{
						size = { 55 55 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_siege_progress.dds"
				}

				text_single = {
					block "siege_stat"
					{
						text = "REGIMENT_SIEGE"
					}
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}

				expand = {}
			}

			block "siege_effective_level"
			{
				text_single = {
					layoutpolicy_horizontal = expanding
					name = "siege_tier"
					text = "REGIMENT_SIEGE_MAX_FORT_LEVEL"
					align = left
				}
			}
		}

		hbox = {
			name = "stats"
			visible = "[MenAtArmsType.FightsInMainPhase]"
			layoutpolicy_horizontal = expanding
			margin = { 5 5 }

			background = {
				using = Background_Area
			}

			block "stat_spacing"
			{
			}

			hbox = {
				block "damage_tt"
				{
					tooltip = "REGIMENT_DAMAGE_TT"
				}
				using = tooltip_se
				spacing = 3

				icon = {
					name = "icon"
					block "stat_icon_size"
					{
						size = { 40 40 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_damage.dds"
				}

				text_single = {
					name = "label"
					block "damage_stat"
					{
						text = "[MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'damage' )|0]"
					}
					default_format = "#high"
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}
			}

			hbox = {
				block "toughness_tt"
				{
					tooltip = "REGIMENT_TOUGHNESS_TT"
				}
				using = tooltip_se
				spacing = 3

				icon = {
					name = "icon"
					block "stat_icon_size"
					{
						size = { 40 40 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_toughness.dds"
				}

				text_single = {
					name = "label"
					block "toughness_stat"
					{
						text = "[MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'toughness' )|0]"
					}
					default_format = "#high"
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}
			}

			hbox = {
				block "pursuit_tt"
				{
					tooltip = "REGIMENT_PURSUIT_TT"
					# fade out if 0
					alpha = "[Select_float(GreaterThan_CFixedPoint(MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'pursuit' ),'(CFixedPoint)0'), '(float)1.0','(float)0.4')]"
				}
				using = tooltip_se
				spacing = 3


				icon = {
					name = "icon"
					block "stat_icon_size"
					{
						size = { 40 40 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_pursuit.dds"
				}

				text_single = {
					name = "label"
					block "pursuit_stat"
					{
						text = "[MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'pursuit' )|0]"
					}
					default_format = "#high"
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}
			}

			hbox = {
				block "screen_tt"
				{
					tooltip = "REGIMENT_SCREEN_TT"
					# fade out if 0
					alpha = "[Select_float(GreaterThan_CFixedPoint(MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'screen' ),'(CFixedPoint)0'), '(float)1.0','(float)0.4')]"
				}
				using = tooltip_se
				spacing = 3

				icon = {
					name = "icon"
					block "stat_icon_size"
					{
						size = { 40 40 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_screen.dds"
				}

				text_single = {
					name = "label"
					block "screen_stat"
					{
						text = "[MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'screen' )|0]"
					}
					default_format = "#high"
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}
			}
			
			hbox = {
				visible = "[GreaterThan_CFixedPoint(MenAtArmsType.GetStat(GetPlayer, Province.Self, Title.Self, 'siege_value'), '(CFixedPoint)0')]"
				block "siege_tt"
				{
					tooltip = "REGIMENT_SIEGE_TT"
				}
				using = tooltip_se
				spacing = 3
				margin_right = 5

				icon = {
					block "siege_icon_size"
					{
						size = { 40 40 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_siege_progress.dds"
				}

				text_single = {
					block "siege_stat"
					{
						text = "[MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'siege_value' )|1]"
					}
					default_format = "#high"
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}
			}
		}
	}

	# Requires MenAtArmsType data context
	type vbox_maa_stats_numbers = vbox_maa_stats_numbers_base
	{
		datacontext = "[GetNullProvince]"
		datacontext = "[GetNullLandedTitle]"
	}

	type hbox_maa_type_text = hbox {
		margin = { 15 0 }
		margin_top = 10
		spacing = 5

		text_single = {
			name = "type"
			text = "MEN_AT_ARMS_TYPE_NAME"
			align = nobaseline
		}

		expand = {}

	}

	type vbox_maa_stats = vbox {
		margin_bottom = 5

		background = {
			using = Background_Area_With_Header
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			margin =  { 10 2 }

			text_single = {
				name = "title"
				text = "[MenAtArmsType.GetNameNoTooltip]"
				using = Font_Size_Medium

			}

			expand = {}

			hbox = {
				tooltip = "MV_CREATE_REGIMENT_MAX_SIZE_TT"
				using = tooltip_ne

				icon = {
					name = "icon_maa"
					texture = [MenAtArmsType.GetIcon]
					size = { 30 30 }
				}

				text_single = {
					name = "soldier count"
					text = "MV_CREATE_REGIMENT_SIZE"
				}
			}
		}

		vbox_maa_stats_numbers = {
			layoutpolicy_horizontal = expanding
		}

		block "type_text"
		{
			hbox_maa_type_text = {
				layoutpolicy_horizontal = expanding
			}
		}
	}

	type vbox_maa_info = vbox {
		visible = "[MenAtArmsType.FightsInMainPhase]"
		margin = { 15 0 }
		spacing = 5

		hbox = {
			layoutpolicy_horizontal = growing

			text_multi = {
				name = "counters"
				visible = "[MenAtArmsType.FightsInMainPhase]"
				layoutpolicy_horizontal = growing
				autoresize = yes
				max_width = 320
				text = "MAA_COUNTERS_LABEL"
			}
			expand = {}
		}

		text_single = {
			name = "terrain_label"
			layoutpolicy_horizontal = expanding
			text = "REGIMENT_TERRAIN_BONUS_HEADER"
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			visible = "[Not(IsDataModelEmpty(MenAtArmsType.GetTerrainModifiers))]"
			
			hbox = {
				name = "terrain_grid"
				datamodel = "[MenAtArmsType.GetTerrainModifiers]"
				spacing = 5

				item = {
					icon = {
						name = "icon"
						size = { 40 40 }
						texture = "[RegimentTerrainModifier.GetTerrain.GetIcon]"
						tooltip = "REGIMENT_TERRAIN_MODIFIER_TOOLTIP"
						using = tooltip_below

						icon = {
							visible = "[Not( RegimentTerrainModifier.IsPositive )]"
							texture = "gfx/interface/icons/symbols/icon_minus_small.dds"
							parentanchor = bottom|right
							position = { 0 5 }
							size = { 25 25 }
						}

						icon = {
							visible = "[RegimentTerrainModifier.IsPositive]"
							texture = "gfx/interface/icons/symbols/icon_plus_small.dds"
							parentanchor = bottom|right
							position = { 0 5 }
							size = { 25 25 }
						}
					}
				}
			}
			expand = {}
		}

		text_single = {
			name = "no_terrains"
			visible = "[IsDataModelEmpty(MenAtArmsType.GetTerrainModifiers)]"

			text = "REGIMENT_TERRAIN_BONUS_NONE"
			minimumsize = { 0 44 }
		}
		
		text_single = {
			name = "winter_label"
			layoutpolicy_horizontal = expanding
			text = "REGIMENT_WINTER_EFFECT_HEADER"
			visible = "[MenAtArmsType.HasWinterHarshModifier]"
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			visible = "[MenAtArmsType.HasWinterHarshModifier]"

			maa_winter_effects_positive_icon = { # Positive Harsh Winter Effects
				blockoverride "maa_has_winter_modifier" {
					visible = "[MenAtArmsType.HasWinterHarshModifier]"
				}
				blockoverride "maa_has_winter_effect" {
					visible = "[MenAtArmsType.GetWinterHarshModifier.IsPositive]"
					texture = "gfx/interface/icons/terrain_types/winter_harsh.dds"
					tooltip = "REGIMENT_WINTER_HARSH_MODIFIER_TOOLTIP"
				}
			}

			maa_winter_effects_positive_icon = { # Positive Normal Winter Effects
				blockoverride "maa_has_winter_modifier" {
					visible = "[MenAtArmsType.HasWinterNormalModifier]"
				}
				blockoverride "maa_has_winter_effect" {
					visible = "[MenAtArmsType.GetWinterNormalModifier.IsPositive]"
					texture = "gfx/interface/icons/terrain_types/winter_normal.dds"
					tooltip = "REGIMENT_WINTER_NORMAL_MODIFIER_TOOLTIP"
				}
			}

			maa_winter_effects_negative_icon = { # Negative Harsh Winter Effects
				blockoverride "maa_has_winter_modifier" {
					visible = "[MenAtArmsType.HasWinterHarshModifier]"
				}
				blockoverride "maa_has_winter_effect" {
					visible = "[Not( MenAtArmsType.GetWinterHarshModifier.IsPositive )]"
					texture = "gfx/interface/icons/terrain_types/winter_harsh.dds"
					tooltip = "REGIMENT_WINTER_HARSH_MODIFIER_TOOLTIP"
				}
			}

			maa_winter_effects_negative_icon = { # Negative Normal Winter Effects
				blockoverride "maa_has_winter_modifier" {
					visible = "[MenAtArmsType.HasWinterNormalModifier]"
				}
				blockoverride "maa_has_winter_effect" {
					visible = "[Not( MenAtArmsType.GetWinterNormalModifier.IsPositive )]"
					texture = "gfx/interface/icons/terrain_types/winter_normal.dds"
					tooltip = "REGIMENT_WINTER_NORMAL_MODIFIER_TOOLTIP"
				}
			}
			expand = {}
		}
	}

	type maa_regiment_info = widget {
		# Needs a MenAtArmsType Datacontext
		size = { 380 410 }
		allow_outside = yes

		vbox = {
			margin = { 10 3 }
			spacing = 5

			vbox_maa_stats = {
				layoutpolicy_horizontal = expanding
			}

			vbox_maa_info = {
				layoutpolicy_horizontal = expanding
			}

			text_multi = {
				layoutpolicy_horizontal = expanding
				size = { 0 75 }
				text = "[MenAtArmsType.GetFlavorString]"
				margin = { 15 5 }
			}

			expand = {}

			vbox = {
				margin_bottom = 15

				text_label_center = {
					visible = "[IsLandlessAdventurer( GetPlayer )]"
					text = "[MenAtArmsType.GetProvisionsCostString]"
				}

				text_label_center = {
					visible = "[Not(GetPlayer.GetGovernment.IsType( 'landless_adventurer_government' ))]"
					text = "[MenAtArmsType.GetReinforcementCostString( GetPlayer )]"
				}

				text_label_center = {
					visible = "[Not(GetPlayer.GetGovernment.IsType( 'landless_adventurer_government' ))]"
					text = "[MenAtArmsType.GetFullStrengthMaintenanceCostForPlayerString]"
				}
			}
		}
	}

	type maa_winter_effects_icon = hbox {
		block "maa_has_winter_modifier" {}
		icon = {
			block "maa_has_winter_effect" {}
			size = { 40 40 }
			using = tooltip_below

			icon = {
				block "maa_winter_modifier_icon" {}
				parentanchor = bottom|right
				position = { 0 5 }
				size = { 25 25 }
			}
		}
	}

	type maa_winter_effects_positive_icon = maa_winter_effects_icon {
		blockoverride "maa_winter_modifier_icon" {
			texture = "gfx/interface/icons/symbols/icon_plus_small.dds"
		}
	}

	type maa_winter_effects_negative_icon = maa_winter_effects_icon {
		blockoverride "maa_winter_modifier_icon" {
			texture = "gfx/interface/icons/symbols/icon_minus_small.dds"
		}
	}

}
