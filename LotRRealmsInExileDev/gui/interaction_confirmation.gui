######################################################
############# INTERACTION CONFIRMATION ###############
######################################################

window = {
	name = "character_interaction_confirmation_window"
	position = { 0 20 }
	parentanchor = center
	allow_outside = yes
	layer = middle

	using = Window_Size_MainTab
	using = Window_Background
	using = Window_Decoration_Spike

	state = {
		name = _show
		on_start = "[GetVariableSystem.Clear( 'character_interaction_change_title' )]"
		on_start = "[GetVariableSystem.Clear( 'character_interaction_change_artifact' )]"
		on_start = "[GetVariableSystem.Clear( 'character_interaction_change_maa' )]"
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
	}

	vbox = {
		set_parent_size_to_minimum = yes
		using = Window_Margins

		hbox = {
			name = "interaction_window_heading"
			visible = "[Not( CharacterInteractionConfirmationWindow.ShouldShowScheme )]"
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding
			margin_bottom = -4

			header_pattern_interaction = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				minimumsize = { 100% -1 }

				blockoverride "header_text" {
					text = "[CharacterInteractionConfirmationWindow.GetSendName]"
				}

				blockoverride "button_close"
				{
					onclick = "[CharacterInteractionConfirmationWindow.Close]"
				}

				icon_character_interaction = {
					size = { 50 50 }
					position = { 0 0 }
					tooltip = "[CharacterInteractionConfirmationWindow.GetInteractionTooltip]"
				}
			}
		}

		# Scheme header
		scheme_header_widget = {
			visible = "[CharacterInteractionConfirmationWindow.ShouldShowScheme]"

			blockoverride "header_text" {
				text = "[CharacterInteractionConfirmationWindow.GetSendName]"
			}

			blockoverride "button_close"
			{
				onclick = "[CharacterInteractionConfirmationWindow.Close]"
			}
		}

		vbox_character_interaction_three_characters = {
			visible = "[And(Not(GetVariableSystem.Exists('character_interaction_change_title')), CharacterInteractionConfirmationWindow.ShowThreeCharacters)]"
			layoutpolicy_horizontal = expanding
		}

		# Artifact Picker
		vbox = {
			name = "interaction_window_artifact_picker"
			visible = "[CharacterInteractionConfirmationWindow.UsesArtifactTarget]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			margin = { 14 10 }

			hbox = {
				visible = "[CharacterInteractionConfirmationWindow.HasSelectedArtifact]"
				datacontext = "[CharacterInteractionConfirmationWindow.GetSelectedArtifact]"
				layoutpolicy_vertical = expanding
				spacing = 5

				widget = {
					size = { 80 80 }
					alwaystransparent = yes

					icon_artifact = {
						size = { 100% 100% }
					}

					tooltipwidget = {
						artifact_tooltip = {}
					}
				}

				text_single = {
					text = "[Artifact.GetName]"
					using = Font_Size_Medium
					align = nobaseline

					tooltipwidget = {
						artifact_tooltip = {}
					}
				}

				button_round = {
					name = "change"
					datacontext = "[GetVariableSystem]"
					onclick = "[VariableSystem.Toggle( 'character_interaction_change_artifact' )]"

					tooltip = "CHARACTER_INTERACTION_WINDOW_SELECT_ARTIFACT_TOOLTIP"
					using = tooltip_below

					button_replace = {
						parentanchor = center
						alwaystransparent = yes
					}
				}
			}

			hbox = {
				visible = "[Not( CharacterInteractionConfirmationWindow.HasSelectedArtifact )]"
				minimumsize = { 0 112 }
				margin = { 10 10 }

				text_single = {
					text = "CHARACTER_INTERACTION_NO_TARGET_SELECTED"
					using = Font_Size_Medium
					align = nobaseline
				}
			}

			#### replaces character effects ###
			scrollbox = {
				visible = "[GetVariableSystem.Exists( 'character_interaction_change_artifact' )]"
				layoutpolicy_horizontal = expanding
				size = { 400 400 }

				blockoverride "scrollbox_content"
				{
					vbox_list_interaction_artifact_selection = {
						maximumsize = { 250 400 }
						layoutpolicy_horizontal = expanding

						blockoverride "button_toggles" {}
					}
				}
			}
		}

		# MaA Picker
		vbox = {
			visible = "[CharacterInteractionConfirmationWindow.UsesMaaTarget]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			hbox = {
				visible = "[Not( CharacterInteractionConfirmationWindow.HasSelectedMaa )]"
				minimumsize = { 0 112 }
				margin = { 10 10 }

				text_single = {
					text = "CHARACTER_INTERACTION_NO_TARGET_SELECTED"
					using = Font_Size_Medium
					align = nobaseline
				}
			}

			text_single = {
				text = "[CharacterInteractionConfirmationWindow.GetSelectedMaa.GetName]"
				visible = "[CharacterInteractionConfirmationWindow.HasSelectedMaa]"
			}

			button_round = {
				name = "change"
				datacontext = "[GetVariableSystem]"
				onclick = "[VariableSystem.Toggle( 'character_interaction_change_maa' )]"

				tooltip = "CHARACTER_INTERACTION_WINDOW_SELECT_ARTIFACT_TOOLTIP"
				using = tooltip_below

				button_replace = {
					parentanchor = center
					alwaystransparent = yes
				}
			}

			#### replaces character effects ###
			scrollbox = {
				visible = "[GetVariableSystem.Exists( 'character_interaction_change_maa' )]"
				layoutpolicy_horizontal = expanding
				size = { 400 400 }

				blockoverride "scrollbox_content"
				{
					vbox_list_interaction_maa_selection = {
						maximumsize = { 250 400 }
						layoutpolicy_horizontal = expanding

						blockoverride "button_toggles" {}
					}
				}
			}
		}

		### EDUCATE CHILD ###
		vbox = {
			layoutpolicy_horizontal = expanding

			widget_character_interaction_four_characters = {
				visible = "[CharacterInteractionConfirmationWindow.ShowFourCharacters]"
				layoutpolicy_horizontal = expanding
			}

			vbox_interaction_character_list = {
				visible = "[And( And( And( Not( GetVariableSystem.Exists( 'character_interaction_change_title' ) ), Not(GetVariableSystem.Exists( 'character_interaction_change_artifact' ) ) ), Not( GetVariableSystem.Exists( 'character_interaction_change_maa' ) ) ), Not( CharacterInteractionConfirmationWindow.HasPickedCharacters ) )]"
				datacontext = "[CharacterInteractionConfirmationWindow.GetCharacterList]"
				layoutpolicy_horizontal = expanding
				minimumsize = { 640 380 }

				blockoverride "item_size"
				{
					size = { 600 110 }
					layoutpolicy_horizontal = expanding

				}
			}
		}

		## Scheme Information
		vbox_scheme_info = {
			visible = "[And( CharacterInteractionConfirmationWindow.ShouldShowScheme, Not( CharacterInteractionConfirmationWindow.IsActorRecipientSame ) )]"
			datacontext = "[CharacterInteractionConfirmationWindow.GetSchemeInfo]"
			layoutpolicy_horizontal = expanding
		}

		## Effects on Characters
		vbox_character_interaction_effects = {
			visible = "[And( And( And( And( Not( GetVariableSystem.Exists( 'character_interaction_change_title' ) ), Not(GetVariableSystem.Exists( 'character_interaction_change_artifact' ) ) ), Not( GetVariableSystem.Exists( 'character_interaction_change_maa' ) ) ), CharacterInteractionConfirmationWindow.HasPickedCharacters ), InteractionEffectsDescription.GetDisplayedEffects.HasAnyEffects )]"
			datacontext = "[CharacterInteractionConfirmationWindow.GetEffectsDescription]"
			layoutpolicy_horizontal = expanding
		}

		expand = {}

		# Title Picker
		vbox = {
			name = "interaction_window_title_picker"
			visible = "[CharacterInteractionConfirmationWindow.UsesTitleTarget]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			margin_top = 5
			spacing = 10

			hbox = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				spacing = 10

				expand = {}

				hbox = {
					visible = "[CharacterInteractionConfirmationWindow.GetSelectedTitle.IsValid]"
					spacing = 5

					background = {
						margin_right = 30
						margin_top = -15
						margin_bottom = -10

						texture = "gfx/interface/component_tiles/tile_title_bg_01.dds"
						spriteType = Corneredtiled
						spriteborder = { 40 8 }
						texture_density = 2

						modify_texture = {
							name = "mask"
							texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
							spriteType = Corneredstretched
							spriteborder = { 0 0 }
							blend_mode = alphamultiply
						}
					}

					widget = {
						size = { 50 60 }

						coa_title_small_crown = {
							name = "selected_title_flag"
							datacontext = "[CharacterInteractionConfirmationWindow.GetSelectedTitle]"
							parentanchor = center
							scale = 0.8
						}
					}

					text_single = {
						datacontext = "[CharacterInteractionConfirmationWindow.GetSelectedTitle]"
						text = "[Title.GetNameNoTooltip|U]"
						using = Font_Size_Medium
					}
				}

				button_round = {
					name = "change"
					datacontext = "[GetVariableSystem]"
					onclick = "[VariableSystem.Toggle( 'character_interaction_change_title' )]"

					tooltip = "CHARACTER_INTERACTION_WINDOW_SELECT_TITLE_TOOLTIP"
					using = tooltip_below

					button_replace = {
						parentanchor = center
						alwaystransparent = yes
					}
				}

				expand = {}
			}

			hbox = {
				visible = "[Not( CharacterInteractionConfirmationWindow.HasSelectedTitle )]"
				minimumsize = { 0 112 }
				margin = { 10 10 }

				text_single = {
					text = "CHARACTER_INTERACTION_NO_TARGET_SELECTED"
					using = Font_Size_Medium
					align = nobaseline
				}
			}

			#### replaces character effects ###
			scrollbox = {
				visible = "[GetVariableSystem.Exists('character_interaction_change_title')]"
				layoutpolicy_horizontal = expanding
				size = { 500 250 }

				blockoverride "scrollbox_content"
				{
					vbox_list_interaction_title_selection = {
						maximumsize = { 450 250 }
						layoutpolicy_horizontal = expanding

						blockoverride "button_toggles" {}
					}
				}
			}
		}

		## Options
		vbox_interaction_options = {
			widgetid = "interaction_options"
			visible = "[CharacterInteractionConfirmationWindow.HasOptions]"
		}

		### Acceptance
		hbox_character_interaction_acceptance = {
			visible = "[CharacterInteractionConfirmationWindow.ShouldShowAnswer]"
			layoutpolicy_horizontal = expanding
			margin_top = 15
		}

		text_multi_on_decline_summary = {}

		vbox = {
			spacing = 5
			margin = { 20 15 }
			
			hbox = {
				visible = "[CharacterInteractionConfirmationWindow.HasCost]"
				spacing = 5

				tooltip = "[CharacterInteractionConfirmationWindow.GetCostTooltip]"

				text_single = {
					text = "INTERACTION_COST"
				}

				text_single = {
					text = "[CharacterInteractionConfirmationWindow.GetCostDescription]"
				}
			}

#			text_single = {
#				text = "[CharacterInteractionConfirmationWindow.GetCostDescription]"
#			}
		}

		## Send Button
		hbox = {
			name = "button"
			margin = { 20 0 }
			margin_top = 15
			margin_bottom = 12
			spacing = 10

			button_primary_big = {
				visible = "[Not( CharacterInteractionConfirmationWindow.ShouldShowScheme )]"
				text = "[CharacterInteractionConfirmationWindow.GetSendName]"

				onclick = "[CharacterInteractionConfirmationWindow.Send]"
				enabled = "[CharacterInteractionConfirmationWindow.CanSend]"
				tooltip = "[CharacterInteractionConfirmationWindow.GetCanSendDescription]"
				clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_confirm"
			}
			
			widget = { #LotR
				size = { 200 42 }
				visible = "[And(CharacterInteractionConfirmationWindow.HasSelectedArtifact, Not(GetVariableSystem.Exists( 'character_interaction_change_artifact' )))]"
				button_primary_big = {
					text = "tinkerer_perk_button_text"
					visible = "[And(And(CharacterInteractionConfirmationWindow.HasSelectedArtifact,Not(GetVariableSystem.Exists( 'character_interaction_change_artifact' ))),GetScriptedGui('dismantle_artifact').IsValid( GuiScope.SetRoot( CharacterInteractionConfirmationWindow.GetSelectedArtifact.MakeScope ).AddScope('player_scope', GetPlayer.MakeScope).AddScope('recipient_scope',CharacterInteractionConfirmationWindow.GetRecipient.MakeScope).End))]"
					onclick = "[GetScriptedGui('dismantle_artifact').Execute( GuiScope.SetRoot( CharacterInteractionConfirmationWindow.GetSelectedArtifact.MakeScope ).AddScope('player_scope', GetPlayer.MakeScope).AddScope('recipient_scope',CharacterInteractionConfirmationWindow.GetRecipient.MakeScope).End)]"
					enabled = "[CharacterInteractionConfirmationWindow.CanSend]"	
					tooltip = "[CharacterInteractionConfirmationWindow.GetCanSendDescription]"
					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_confirm"
				}
			}

				## Send button Schemes
				button_primary_big = {
					visible = "[CharacterInteractionConfirmationWindow.ShouldShowScheme]"
					datacontext = "[CharacterInteractionConfirmationWindow.GetSchemeInfo]"

					text = "[CharacterInteractionConfirmationWindow.GetSendName]"

					onclick = "[CharacterInteractionConfirmationWindow.Send]"
					enabled = "[CharacterInteractionConfirmationWindow.CanSend]"

					tooltip = "[CharacterInteractionConfirmationWindow.GetCanSendDescription]"

					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_confirm"

					widget = {
						visible = "[InteractionSchemeInfo.IsReplace]"
						parentanchor = center
						size = { 100% 100% }

						tooltip = "INTERACTION_REPLACE_SCHEME"

						warning_icon = {
							parentanchor = left|vcenter
							position = { 5 0 }
							size = { 30 30 }
						}
					}
				}

				button_standard = {
					visible = "[InDebugMode]"
					size = { 42 42 }
					raw_text = "#D R#!"
					tooltip = "[CharacterInteractionConfirmationWindow.GetDebugInfo]"
				}
			}
		}
	}

	window_character_filter = {
		datacontext = "[CharacterInteractionConfirmationWindow.GetCharacterList]"
		blockoverride "addition_filter" {

			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('ruler_filter')]"
			}

			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
			}

			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
			}

			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('dynasty_filter')]"
			}
		}
	}
}
