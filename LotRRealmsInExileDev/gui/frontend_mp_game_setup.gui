#LotR Adjusted Date System
window = {
	name = "mainmenu_mp_game_setup"
	size = { 100% 100% }

	movable = no

	proportional_icon = {
		parentanchor = center
		size = { 100% 100% }
		texture = "[GetRandomFrontendIllustration]"
	}

	state = {
		name = _show
		on_start = "[GetVariableSystem.Set( 'mp_host_tabs', 'game_setup'  )]"

		using = Animation_FadeIn_Standard
		using = Sound_WindowShow_Standard
	}

	state = {
		name = _hide
		on_start = "[GetVariableSystem.Clear( 'tabs_open' )]"

		using = Animation_FadeOut_Standard
		using = Sound_WindowHide_Standard
	}

	vbox = {
		hbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			### BOOKMARKS
			vbox = {
				layoutpolicy_vertical = expanding
				margin_right = 15
				margin_bottom = 10
				spacing = 5

				using = Window_Background_Sidebar_Multiplayer_Left

				background = {
					using = Background_Area_Dark
					margin_top = 5
					margin_bottom = 5
					margin_right = 5

					modify_texture = {	
						blend_mode = alphamultiply
						alpha = 0.8
						mirror = vertical
						texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
					}
				}

				header_pattern = {
					name = "header_bar"
					layoutpolicy_horizontal = expanding

					blockoverride "header_text" {
						# visible = no
						text = "FRONTEND_MP_GAME_SETUP_HOST_HEADER"
						visible = "[GameMpSetup.CanStart]"
					}

					blockoverride "button_close" {
						visible = no
					}
				}

				spacer = {
					size = { 10 5 }
				}

				text_label_center = {
					layoutpolicy_horizontal = expanding
					align = center|nobaseline
					margin = { 0 5 }
					text = "FRONTEND_MP_GAME_SETUP_HOST_NEW_GAME"
					default_format = "#low"
				}

				scrollbox = {
					name = "bookmarks"
					minimumsize = { 400 30% }
					layoutpolicy_vertical = growing
					layoutpolicy_horizontal = expanding

					background = {
						using = Background_Area
					}

					blockoverride "scrollbox_content" {
						vbox = {
							name = "bookmarks_list"
							datamodel = "[GameMpSetup.GetBookmarkItems]"
							spacing = 3

							item = {
								button_standard_clean = {
									name = "select"
									size = { 370 49 }
									onclick = "[MpBookmarkItem.Select]"
									onclick = "[PdxGuiTriggerAllAnimations('loadsave_refresh')]"
									down = "[MpBookmarkItem.IsSelected]"
									text = "frontend_mp_game_setup_date_replace" #For LotR Date System
								}
							}
						}
					}
				}

				spacer = {
					size = { 20 10 }
				}

				text_label_center = {
					layoutpolicy_horizontal = expanding
					align = center|nobaseline
					margin = { 0 5 }
					text = "FRONTEND_MP_GAME_SETUP_HOST_SAVED_GAME"
					default_format = "#low"
				}

				scrollbox = {
					name = "saved_games"
					minimumsize = { 400 50% }
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = growing

					background = {
						using = Background_Area
					}

					blockoverride "scrollbox_content"
					{
						vbox = {
							datamodel = "[GameMpSetup.GetSaveGames]"
							spacing = 3

							item = {
								button_saved_games = {
									size = { 370 90 }


									blockoverride "max_width_savegame" {
										max_width = 305
									}
								}
							}
						}
					}
				}

				spacer = {
					size = { 5 10 }
				}

				hbox = {
					layoutpolicy_horizontal = expanding

					spacer = {
						size = { 15 10 }
					}

					button_standard_back = {
						size = { 170 33 }
						shortcut = "close_window"
						onclick = "[GameMpSetup.OnBack]"
						oversound = "event:/SFX/UI/Generic/sfx_ui_generic_pointer_over"
						clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_close"
					}

					expand = {}
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
			}

			vbox = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = growing
				minimumsize = { 400 0 }
				margin_left = 15
				margin_bottom = 10
				spacing = 5

				using = Window_Background_Sidebar_Multiplayer_Right

				background = {
					using = Background_Area_Dark
					margin_top = 5
					margin_bottom = 5
					margin_right = 5

					modify_texture = {
						blend_mode = alphamultiply
						alpha = 0.8
						mirror = vertical
						texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
					}
				}

				#### TABS ####
				hbox = {
					layoutpolicy_horizontal = expanding
					name = "tabs"

					button_tab = {
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set( 'mp_host_tabs', 'game_setup' )]"
						down = "[GetVariableSystem.HasValue( 'mp_host_tabs', 'game_setup' )]"
						text = "FRONTEND_MP_GAME_SETUP_GAME_SETTINGS"
						default_format = "#low"
					}

					button_tab = {
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set( 'mp_host_tabs', 'game_info' )]"
						down = "[GetVariableSystem.HasValue( 'mp_host_tabs', 'game_info' )]"
						text = "GAMESETUP_GAME_INFO"
						default_format = "#low"
					}
				}

				### GAME SETUP TAB ###
				vbox = {
					name = "tab_game_setup"
					visible = "[GetVariableSystem.HasValue( 'mp_host_tabs', 'game_setup' )]"

					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding
					spacing = 5
					margin_top = 10
					margin_left = 15

					using = Animation_Tab_Switch

					vbox = {
						layoutpolicy_horizontal = expanding
						spacing = 5
						margin = { 0 10 }

						text_label_center = {
							layoutpolicy_horizontal = expanding
							align = center|nobaseline
							margin = { 0 5 }
							text = "JOMINI_MULTIPLAYER_GUI_VISIBILITY"
							default_format = "#low"
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10
							margin_left = 10

							tooltip = JOMINI_MULTIPLAYER_GUI_PRIVATE_TT

							button_radio = {
								visible = "[Not(GameMpSetup.IsInvite)]"
								onclick = "[GameMpSetup.SetVisibilityInvite]"
							}

							button_radio = {
								visible = "[GameMpSetup.IsInvite]"
								frame = 2
							}

							text_single = {
								text = "JOMINI_MULTIPLAYER_GUI_PRIVATE"
								align = nobaseline
							}

							expand = {}
						}

						hbox = {
							visible = "[JominiMultiplayerIsCrossplayFilterAvailable]"

							layoutpolicy_horizontal = expanding
							spacing = 10
							margin_left = 10

							tooltip = MULTIPLAYER_GUI_PUBLIC_MICROSOFT_ONLY_TT

							button_radio = {
								visible = "[Not(GameMpSetup.IsPublicNoCrossplay)]"
								onclick = "[GameMpSetup.SetVisibilityPublicNoCrossplay]"
							}

							button_radio = {
								visible = "[GameMpSetup.IsPublicNoCrossplay]"
								frame = 2
							}

							text_single = {
								text = "MULTIPLAYER_GUI_PUBLIC_MICROSOFT_ONLY"
								align = nobaseline
							}

							expand = {}
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10
							margin_left = 10
							tooltip = "JOMINI_MULTIPLAYER_GUI_PUBLIC_TT"

							button_radio = {
								visible = "[Not(GameMpSetup.IsPublicCrossplay)]"
								onclick = "[GameMpSetup.SetVisibilityPublicCrossplay]"
								enabled = "[Or(Not(JominiMultiplayerIsCrossplayFilterAvailable), JominiMultiplayerIsCrossplayEnabled)]"
							}

							button_radio = {
								visible = "[GameMpSetup.IsPublicCrossplay]"
								frame = 2
							}

							text_single = {
								text = "JOMINI_MULTIPLAYER_GUI_PUBLIC"
							}

							expand = {}
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding
						spacing = 15

						text_single = {
							layoutpolicy_horizontal = expanding
							align = center|nobaseline
							margin = { 0 5 }
							text = "JOMINI_MULTIPLAYER_GUI_GAME_SETTINGS"
							default_format = "#low"
						}

						background = {
							using = Background_Area_With_Header
							margin_left = 15
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							margin_right = 15
							spacing = 15

							editbox_standard_with_label = {
								layoutpolicy_horizontal = expanding

								blockoverride "editbox_label"
								{
									text = "JOMINI_MULTIPLAYER_GUI_SERVER_NAME"
								}

								blockoverride "editbox_properties" 
								{
								    name = "game_name" # widget name is referenced in code, please no duplicates in this window
								    text = "[GetDefaultServerName]"
								    maxcharacters = 64
								    tooltip = "FRONTEND_MP_SERVER_NAME_TOOLTIP"
								}
							}

							editbox_standard_with_label = {
								layoutpolicy_horizontal = expanding

								blockoverride "editbox_label"
								{
									text = "JOMINI_MULTIPLAYER_GUI_SERVER_PASSWORD"
								}

								blockoverride "editbox_properties" 
								{
								    name = "game_password" # widget name is referenced in code, please no duplicates in this window
								    maxcharacters = 64
								    tooltip = "FRONTEND_MP_SERVER_PASSWORD_TOOLTIP"
								}
							}
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10
							margin_left = 10
							margin_bottom = 5

							tooltip = "JOMINI_MULTIPLAYER_GUI_AUTO_ACCEPT_TT"

							button_checkbox_label = {
								onclick = "[GameMpSetup.ToggleAutoAccept]"

								blockoverride "checkbox"
								{
									checked = "[GameMpSetup.IsAutoAccept]"
								}

								blockoverride "text"
								{
									text = "JOMINI_MULTIPLAYER_GUI_AUTO_ACCEPT"
								}
							}

							expand = {}
						}

						expand = {}
					}

					spacer = {
						size = { 40 10 }
					}

					#### DATE DESCRIPTION
					vbox = {
						layoutpolicy_vertical = expanding
						layoutpolicy_horizontal = expanding
						visible = "[Not(GameMpSetup.IsSaveGameSelected)]"

						state = {
							name = "loadsave_refresh"
							next = a
							alpha = 0.5
						}

						state = {
							name = "a"
							alpha = 1
							duration = 0.5
							using = Animation_Curve_Default
						}

						background = {
							using = Background_Area_With_Header
							margin_left = 15
						}

						text_single = {
							layoutpolicy_horizontal = expanding
							align = center|nobaseline
							margin = { 0 5 }
							text = "frontend_mp_game_setup_bookmark_date_replace" #For LotR Date Systems
							default_format = "#low"
						}

						text_multi = {
							text = "[GameMpSetup.GetBookmarkDescription]"
							autoresize = yes
							max_width = 400
							min_width = 400
							margin = { 10 20 }
							default_format = "#high"
						}

						expand = {}
					}

					#### CHARACTER #####
					vbox = {
						visible = "[GameMpSetup.IsSaveGameSelected]"
						datacontext = "[GameMpSetup.GetSelectedSaveGame]"
						layoutpolicy_vertical = expanding
						layoutpolicy_horizontal = expanding

						background = {
							using = Background_Area
							margin = { 15 0 }
							mirror = vertical

							modify_texture = {
								texture = "gfx/interface/component_masks/mask_fade_corner.dds"
								blend_mode = alphamultiply
							}
						}

						background = {
							using = Background_Area_Dark
							margin_left = 10
							margin_right = 15
							margin_bottom = 90

							modify_texture = {	
								blend_mode = alphamultiply
								mirror = vertical
								texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							}
						}

						vbox_save_preview = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding
							minimumsize = { 400 0 }
							margin = { -15 10 }

							blockoverride "max_width" {
								max_width = 400
							}

							blockoverride "max_width_filename" {
								max_width = 150
							}

							blockoverride "position" {
								position = { 50 30 }
							}

							expand = {}
						}
					}
				}

				### GAME INFO TAB ###
				vbox = {
					name = "tab_game_info"
					visible = "[GetVariableSystem.HasValue( 'mp_host_tabs', 'game_info' )]"
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding
					spacing = 10
					margin_top = 10
					minimumsize = { 415 0 }

					using = Animation_Tab_Switch

					vbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = { 400 0 }
						margin_left = 10

						vbox = {
							layoutpolicy_horizontal = expanding
							margin = { 0 5 }

							text_single = {
								text = "FRONTEND_MP_GAME_SETUP_VERSION"
								align = left
								layoutpolicy_horizontal = expanding
								max_width = 400
							}
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							margin = { 0 5 }

							text_single = {
								text = "JOMINI_MULTIPLAYER_GUI_CHECKSUM"
								align = left
								layoutpolicy_horizontal = expanding
							}
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						minimumsize = { 400 0 }

						vbox = {
							layoutpolicy_horizontal = expanding
							margin = { 10 0 }

							text_label_center = {
								layoutpolicy_horizontal = expanding
								text = "JOMINI_MULTIPLAYER_GUI_ENABLED_DLCS"
								default_format = "#low"
							}
						}

						scrollbox = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding

							blockoverride "scrollbox_content" {
								vbox = {
									layoutpolicy_horizontal = expanding
									datamodel = "[GameMpSetup.GetEnabledDLCs]"
									visible = "[DataModelHasItems( GameMpSetup.GetEnabledDLCs )]"

									item = {
										text_single = {
											layoutpolicy_horizontal = expanding
											text = "[CString.GetString]"
										}
									}
								}
							}

							blockoverride "scrollbox_empty"
							{
								visible = "[IsDataModelEmpty( GameMpSetup.GetEnabledDLCs )]"
								text = "JOMINI_MULTIPLAYER_GUI_NO_DLCS"
							}

							blockoverride "scrollbox_expand"
							{
								expand = {
									layoutpolicy_vertical = growing
									visible = "[DataModelHasItems( GameMpSetup.GetEnabledDLCs )]"
								}
							}
						}
					}

					spacer = {}

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						text_label_center = {
							layoutpolicy_horizontal = expanding
							text = "JOMINI_MULTIPLAYER_GUI_ENABLED_MODS"
							default_format = "#low"
						}

						scrollbox = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding

							blockoverride "scrollbox_content" {
								vbox = {
									layoutpolicy_horizontal = expanding
									datamodel = "[GameMpSetup.GetEnabledMods]"
									visible = "[DataModelHasItems( GameMpSetup.GetEnabledMods )]"

									item = {
										text_single = {
											text = "[CString.GetString]"
										}
									}
								}
							}

							blockoverride "scrollbox_empty"
							{
								visible = "[IsDataModelEmpty( GameMpSetup.GetEnabledMods )]"
								text = "JOMINI_MULTIPLAYER_GUI_NO_MODS"
							}

							blockoverride "scrollbox_expand"
							{
								expand = {
									layoutpolicy_vertical = growing
									visible = "[DataModelHasItems( GameMpSetup.GetEnabledMods )]"
								}
							}
						}
					}
				}

				spacer = {
					size = { 40 10 }
				}

				button_primary = {
					size = { 400 45 }
					name = "start_button"
					text = "JOMINI_MULTIPLAYER_GUI_SERVER_BROWSER_HOST_BUTTON"
					default_format = "#high"
					onclick = "[GameMpSetup.OnStart]"
					enabled = "[GameMpSetup.CanStart]"
					tooltip = "[GameMpSetup.StartTooltip]"
					oversound = "event:/SFX/UI/Generic/sfx_ui_generic_pointer_over"

					state = {
						name = _mouse_press
						start_sound = {
							soundeffect = "event:/SFX/UI/Generic/sfx_ui_generic_pointer_press"
						}
					}

					state = {
						name = _mouse_release
						start_sound = {
							soundeffect = "event:/SFX/UI/Generic/sfx_ui_generic_start_game"
						}
					}
				}
			}
		}
	}
}
