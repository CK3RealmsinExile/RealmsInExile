######################################################
################# KNIGHTS VIEW ###################
######################################################

window = {
	datacontext = "[KnightsView.GetMilitaryView]"
	name = "knight_view"
	size = { 540 865 }
	parentanchor = top|right
	position = { -626 170 }
	movable = no
	layer = middle

	using = Window_Background_Subwindow

	state = {
		name = _show
		using = Animation_FadeIn_Quick

		position = { -626 170 }
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick

		position_x = -570
	}

	vbox = {
		margin = { 4 4 }
		spacing = 2

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				datacontext = "[MilitaryView.GetCharacter]"
				text = "[SelectLocalization( GreaterThan_int32( Character.GetNumAccoladeSlots, '(int32)0' ), 'KV_HEADER_ACCOLADES', 'KV_HEADER' )]"
			}

			blockoverride "button_close"
			{
				onclick = "[KnightsView.Close]"
			}
		}

		# ACCOLADES ----------------------------------------------------------------------------
		vbox = {

			background = {
				using = Background_Area_ExtraDark
				alpha = 0.3
				margin = {10 0}
				margin_top = 10
			}

			text_label_center = {
				datacontext = "[MilitaryView.GetCharacter]"
				visible = "[GreaterThan_int32( Character.GetNumAccoladeSlots, '(int32)0' )]"

				name = "accolades_limit"
				text = "ACCOLADES_LIMIT"
				default_format = "#low"

				tooltip = "[Character.GetNumAccoladeSlotsBreakdown]"
			}

			hbox = {
				name = "accolades_box"
				datacontext = "[MilitaryView.GetCharacter]"
				visible = "[GreaterThan_int32( Character.GetNumAccoladeSlots, '(int32)0' )]"

				layoutpolicy_horizontal = expanding
				margin = { 0 5 }
				spacing = 6
				margin_top = -2
				margin_bottom = 10

				expand = {}

				hbox = {
					name = "active_accolades"
					spacing = 10
					datamodel = "[Character.GetActiveAccolades]"

					item = {
						widget = {
							size = { 96 110 }
							accolade_banner = {}

							portrait_head_small = {
								parentanchor = center
								position = { 2 0 }
								datacontext = "[Accolade.GetAcclaimedKnight]"

								tooltip = "MANAGE_ACCOLADE_NAME"

								blockoverride "portrait_button"
								{
									onclick = "[OpenGameViewData( 'accolade_view', Accolade.GetID )]"
									onclick = "[KnightsView.Close]"
								}

								blockoverride "portrait_button_template_onclick" {}
								blockoverride "opinion_box" {}
							}

							accolade_rank_icon = {}
						}
					}
				}

				hbox = {
					name = "other_accolade_slots"
					spacing = 5

					datamodel = "[GetNullCharacterDataModel( Subtract_int32( GetDefine('NGui', 'KNIGHTS_VIEW_NUM_ACCOLADES'), MilitaryView.GetCharacter.GetNumActiveAccolades ) )]"
					item = {
						widget = {
							enabled = "[And( MilitaryView.GetCharacter.HasFreeAccoladeSlots, KnightsView.HasCachedPotentialAcclaimedKnights )]"

							size = { 96 110 }

							widget = {
								size = {100% 100%}
								name = "available_accolade_tutorial_uses_this"

								visible = "[And( MilitaryView.GetCharacter.HasFreeAccoladeSlots, KnightsView.HasCachedPotentialAcclaimedKnights )]"
							}


							accolade_banner = {
								visible = "[And( MilitaryView.GetCharacter.HasFreeAccoladeSlots, KnightsView.HasCachedPotentialAcclaimedKnights )]"
							}
							accolade_banner_broken = {
								visible = "[Not( And( MilitaryView.GetCharacter.HasFreeAccoladeSlots, KnightsView.HasCachedPotentialAcclaimedKnights ) )]"
							}

							widget = {
								parentanchor = center
								position = { 2 0 }
								size = { 85 90 }
								tooltip = "[KnightsView.GetAccoladeSlotTooltip( MilitaryView.GetCharacter.Self )]"

								background = {
									using = Background_Area_Solid

									modify_texture = {
										texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
										blend_mode = alphamultiply
										alpha = 0.2
										mirror = vertical
									}
								}

								widget = {
									size = { 100% 100% }

									background = {
										texture = "gfx/portraits/portrait_frame.dds"
										using = Color_Grey
										margin = { -4 -4 }
										alpha = 0.5
									}
								}

								button = {
									size = { 100% 100% }

									onclick = "[OpenGameViewData( 'create_accolade_view', MilitaryView.GetCharacter.GetID )]"
									onclick = "[KnightsView.Close]"

									state = {
										name = _mouse_hierarchy_enter
										on_start = "[PdxGuiWidget.FindChild('highlight_frame').TriggerAnimation('show')]"

									}

									state = {
										name = _mouse_hierarchy_leave
										on_start = "[PdxGuiWidget.FindChild('highlight_frame').TriggerAnimation('hide')]"

									}

									highlight_icon = {
										name = "portrait_unknown_head_glow"
							            parentanchor = center
							            position = { 3 -7 }
							            gfxtype = framedbuttongfx
							            effectname = "NoHighlight"
							            texture = "gfx/portraits/unknown_portraits/button_unknown_head.dds"
							            size = { 78 105 }
							            framesize = { 384 480 }
							            upframe = 1
							            overframe = 2
									}


									button_plus = {
										parentanchor = center
										position = { 0 0 }
										alwaystransparent = yes
									}

									widget = {
										name = "highlight_frame"
										size = { 100% 100% }
										alwaystransparent = yes
										alpha = 0

										state = {
											name = "show"
											alpha = 1
										}

										state = {
											name = "hide"
											alpha = 0
										}

										background = {
											size = { 100% 100% }
											texture = "gfx/portraits/portrait_frame.dds"
											using = Color_Grey
											alpha = 0.7
											margin = { -4 -4 }
										}
									}
								}
							}
						}
					}
				}

				expand = {}
			}
		}

		button_standard = {
			datacontext = "[MilitaryView.GetCharacter]"
			size = { 220 33 }

			visible = "[And( GreaterThan_int32( Character.GetNumInactiveAccolades, '(int32)0' ), Not(KnightsView.IsShowingInactiveAccolades ) )]"
			onclick = "[KnightsView.ToggleInactiveAccolades]"

			text = "INACTIVE_ACCOLADES"
		}

		button_standard = {
			size = { 150 30 }

			visible = "[KnightsView.IsShowingInactiveAccolades]"
			onclick = "[KnightsView.ToggleInactiveAccolades]"

			text = "BACK_LABEL"
		}

		# KNIGHTS ----------------------------------------------------------------------------

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			visible = "[Not(KnightsView.IsShowingInactiveAccolades)]"
			spacing = 8

			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 8 0 }

				text_label_center = {
					name = "knights_cap"
					text = "MAX_KNIGHT_COUNT"
					tooltip = "MAX_KNIGHT_TOOLTIP"
					default_format = "#low"
				}

				text_label_center = {
					name = "knights_effectiveness"

					text = "KNIGHT_EFFECTIVENESS"
					tooltip = "KNIGHT_EFFECTIVENESS_TOOLTIP"
					default_format = "#low"
				}
			}

			button_decision_entry = {
				name = "invite_knights_decision"
				datacontext = "[GetDecisionWithKey('invite_knights_decision')]"
				visible = "[Decision.IsShownForPlayer]"
				onclick = "[OpenGameViewData( 'decision_detail', Decision.Self )]"
				margin_top = 30
			}

			spacer = {
				size = { 0 4 }
			}

			text_label_center = {
				name = "knights_effectiveness"
				text = "KNIGHTS_SUBHEADER"
				default_format = "#medium"
			}

			scrollbox = {
				name = "knights"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "scrollbox_content" {
					fixedgridbox = {
						name = "knights"
						datamodel = "[MilitaryView.GetKnights]"

						addcolumn = 500
						addrow = 140
						datamodel_reuse_widgets = yes

						item = {
							widget = {
								layoutpolicy_horizontal = expanding
								size = { 500 130 }

								using = Background_Guest

								blockoverride "Background_Guest_pattern_visible"
								{
									visible = "[Character.IsGuest]"
									margin_bottom = -5
									margin_right = 5
								}
								blockoverride "Background_Guest_frame_visible"
								{
									visible = "[Character.IsGuest]"
									margin_left = 3
									margin_bottom = -5
									margin_top = 1
									margin_right = 5
								}

								vbox = {
									spacing = 7

									hbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding
										margin_right = 5
										spacing = 10

										portrait_head = {
											alpha = "[Select_float( Character.IsKnight, '(float)1.0', '(float)0.6' )]"
										}


										vbox = {
											layoutpolicy_vertical = expanding
											layoutpolicy_horizontal = expanding
											spacing = 10
											margin_top = 15

											hbox = {
												layoutpolicy_horizontal = expanding

												hbox = {
													layoutpolicy_horizontal = expanding
													layoutpolicy_vertical = expanding

													icon = {
														visible = "[And(Character.IsKnight, Not(Character.IsAcclaimedKnight) )]"
														texture = "gfx/interface/icons/icon_knight_small.dds"
														size = { 40 40 }
													}

													icon = {
														visible = "[Character.IsAcclaimedKnight]"
														texture = "gfx/interface/icons/icon_knight_acclaimed.dds"
														size = { 50 50 }
													}

													vbox = {
														layoutpolicy_horizontal = expanding
														layoutpolicy_vertical = expanding

														text_single = {
															layoutpolicy_horizontal = expanding
															text = "[Character.GetNameNoTooltip]"
															using = Font_Size_Medium
															autoresize = no
														}


														text_single = {
															layoutpolicy_horizontal = expanding
															text = "[Character.GetRelationToString( GetPlayer )]"
															tooltip = "EXTENDED_RELATIONS_TOOLTIP"
															default_format = "#low"
															autoresize = no
															align = nobaseline
														}

														expand = {}
													}
												}

												vbox = {
													layoutpolicy_vertical = expanding
													margin = { 10 0 }

													text_label_center  = {
														text = "[prowess_i][Character.GetSkill( 'prowess' )]"
														using = Font_Size_Big
														default_format = "#high"
													}

													expand = {}
												}
											}

											hbox = {
												visible = "[Not(Character.IsGuest)]"
												layoutpolicy_horizontal = expanding
												spacing = 5

												button_standard = {
													size = { 90 33 }
													onclick = "[MilitaryView.SetKnightForced( Character.Self )]"
													down = "[Character.IsKnightForced]"
													alwaystransparent = "[Character.IsKnightForced]"

													text = "KNIGHTS_VIEW_FORCE"

													tooltip = "KNIGHTS_VIEW_TITLE_FORCE_TT"
													using = tooltip_se
												}

												button_standard = {
													size = { 90 33 }
													onclick = "[MilitaryView.SetKnightDefault( Character.Self )]"
													down = "[Character.IsKnightDefault]"
													alwaystransparent = "[Character.IsKnightDefault]"

													text = "KNIGHTS_VIEW_ALLOW"

													tooltip = "KNIGHTS_VIEW_TITLE_BY_PROWESS_TT"
													using = tooltip_se
												}

												button_standard = {
													size = { 90 33 }
													onclick = "[MilitaryView.SetKnightDisallowed( Character.Self )]"
													down = "[Character.IsKnightDisallowed]"
													alwaystransparent = "[Character.IsKnightDisallowed]"
													enabled = "[Not( Character.IsAcclaimedKnight )]"


													text = "KNIGHTS_VIEW_FORBID"
													tooltip = "[SelectLocalization( Character.IsAcclaimedKnight, 'CANNOT_FORBID_ACCLAIMED_KNIGHT', 'KNIGHTS_VIEW_TITLE_FORBID_TT' )]"
													using = tooltip_se
												}

												expand = {}
											}

											hbox = {
												visible = "[Character.IsGuest]"
												layoutpolicy_horizontal = expanding
												spacing = 10

												button_standard = {
													visible = "[Character.IsPlayerInteractionShown('recruit_guest_interaction')]"
													enabled = "[Character.IsPlayerInteractionValid('recruit_guest_interaction')]"
													onclick = "[Character.OpenPlayerInteraction('recruit_guest_interaction')]"
													text = "[Character.GetPlayerInteractionName('recruit_guest_interaction')]"
													tooltip = "[Character.GetPlayerInteractionTooltip('recruit_guest_interaction')]"
													using = tooltip_se
												}

												expand = {}
											}

											expand = {}
										}


									}

									divider = {
										layoutpolicy_horizontal = expanding
										texture = "gfx/interface/colors/gold_darker.dds"
									}
								}
							}
						}
					}
				}
			}
		}

		# INACTIVE ACCOLADES -----------------------------------------------------------------------------------------------

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			visible = "[KnightsView.IsShowingInactiveAccolades]"

			scrollbox = {
				name = "inactive_accolades"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				datacontext = "[MilitaryView.GetCharacter]"

				blockoverride "scrollbox_content" {
					vbox = {
						name = "knights"
						datamodel = "[Character.GetInactiveAccolades]"
						spacing = 20
						layoutpolicy_horizontal = expanding

						item = {
							hbox = {
								layoutpolicy_horizontal = expanding

								background = {
									using = Background_Frame
									color = { 0.7 0.4 0.3 0.7 }
									spacing = 7
									margin_top = 12
									margin_bottom = 12
									margin_left = 10
									margin_right = 5
								}

								widget = {
									size = { 85 90 }
									accolade_banner = {}

									portrait_head_small = {
										parentanchor = center
										position = { 6 0 }
										datacontext = "[Accolade.GetAcclaimedKnight]"

										tooltipwidget = accolade_tooltip

										blockoverride "portrait_button_template_onclick" {}
										blockoverride "opinion_box" {}
									}

									accolade_rank_icon = {}
								}

								vbox = {
									layoutpolicy_horizontal = expanding
									margin_left = 20

									text_multi = {
										layoutpolicy_horizontal = expanding
										text = "[Accolade.GetNameNoTooltip]"
										align = nobaseline|bottom
										max_width = 255
									}

									text_multi = {
										layoutpolicy_horizontal = expanding
										text = "[Accolade.GetAcclaimedKnight.GetNameNoTooltip]"
										align = nobaseline|top
										max_width = 255
										default_format = "#low"
									}

									expand = {}
								}

								vbox = {
									spacing = 2
									margin_left = 7

									button_standard = {
										size = { 120 30 }

										visible = "[Accolade.CanBeActivated]"
										onclick = "[Accolade.Activate]"
										clicksound = "event:/DLC/EP2/SFX/UI/Knighthood/ep2_ui_knighthood_lineage_creation"

										text = "ACTIVATE_ACCOLADE"
									}

									button_standard = {
										size = { 120 30 }

										visible = "[Accolade.HasPotentialSuccessor]"
										onclick = "[OpenSetAcclaimedView( Accolade.Self )]"

										text = "ACCOLADE_APPOINT"
									}

									button_standard = {
										size = { 120 30 }

										onclick = "[KnightsView.DestroyAccolade( Accolade.Self )]"

										text = "DESTROY_ACCOLADE"
									}
								}

								expand = { minimumsize = { 10 0 } }
							}
						}
					}
				}
			}
		}

		expand = {}
	}
}

