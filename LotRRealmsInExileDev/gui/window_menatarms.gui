######################################################
################# MEN-AT-ARMS VIEW ###################
######################################################

window = {
	name = "menatarms_view"
	widgetid = "menatarms_view"
	datacontext = "[MenAtArmsView.GetRegiment]"
	datacontext = "[Regiment.GetMAAType]"

	size = { 400 200 }
	parentanchor = top|right
	position = { -630 120 }
	movable = no
	layer = middle

	using = Window_Background_Subwindow

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		position_x = -630
		on_start = "[GetVariableSystem.Set( 'menatarms_open', 'true'  )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		position_x = -580
		on_start = "[GetVariableSystem.Clear( 'menatarms_open' )]"
	}

	vbox = {
		set_parent_size_to_minimum = yes
		margin = { 4 4 }

		state = {
			name = "menatarms_refresh"
			alpha = 0.5
			duration = 0.2
			next = "b"
			using = Animation_Curve_Default
		}

		state = {
			name = "b"
			alpha = 1
			duration = 0.2
			using = Animation_Curve_Default
		}

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "[Regiment.GetNameNoTooltip]"
			}

			blockoverride "button_close"
			{
				onclick = "[MenAtArmsView.Close]"

			}
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			margin = { 0 0 }
			min_width = 380

			widget = {
				layoutpolicy_horizontal = expanding
				size = { 340 200 }

				vbox = {
					background = {
						name = "image"
						datacontext = "[Regiment.GetMAAType]"
						texture = "[MenAtArmsType.GetHorizontalImage]"
						fittype = centercrop

						using = Mask_Rough_Edges
					}

					expand = {}

					hbox = {
						layoutpolicy_horizontal = expanding
						margin_bottom = 5
						margin_left = 15
						spacing = 6

						icon = {
							size = { 40 40 }
							texture = "[MenAtArmsType.GetIcon]"
						}

						text_label_left = {
							text = "[Regiment.BuildCurrentRegimentCountString]"
							default_format = "#high"
							using = Font_Size_Big
							align = nobaseline
						}

						expand = {}

						text_label_right = {
							text = "MAA_CURRENT_SIZE"
							default_format = "#high"
							using = Font_Size_Big
							align = nobaseline
						}

						spacer = {
							size = {8 0}
						}
					}
				}
			}

			### Soldiers
			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 15 10 }
				spacing = 3

				background = {
					using = Background_Area
					margin = { 5 5 }
				}

				vbox = {
					name = "soldiers"
					layoutpolicy_horizontal = expanding
					margin = { 5 5 }
					spacing = 3

					button_primary = {
						layoutpolicy_horizontal = expanding

						onclick = "[MenAtArmsView.BuyMaa]"
						# enabled = "[MenAtArmsView.CanBuyMaa]"
						enabled = "[And(MenAtArmsView.CanDestroyMaa,Not(EqualTo_string(MenAtArmsView.GetRegiment.GetNameNoTooltip,'Settlers')))]"
					
						visible = "[NotEqualTo_int32( Regiment.GetMAAChunkCount, Regiment.CalcMaxMAAChunkCount )]"
					
						tooltipwidget = {
							change_maa_tooltip = {
								blockoverride "enable_tooltip" {
									visible = "[MenAtArmsView.CanBuyMaa]"
								}

								blockoverride "enable_tooltip_text" {
									text = "MAA_INCREASE_SIZE_TOOLTIP"
								}

								blockoverride "disable_tooltip" {
									visible = "[Not(MenAtArmsView.CanBuyMaa)]"
								}

								blockoverride "disable_tooltip_text" {
									text = "[MenAtArmsView.GetIncreaseSizeBlockers]"
								}
							}
						}

						hbox = {
							margin = { 10 0 }
							spacing = 5

							icon = {
								texture = "gfx/interface/icons/icon_trend_arrow.dds"
								framesize = { 22 22 }
							}

							text_single = {
								text = "MAA_INCREASE_SIZE"
								align = nobaseline
								default_format = "#high"
							}

							expand = {}

							text_single = {
								text = "MAA_SIZE_CHANGE"
								align = nobaseline
								default_format = "#high"
							}
						}
					}

					text_single = {
						name = "max_size_text"
						layoutpolicy_horizontal = expanding
						visible = "[EqualTo_int32( Regiment.GetMAAChunkCount, Regiment.CalcMaxMAAChunkCount )]"
						margin = { 10 6 }

						using = Background_Area

						text = "MAA_AT_MAX_SIZE"
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 2

						button_standard = {
							visible = "[GreaterThan_int32(Regiment.GetMAAChunkCount, '(int32)1')]"
							layoutpolicy_horizontal = expanding
							# enabled = "[MenAtArmsView.CanSellMaa]" #LotR
							enabled = "[And(MenAtArmsView.CanDestroyMaa,Not(EqualTo_string(MenAtArmsView.GetRegiment.GetNameNoTooltip,'Settlers')))]"
							onclick = "[MenAtArmsView.SellMaa]"

							tooltipwidget = {
								change_maa_tooltip = {
									blockoverride "enable_tooltip" {
										visible = "[MenAtArmsView.CanSellMaa]"
									}

									blockoverride "enable_tooltip_text" {
										text = "MAA_DECREASE_SIZE_TOOLTIP"
									}

									blockoverride "disable_tooltip" {
										visible = "[Not(MenAtArmsView.CanSellMaa)]"
									}

									blockoverride "disable_tooltip_text" {
										text = "[MenAtArmsView.GetReduceSizeBlockers]"
									}
								}
							}

							hbox = {
								margin = { 10 0 }
								spacing = 5

								icon = {
									texture = "gfx/interface/icons/icon_trend_arrow.dds"
									framesize = { 22 22 }
									frame = 2
								}

								text_single = {
									text = "MAA_DECREASE_SIZE"
									align = nobaseline
								}

								expand = {}
							}
						}
					}
				}

				button_round  = {
					# enabled = "[MenAtArmsView.CanDestroyMaa]" #LotR
					enabled = "[And(MenAtArmsView.CanDestroyMaa,Not(EqualTo_string(MenAtArmsView.GetRegiment.GetNameNoTooltip,'Settlers')))]"
					onclick = "[MenAtArmsView.DestroyMaaRegiment]"

					tooltipwidget = {
						change_maa_tooltip = {
							blockoverride "enable_tooltip" {
								visible = "[MenAtArmsView.CanSellMaa]"
							}

							blockoverride "enable_tooltip_text" {
								text = "MAA_DESTROY_TOOLTIP"
							}

							blockoverride "disable_tooltip" {
								visible = "[Not(MenAtArmsView.CanSellMaa)]"
							}

							blockoverride "disable_tooltip_text" {
								text = "[MenAtArmsView.GetReduceSizeBlockers]"
							}
						}
					}

					tooltip = "MAA_DESTROY_TOOLTIP"

					button_cancel = {
						parentanchor = center
						alwaystransparent = yes
					}
				}

			}

			hbox_maa_location = {
				name = "maa_location"
				layoutpolicy_horizontal = expanding
				margin = { 15 0 }

				blockoverride "no_location"
				{
					change_men_at_arms_origin_button = {}
				}

				blockoverride "current_location"
				{
					change_men_at_arms_origin_button = {
						button_ignore = none
						onrightclick = "[MenAtArmsView.RemoveOriginProvince]"
					}
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				margin = { 20 10 }
				spacing = 2

				### INFO TEXT
				hbox = {
					layoutpolicy_horizontal = expanding

					text_single = {
						visible = "[And( Not(Regiment.IsAtFullStength), Not( GetPlayer.GetGovernment.HasRule( 'conditional_maa_refill' )))]"
						text = "MAA_REINFORCING"
						align = left
					}

					text_single = {
						visible = "[GetPlayer.GetGovernment.HasRule( 'conditional_maa_refill' )]"
						text = "CONDITIONAL_MAINTENANCE_INFO"
						align = left
					}

					text_single = {
						visible = "[And(Regiment.IsAtFullStength, Regiment.IsRaised)]"
						text = "MAA_RAISED"
						align = left
					}

					text_single = {
						visible = "[And(Regiment.IsAtFullStength, Not( Regiment.IsRaised ) )]"
						text = "MAA_UNRAISED"
						align = left
					}

					expand = {}
				}

				spacer = {
					size = { 10 2 }
				}

				hbox = {
					spacing = 10
					layoutpolicy_horizontal = expanding
					visible = "[Not( GetPlayer.GetGovernment.HasRule( 'conditional_maa_refill' ))]"
					divider_light = {
						layoutpolicy_vertical = expanding
					}

					text_single = {
						layoutpolicy_horizontal = expanding
						visible = "[Not(Regiment.IsAtFullStength)]"
						text = "MAA_REINFORCEMENT"
						align = left|nobaseline
					}

					text_single = {
						layoutpolicy_horizontal = expanding
						visible = "[And(Regiment.IsAtFullStength, Regiment.IsRaised)]"
						text = "MAA_RAISED_MAINTENTANCE"
						align = left|nobaseline
					}

					text_single = {
						layoutpolicy_horizontal = expanding
						visible = "[And(Regiment.IsAtFullStength, Not( Regiment.IsRaised ) )]"
						text = "MAA_UNRAISED_MAINTENANCE"
						align = left|nobaseline
					}
				}

				spacer = {
					size = { 10 2 }
				}

				vbox = {
					layoutpolicy_horizontal = expanding

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "MAA_REINFORCEMENT_COST_ENTRY"
					}

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "MAA_MAINTENANCE"
					}

					text_single = {
						visible = "[IsLandlessAdventurer( GetPlayer )]"
						layoutpolicy_horizontal = expanding

						text = "[Regiment.GetProvisionsCostString]"
					}
				}
			}

			divider_light = {
				layoutpolicy_horizontal = expanding
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				spacing = 10

				vbox_maa_active_regiment_stats_numbers = {
					layoutpolicy_horizontal = expanding
				}

				hbox_maa_type_text = {
					layoutpolicy_horizontal = expanding
				}

				vbox_maa_info = {
					layoutpolicy_horizontal = expanding
				}

				hbox = {
					layoutpolicy_horizontal = expanding

					text_multi = {
						margin = { 15 5 }
						margin_bottom = 10
						max_width = 380
						text = "[MenAtArmsType.GetFlavorString]"
						autoresize = yes
					}

					expand = {}
				}
			}
		}
	}
}

types MenAtArmsTypes
{
	type change_action_maa_text = hbox {
		layoutpolicy_horizontal = expanding
		text_multi = {
			block "text_visibility" { 
				visible = no
			}
			max_width = 390
			block "text_content" {}
			autoresize = yes
		}
	}

	type change_maa_tooltip = widget {
		alwaystransparent = no

		widget = {
			name = "background"
			size = { 100% 100% }
			using = DefaultTooltipBackground
			alwaystransparent = no
		}

		hbox = {
			set_parent_size_to_minimum = yes
			layoutpolicy_horizontal = expanding

			change_action_maa_text = {
				blockoverride "text_visibility" {
					margin = { 15 5 }
					margin_bottom = 10

					block "enable_tooltip" {}
				}

				blockoverride "text_content" {
					block "enable_tooltip_text" { }
				}
			}

			change_action_maa_text = {
				blockoverride "text_visibility" {
					block "disable_tooltip" {}
				}

				blockoverride "text_content" {
					margin = { 15 15 }
					margin_bottom = 20
					margin_left = 10

					block "disable_tooltip_text" {}
				}
			}
		}
	}

	type change_men_at_arms_origin_button = button_round
	{
		onclick = "[MenAtArmsView.OpenOriginProvinceSelect]"
		enabled = "[MenAtArmsView.CanChangeOriginProvince]"
		tooltip = "[MenAtArmsView.GetCanChangeOriginProvinceTooltip]"

		button_change = {
			parentanchor = center
			alwaystransparent = yes
		}
	}

	# Requires Regiment and Men at Arms data contexts
	type vbox_maa_active_regiment_stats_numbers = vbox_maa_stats_numbers_base
	{
		datacontext = "[Regiment.GetOriginProvince]"
		datacontext = "[Regiment.GetOwningTitle]"
	}

	### Brief: vbox_maa_province_stats_numbers
	#	Widget for showing the men at arms stationed in a province.
	# 
	#	Requires datacontexts: 
	#		MenAtArmsType:
	#			The type of men at arms we are looking at
	# 
	#		Province:
	#			The province the men at arms are stationed in. If not 
	#			stationed use null object
	#
	#		Title:
	#			The Landed Title these men at arms are owned by, if any.
	#			If Personal MAAs, this should be the null object.
	#
	type vbox_maa_province_stats_numbers = vbox_maa_stats_numbers_base
	{
		blockoverride "stat_spacing"
		{
			spacing = 5
		}
		blockoverride "siege_stat"
		{
			text = "REGIMENT_PROVINCE_SIEGE"
		}
		blockoverride "siege_tt"
		{
			tooltip = "REGIMENT_PROVINCE_SIEGE_TT"
			alpha = "[Select_float(GreaterThan_CFixedPoint(MenAtArmsType.GetProvinceStat( GetPlayer, Province.Self, Title.Self, 'siege_value' ),'(CFixedPoint)0'), '(float)1.0','(float)0.4'))]"
		}
		blockoverride "siege_effective_level"
		{
			# Hide effective level it is shown later anyway
		}
		blockoverride "damage_stat"
		{
			text = "REGIMENT_PROVINCE_DAMAGE"
		}
		blockoverride "damage_tt"
		{
			tooltip = "REGIMENT_PROVINCE_DAMAGE_TT"
			# fade out if 0
			alpha = "[Select_float(GreaterThan_CFixedPoint(MenAtArmsType.GetProvinceStat( GetPlayer, Province.Self, Title.Self, 'damage' ),'(CFixedPoint)0'), '(float)1.0','(float)0.4'))]"
		}
		blockoverride "toughness_stat"
		{
			text = "REGIMENT_PROVINCE_TOUGHNESS"
		}
		blockoverride "toughness_tt"
		{
			tooltip = "REGIMENT_PROVINCE_TOUGHNESS_TT"
			# fade out if 0
			alpha = "[Select_float(GreaterThan_CFixedPoint(MenAtArmsType.GetProvinceStat( GetPlayer, Province.Self, Title.Self, 'toughness' ),'(CFixedPoint)0'), '(float)1.0','(float)0.4'))]"
		}
		blockoverride "pursuit_stat"
		{
			text = "REGIMENT_PROVINCE_PURSUIT"
		}
		blockoverride "pursuit_tt"
		{
			tooltip = "REGIMENT_PROVINCE_PURSUIT_TT"
			# fade out if 0
			alpha = "[Select_float(GreaterThan_CFixedPoint(MenAtArmsType.GetProvinceStat( GetPlayer, Province.Self, Title.Self, 'pursuit' ),'(CFixedPoint)0'), '(float)1.0','(float)0.4'))]"
		}
		blockoverride "screen_stat"
		{
			text = "REGIMENT_PROVINCE_SCREEN"
		}
		blockoverride "screen_tt"
		{
			tooltip = "REGIMENT_PROVINCE_SCREEN_TT"
			# fade out if 0
			alpha = "[Select_float(GreaterThan_CFixedPoint(MenAtArmsType.GetProvinceStat( GetPlayer, Province.Self, Title.Self, 'screen' ),'(CFixedPoint)0'), '(float)1.0','(float)0.4'))]"
		}
		blockoverride "stat_icon_size"
		{
			size = { 25 25 }
		}
	}

	type hbox_maa_location = hbox
	{
		layoutpolicy_horizontal = expanding
		margin = { 15 0 }

		datacontext = "[Regiment.GetOriginProvince]"
		datacontext = "[Regiment.GetOwningTitle]"

		hbox = {
			layoutpolicy_horizontal = expanding
			name = "maa_no_location"
			spacing = 8
			visible = "[And( Not( Province.IsValid ), Not(GetPlayer.GetGovernment.IsType( 'landless_adventurer_government' )) )]"


			text_multi = {
				text = "REGIMENT_NO_ORIGIN_LOCATION"
				default_format = "#weak"
				autoresize = yes
			}
			expand = {}

			block "no_location"
			{
			}
		}

		hbox = {
			name = "maa_current_location"
			spacing = 10

			visible = "[Province.IsValid]"

			coa_title_small = {
				datacontext = "[Province.GetTitle]"
			}

			vbox = {
				name = "location_data"
				spacing = 3

				text_single = {
					layoutpolicy_horizontal = expanding
					text = "REGIMENT_ORIGIN_LOCATION"
				}

				vbox_maa_province_stats_numbers = {
					name = "location_stat_impact"
					layoutpolicy_horizontal = expanding
				}
			}

			block "current_location"
			{
			}
		}

		expand = {}
	}
}
