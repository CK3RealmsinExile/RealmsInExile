window = {
	name = "lotr_window_orc_designated_second_in_command"
	layer = middle
	movable = no
	allow_outside = yes

	using = Window_Position_CharacterList
	using = Window_Size_CharacterList
	using = Window_Background
	using = Window_Decoration

	visible = "[And( Not( IsPauseMenuShown ), And(Or(Not(IsObserver), And(GetPlayer.IsValid, GetPlayer.IsAlive)), And(IsDefaultGUIMode, GetVariableSystem.Exists( 'lotr_orc_designate_second_in_command' ))))]"

	state = {
		name = _show
		using = Animation_FadeIn_Quick
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		
		on_start = "[GetScriptedGui('lotr_orc_government_clear_inheritance_list').Execute(GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
	}

	datacontext = "[GetPlayer]"

	vbox = {
		margin = { 40 20 }
		spacing = 10

		header_pattern = {
			layoutpolicy_horizontal = expanding
			
			blockoverride "header_text"
			{
				text = "DESIGNATE_SECOND_IN_COMMAND"
			}

			blockoverride "button_close"
			{
				onclick = "[GetVariableSystem.Clear('lotr_orc_designate_second_in_command')]"
			}
		}

		text_single = {
			name = "choose_advice_label"
			text = "DESIGNATE_SECOND_IN_COMMAND_CHOOSE"
		}

		vbox_character_list = {
			name = "designate_second_in_command_list"

			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "button_texture"
			{
				background = {
					texture = "gfx/interface/buttons/button_entry_characterlist.dds"
					spriteType = Corneredtiled
					using = Color_Orange
					alpha = 0
					using = Mask_Rough_Edges
				}
			}

			blockoverride "container_implementation"
			{
				fixedgridbox = {
					name = "characters_grid"
					datamodel = "[CHARACTER.MakeScope.GetList('possible_candidates')]"

					block "character_gridbox"
					{
						addcolumn = 667
						addrow = 105
						datamodel_reuse_widgets = yes
					}

					item = {
						widget_character_list_item = {
							size = { 630 110 }

							blockoverride "button"
							{
								# Arrow pointing to portrait if item is current designated heir or selected
								icon = {
									# visible = "[Or( IsDesignatedHeir( Character.Self ), CharacterListItem.GetBool( 'is_selected' ) )]"
									parentanchor = left|vcenter
									position = { -20 0 }
									size = { 20 20 }
									texture = "gfx/interface/buttons/button_entry_characterlist_arrow.dds"
								}

								# Button texture color states
								down = "[CharacterListItem.GetBool( 'is_selected' )]"
								enabled = "[Not(IsDesignatedHeir(Character.Self))]"
							}

							blockoverride "bottom_right_box"
							{
								hbox = {
									margin_bottom = 25

									text_single = {
										name = "designated_heir"
										visible = "[IsDesignatedHeir(Character.Self)]"
										text = "DESIGNATE_HEIR_WINDOW_DESIGNATED_HEIR"
									}
								}
							}
						}
					}
				}
			}
		}

		text_single = {
			name = "designation_cost"
			raw_text = "Cost"
			using = Font_Size_Medium
		}

		hbox = {
			name = "close_designate"
			spacing = 30
			margin_bottom = 20

			button_standard = {
				name = "close_window_button"
				onclick = "[GetVariableSystem.Clear('lotr_orc_designate_second_in_command')]"
				text = "CLOSE_LABEL"
			}

			button_primary = {
				name = "enact_designate_second_in_command"

				text = "DESIGNATE_SECOND_IN_COMMAND_ENACT"

				enabled = "[GetScriptedGui('lotr_orc_government_can_designate_orc').IsValid(GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
				onclick = "[GetScriptedGui('lotr_orc_government_can_designate_orc').Execute(GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
				tooltip = "[GetScriptedGui('lotr_orc_government_can_designate_orc').BuildTooltip(GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
			}
		}
	}

	window_character_filter = {
		blockoverride "addition_filter" {
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('gender_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('adult_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('ruler_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('health_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('fertility_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
			}
		}
	}
}
