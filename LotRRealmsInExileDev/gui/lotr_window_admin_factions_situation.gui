######################################################
##################### SITUATION ######################
######################################################
window = {
	name = "lotr_window_admin_factions_situation"
	widgetid = "lotr_window_admin_factions_situation"
	datacontext = "[SituationWindow.GetSituation]"
	datacontext = "[GetVariableSystem]"
	datacontext = "[GetPlayer]"
	parentanchor = top|right
	layer = windows_layer
	movable = no
	allow_outside = yes

	# Tabs setup
	oncreate = "[BindTabsContext]"
	oncreate = "[PdxGuiTabs.SetResetOnShown( '(bool)yes' )]"
	oncreate = "[PdxGuiTabs.AddTab( 'current_ideological_party' )]"
	oncreate = "[PdxGuiTabs.AddTab( 'all_ideological_parties' )]"

	using = Window_Size_MainTab

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab
		on_start = "[VariableSystem.Clear( 'already_selected_dissolutionists' )]"
		on_start = "[VariableSystem.Clear( 'primary_faction' )]"
		on_start = "[VariableSystem.Clear( 'secondary_faction' )]"
		on_start = "[VariableSystem.Clear( 'temp_holder' )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 13

		widget = {
			size = { 100% 100% }

			widget = {
				size = { 100% 100% }
				visible = "[PdxGuiTabs.IsTabSet( 'current_ideological_party' )]"
				vbox = {
					using = Window_Margins
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding

					vbox = {
						layoutpolicy_horizontal = expanding
						spacing = 6

						header_pattern = {
							layoutpolicy_horizontal = expanding

							blockoverride "header_text"
							{
								text = "[Situation.GetNameNoTooltip]"
							}

							blockoverride "button_close"
							{
								onclick = "[SituationWindow.Close]"
							}
						}
					}

					vbox = {
						name = "current_sub_region"
						margin_top = 2
						layoutpolicy_horizontal = expanding

						datacontext = "[SituationWindow.GetSelectedSubRegion]"
						datacontext = "[SituationSubRegion.GetCurrentPhase]"

						visible = "[SituationSubRegion.IsValid]"
						
						hbox_tab_buttons = { #Tab buttons
							name = "tab_buttons"
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding

							blockoverride "button_tab"
							{
								texture = "gfx/interface/buttons/button_tab_light_bg.dds"
							}

							blockoverride "tab_name"
							{
								text = "[PdxGuiTabItem.LocalizeTab( 'admin_factions_tab' )]"
								default_format = "#high"
							}
						}

						vbox = {
							layoutpolicy_horizontal = expanding

							margin = { 15 15 }

							background = {
								using = Background_Area
							}

							hbox = {
								layoutpolicy_horizontal = expanding
								margin_top = -10
								spacing = 40

								text_label_center = {
									min_width = 240
									layoutpolicy_horizontal = expanding
									text = "SITUATION_WINDOW_CURRENT_HEADER"
									fontsize = 18
								}
							}

							hbox = {
								layoutpolicy_horizontal = expanding

								text_single = {
									fontsize = 18
									layoutpolicy_horizontal = expanding

									text = "LOTR_SITUATION_WINDOW_CURRENT_PHASE"
									align = nobaseline
								}

								fixedgridbox = {
									name = "leading_named_effect_sets"

									addcolumn = 48
									addrow = 48
									setitemsizefromcell = yes
									datamodel_wrap = 6
									maxhorizontalslots = 6
									maxverticalslots = 1
									flipdirection = yes
									layoutanchor = topleft

									datamodel = "[SituationSubRegion.GetCurrentPhase.GetType.GetModifierNamedSets]"
									item = {
										button_phase_named_set_item = {
											size = { 80 80 }
											enabled = yes
										}
									}
								}
							}
						}
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 40
						margin_bottom = 5
						margin_top = 5

						text_label_center = {
							min_width = 240
							layoutpolicy_horizontal = expanding
							text = "LOTR_SITUATION_WINDOW_POLITICAL_GRAPH"
							fontsize = 18
						}
					}

					widget = {
						allow_outside = yes
						size = { 560 580 }
						background = {
							using = Background_Area
						}

						### X - Y indicates the direction the animation is going for the line ###
						### Aligned Factions ###
						line = { #Absolutist - Militarist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)282,60']"
							to = "['(CVector2f)132,160']"
							using = Color_Green
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'absolutists' ), VariableSystem.HasValue( 'primary_faction', 'absolutists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						line = { #Militarist - Absolutist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)132,160']"
							to = "['(CVector2f)282,60']"
							using = Color_Green
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'militarists' ), VariableSystem.HasValue( 'primary_faction', 'militarists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						
						line = { #Absolutist - Uniformist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)282,60']"
							to = "['(CVector2f)432,160']"
							using = Color_Green
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'absolutists' ), VariableSystem.HasValue( 'primary_faction', 'absolutists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						line = { #Uniformist - Absolutist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)432,160']"
							to = "['(CVector2f)282,60']"
							using = Color_Green
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'uniformists' ), VariableSystem.HasValue( 'primary_faction', 'uniformists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}

						line = { #Militarist - Pluralist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)132,160']"
							to = "['(CVector2f)132,358']"
							using = Color_Green
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'militarists' ), VariableSystem.HasValue( 'primary_faction', 'militarists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						line = { #Pluralist - Militarist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)132,358']"
							to = "['(CVector2f)132,160']"
							using = Color_Green
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'pluralists' ), VariableSystem.HasValue( 'primary_faction', 'pluralists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}

						line = { #Pluralist - Provincialist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)132,363']"
							to = "['(CVector2f)282,453']"
							using = Color_Green
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'pluralists' ), VariableSystem.HasValue( 'primary_faction', 'pluralists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						line = { #Provincialist - Pluralist 
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)282,453']"
							to = "['(CVector2f)132,363']"
							using = Color_Green
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'provincialists' ), VariableSystem.HasValue( 'primary_faction', 'provincialists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}

						line = { #Provincialist - Pacifists
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)282,453']"
							to = "['(CVector2f)432,363']"
							using = Color_Green
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'provincialists' ), VariableSystem.HasValue( 'primary_faction', 'provincialists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						line = { #Pacifists - Provincialist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)432,363']"
							to = "['(CVector2f)282,453']"
							using = Color_Green
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'pacifists' ), VariableSystem.HasValue( 'primary_faction', 'pacifists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
		
						line = { #Pacifists - Uniformist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)432,358']"
							to = "['(CVector2f)432,160']"
							using = Color_Green
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'pacifists' ), VariableSystem.HasValue( 'primary_faction', 'pacifists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						line = { #Uniformist -Pacifists
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)432,160']"
							to = "['(CVector2f)432,358']"
							using = Color_Green
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'uniformists' ), VariableSystem.HasValue( 'primary_faction', 'uniformists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						
						### Friction Factions ###
						line = { #Absolutist - Pluralist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)282,60']"
							to = "['(CVector2f)132,358']"
							using = Color_Orange
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'absolutists' ), VariableSystem.HasValue( 'primary_faction', 'absolutists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						line = { #Pluralist - Absolutist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)132,358']"
							to = "['(CVector2f)282,60']"
							using = Color_Orange
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'pluralists' ), VariableSystem.HasValue( 'primary_faction', 'pluralists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}

						line = { #Absolutist - Pacifist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)282,60']"
							to = "['(CVector2f)432,358']"
							using = Color_Orange
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'absolutists' ), VariableSystem.HasValue( 'primary_faction', 'absolutists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						line = { #Pacifist - Absolutist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)432,358']"
							to = "['(CVector2f)282,60']"
							using = Color_Orange
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'pacifists' ), VariableSystem.HasValue( 'primary_faction', 'pacifists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}

						line = { #Pacifists - Pluralist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)432,358']"
							to = "['(CVector2f)132,358']"
							using = Color_Orange
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'pacifists' ), VariableSystem.HasValue( 'primary_faction', 'pacifists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						line = { #Pluralist - Pacifists
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)132,358']"
							to = "['(CVector2f)432,358']"
							using = Color_Orange
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'pluralists' ), VariableSystem.HasValue( 'primary_faction', 'pluralists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}

						line = { #Militarist - Uniformist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)132,160']"
							to = "['(CVector2f)432,160']"
							using = Color_Orange
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'militarists' ), VariableSystem.HasValue( 'primary_faction', 'militarists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						line = { #Uniformist - Militarist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)432,160']"
							to = "['(CVector2f)132,160']"
							using = Color_Orange
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'uniformists' ), VariableSystem.HasValue( 'primary_faction', 'uniformists' ))]"
							
							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}

						line = { #Militarist - Provincialist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)132,160']"
							to = "['(CVector2f)282,453']"
							using = Color_Orange
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'militarists' ), VariableSystem.HasValue( 'primary_faction', 'militarists' ))]"

							
							
							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						line = { #Provincialist - Militarist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)282,453']"
							to = "['(CVector2f)132,160']"
							using = Color_Orange
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'provincialists' ), VariableSystem.HasValue( 'primary_faction', 'provincialists' ))]"

							
							
							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}

						line = { #Provincialist - Uniformist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)282,453']"
							to = "['(CVector2f)432,160']"
							using = Color_Orange
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'provincialists' ), VariableSystem.HasValue( 'primary_faction', 'provincialists' ))]"

							
							
							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						line = { #Uniformist - Provincialist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)432,160']"
							to = "['(CVector2f)282,453']"
							using = Color_Orange
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'uniformists' ), VariableSystem.HasValue( 'primary_faction', 'uniformists' ))]"

							
							
							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}

						### Opposing Factions ###
						line = { #Absolutist - Provincialist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)282,60']"
							to = "['(CVector2f)282,453']"
							using = Color_Red
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'absolutists' ), VariableSystem.HasValue( 'primary_faction', 'absolutists' ))]"

							
							
							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						line = { #Provincialist - Absolutist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)282,453']"
							to = "['(CVector2f)282,60']"
							using = Color_Red
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'provincialists' ), VariableSystem.HasValue( 'primary_faction', 'provincialists' ))]"

							
							
							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}

						line = { #Militarist - Pacifist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)132,160']"
							to = "['(CVector2f)432,358']"
							using = Color_Red
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'militarists' ), VariableSystem.HasValue( 'primary_faction', 'militarists' ))]"

							
							
							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						line = { #Pacifist - Militarist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)432,358']"
							to = "['(CVector2f)132,160']"
							using = Color_Red
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'pacifists' ), VariableSystem.HasValue( 'primary_faction', 'pacifists' ))]"

							
							
							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}

						line = { #Pluralist - Uniformist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)132,363']"
							to = "['(CVector2f)432,160']"
							using = Color_Red
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'pluralists' ), VariableSystem.HasValue( 'primary_faction', 'pluralists' ))]"

							
							
							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}
						line = { #Uniformist - Pluralist
							using = lotr_Admin_Factions_Line
							from = "['(CVector2f)432,160']"
							to = "['(CVector2f)132,363']"
							using = Color_Red
							visible = "[Or(VariableSystem.HasValue( 'secondary_faction', 'uniformists' ), VariableSystem.HasValue( 'primary_faction', 'uniformists' ))]"

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Quick
							}
						}

						# Only sets primary_faction and secondary_faction if they do NOT exist
						# VariableSystem.Set( Select_CString( Not(VariableSystem.Exists( 'primary_faction' )), 'primary_faction', Select_CString( Not(VariableSystem.Exists( 'secondary_faction' )), 'secondary_faction', 'temp_holder' ) ), 'faction_name' )

						# Replace primary_faction with secondary_faction if secondary_faction exists
						# VariableSystem.Set( Select_CString( VariableSystem.Exists( 'secondary_faction' ), 'primary_faction', 'temp_holder' ), VariableSystem.Get('secondary_faction') )

						# Replace secondary_faction with temp_holder if temp_holder exists
						# VariableSystem.Set( Select_CString( EqualTo_string( VariableSystem.Get('primary_faction'), VariableSystem.Get('secondary_faction') ), 'secondary_faction', 'temp_holder' ), 'faction_name' )
						
						# R
						# VariableSystem.ClearIf( Or(VariableSystem.HasValue( 'primary_faction', 'faction_name' ), VariableSystem.HasValue( 'secondary_faction', 'faction_name' )), Select_CString( VariableSystem.HasValue( 'primary_faction', 'faction_name' ), 'primary_faction', 'secondary_faction' ) )
						button_group_graph = { #Absolutist
							size = { 75 75 }
							blockoverride "icon_texture" {
								texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_absolutists.dds"
							}
							blockoverride "icon_glow_visible" {
								visible = "[Or(VariableSystem.HasValue('primary_faction', 'absolutists'), VariableSystem.HasValue('secondary_faction', 'absolutists'))]"
							}

							text_label_center = {
								text = "gui_absolutists_faction_power_button_label"
								position = { -18 -25 }
							}
 
							tooltipwidget = {
								object_tooltip_pop_out = {
									blockoverride "title_text" {
										text = "admin_factions_situation_participant_group_absolutists"
										default_format = "#T"
									}

									blockoverride "description_text" {
										text = "admin_factions_situation_participant_group_absolutists_desc"
									}

									blockoverride "concept_link" { }
								}
							}
 
							parentanchor = top|center
							position = { 0 35 }
							onclick = "[VariableSystem.Set( 'selected_absolutist', Select_CString( Or(VariableSystem.HasValue('primary_faction', 'absolutists'), VariableSystem.HasValue('secondary_faction', 'absolutists')), 'true', 'false' ))]"
							onclick = "[VariableSystem.ClearIf( Select_CString( VariableSystem.HasValue('primary_faction', 'absolutists'), 'primary_faction', Select_CString( VariableSystem.HasValue('secondary_faction', 'absolutists'), 'secondary_faction', 'temp' ) ), VariableSystem.HasValue('selected_absolutist', 'true') )]"
				
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_absolutist', 'true' ), 'temp', Select_CString( Not(VariableSystem.Exists( 'primary_faction' )), 'primary_faction', Select_CString( Not(VariableSystem.Exists( 'secondary_faction' )), 'secondary_faction', 'temp_holder' ) ) ), 'absolutists' )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_absolutist', 'true' ), 'temp', Select_CString( And(VariableSystem.Exists( 'secondary_faction' ), Not(EqualTo_string( VariableSystem.Get('secondary_faction'), 'absolutists' ))), 'primary_faction', 'temp_holder' ) ), VariableSystem.Get('secondary_faction') )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_absolutist', 'true' ), 'temp', Select_CString( EqualTo_string( VariableSystem.Get('primary_faction'), VariableSystem.Get('secondary_faction') ), 'secondary_faction', 'temp_holder' ) ), 'absolutists' )]"
						}
						button_group_graph = { #Militarist
							size = { 75 75 }
							blockoverride "icon_texture" {
								texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_militarists.dds"
							}
							blockoverride "icon_glow_visible" {
								visible = "[Or(VariableSystem.HasValue('primary_faction', 'militarists'), VariableSystem.HasValue('secondary_faction', 'militarists'))]"
							}

							text_label_center = {
								text = "gui_militarists_faction_power_button_label"
								position = { -18 -25 }
							}
 
							tooltipwidget = {
								object_tooltip_pop_out = {
									blockoverride "title_text" {
										text = "admin_factions_situation_participant_group_militarists"
										default_format = "#T"
									}

									blockoverride "description_text" {
										text = "admin_factions_situation_participant_group_militarists_desc"
									}

									blockoverride "concept_link" { }
								}
							}
 
							position = { -150 120 }
							parentanchor = top|center
							onclick = "[VariableSystem.Set( 'selected_militarist', Select_CString( Or(VariableSystem.HasValue('primary_faction', 'militarists'), VariableSystem.HasValue('secondary_faction', 'militarists')), 'true', 'false' ))]"
							onclick = "[VariableSystem.ClearIf( Select_CString( VariableSystem.HasValue('primary_faction', 'militarists'), 'primary_faction', Select_CString( VariableSystem.HasValue('secondary_faction', 'militarists'), 'secondary_faction', 'temp' ) ), VariableSystem.HasValue('selected_militarist', 'true') )]"

							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_militarist', 'true' ), 'temp', Select_CString( Not(VariableSystem.Exists( 'primary_faction' )), 'primary_faction', Select_CString( Not(VariableSystem.Exists( 'secondary_faction' )), 'secondary_faction', 'temp_holder' ) ) ), 'militarists' )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_militarist', 'true' ), 'temp', Select_CString( And(VariableSystem.Exists( 'secondary_faction' ), Not(EqualTo_string( VariableSystem.Get('secondary_faction'), 'militarists' ))), 'primary_faction', 'temp_holder' ) ), VariableSystem.Get('secondary_faction') )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_militarist', 'true' ), 'temp', Select_CString( EqualTo_string( VariableSystem.Get('primary_faction'), VariableSystem.Get('secondary_faction') ), 'secondary_faction', 'temp_holder' ) ), 'militarists' )]"
						}
						button_group_graph = { #Pluralist
							size = { 75 75 }
							blockoverride "icon_texture" {
								texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_pluralists.dds"
							}
							blockoverride "icon_glow_visible" {
								visible = "[Or(VariableSystem.HasValue('primary_faction', 'pluralists'), VariableSystem.HasValue('secondary_faction', 'pluralists'))]"
							}

							text_label_center = {
								text = "gui_pluralists_faction_power_button_label"
								position = { -18 85 }
							}
 
							tooltipwidget = {
								object_tooltip_pop_out = {
									blockoverride "title_text" {
										text = "admin_factions_situation_participant_group_pluralists"
										default_format = "#T"
									}

									blockoverride "description_text" {
										text = "admin_factions_situation_participant_group_pluralists_desc"
									}

									blockoverride "concept_link" { }
								}
							}
 
							position = { -150 323 }
							parentanchor = top|center
							onclick = "[VariableSystem.Set( 'selected_pluralist', Select_CString( Or(VariableSystem.HasValue('primary_faction', 'pluralists'), VariableSystem.HasValue('secondary_faction', 'pluralists')), 'true', 'false' ))]"
							onclick = "[VariableSystem.ClearIf( Select_CString( VariableSystem.HasValue('primary_faction', 'pluralists'), 'primary_faction', Select_CString( VariableSystem.HasValue('secondary_faction', 'pluralists'), 'secondary_faction', 'temp' ) ), VariableSystem.HasValue('selected_pluralist', 'true') )]"

							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_pluralist', 'true' ), 'temp', Select_CString( Not(VariableSystem.Exists( 'primary_faction' )), 'primary_faction', Select_CString( Not(VariableSystem.Exists( 'secondary_faction' )), 'secondary_faction', 'temp_holder' ) ) ), 'pluralists' )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_pluralist', 'true' ), 'temp', Select_CString( And(VariableSystem.Exists( 'secondary_faction' ), Not(EqualTo_string( VariableSystem.Get('secondary_faction'), 'pluralists' ))), 'primary_faction', 'temp_holder' ) ), VariableSystem.Get('secondary_faction') )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_pluralist', 'true' ), 'temp', Select_CString( EqualTo_string( VariableSystem.Get('primary_faction'), VariableSystem.Get('secondary_faction') ), 'secondary_faction', 'temp_holder' ) ), 'pluralists' )]"
						}
						button_group_graph = { #Provincialist
							size = { 75 75 }
							blockoverride "icon_texture" {
								texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_provincialists.dds"
							}
							blockoverride "icon_glow_visible" {
								visible = "[Or(VariableSystem.HasValue('primary_faction', 'provincialists'), VariableSystem.HasValue('secondary_faction', 'provincialists'))]"
							}

							text_label_center = {
								text = "gui_provincialists_faction_power_button_label"
								position = { -18 80 }
							}
 
							tooltipwidget = {
								object_tooltip_pop_out = {
									blockoverride "title_text" {
										text = "admin_factions_situation_participant_group_provincialists"
										default_format = "#T"
									}

									blockoverride "description_text" {
										text = "admin_factions_situation_participant_group_provincialists_desc"
									}

									blockoverride "concept_link" { }
								}
							}
 
							position = { 0 413 }
							parentanchor = top|center
							onclick = "[VariableSystem.Set( 'selected_provincialist', Select_CString( Or(VariableSystem.HasValue('primary_faction', 'provincialists'), VariableSystem.HasValue('secondary_faction', 'provincialists')), 'true', 'false' ))]"
							onclick = "[VariableSystem.ClearIf( Select_CString( VariableSystem.HasValue('primary_faction', 'provincialists'), 'primary_faction', Select_CString( VariableSystem.HasValue('secondary_faction', 'provincialists'), 'secondary_faction', 'temp' ) ), VariableSystem.HasValue('selected_provincialist', 'true') )]"

							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_provincialist', 'true' ), 'temp', Select_CString( Not(VariableSystem.Exists( 'primary_faction' )), 'primary_faction', Select_CString( Not(VariableSystem.Exists( 'secondary_faction' )), 'secondary_faction', 'temp_holder' ) ) ), 'provincialists' )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_provincialist', 'true' ), 'temp', Select_CString( And(VariableSystem.Exists( 'secondary_faction' ), Not(EqualTo_string( VariableSystem.Get('secondary_faction'), 'provincialists' ))), 'primary_faction', 'temp_holder' ) ), VariableSystem.Get('secondary_faction') )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_provincialist', 'true' ), 'temp', Select_CString( EqualTo_string( VariableSystem.Get('primary_faction'), VariableSystem.Get('secondary_faction') ), 'secondary_faction', 'temp_holder' ) ), 'provincialists' )]"
						}
						button_group_graph = { #Pacifist
							size = { 75 75 }
							blockoverride "icon_texture" {
								texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_pacifists.dds"
							}
							blockoverride "icon_glow_visible" {
								visible = "[Or(VariableSystem.HasValue('primary_faction', 'pacifists'), VariableSystem.HasValue('secondary_faction', 'pacifists'))]"
							}

							text_label_center = {
								text = "gui_pacifists_faction_power_button_label"
								position = { 0 85 }
							}
 
							tooltipwidget = {
								object_tooltip_pop_out = {
									blockoverride "title_text" {
										text = "admin_factions_situation_participant_group_pacifists"
										default_format = "#T"
									}

									blockoverride "description_text" {
										text = "admin_factions_situation_participant_group_pacifists_desc"
									}

									blockoverride "concept_link" { }
								}
							}
 
							position = { 150 323 }
							parentanchor = top|center
							onclick = "[VariableSystem.Set( 'selected_pacifist', Select_CString( Or(VariableSystem.HasValue('primary_faction', 'pacifists'), VariableSystem.HasValue('secondary_faction', 'pacifists')), 'true', 'false' ))]"
							onclick = "[VariableSystem.ClearIf( Select_CString( VariableSystem.HasValue('primary_faction', 'pacifists'), 'primary_faction', Select_CString( VariableSystem.HasValue('secondary_faction', 'pacifists'), 'secondary_faction', 'temp' ) ), VariableSystem.HasValue('selected_pacifist', 'true') )]"

							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_pacifist', 'true' ), 'temp', Select_CString( Not(VariableSystem.Exists( 'primary_faction' )), 'primary_faction', Select_CString( Not(VariableSystem.Exists( 'secondary_faction' )), 'secondary_faction', 'temp_holder' ) ) ), 'pacifists' )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_pacifist', 'true' ), 'temp', Select_CString( And(VariableSystem.Exists( 'secondary_faction' ), Not(EqualTo_string( VariableSystem.Get('secondary_faction'), 'pacifists' ))), 'primary_faction', 'temp_holder' ) ), VariableSystem.Get('secondary_faction') )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_pacifist', 'true' ), 'temp', Select_CString( EqualTo_string( VariableSystem.Get('primary_faction'), VariableSystem.Get('secondary_faction') ), 'secondary_faction', 'temp_holder' ) ), 'pacifists' )]"
						}
						button_group_graph = { #Uniformist
							size = { 75 75 }
							blockoverride "icon_texture" {
								texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_uniformists.dds"
							}
							blockoverride "icon_glow_visible" {
								visible = "[Or(VariableSystem.HasValue('primary_faction', 'uniformists'), VariableSystem.HasValue('secondary_faction', 'uniformists'))]"
							}

							text_label_center = {
								text = "gui_uniformists_faction_power_button_label"
								position = { -5 -25 }
							}
 
							tooltipwidget = {
								object_tooltip_pop_out = {
									blockoverride "title_text" {
										text = "admin_factions_situation_participant_group_uniformists"
										default_format = "#T"
									}

									blockoverride "description_text" {
										text = "admin_factions_situation_participant_group_uniformists_desc"
									}

									blockoverride "concept_link" { }
								}
							}
 
							position = { 145 120 }
							parentanchor = top|center
							onclick = "[VariableSystem.Set( 'selected_uniformist', Select_CString( Or(VariableSystem.HasValue('primary_faction', 'uniformists'), VariableSystem.HasValue('secondary_faction', 'uniformists')), 'true', 'false' ))]"
							onclick = "[VariableSystem.ClearIf( Select_CString( VariableSystem.HasValue('primary_faction', 'uniformists'), 'primary_faction', Select_CString( VariableSystem.HasValue('secondary_faction', 'uniformists'), 'secondary_faction', 'temp' ) ), VariableSystem.HasValue('selected_uniformist', 'true') )]"
				
							# Select_CString( VariableSystem.HasValue( 'selected_uniformist', 'true' ), 'temp', Select_CString( Not(VariableSystem.Exists( 'primary_faction' )), 'primary_faction', Select_CString( Not(VariableSystem.Exists( 'secondary_faction' )), 'secondary_faction', 'temp_holder' ) ) )
							# Select_CString( VariableSystem.HasValue( 'selected_uniformist', 'true' ), 'temp', Select_CString( And(VariableSystem.Exists( 'secondary_faction' ), Not(EqualTo_string( VariableSystem.Get('secondary_faction'), 'uniformists' ))), 'primary_faction', 'temp_holder' ) )
							# Select_CString( VariableSystem.HasValue( 'selected_uniformist', 'true' ), 'temp', Select_CString( EqualTo_string( VariableSystem.Get('primary_faction'), VariableSystem.Get('secondary_faction') ), 'secondary_faction', 'temp_holder' ) )
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_uniformist', 'true' ), 'temp', Select_CString( Not(VariableSystem.Exists( 'primary_faction' )), 'primary_faction', Select_CString( Not(VariableSystem.Exists( 'secondary_faction' )), 'secondary_faction', 'temp_holder' ) ) ), 'uniformists' )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_uniformist', 'true' ), 'temp', Select_CString( And(VariableSystem.Exists( 'secondary_faction' ), Not(EqualTo_string( VariableSystem.Get('secondary_faction'), 'uniformists' ))), 'primary_faction', 'temp_holder' ) ), VariableSystem.Get('secondary_faction') )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_uniformist', 'true' ), 'temp', Select_CString( EqualTo_string( VariableSystem.Get('primary_faction'), VariableSystem.Get('secondary_faction') ), 'secondary_faction', 'temp_holder' ) ), 'uniformists' )]"
						}
						button_group_graph = { #Centrist
							size = { 75 75 }
							blockoverride "icon_texture" {
								texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_centrists.dds"
							}
							blockoverride "icon_glow_visible" {
								visible = "[Or(VariableSystem.HasValue('primary_faction', 'centrists'), VariableSystem.HasValue('secondary_faction', 'centrists'))]"
							}

							text_label_center = {
								text = "gui_centrists_faction_power_button_label"
								position = { -5 -25 }
							}
 
							tooltipwidget = {
								object_tooltip_pop_out = {
									blockoverride "title_text" {
										text = "admin_factions_situation_participant_group_centrists"
										default_format = "#T"
									}

									blockoverride "description_text" {
										text = "admin_factions_situation_participant_group_centrists_desc"
									}

									blockoverride "concept_link" { }
								}
							}
 
							position = { 190 485 }
							parentanchor = top|center
							onclick = "[VariableSystem.Set( 'selected_centrist', Select_CString( Or(VariableSystem.HasValue('primary_faction', 'centrists'), VariableSystem.HasValue('secondary_faction', 'centrists')), 'true', 'false' ))]"
							onclick = "[VariableSystem.ClearIf( Select_CString( VariableSystem.HasValue('primary_faction', 'centrists'), 'primary_faction', Select_CString( VariableSystem.HasValue('secondary_faction', 'centrists'), 'secondary_faction', 'temp' ) ), VariableSystem.HasValue('selected_centrist', 'true') )]"

							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_centrist', 'true' ), 'temp', Select_CString( Not(VariableSystem.Exists( 'primary_faction' )), 'primary_faction', Select_CString( Not(VariableSystem.Exists( 'secondary_faction' )), 'secondary_faction', 'temp_holder' ) ) ), 'centrists' )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_centrist', 'true' ), 'temp', Select_CString( And(VariableSystem.Exists( 'secondary_faction' ), Not(EqualTo_string( VariableSystem.Get('secondary_faction'), 'centrists' ))), 'primary_faction', 'temp_holder' ) ), VariableSystem.Get('secondary_faction') )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_centrist', 'true' ), 'temp', Select_CString( EqualTo_string( VariableSystem.Get('primary_faction'), VariableSystem.Get('secondary_faction') ), 'secondary_faction', 'temp_holder' ) ), 'centrists' )]"
						}			
						button_group_graph = { #Dissolutionist
							size = { 75 75 }
							blockoverride "icon_texture" {
								texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_dissolutionists.dds"
							}
							blockoverride "icon_glow_visible" {
								visible = "[Or(VariableSystem.HasValue('primary_faction', 'dissolutionists'), VariableSystem.HasValue('secondary_faction', 'dissolutionists'))]"
							}

							text_label_center = {
								text = "gui_dissolutionists_faction_power_button_label"
								position = { -10 -25 }
							}
 
							tooltipwidget = {
								object_tooltip_pop_out = {
									blockoverride "title_text" {
										text = "admin_factions_situation_participant_group_dissolutionists"
										default_format = "#T"
									}

									blockoverride "description_text" {
										text = "admin_factions_situation_participant_group_dissolutionists_desc"
									}

									blockoverride "concept_link" { }
								}
							}
 
							position = { -190 485 }
							parentanchor = top|center

							onclick = "[VariableSystem.Set( 'selected_dissolutionists', Select_CString( Or(VariableSystem.HasValue('primary_faction', 'dissolutionists'), VariableSystem.HasValue('secondary_faction', 'dissolutionists')), 'true', 'false' ))]"
							onclick = "[VariableSystem.ClearIf( Select_CString( VariableSystem.HasValue('primary_faction', 'dissolutionists'), 'primary_faction', Select_CString( VariableSystem.HasValue('secondary_faction', 'dissolutionists'), 'secondary_faction', 'temp' ) ), VariableSystem.HasValue('selected_dissolutionists', 'true') )]"

							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_dissolutionists', 'true' ), 'temp', Select_CString( Not(VariableSystem.Exists( 'primary_faction' )), 'primary_faction', Select_CString( Not(VariableSystem.Exists( 'secondary_faction' )), 'secondary_faction', 'temp_holder' ) ) ), 'dissolutionists' )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_dissolutionists', 'true' ), 'temp', Select_CString( And(VariableSystem.Exists( 'secondary_faction' ), Not(EqualTo_string( VariableSystem.Get('secondary_faction'), 'dissolutionists' ))), 'primary_faction', 'temp_holder' ) ), VariableSystem.Get('secondary_faction') )]"
							onclick = "[VariableSystem.Set( Select_CString( VariableSystem.HasValue( 'selected_dissolutionists', 'true' ), 'temp', Select_CString( EqualTo_string( VariableSystem.Get('primary_faction'), VariableSystem.Get('secondary_faction') ), 'secondary_faction', 'temp_holder' ) ), 'dissolutionists' )]"
						}
					}

					# expand = {}

					vbox = {
						layoutpolicy_horizontal = expanding

						margin = { 15 15 }

						background = {
							using = Background_Area
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							margin_top = -10
							spacing = 40

							text_label_center = {
								min_width = 240
								layoutpolicy_horizontal = expanding
								text = "LOTR_SITUATION_WINDOW_PROJECTED_PHASE"
								fontsize = 18
							}
						}

						hbox = {
							layoutpolicy_horizontal = expanding

							preview_imperial_alignment_text = {}

							expand = {}

							hbox = {
								ignoreinvisible = yes
								datamodel = "[SituationWindow.GetSituation.GetParticipantGroups]"
								spacing = 5 

								item = {
									button_round = {
										size = { 50 50 }
										visible = "[Or( EqualTo_string( SituationParticipantGroup.GetType.GetKey, VariableSystem.Get('primary_faction')), EqualTo_string( SituationParticipantGroup.GetType.GetKey, VariableSystem.Get('secondary_faction')) )]"

										icon = {
											size = { 100% 100% }

											texture = "gfx/interface/buttons/button_lifestyles_base.dds"
										}

										icon = {
											size = { 80% 80% }
											position = { 0 0 }
											parentanchor = center
											alwaystransparent = yes
											texture = "[SituationParticipantGroup.GetType.GetIcon]"
										}
										
										tooltipwidget = {
											object_tooltip_pop_out = {
												blockoverride "title_text" {
													text = "[Localize(Concatenate('admin_factions_situation_participant_group_', SituationParticipantGroup.GetType.GetKey))]"
													default_format = "#T"
												}

												blockoverride "description_text" {
													text = "[Localize(Concatenate('admin_factions_situation_participant_group_', Concatenate(SituationParticipantGroup.GetType.GetKey, '_desc')))]"
												}

												blockoverride "concept_link" { }
											}
										}
									}
								}
							}
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding

						margin = { 15 15 }

						background = {
							using = Background_Area
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							margin_top = -10
							spacing = 40

							text_label_center = {
								min_width = 240
								layoutpolicy_horizontal = expanding
								text = "LOTR_SITUATION_WINDOW_PROJECTED_STABILITY"
							}
						}
					
						hbox = {
							layoutpolicy_horizontal = expanding

							text_single = {
								visible = "[VariableSystem.Exists('stability_preview')]"
								text = "[Localize(VariableSystem.Get('stability_preview'))]"
								fontsize = 18
								layoutpolicy_horizontal = expanding
								align = nobaseline
							}

							expand = {}

							selected_imperial_stability_preview = {
								blockoverride "visible_trigger" {
									visible = "[VariableSystem.HasValue('stability_preview', 'stable_combination_set')]"
								}
								blockoverride "stability_icon_texture" {
									texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/stable_combination.dds"
								}
							}
							selected_imperial_stability_preview = {
								blockoverride "visible_trigger" {
									visible = "[VariableSystem.HasValue('stability_preview', 'uneasy_combination_set')]"
								}
								blockoverride "stability_icon_texture" {
									texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/uneasy_combination.dds"
								}
							}
							selected_imperial_stability_preview = {
								blockoverride "visible_trigger" {
									visible = "[VariableSystem.HasValue('stability_preview', 'volatile_combination_set')]"
								}
							}
							selected_imperial_stability_preview = {
								blockoverride "visible_trigger" {
									visible = "[Or(VariableSystem.HasValue('stability_preview', 'chaotic_combination_set'), Or(VariableSystem.HasValue('primary_faction', 'dissolutionists'), VariableSystem.HasValue('secondary_faction', 'dissolutionists')))]"
								}
								blockoverride "stability_icon_texture" {
									texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/chaotic_combination.dds"
								}
							}

							spacer = {
								size = { 50 50 }
								visible = "[Not(VariableSystem.Exists('stability_preview'))]"
							}
						}
					}
 
					expand = {}
				}
			}
			
			widget = { #GetDecisionWithKey - get decisions
				size = { 100% 100% }
				visible = "[PdxGuiTabs.IsTabSet( 'all_ideological_parties' )]"
				state = {
					name = _show
					on_start = "[GetVariableSystem.Set( 'view_political_group', 'militarists' )]"
					on_start = "[GetVariableSystem.Set( 'faction_decision', 'militarists' )]"
					on_start = "[GetVariableSystem.Set( 'second_faction_decision', 'militarists' )]"
				}
				vbox = {
					using = Window_Margins
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding

					vbox = {
						layoutpolicy_horizontal = expanding
						spacing = 6

						header_pattern = {
							layoutpolicy_horizontal = expanding

							blockoverride "header_text"
							{
								text = "[Situation.GetNameNoTooltip]"
							}

							blockoverride "button_close"
							{
								onclick = "[SituationWindow.Close]"
							}
						}
					}
					
					vbox = {
						margin_top = 2
						layoutpolicy_horizontal = expanding
						margin_left = 3
						margin_right = 7
						
						hbox_tab_buttons = {
							name = "tab_buttons"
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding

							blockoverride "button_tab"
							{
								texture = "gfx/interface/buttons/button_tab_light_bg.dds"
							}

							blockoverride "tab_name"
							{
								text = "[PdxGuiTabItem.LocalizeTab( 'admin_factions_tab' )]"
								default_format = "#high"
							}
						}
						
						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							min_height = 75

							margin = { 15 15 }

							datacontext = "[Situation.GetParticipantGroupByCharacter( GetPlayer )]"

							background = {
								using = Background_Area
							}

							hbox = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								icon = {
									visible = "[SituationParticipantGroup.IsValid]"

									size = { 40 40 }
									texture = "[SituationParticipantGroup.GetType.GetIcon]"

									background = {
										texture = "gfx/interface/buttons/button_lifestyles_base.dds"
										margin = { 5 5 }
									}
								}

								vbox = {
									visible = "[SituationParticipantGroup.IsValid]"

									margin_left = 10
									text_single = {
										layoutpolicy_horizontal = expanding
										text = "[SituationParticipantGroup.GetName]"
										align = nobaseline
									}

									text_single = {
										layoutpolicy_horizontal = expanding

										text = "[SelectLocalization( Situation.HasMultipleSubRegions, 'SITUATION_WINDOW_YOUR_PARTICIPANT_GROUP_MULTI_SUBREGION', 'SITUATION_WINDOW_YOUR_PARTICIPANT_GROUP' ) ]"

										align = nobaseline
										default_format = "#Weak"
									}
								}

								expand = {}

								button_standard_small = {
									onclick = "[SituationWindow.AccessParticipantCharacterList.Toggle]"
									text = "SITUATION_WINDOW_VIEW_PARTICIPANT_GROUPS"
								}
							}
						}

						text_label_center = {
							layoutpolicy_horizontal = expanding
							text = "[Localize(Concatenate('admin_factions_situation_participant_group_', VariableSystem.Get('view_political_group')))]"
							align = center
							min_width = 560
						}

						scrollarea = {
							name = "lotr_faction_leaders"
							size = { 560 225 }
							allow_outside = yes
							scrollbarpolicy_vertical = always_off
							scrollbarpolicy_horizontal = as_needed
							scrollbar_horizontal = {
								using = Scrollbar_Horizontal
							}
							background = {
								using = Background_Area
							}
							
							scrollwidget = { #Top 4 characters of a faction
								hbox = {
									using = Scrollbox_Margins
									allow_outside = yes
									datamodel = "[SituationWindow.GetSituation.GetParticipantGroups]"

									item = {
										hbox = {
											# parentanchor = center
											datamodel = "[SituationParticipantGroup.GetSituation.MakeScope.GetList(Concatenate(SituationParticipantGroup.GetType.GetKey,'_top_four'))]"
											visible = "[EqualTo_string(GetVariableSystem.Get('view_political_group'), SituationParticipantGroup.GetType.GetKey)]"
											ignoreinvisible = yes
											
											spacing = 3
											item = {
												widget = {
													datacontext = "[Scope.GetCharacter]"
													size = { 125 130 }

													widget = {
														size = { 125 130 }
														visible = "[ObjectsEqual(SituationParticipantGroup.GetSituation.MakeScope.Var(Concatenate(SituationParticipantGroup.GetType.GetKey,'_faction_leader')).Char, Scope.Char)]"
														background = {
															using = Background_Portrait_Glow
															color = { 0.9 0.8 0.6 0.6 }
														}
													}
													widget = {
														size = { 125 130 }
														visible = "[Not(ObjectsEqual(SituationParticipantGroup.GetSituation.MakeScope.Var(Concatenate(SituationParticipantGroup.GetType.GetKey,'_faction_leader')).Char, Scope.Char))]"
														background = {
															using = Background_Portrait_Glow
															color = { 0.9 0.8 0.6 0.6 }
															alpha = 0.2
														}
													}
													
													portrait_button = {
														parentanchor = bottom|hcenter
														size = { 125 160 }
														using = portrait_base

														block "portrait_texture"
														{
															portrait_texture = "[Character.GetPortrait('environment_torso', 'camera_torso', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
														}

														block "portrait_mask"
														{
															mask = "gfx/portraits/portrait_mask_torso.dds"
														}

														effectname = "NoHighlight"

														block "portrait_button" {}
													}
													text_label_center = {
														visible = "[ObjectsEqual(SituationParticipantGroup.GetSituation.MakeScope.Var(Concatenate(SituationParticipantGroup.GetType.GetKey,'_faction_leader')).Char, Scope.Char)]"
														text = "admin_factions_political_leader"
														position = { 15 -30 }
														parentanchor = top
														align = center
													}
													coa_realm_small = {
														parentanchor = bottom|left
														position = { -2 1 }
														scale = 0.8
													}
													portrait_opinion = {
														parentanchor = bottom|hcenter
														position = { 20 -2 }
													}
													text_label_center = {
														text = "admin_factions_individual_power"
														position = { 25 30 }
														parentanchor = bottom
														align = center
														tooltipwidget = { #Testing
															object_tooltip_pop_out = {
																blockoverride "title_text" { text = "achievement_55" }
																blockoverride "concept_link" { visible = no }
																blockoverride "main_description" { cooltip_paragraph = { text = "lesson_achievement_55_main_menu_desc_tt" } }
															}
														}
													}
													# tooltipwidget = {
													# 	admin_factions_power_value_breakdown_widget = {}
													# }
												}
											}
										}
									}
								}
							}
						}

						hbox = { #Tabs with faction icons
							spacing = 10

							button_tab = { #Militarists
								size = { 60 60 }
								icon = {
									texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_militarists.dds"
									size = { 50 50 }
									parentanchor = center
								}
								onclick = "[VariableSystem.Set( 'view_political_group', 'militarists' )]"
								onclick = "[VariableSystem.Set( 'faction_decision', 'militarists' )]"
								onclick = "[VariableSystem.Set( 'second_faction_decision', 'militarists' )]"
								down = "[VariableSystem.HasValue( 'view_political_group', 'militarists' )]"
							}

							button_tab = { #Absolutists
								size = { 60 60 }
								icon = {
									texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_absolutists.dds"
									size = { 50 50 }
									parentanchor = center
								}
								onclick = "[VariableSystem.Set( 'view_political_group', 'absolutists' )]"
								onclick = "[VariableSystem.Set( 'faction_decision', 'absolutists' )]"
								onclick = "[VariableSystem.Set( 'second_faction_decision', 'absolutists' )]"
								down = "[VariableSystem.HasValue( 'view_political_group', 'absolutists' )]"
							}

							button_tab = { #Uniformists
								size = { 60 60 }
								icon = {
									texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_uniformists.dds"
									size = { 50 50 }
									parentanchor = center
								}
								onclick = "[VariableSystem.Set( 'view_political_group', 'uniformists' )]"
								onclick = "[VariableSystem.Set( 'faction_decision', 'uniformists' )]"
								onclick = "[VariableSystem.Set( 'second_faction_decision', 'uniformists' )]"
								down = "[VariableSystem.HasValue( 'view_political_group', 'uniformists' )]"
							}

							button_tab = { #Pacifists
								size = { 60 60 }
								icon = {
									texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_pacifists.dds"
									size = { 50 50 }
									parentanchor = center
								}
								onclick = "[VariableSystem.Set( 'view_political_group', 'pacifists' )]"
								onclick = "[VariableSystem.Set( 'faction_decision', 'pacifists' )]"
								onclick = "[VariableSystem.Set( 'second_faction_decision', 'pacifists' )]"
								down = "[VariableSystem.HasValue( 'view_political_group', 'pacifists' )]"
							}

							button_tab = { #Provincialists
								size = { 60 60 }
								icon = {
									texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_provincialists.dds"
									size = { 50 50 }
									parentanchor = center
								}
								onclick = "[VariableSystem.Set( 'view_political_group', 'provincialists' )]"
								onclick = "[VariableSystem.Set( 'faction_decision', 'provincialists' )]"
								onclick = "[VariableSystem.Set( 'second_faction_decision', 'provincialists' )]"
								down = "[VariableSystem.HasValue( 'view_political_group', 'provincialists' )]"
							}

							button_tab = { #Pluralists
								size = { 60 60 }
								icon = {
									texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_pluralists.dds"
									size = { 50 50 }
									parentanchor = center
								}
								onclick = "[VariableSystem.Set( 'view_political_group', 'pluralists' )]"
								onclick = "[VariableSystem.Set( 'faction_decision', 'pluralists' )]"
								onclick = "[VariableSystem.Set( 'second_faction_decision', 'pluralists' )]"
								down = "[VariableSystem.HasValue( 'view_political_group', 'pluralists' )]"
							}

							button_tab = { #Dissolutionists
								size = { 60 60 }
								icon = {
									texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_centrists.dds"
									size = { 50 50 }
									parentanchor = center
								}
								onclick = "[VariableSystem.Set( 'view_political_group', 'centrists' )]"
								onclick = "[VariableSystem.Set( 'faction_decision', 'centrists' )]"
								onclick = "[VariableSystem.Set( 'second_faction_decision', 'centrists' )]"
								down = "[VariableSystem.HasValue( 'view_political_group', 'centrists' )]"
							}

							button_tab = { #Centrists
								size = { 60 60 }
								icon = {
									texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_dissolutionists.dds"
									size = { 50 50 }
									parentanchor = center
								}
								onclick = "[VariableSystem.Set( 'view_political_group', 'dissolutionists' )]"
								onclick = "[VariableSystem.Set( 'faction_decision', 'dissolutionists' )]"
								onclick = "[VariableSystem.Set( 'second_faction_decision', 'dissolutionists' )]"
								down = "[VariableSystem.HasValue( 'view_political_group', 'dissolutionists' )]"
							}
						}
					
						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							datamodel = "[SituationWindow.GetSituation.GetParticipantGroups]"

							item = {
								vbox = {
									visible = "[EqualTo_string(VariableSystem.Get('view_political_group'), SituationParticipantGroup.GetType.GetKey)]"
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									
									spacer = { size = { 10 15 } }

									hbox = {
										layoutpolicy_horizontal = expanding
										margin_left = 5
										margin_right = 5

										text_single = {
											text = "admin_factions_total_political_power"
											fontsize = 18
										}

										expand = {}

										text_single = {
											raw_text = "admin_factions_total_member_count"
											fontsize = 18
										}
									}

									spacer = { size = { 10 15 } }

									text_label_center = {
										layoutpolicy_horizontal = expanding
										text = "admin_factions_faction_effects"
										align = center
										min_width = 540
									}
									scrollbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding
										size = { 550 300 }
										blockoverride "scrollbox_content" {
											widget = {
											}
										}
									}

									vbox = {
										hbox = {
											layoutpolicy_horizontal = expanding
											margin_bottom = 10
											spacing = 40

											text_label_center = {
												min_width = 240
												layoutpolicy_horizontal = expanding
												text = "admin_faction_decisions"
											}
										}

										button_standard = {
											size = { 550 50 }
											visible = "[EqualTo_string( VariableSystem.Get('faction_decision'), VariableSystem.Get('view_political_group') )]"
											datacontext = "[GetDecisionWithKey(Concatenate(VariableSystem.Get('view_political_group'), '_faction_decision'))]"

											onclick = "[OpenGameViewData( 'decision_detail', Decision.Self)]"
											
											widget = {
												parentanchor = center
												size = { 550 50 }
												scissor = yes

												icon = {
													parentanchor = right|vcenter

													alpha = 0.7
													position = { -2 0 }
													size = { 250 100 }
													mirror = horizontal

													block "decision_texture_icon" {
														texture = "[Decision.GetPicture( GetPlayer.Self )]"
													}

													modify_texture = {
														texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
														blend_mode = alphamultiply
													}
												}

												icon = {
													parentanchor = center
													size = { 550 50 }

													texture = "gfx/interface/component_tiles/tile_vignette_3px.dds"
													spriteType = Corneredtiled
													spriteborder = { 5 5 }
												}
											}

											hbox = {
												margin = { 20 0 }
												margin_right = 10

												text_single = {
													text = "[Decision.GetTitleForPlayer]"
													layoutpolicy_horizontal = growing

													align = nobaseline
													default_format = "#clickable"
												}
											}
										}

										spacer = { size = { 1 10 } }

										button_standard = {
											size = { 550 50 }
											visible = "[EqualTo_string( VariableSystem.Get('second_faction_decision'), VariableSystem.Get('view_political_group') )]"
											datacontext = "[GetDecisionWithKey(Concatenate(VariableSystem.Get('view_political_group'), '_second_faction_decision'))]"

											onclick = "[OpenGameViewData( 'decision_detail', Decision.Self)]"
											
											widget = {
												parentanchor = center
												size = { 550 50 }
												scissor = yes

												icon = {
													parentanchor = right|vcenter

													alpha = 0.7
													position = { -2 0 }
													size = { 250 100 }
													mirror = horizontal

													block "decision_texture_icon" {
														texture = "[Decision.GetPicture( GetPlayer.Self )]"
													}

													modify_texture = {
														texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
														blend_mode = alphamultiply
													}
												}

												icon = {
													parentanchor = center
													size = { 550 50 }

													texture = "gfx/interface/component_tiles/tile_vignette_3px.dds"
													spriteType = Corneredtiled
													spriteborder = { 5 5 }
												}
											}

											hbox = {
												margin = { 20 0 }
												margin_right = 10

												text_single = {
													text = "[Decision.GetTitleForPlayer]"
													layoutpolicy_horizontal = growing

													align = nobaseline
													default_format = "#clickable"
												}
											}
										}
									}
								}
							}
						}
					}

					expand = {}
				}
			}
		}
	}

	window_situation_participant_groups = {
		datacontext = "[SituationWindow.AccessParticipantCharacterList]"
		datacontext = "[SituationWindowParticipantCharacterList.AccessCharacterList]"

		visible = "[SituationWindowParticipantCharacterList.IsVisible]"
	}
}

types Situation
{
	type selected_imperial_stability_preview = button_round {
		size = { 50 50 }
		block "visible_trigger" {
			visible = "[VariableSystem.HasValue('stability_preview', 'stable_combination_set')]"
		}

		icon = {
			size = { 100% 100% }

			texture = "gfx/interface/buttons/button_lifestyles_base.dds"
		}

		icon = {
			size = { 80% 80% }
			position = { 0 0 }
			parentanchor = center
			alwaystransparent = yes
			block "stability_icon_texture" {
				texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/volatile_combination.dds"
			}
		}
	}
	type preview_imperial_alignment_text = vbox {
		text_single = { #absolutist_uniformist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(And(GetVariableSystem.HasValue('primary_faction', 'uniformists'), GetVariableSystem.HasValue('secondary_faction', 'absolutists')), And(GetVariableSystem.HasValue('primary_faction', 'absolutists'), GetVariableSystem.HasValue('secondary_faction', 'uniformists')))]"

			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'stable_combination_set' )]"
			}

			text = "gui_absolutist_uniformist_situation_phase"
			align = nobaseline
		}
		
		text_single = { #absolutist_militarist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(And(GetVariableSystem.HasValue('primary_faction', 'militarists'), GetVariableSystem.HasValue('secondary_faction', 'absolutists')), And(GetVariableSystem.HasValue('primary_faction', 'absolutists'), GetVariableSystem.HasValue('secondary_faction', 'militarists')))]"

			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'stable_combination_set' )]"
			}

			text = "gui_absolutist_militarist_situation_phase"
			align = nobaseline
		}
		
		text_single = { #absolutist_pacifist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(And(GetVariableSystem.HasValue('primary_faction', 'pacifists'), GetVariableSystem.HasValue('secondary_faction', 'absolutists')), And(GetVariableSystem.HasValue('primary_faction', 'absolutists'), GetVariableSystem.HasValue('secondary_faction', 'pacifists')))]"
			
			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'uneasy_combination_set' )]"
			}
 
			text = "gui_absolutist_pacifist_situation_phase"
			align = nobaseline
		}
		
		text_single = { #absolutist_provincialist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(And(GetVariableSystem.HasValue('primary_faction', 'provincialists'), GetVariableSystem.HasValue('secondary_faction', 'absolutists')), And(GetVariableSystem.HasValue('primary_faction', 'absolutists'), GetVariableSystem.HasValue('secondary_faction', 'provincialists')))]"

			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'volatile_combination_set' )]"
			}
 
			text = "gui_absolutist_provincialist_situation_phase"
			align = nobaseline
		}
		
		text_single = { #absolutist_pluralist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(And(GetVariableSystem.HasValue('primary_faction', 'pluralists'), GetVariableSystem.HasValue('secondary_faction', 'absolutists')), And(GetVariableSystem.HasValue('primary_faction', 'absolutists'), GetVariableSystem.HasValue('secondary_faction', 'pluralists')))]"

			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'uneasy_combination_set' )]"
			}
 
			text = "gui_absolutist_pluralist_situation_phase"
			align = nobaseline
		}
		
		text_single = { #uniformist_militarist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(And(GetVariableSystem.HasValue('primary_faction', 'uniformists'), GetVariableSystem.HasValue('secondary_faction', 'militarists')), And(GetVariableSystem.HasValue('primary_faction', 'militarists'), GetVariableSystem.HasValue('secondary_faction', 'uniformists')))]"

			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'uneasy_combination_set' )]"
			}
 
			text = "gui_uniformist_militarist_situation_phase"
			align = nobaseline
		}
		
		text_single = { #uniformist_pacifist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(And(GetVariableSystem.HasValue('primary_faction', 'uniformists'), GetVariableSystem.HasValue('secondary_faction', 'pacifists')), And(GetVariableSystem.HasValue('primary_faction', 'pacifists'), GetVariableSystem.HasValue('secondary_faction', 'uniformists')))]"

			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'stable_combination_set' )]"
			}
 
			text = "gui_uniformist_pacifist_situation_phase"
			align = nobaseline
		}
		
		text_single = { #uniformist_provincialist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(And(GetVariableSystem.HasValue('primary_faction', 'uniformists'), GetVariableSystem.HasValue('secondary_faction', 'provincialists')), And(GetVariableSystem.HasValue('primary_faction', 'provincialists'), GetVariableSystem.HasValue('secondary_faction', 'uniformists')))]"

			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'uneasy_combination_set' )]"
			}
 
			text = "gui_uniformist_provincialist_situation_phase"
			align = nobaseline
		}
		
		text_single = { #uniformist_pluralist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(And(GetVariableSystem.HasValue('primary_faction', 'uniformists'), GetVariableSystem.HasValue('secondary_faction', 'pluralists')), And(GetVariableSystem.HasValue('primary_faction', 'pluralists'), GetVariableSystem.HasValue('secondary_faction', 'uniformists')))]"

			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'volatile_combination_set' )]"
			}
 
			text = "gui_uniformist_pluralist_situation_phase"
			align = nobaseline
		}
		
		text_single = { #militarist_pacifist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(And(GetVariableSystem.HasValue('primary_faction', 'militarists'), GetVariableSystem.HasValue('secondary_faction', 'pacifists')), And(GetVariableSystem.HasValue('primary_faction', 'pacifists'), GetVariableSystem.HasValue('secondary_faction', 'militarists')))]"

			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'volatile_combination_set' )]"
			}
 
			text = "gui_militarist_pacifist_situation_phase"
			align = nobaseline
		}
		
		text_single = { #militarist_provincialist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(And(GetVariableSystem.HasValue('primary_faction', 'militarists'), GetVariableSystem.HasValue('secondary_faction', 'provincialists')), And(GetVariableSystem.HasValue('primary_faction', 'provincialists'), GetVariableSystem.HasValue('secondary_faction', 'militarists')))]"

			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'uneasy_combination_set' )]"
			}
 
			text = "gui_militarist_provincialist_situation_phase"
			align = nobaseline
		}
		
		text_single = { #militarist_pluralist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(And(GetVariableSystem.HasValue('primary_faction', 'militarists'), GetVariableSystem.HasValue('secondary_faction', 'pluralists')), And(GetVariableSystem.HasValue('primary_faction', 'pluralists'), GetVariableSystem.HasValue('secondary_faction', 'militarists')))]"

			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'stable_combination_set' )]"
			}
 
			text = "gui_militarist_pluralist_situation_phase"
			align = nobaseline
		}
		
		text_single = { #pacifist_provincialist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(And(GetVariableSystem.HasValue('primary_faction', 'pacifists'), GetVariableSystem.HasValue('secondary_faction', 'provincialists')), And(GetVariableSystem.HasValue('primary_faction', 'provincialists'), GetVariableSystem.HasValue('secondary_faction', 'pacifists')))]"

			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'stable_combination_set' )]"
			}
 
			text = "gui_pacifist_provincialist_situation_phase"
			align = nobaseline
		}
		
		text_single = { #pacifist_pluralist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(And(GetVariableSystem.HasValue('primary_faction', 'pacifists'), GetVariableSystem.HasValue('secondary_faction', 'pluralists')), And(GetVariableSystem.HasValue('primary_faction', 'pluralists'), GetVariableSystem.HasValue('secondary_faction', 'pacifists')))]"

			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'uneasy_combination_set' )]"
			}
 
			text = "gui_pacifist_pluralist_situation_phase"
			align = nobaseline
		}
		
		text_single = { #provincialist_pluralist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(And(GetVariableSystem.HasValue('primary_faction', 'provincialists'), GetVariableSystem.HasValue('secondary_faction', 'pluralists')), And(GetVariableSystem.HasValue('primary_faction', 'pluralists'), GetVariableSystem.HasValue('secondary_faction', 'provincialists')))]"

			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'stable_combination_set' )]"
			}
 
			text = "gui_provincialist_pluralist_situation_phase"
			align = nobaseline
		}
		
		text_single = { #dissolutionist_situation_phase
			fontsize = 18
			layoutpolicy_horizontal = expanding
			visible = "[Or(GetVariableSystem.HasValue('primary_faction', 'dissolutionists'), GetVariableSystem.HasValue('secondary_faction', 'dissolutionists'))]"

			state = {
				name = _show
				on_finish = "[GetVariableSystem.Set( 'stability_preview', 'chaotic_combination_set' )]"
			}
 
			text = "gui_dissolutionist_situation_phase"
			align = nobaseline
		}
	}

	type button_situation_subregion = button_standard {
		minimumsize = { 527 50 }

		layoutpolicy_horizontal = expanding

		onclick = "[SituationWindow.SetSelectedSubRegion( SituationSubRegion.Self )]"
		down = "[ObjectsEqual( SituationWindow.GetSelectedSubRegion.Self, SituationSubRegion.Self )]"

		hbox = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding

			margin = { 4 0 }
			margin_right = 16
			spacing = 5

			icon = {
				size = { 40 40 }
				texture = "[SituationSubRegion.GetIcon]"
			}

			vbox = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding

				spacing = -3
				minimumsize = { 150 -1 }

				expand = {}

				text_single = {
					layoutpolicy_horizontal = expanding

					text = "[SituationSubRegion.GetNameNoTooltip]"
					default_format = "#clickable"
					align = nobaseline
				}

				text_single = {
					layoutpolicy_horizontal = expanding

					text = "SITUATION_WINDOW_SUB_GROUP_SUBTITLE"
					align = nobaseline
				}

				expand = {}
			}



			widget = {
				size = { 40 40 }

				widget_level_marker = {
					blockoverride "visible_inactive" {
						visible = no
					}

					icon = {
						size = { 40 40 }
						texture = "[SituationSubRegion.GetCurrentPhase.GetType.GetIcon]"
						parentanchor = center
					}
				}
			}

			text_single = {
				size = { 30 20 }
				text = "[SituationSubRegion.GetCurrentPhase.GetRelativeProgress|0%]"
				autoresize = no
				align = center|nobaseline
			}

			widget = {
				size = { 40 40 }

				widget_level_marker = {
					blockoverride "highlight_addon" {
						visible = no
					}

					icon = {
						size = { 40 40 }
						texture = "[SituationSubRegion.GetCurrentPhase.GetLeadingPhaseType.GetIcon]"
						parentanchor = center
					}
				}
			}
		}
	}

	type button_phase_named_set_item = button_round {
		datacontext = "[GetPlayer]"

		icon = {
			size = { 100% 100% }

			texture = "gfx/interface/buttons/button_lifestyles_base.dds"
		}

		icon = {
			size = { 80% 80% }
			position = { 0 0 }
			parentanchor = center
			alwaystransparent = yes
			texture = "[SituationModifierNamedSet.GetIcon]"
		}

		tooltipwidget = {
			using = situation_modifier_named_set_tooltip
		}
	}

	type button_group_graph = button_round {
		datacontext = "[GetPlayer]"
		
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/component_masks/mask_circle.dds"
			parentanchor = center
			block "icon_glow_visible" {
				visible = yes
			}

			glow = {
				using = Color_Bright_Yellow
				using = Glow_Standard
				glow_radius = 15
			}

			using = Animation_Glow_Pulse
		}

		icon = {
			size = { 100% 100% }

			texture = "gfx/interface/buttons/button_lifestyles_base.dds"
		}

		icon = {
			size = { 80% 80% }
			position = { 0 0 }
			parentanchor = center
			alwaystransparent = yes
			block "icon_texture" {
				texture = "gfx/interface/icons/situations/lotr_admin_factions_situation/group_absolutists.dds"
			}
		}

		tooltipwidget = {
			using = situation_modifier_named_set_tooltip
		}
	}

	type admin_factions_power_value_breakdown_widget = container
	{
		using = GeneralTooltipSetup
		alwaystransparent = no

		object_tooltip_pop_out = {
			blockoverride "title_text"
			{
				margin = { 0 3 }
				text = "SORCERY_TITLE"
				default_format = "#T"
			}

			blockoverride "concept_link"
			{
				visible = no
			}

			blockoverride "main_description"
			{
				vbox = {
					layoutpolicy_horizontal = expanding

					cooltip_paragraph = {
						text = "admin_factions_individual_power_breakdown"
					}

					spacer = {
						size = { 0 10 }
					}
				}
			}
		}
	}

	type window_situation_participant_groups = window  {
		name = "window_situation_participant_groups"
		widgetanchor = right
		position = { 30 100 }
		size = { 740 82% }

		layer = middle
		movable = yes

		using = Window_Background
		using = Window_Decoration_Spike
		using = Window_Size_CharacterList

		state = {
			name = _show
			using = Animation_FadeIn_Quick
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
		}

		vbox = {
			using = Window_Margins

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "SITUATION_PARTICIPANT_WINDOW_HEADER"
				}

				blockoverride "button_close"
				{
					onclick = "[SituationWindowParticipantCharacterList.Close]"
				}
			}

			vbox = {
				layoutpolicy_vertical = preferred
				layoutpolicy_horizontal = expanding
				margin = { 10 0 }

				spacing = 10

				datamodel = "[SituationWindow.GetSelectedSubRegion.GetParticipantGroups]"

				item = {
					hbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						icon = {
							visible = "[SituationParticipantGroup.IsValid]"

							size = { 40 40 }
							texture = "[SituationParticipantGroup.GetType.GetIcon]"

							background = {
								texture = "gfx/interface/buttons/button_lifestyles_base.dds"
								margin = { 5 5 }
							}
						}

						vbox = {
							margin_left = 10

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "[SituationParticipantGroup.GetName]"
								align = nobaseline
							}

							hbox = {
								spacing = 10
								text_single = {
									layoutpolicy_horizontal = expanding
									text = "SITUATION_PARTICIPANT_GROUP_SUBTITLE"
									align = nobaseline
									default_format = "#Weak"
								}

								text_single = { #Faction Power
									layoutpolicy_horizontal = expanding
									raw_text = "#V Faction Power:#! [SituationParticipantGroup.GetSituation.MakeScope.Var(Concatenate(SituationParticipantGroup.GetType.GetKey,'_faction_power')).GetValue]"
									visible = "[InDebugMode]"
									align = nobaseline
									default_format = "#Weak"
								}

								text_single = { #Faction Leader
									layoutpolicy_horizontal = expanding
									raw_text = "#V Faction Leader:#! [SituationParticipantGroup.GetSituation.MakeScope.Var(Concatenate(SituationParticipantGroup.GetType.GetKey,'_faction_leader')).Char.GetTitledFirstNameRegnal]"
									visible = "[InDebugMode]"
									align = nobaseline
									default_format = "#Weak"
								}
							}
						}

						expand = {}

						button_standard_small = {
							onclick = "[SituationWindowParticipantCharacterList.ToggleSelectedParticipantGroup( SituationParticipantGroup.Self )]"
							down = "[ObjectsEqual( SituationWindowParticipantCharacterList.GetSelectedParticipantGroup.Self, SituationParticipantGroup.Self )]"
							text = "SITUATION_PARTICIPANT_GROUP_FILTER"
						}
					}
				}
			}

			vbox_character_list = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "sort_buttons"
				{
					blockoverride "filters_visible" {
						visible = no
					}

					hbox_list_sort_buttons = {
						layoutpolicy_horizontal = expanding

						blockoverride "skill_sort_buttons" {}
					}
				}

				blockoverride "skill_sort_buttons" {}

				blockoverride "scrollbox_empty_visibility"
				{
					layoutpolicy_vertical = expanding
					visible = "[Not( CharacterSelectionList.HasItems )]"
					text = "SITUATION_PARTICIPANT_WINDOW_PARTICIPANT_EMPTY"
				}

				blockoverride "container_implementation"
				{
					fixedgridbox = {
						addcolumn = 630
						addrow = 92

						name = "characters_grid"
						datamodel_reuse_widgets = yes
						datamodel = "[CharacterSelectionList.GetList]"
						visible = "[Not(CharacterSelectionList.IsBuildingList)]"

						item = {
							widget_character_list_item_finder = {
								size = { 630 94 }
							}
						}
					}
				}
			}
		}
	}
}