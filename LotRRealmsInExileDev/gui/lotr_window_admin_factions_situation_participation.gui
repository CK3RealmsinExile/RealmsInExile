######################################################
############# SITUATION PARTICIPATION ################
######################################################

window = {
	name = "lotr_window_admin_factions_situation_participation"
	widgetid = "lotr_window_admin_factions_situation_participation"
	datacontext = "[SituationParticipationWindow.GetSituation]"
	datacontext = "[SituationParticipationWindow.GetCharacterList]"
	parentanchor = top|right
	size = { 630 935 }
	allow_outside = yes
	layer = middle

	using = Window_Background
	using = Window_Decoration_Spike

	state = {
		name = _show
		position = { -650 100 }
		using = Animation_FadeIn_Quick
	}

	state = {
		name = _hide
		position_x = -570
		using = Animation_FadeOut_Quick
	}

	vbox = {
		using = Window_Margins

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "SITUATION_PARTICIPATION_WINDOW_HEADER"
			}

			blockoverride "button_close"
			{
				onclick = "[SituationParticipationWindow.Close]"
			}
		}

		vbox = {
			name = "player_participation"
			datacontext = "[GetPlayer]"
			layoutpolicy_horizontal = expanding

			hbox = {
				name = "character_involvment"
				layoutpolicy_horizontal = expanding
				margin_left = 28
				margin_bottom = 6

				background = {
					using = Background_Area
					margin_top = 8
					margin_bottom = 6
				}

				portrait_head = {
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					visible = "[Situation.GetTopCharacterParticipantGroup( GetPlayer.Self ).IsValid]"

					# Current participation
					text_label_left = {
						layoutpolicy_horizontal = expanding
						raw_text = "#D Group: [Situation.GetTopCharacterParticipantGroup( GetPlayer.Self ).GetName]"
						margin = { 14 4 }
					}
					expand = {}
				}

				expand = {}
			}
		}

		hbox = {
			name = "categories"
			layoutpolicy_horizontal = expanding

			button_tab = {
				layoutpolicy_horizontal = expanding
				text = "SITUATION_PARTICIPANTS"
#				onclick = "[SituationParticipationWindow.SetShowParticipants]"
#				down = "[SituationParticipationWindow.IsShowingParticipants]"

				text_single = {
					parentanchor = vcenter|right
					position = { -12 -2 }
					text = "[GetDataModelSize( Situation.GetParticipatingCharacters )]"
					default_format = "#low"
				}
			}
		}

		vbox = {
			name = "participant_section"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			hbox = {
				layoutpolicy_horizontal = expanding

				button_standard = {
					onclick = "[SituationParticipationWindow.ClearShownParticipantGroup()]"
					down = "[SituationParticipationWindow.IsShownParticipantGroupEmpty()]"
					text = "SITUATION_PARTICIPATION_WINDOW_GROUP_ALL"
				}
				expand = {}
			}

			fixedgridbox = {
				layoutpolicy_horizontal = expanding

				addcolumn = 270
				addrow = 40
				datamodel_wrap = 2
				flipdirection = yes

				datamodel = "[Situation.GetParticipantGroups]"

				item = {
					button_standard = {
						size = { 260 42 }
						onclick = "[SituationParticipationWindow.SetShownParticipantGroup( SituationParticipantGroup.Self )]"
						down = "[SituationParticipationWindow.IsShownParticipantGroup( SituationParticipantGroup.Self )]"
						raw_text = "#D [SituationParticipantGroup.GetSubRegion.GetName] - [SituationParticipantGroup.GetName] ([GetDataModelSize( SituationParticipantGroup.GetCharacters )])"
					}
				}
			}

			vbox_character_list = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "sort_buttons"
				{
					hbox_list_sort_buttons = {
						layoutpolicy_horizontal = expanding

						blockoverride "skill_sort_buttons" {}
					}
				}

				blockoverride "container_implementation" {
					fixedgridbox = {
						name = "characters_grid"
						datamodel = "[CharacterSelectionList.GetList]"
						addcolumn = 600
						addrow = 98

						item = {
							widget = {
								size = { 524 90 }

								hbox = {
									datacontext = "[CharacterListItem.GetCharacter]"

									Background = {
										using = Background_Area
									}

									portrait_head_small = {
										blockoverride "coa" {}
									}

									vbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding
										margin_left = 12

										text_label_left = {
											layoutpolicy_horizontal = expanding
											text = "[Character.GetUINameNotMeNoTooltip]"
											margin = { 4 0 }
											max_width = 520
											align = nobaseline
											autoresize = no
											default_format = "#high"
											using = Font_Size_Medium
										}

										hbox = {
											layoutpolicy_horizontal = expanding
											spacing = 6

											coa_realm_tiny_crown = {
												visible = "[Character.HasLandedTitles]"
											}

											widget = {
												size = { 34 42 }

											}
											expand = {}

											hbox = {
												margin = { 5 5 }

												background = {
													using = Background_Area_Dark
													alpha = 0.8
												}

												icon = {
													datacontext = "[Character.GetFaith]"
													texture = "[Faith.GetIcon]"
													size = { 45 45 }

													tooltipwidget = {
														faith_tooltip = {}
													}
												}

												icon = {
													texture = "gfx/interface/icons/icon_culture.dds"
													size = { 30 30 }
												}

												text_single = {
													min_width = 200
													max_width = 200
													text = "SITUATION_CULTURE_CHARACTER_NAME"
													align = nobaseline
													fontsize_min = 13
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}

	window_character_filter = {
		position = { -525 0 }

		blockoverride "addition_filter" {
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('relation_filter')]"
			}

			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('range_filter')]"
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('personal_filter_category')]"

				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('ruler_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('adult_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('gender_filter')]"
					}

					divider = {
						layoutpolicy_horizontal = expanding
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('married_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('imprisoned_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('hook_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('inspiration_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('sexuality_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('artifact_filter')]"
					}
				}
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('membership_filter_category')]"

				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
					}


					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('dynasty_filter')]"
					}
				}
			}
		}
	}
}
