
######################################################
################## BUTTON TEMPLATES ##################
######################################################

types Buttons
{
    type button_primary_big_realms = button_primary_big
    {
        texture = "gfx/interface/buttons/button_verb_primary_realms.dds"
        framesize = { 498 156 }
        size = { 250 42 }
		spriteType = Corneredstretched

        buttonText = {
            text_single = {
                size = { 100% 100% }
                autoresize = no
                margin = { 10 0 }
                align = center|nobaseline
                default_format = "#high"
                using = Font_Size_Medium
            	alwaystransparent = yes
            }
        }
    }

    type button_primary_big = button_primary
    {
        size = { 250 42 }

        buttonText = {
            text_single = {
                size = { 100% 100% }
                autoresize = no
                margin = { 10 0 }
                align = center|nobaseline
                default_format = "#high"
                using = Font_Size_Medium
            	alwaystransparent = yes
            }
        }
    }

    type button_primary = button_standard
    {
        texture = "gfx/interface/buttons/button_verb_primary.dds"
        shortcut = confirm
        clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_confirm"

        buttonText = {
            text_single = {
                size = { 100% 100% }
                autoresize = no
                margin = { 10 0 }
                align = center|nobaseline
                default_format = "#high"
                alwaystransparent = yes
            }
        }
    }
    
    # Variation of the tertiary button type that uses gfxtype = togglepushbuttongfx to support being selected
    type button_tertiary_push = button_standard
    {
        size = { 210 37 }
        texture = "gfx/interface/buttons/button_tertiary.dds"

        gfxtype = togglepushbuttongfx
        effectname = "NoHighlight"
        upframe = 1
        uphoverframe = 1
        uppressedframe = 3
        downframe = 2
        downhoverframe = 2
        downpressedframe = 2
        disableframe = 7
        framesize = { 210 37 }

        spriteType = Corneredtiled
        spriteborder = { 24 20 }

        blockoverride "button_standard_mouseover" {
            texture = "gfx/interface/buttons/button_tertiary_mouseover.dds"
            framesize = { 210 37 }
            spriteType = Corneredtiled
            spriteborder = { 24 20 }
        }

        buttonText = {
            text_single = {
                size = { 100% 100% }
                autoresize = no
                margin = { 10 0 }
                align = center|nobaseline
                default_format = "#clickable"
                using = Font_Size_Small
                alwaystransparent = yes
            }
        }
    }

    type button_tertiary = button_frontend
    {
        size = { 170 33 }
        texture = "gfx/interface/buttons/button_tertiary.dds"

        gfxtype = framedbuttongfx
        effectname = "NoHighlight"
        upframe = 1
        overframe = 2
        downframe = 3
        framesize = { 210 36 }


        spriteType = Corneredtiled
        spriteborder = { 22 20 }

        buttonText = {
            text_single = {
                size = { 100% 100% }
                autoresize = no
                margin = { 10 0 }
                align = center|nobaseline
                default_format = "#clickable"
                using = Font_Size_Small
                alwaystransparent = yes
            }
        }
    }

    type button_standard_big = button_standard
    {
        size = { 250 42 }

        buttonText = {
            text_single = {
                size = { 100% 100% }
                autoresize = no
                margin = { 10 0 }
                align = center|nobaseline
                default_format = "#clickable"
                using = Font_Size_Medium
                alwaystransparent = yes
            }
        }
    }

    ## The standard button
    type button_standard = button_normal
    {
        texture = "gfx/interface/buttons/button_standard.dds"
        size = { 170 33 }

        gfxtype = togglepushbuttongfx
        effectname = "NoHighlight"

        upframe = 1
        uphoverframe = 2
        uppressedframe = 3
        downframe = 4
        downhoverframe = 4
        downpressedframe = 4
        disableframe = 7

        spriteType = Corneredtiled
        spriteborder = { 4 4 }
        framesize = { 252 80 }

        buttonText = {
            text_single = {
                size = { 100% 100% }
                autoresize = no
                margin = { 10 0 }
                align = center|nobaseline
                default_format = "#clickable"
                alwaystransparent = yes
            }
        }

        modify_texture = {
            name = "overlay"
            texture = "gfx/interface/buttons/button_standard_overlay.dds"
            spriteType = Corneredstretched
            spriteborder = { 3 3 }
            blend_mode = overlay
            alpha = 0.3
        }

        block "disabled"
        {
            highlight_icon = {
                size = { 100% 100% }
                gfxtype = togglepushbuttongfx
                effectname = "NoHighlight"
                texture = "gfx/interface/buttons/button_disabled_stripes.dds"
                spriteType = Corneredtiled
                spriteborder = { 2 2 }
                framesize  = { 238 63 }

                upframe = 1
                uphoverframe = 1
                uppressedframe = 1
                downframe = 1
                downhoverframe = 1
                downpressedframe = 1
                disableframe = 2

                alpha = 0.4

                modify_texture = {
                    name = "overlay"
                    texture = "gfx/interface/buttons/button_standard_overlay.dds"
                    spriteType = Corneredstretched
                    spriteborder = { 3 3 }
                    blend_mode = overlay
                }

                block "button_standard_mouseover" {}
            }
        }

        highlight_icon = {
            size = { 100% 100% }
            gfxtype = togglepushbuttongfx
            effectname = "NoHighlight"
            texture = "gfx/interface/buttons/button_mouseover.dds"
            spriteType = Corneredstretched
            spriteborder = { 20 20 }
            framesize  = { 238 63 }

            upframe = 1
            uphoverframe = 2
            uppressedframe = 1
            downframe = 1
            downhoverframe = 1
            downpressedframe = 1
            disableframe = 1

            alpha = 0.5

            block "button_standard_mouseover" {}
        }

        margin_widget = {
            size = { 100% 100% }
            margin = { 3 3 }

            block "vignette"
            {
                icon = {
                    name = "vignette"
                    size = { 100% 100% }
                    alpha = 0.2
                    texture = "gfx/interface/component_masks/mask_vignette.dds"
                    color = { 0.15 0.15 0.15 1 }
                }
            }
        }
    }

    type button_standard_small = button_standard
    {
        size = { 140 25 }
    }

    ## The standard button, with a clean interior
    type button_standard_clean = button_standard
    {
        texture = "gfx/interface/buttons/button_standard_clean.dds"

        blockoverride "vignette" {}
    }

    ## Clean, darker version used for list entries
    type button_standard_list = button_standard
    {
        texture = "gfx/interface/buttons/button_standard_clean_weak.dds"
    }

    type button_standard_hover = button_standard_clean {
        texture = "gfx/interface/buttons/button_standard_clean.dds"
        upframe = 9
    }

    type button_sidepanel_right = button_standard_hover {
        minimumsize = { -1 20 }

        using = tooltip_es

        flowcontainer = {
            resizeparent = yes
            margin = { 3 3 }
            margin_left = 7

            text_single = {
                block "button_text"{}

                align = nobaseline
                default_format = "#clickable"
            }

            button_select_arrow = {
                size = { 20 20 }
                alwaystransparent = yes
            }
        }
    }

    type button_standard_select_arrow = button_standard {
        size = { 170 33 }

        hbox = {
            margin = { 5 0 }

            spacer = {
                size = { 20 20 }
            }

            expand = {}

            text_single = {
                layoutpolicy_horizontal = expanding
                align = center|nobaseline
                default_format = "#clickable"
                autoresize = no

                block "button_text"{}
                alwaystransparent = yes
            }

            expand = {}

            button_select_arrow = {
                size = { 20 20 }
                alwaystransparent = yes
            }
        }
    }

    type button_list = button_normal
    {
        gfxtype = togglepushbuttongfx
        effectname = "NoHighlight"

        upframe = 1
        uphoverframe = 3
        uppressedframe = 3
        downframe = 4
        downhoverframe = 5
        downpressedframe = 6
        texture = "gfx/interface/buttons/button_list.dds"
        spriteType = Corneredtiled
        spriteborder = { 50 50 }
        framesize = { 150 150 }

        buttonText = {
            text_single = {
                size = { 100% 100% }
                autoresize = no
                margin = { 10 0 }
                align = center|nobaseline
                default_format = "#clickable"
                alwaystransparent = yes
            }
        }
    }

    type button_tab = button_normal
    {
        size = { 100 38 }
        gfxtype = togglepushbuttongfx
        effectname = "NoHighlight"

        upframe = 1
        uphoverframe = 2
        uppressedframe = 3
        downframe = 4
        downhoverframe = 4
        downpressedframe = 4

        block "button_tab"
        {
        texture = "gfx/interface/buttons/button_tab.dds"
        }

        spriteType = Corneredtiled
        spriteborder = { 10 10 }
        framesize = { 198 53 }

        buttonText = {
            text_single = {
                size = { 100% 100% }
                autoresize = no
                margin = { 10 0 }
                align = center|nobaseline
                default_format = "#low"
                alwaystransparent = yes
            }
        }
    }

    # For tabs over a dark background area
    type button_tab_dark = button_tab
    {
        upframe = 4
        uphoverframe = 2
        uppressedframe = 4
        downframe = 3
        downhoverframe = 3
        downpressedframe = 3
        framesize  = { 198 45 }

        spriteborder = { 10 10 }
    }

    type button_tab_vertical = button_normal
    {
        size = { 180 48 }
        gfxtype = togglepushbuttongfx
        effectname = "NoHighlight"

        upframe = 1
        uphoverframe = 2
        uppressedframe = 3
        downframe = 4
        downhoverframe = 4
        downpressedframe = 4

        texture = "gfx/interface/buttons/button_tab_vertical.dds"
        spriteType = Corneredtiled
        spriteborder = { 10 10 }
        framesize = { 202 48 }

        buttonText = {
            text_single = {
                size = { 100% 100% }
                autoresize = no
                margin = { 10 0 }
                align = center|nobaseline
                default_format = "#low"
                alwaystransparent = yes
            }
        }
    }

    type button_tab_vertical_bookmark = button_normal
    {
        size = { 68 50 }
        gfxtype = togglepushbuttongfx
        effectname = "NoHighlight"

        framesize = { 136 100 }
        texture = "gfx/interface/buttons/button_tab_bookmark.dds"
        alpha = 0.95

        upframe = 1
        uphoverframe = 2
        uppressedframe = 3
        downframe = 2

        state = {
            name = "tab_reset"
            duration = 0.1
            using = Animation_Curve_Default
            position_x = 0

            block "tab_inactive" {}
        }

        state = {
            name = "tab_selection"
            delay = 0.05
            duration = 0.2
            using = Animation_Curve_Default
            position_x = -7

            block "tab_active" {}
        }

        ### Hover animation
        state = {
            name = _mouse_enter
            duration = 0.2
            position_x = -3

            using = Animation_Curve_Default
        }

        state = {
            name = _mouse_leave
            duration = 0.1
            position_x = 0

            using = Animation_Curve_Default
        }

        block "tab_button" {}

        button_icon = {
            name = "tab_icon_texture"
            alwaystransparent = yes
            parentanchor = left|vcenter
            size = { 30 30 }
            position = { 23 0 }

            block "tab_texture" {}
        }

        button_icon = {
            name = "tab_icon_frame_texture"
            alwaystransparent = yes
            parentanchor = center
            size = { 68 50 }
            texture = "gfx/interface/buttons/button_tab_bookmark_frame.dds"
        }
    }

    type button_tab_round = button_normal
    {
        size = { 50 50 }

        framesize = { 100 100 }
        texture = "gfx/interface/buttons/button_tab_round.dds"

        # upframe = 1
        # uphoverframe = 2
        # uppressedframe = 3
        # downframe = 2
        # downhoverframe = 1
        # downpressedframe = 1
        # disableframe = 1
    }

    # For main menu
    type button_frontend = button_normal
    {
        texture = "gfx/interface/buttons/button_frontend.dds"
        size = { 310 55 }
        gfxtype = framedbuttongfx
        effectname = "NoHighlight"
        upframe = 1
        overframe = 2
        downframe = 3
        framesize = { 391 69 }


        spriteType = Corneredtiled
        spriteborder = { 50 30 }


        buttonText = {
            text_single = {
                size = { 100% 100% }
                autoresize = no
                margin = { 10 0 }
                align = center|nobaseline
                default_format = "#clickable"
                using = Font_Size_Medium
                alwaystransparent = yes
            }
        }

    }

    type button_event_standard = button_normal
    {
        size = { 170 33 }
        gfxtype = togglepushbuttongfx
        effectname = "NoHighlight"
        texture = "gfx/interface/buttons/button_event.dds"

        upframe = 1
        uphoverframe = 2
        uppressedframe = 3
        downframe = 4
        downhoverframe = 4
        downpressedframe = 4
        disableframe = 7
        spriteType = Corneredtiled
        spriteborder = { 3 3 }
        framesize = { 249 78 }

        highlight_icon = {
            size = { 98% 100% }
            gfxtype = togglepushbuttongfx
            effectname = "NoHighlight"
            texture = "gfx/interface/buttons/button_mouseover_event.dds"
            spriteType = Corneredstretched
            spriteborder = { 20 20 }
            framesize  = { 238 63 }
            parentanchor = center

            upframe = 1
            uphoverframe = 2
            uppressedframe = 1
            downframe = 1
            downhoverframe = 1
            downpressedframe = 1
            disableframe = 1

            alpha = 0.5

            block "button_standard_mouseover" {}
        }
    }

    type button_event_letter = button_normal
    {
        size = { 260 34 }

        gfxtype = framedbuttongfx
        effectname = "NoHighlight"
        upframe = 1
        overframe = 2
        downframe = 3
        disableframe = 4
        texture = "gfx/interface/buttons/button_event_letter.dds"
        framesize = { 175 37 }
        spriteType = Corneredtiled
        spriteborder = { 7 7 }

        default_format = "#light_background"
        using = Font_Size_Medium
        using = tooltip_es

        modify_texture = {
            name = "paper_texture_overlay"
            texture = "gfx/interface/window_event/paper_texture_overlay.dds"
            spriteType = Corneredtiled
            spriteborder = { 0 0 }
            blend_mode = overlay
        }

        modify_texture = {
            name = "shading_overlay"
            texture = "gfx/interface/buttons/button_event_letter_overlay.dds"
            spriteType = Corneredstretched
            spriteborder = { 0 0 }
            blend_mode = overlay
        }

        modify_texture = {
            name = "mask"
            texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
            spriteType = Corneredtiled
            spriteborder_left = 40
            spriteborder_right = 40
            blend_mode = alphamultiply
        }
    }

    type button_letter = button_normal
    {
        size = { 260 34 }

        gfxtype = togglepushbuttongfx

        effectname = "NoHighlight"
        upframe = 1
        downframe = 3
        disableframe = 4

        texture = "gfx/interface/buttons/button_event_letter.dds"
        framesize = { 175 37 }
        spriteType = Corneredtiled
        spriteborder = { 7 7 }

        default_format = "#light_background"
        using = Font_Size_Medium
        using = tooltip_es

        modify_texture = {
            name = "paper_texture_overlay"
            texture = "gfx/interface/window_event/paper_texture_overlay.dds"
            spriteType = Corneredtiled
            spriteborder = { 0 0 }
            blend_mode = overlay
        }

        modify_texture = {
            name = "shading_overlay"
            texture = "gfx/interface/buttons/button_event_letter_overlay.dds"
            spriteType = Corneredstretched
            spriteborder = { 0 30 }
            blend_mode = overlay
        }
    }

    type icon_button_decorative = button
    {
        gfxtype = framedbuttongfx
        effectname = "NoHighlight"
        upframe = 1
        overframe = 2
        downframe = 3
        texture = "gfx/interface/buttons/button_small_dec.dds"
        framesize = { 94 94 }
        size = { 47 47 }
    }

    type icon_button_mapmode = widget {
        size = { 40 40 }

        block 'mm_datacontext'
        {
        	datacontext = "[GetMapMode( 'realms' )]"
        }

        icon = {
            size = { 100% 100% }
            texture = "gfx/interface/component_masks/mask_circle.dds"

            block = "mm_glow"
            {
                visible = "[IsMapMode( MapMode.GetKey )]"
            }

            glow = {
                color = { 0.93 0.65 0.45 1.0 }
                glow_radius = 6

                glow_generation_rules= {
                    glow_alpha_mask = 0
                    glow_blur_passes = 15
                    glow_texture_downscale = 5.5f
                    glow_ignore_inside_pixels = yes
                }
            }

            using = Animation_Glow_Pulse
        }

        button_round = {
            size = { 100% 100% }
            using = tooltip_nw

            onclick = "[SetMapMode(  MapMode.GetKey )]"
			down = "[IsMapMode( MapMode.GetKey )]"
			tooltip = "[MapMode.GetDesc]"

            block "mm_button" {}

            button_icon = {
                parentanchor = center
                alwaystransparent = yes
                down = "[IsMapMode( MapMode.GetKey )]"
				texture = "[MapMode.GetIcon]"

                block "mm_icon" {}
            }
        }
    }

    type button_round = button_icon {
        size = { 40 40 }
        texture = "gfx/interface/buttons/button_round_frame.dds"

        background = {
            texture = "gfx/interface/buttons/button_round_bg.dds"
            using = Color_Button_Background

            block "button_bg_color" {}

            modify_texture = {
                texture = "gfx/interface/component_overlay/overlay_texture.dds"
                blend_mode = overlay
            }
        }
    }

    ## The standard close/minimize etc. buttons used on most windows
    type buttons_window_control = flowcontainer {
        ignoreinvisible = yes
        margin = { 8 8 }

        block "extra_buttons" {}

        button_go_to_my_location = {
            name = "button_go_to"

            block "button_go_to" {
                visible = no
            }
        }

        container = {
            visible = "[Not(Character.IsLocalPlayer)]"

            block "button_pin"
            {
                visible = no
            }

            button_pin = {
                name = "button_pin"
                visible = "[Not(Character.IsPinned)]"
                onclick = "[Character.ToggleCharacterPinned]"
                tooltip = "PIN_TT"
                using = tooltip_se
            }

            button_unpin = {
                name = "button_unpin"
                visible = "[Character.IsPinned]"
                onclick = "[Character.ToggleCharacterPinned]"
                tooltip = "PIN_TT"
                using = tooltip_se
            }
        }

        button_me = {
            name = "button_me"
            tooltip = "CV_TOOLTIP_ME_BUTTON"

            using = tooltip_se

            block "button_me" {
                visible = no
            }
        }

        button_back = {
            name = "button_back"
            shortcut = "go_back"
            shortcut = "go_back_2"
            shortcut = "go_back_3"
            
            clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_close"

            block "button_back" {
                visible = no
            }
        }

        button_minimize = {
            name = "button_minimize"
            shortcut = "close_window"
            tooltip = "MINIMIZE_TOOLTIP"
            clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_close"

            block "button_minimize" {
                visible = no
            }
        }

        button_close = {
            name = "button_close"
            shortcut = "close_window"
            tooltip = "CLOSE_TOOLTIP"
            clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_close"

            block "button_close" {}
        }
    }

    type button_checkbox_label = button_group {

        using = tooltip_se
        clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_checkbox"
        flowcontainer = {
            spacing = 5

            button_checkbox = {
                block "checkbox" {}
            }

            text_single = {
                parentanchor = vcenter
                align = nobaseline
                default_format = "#clickable"

                block "text" {
                    text = "DEFAULT_TEXT"
                }
                alwaystransparent = yes
            }
        }
    }

    type button_checkbox = checkbutton {
        name = "button_checkbox"
        texture = "gfx/interface/buttons/button_checkbox.dds"
        framesize = { 80 80 }
        size = { 30 30 }

        using = Master_Button_Modify_Texture
        blockoverride "master_color_frame" {
            frame = 1
        }

        background = {
            texture = "gfx/interface/buttons/button_checkbox_background.dds"
            margin = { 1 1 }
        }
    }

    type button_radio_label = button_group {

        using = tooltip_se
        flowcontainer = {
            spacing = 5

            button_radio = {
                block "radio" {}

                background = {
                    texture = "gfx/interface/buttons/button_round_big.dds"
                    alpha = 0.5
                }
            }

            text_single = {
                parentanchor = vcenter
                align = nobaseline
                default_format = "#clickable"

                block "text" {
                    text = "DEFAULT_TEXT"
                }
                alwaystransparent = yes
            }
        }
    }

    type button_radio = button_toggle {
        name = "button_checkbox"
        texture = "gfx/interface/buttons/button_radio.dds"
        using = Master_Button_Modify_Texture

        framesize = { 80 80 }
        size = { 30 30 }

        background = {
            texture = "gfx/interface/buttons/button_round_bg.dds"
            using = Color_Button_Background

            block "button_bg_color" {}

            modify_texture = {
                texture = "gfx/interface/component_overlay/overlay_texture.dds"
                blend_mode = overlay
            }
        }
    }

    type button_expand = button_toggle {
        size = { 20 20 }
        texture = "gfx/interface/buttons/button_tree_expand.dds"
        framesize = { 36 36 }
    }

    type button_list_expand = checkbutton {
        size = { 18 18 }
        texture = "gfx/interface/buttons/button_tree_expand.dds"
        framesize = { 36 36 }
    }

    type button_standard_back = button_standard {
        
        block "text" {
            text = "BACK_LABEL"
        }

        button_back = {
            using = ButtonStandardIconProperties
            size = { 20 20 }
        }
    }

    type button_standard_forward = button_standard {
        
        block "text" {
            text = "NEXT_LABEL"
        }

        button_forward = {
            size = { 20 20 }
            parentanchor = right|vcenter
            position = { 5 0 }
            alwaystransparent = yes
        }
    }

    # Marker used to show current selected Option
    type button_active_marker = icon {
        parentanchor = top|hcenter
        position = { 0 -5 }
        texture = "gfx/interface/buttons/button_sort_toggle.dds"
        framesize = { 36 36 }
        size = { 24 24 }
        frame = 1

        using = Master_Button_Modify_Texture
        blockoverride "master_color_frame" {
            frame = 1
        }
    }

    # For dropdown filter
    type button_drop = button_normal {
        size = { 100% 33 }
        button_trigger = none
        gfxtype = framedbuttongfx
        effectname = "NoHighlight"
        upframe = 1
        overframe = 2
        downframe = 3
        disableframe = 4
        texture = "gfx/interface/buttons/button_drop_down.dds"
        framesize = { 225 33 }
        spriteType = Corneredtiled
        spriteborder = { 75 11 }
        clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_checkbox"

        buttonText = {
            text_single = {
                size = { 100% 100% }
                autoresize = no
                margin = { 15 0 }
                margin_right = 25
                align = left|nobaseline
                default_format = "#clickable"
                alwaystransparent = yes
            }
        }
    }

    # For dropdown filter options
    type button_dropdown = button_normal {
        size = { 225 30 }
        button_trigger = none
        gfxtype = framedbuttongfx
        effectname = "NoHighlight"
        shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
        upframe = 1
        overframe = 2
        downframe = 3
        disableframe = 1
        texture = "gfx/interface/buttons/button_interaction_menu.dds"
        framesize = { 317 30 }
        clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_checkbox"

        buttonText = {
            text_single = {
                size = { 100% 100% }
                autoresize = no
                margin_left = 10
                align = left|nobaseline
                alwaystransparent = yes
            }
        }
    }

    type button_religion_icon = button {
        # Needs a Faith Data Context!
        name = "faith_button"
        size = { 65 65 }
        onclick = "[OpenGameViewData( 'faith', Faith.GetID )]"
        tooltipwidget = { faith_tooltip_click = {} }
        texture = "[Faith.GetIcon]"
    }

    type button_religion_icon_ruler_designer = button {
        # Needs a Faith Data Context!
        name = "faith_button"
        size = { 65 65 }
        tooltipwidget = { faith_tooltip_ruler_designer = {} }
        texture = "[Faith.GetIcon]"
    }

    #####################
    #   LotR buttons    #
    #####################

    type lotr_button_radio_diamond = button_toggle {
        name = "lotr_button_radio_diamond"
        texture = "gfx/interface/buttons/button_radio_diamond.dds"
        using = Master_Button_Modify_Texture

        framesize = { 80 80 }
        size = { 30 30 }

        background = {
            texture = "gfx/interface/buttons/button_radio_diamond_bg.dds"
            using = Color_Button_Background

            block "button_bg_color" {}

            modify_texture = {
                texture = "gfx/interface/component_overlay/overlay_texture.dds"
                blend_mode = overlay
            }
        }
    }
}

# Use this to position a standard button_icon correctly inside a button_standard:
# button_standard = {
#     text = "BACK_LABEL"
#     button_back = {
#         using = ButtonStandardIconProperties
#     }
# }
template ButtonStandardIconProperties
{
    parentanchor = left|vcenter
    position = { 5 0 }
    size = { 25 25 }
    alwaystransparent = yes
}
