window = {
	name = "ingame_pausemenu"
	parentanchor = center
	movable = no
	size = { 100% 105% }
	layer = frontend
	filter_mouse = all

	background = {
		using = Background_Area_Dark
		alpha = 0.7
	}

	background = {
		texture = "gfx/interface/illustrations/frontend/pause_bg.dds"

		modify_texture = {
			texture = "gfx/interface/frontend/fade_bg_ingame_menu.dds"
			blend_mode = alphamultiply
		}
	}

	state = {
		name = _show
		using = Animation_FadeIn_Quick

		position = { 0 0 }

		start_sound = {
			soundeffect = "snapshot:/States/MainMenu"
		}

		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/sfx_ui_generic_tab"
		}
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		start_sound = { soundeffect = "event:/SFX/UI/Generic/sfx_ui_generic_tab"}
		position_y = 10
	}

	widget = {
		size = { 100% 100% }
		scale = "[ScaleToFitElementOutside('(int32)1920', '(int32)1080')]"
		parentanchor = left|vcenter

		widget = {
			parentanchor = vcenter
			position = { 172 -80 }

			vbox = {
				set_parent_size_to_minimum = yes

				vbox = {
					margin = { 30 30 }
					spacing = 10

					icon = {
						texture = "gfx/interface/component_masks/ck3_logo.dds"
						size = { 256 232 }

						using = Master_Button_Modify_Texture

						blockoverride "master_color_frame" {
							frame = 4
						}
					}

					spacer = {
						size = { 30 15 }
					}

					button_frontend = {
						size = { 332 58 }
						name = "resume_button"
						text = "RESUME"

						shortcut = "close_window"
						onclick = "[PauseMenu.Resume]"
					}

					vbox = {
						visible = "[GameHasMultiplePlayers]"
						spacing = 5

						background = {
							using = Background_Area_With_Header
							margin_bottom = 5
						}

						text_single = {
							margin = { 10 10 }
							layoutpolicy_horizontal = expanding
							text = "MULTI_PLAYER"
						}

						text_single = {
							visible = "[Not(IsGamePaused)]"
							text = "FRONTEND_NOT_PAUSED"
						}

						text_single = {
							visible = "[IsGamePaused]"
							text = "FRONTEND_IS_PAUSED"
						}

						text_single = {
							layoutpolicy_horizontal = expanding
							margin_left = 10
							text = "FRONTEND_PLAYERS_COUNT"
						}

						button_frontend = {
							name = "lobby_button"
							size = { 325 58 }
							text = "FRONTEND_GOTO_LOBBY"
							onclick = "[PauseMenu.OpenLobby]"
						}

						spacer = {
							size = { 10 10 }
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							maximumsize = { 275 -1 }
							margin = { 10 5 }
							spacing = 5

							text_multi = {
								layoutpolicy_horizontal = expanding
								max_width = 275
								min_width = 275
								margin = { 0 5 }
								autoresize = yes
								text = "FRONTEND_INVITE"
							}

							button_copy = {
								onclick = "[CopyServerID]"
								tooltip = "FRONTEND_COPY_CLIPBUFFER_TT"
							}
						}
					}

					vbox = {
						margin_top = 20
						spacing = 30

						hbox = {
							visible = "[IsIronmanEnabled]"

							ironman_save_icon = {}

							vbox = {
								spacing = 5
								text_label_center = {
									text = IRONMAN_ENABLED
									default_format = "#low"
									using = Font_Size_Medium
								}
								text_multi = {
									max_width = 290
									min_width = 290
									autoresize = yes
									text = "IRONMAN_PAUSE_MENU_EXPLANATION"
									using = Font_Size_Small
								}
							}
						}

						vbox = {
							spacing = 4

							button_frontend = {
								name = "save_button"
								size = { 325 58 }
								text = "SAVE_GAME"
								visible = "[Not( IsIronmanEnabled )]"
								onclick = "[PauseMenu.Save]"
							}

							button_frontend = {
								name = "load_ingame_button"
								size = { 325 58 }
								text = "LOAD_GAME"

								visible = "[Not( GameHasMultiplePlayers )]"
								enabled = "[PauseMenu.CanLoadIngame]"
								onclick = "[PauseMenu.LoadIngame]"
								tooltip = "[PauseMenu.LoadIngameTooltip]"
							}

							button_frontend = {
								name = "open_lobby_button"
								size = { 325 58 }
								text = "OPEN_LOBBY"

								onclick = "[PauseMenu.OpenLobby]"
								visible = "[Not( Or( Or( Or( PauseMenu.IsLobbyOpen, IsIronmanEnabled ), GameIsMultiplayer ), Not( CanOpenLobby ) ) )]"
								tooltip = "[GetOpenLobbyTooltip]"
							}

							button_frontend = {
								name = "open_lobby_button_login"
								size = { 325 58 }
								text = "OPEN_LOBBY"

								onclick = "[OnToggleLoginWindow]"
								visible = "[Not( Or( Or( Or( PauseMenu.IsLobbyOpen, IsIronmanEnabled ), GameIsMultiplayer ), CanOpenLobby ) )]"
								tooltip = "[GetOpenLobbyTooltip]"

								icon_online_offline = {
									parentanchor = right|vcenter
									position = { -15 0 }
									frame = 1
								}
							}

							button_frontend = {
								name = "switch_character_button"
								tooltip = "INGAME_MENU_SWITCH_CHARACTER"
								size = { 325 58 }
								text = "FRONTEND_SWITCH_CHARACTER"

								onclick = "[PauseMenu.SwitchCharacter]"
								visible = "[Not( Or( Or( PauseMenu.IsLobbyOpen, IsIronmanEnabled ), GameHasMultiplePlayers ) )]"
							}

							button_frontend = {
								name = "exit_button"
								size = { 325 58 }
								text = "[PauseMenu.GetExitName]"
								onclick = "[PauseMenu.ExitGame( '(bool)yes' )]"
							}
						}
					}

					hbox = {
						margin_top = 30
						spacing = 60
						# window_lotr_achievements = {}

						pops_login_accountwidget = {
							size = { 35 35 }

							blockoverride "properties" {
								onclick = "[OnToggleLoginWindow]"
							}

							text_single = {
								parentanchor = bottom|hcenter
								position = { 0 20 }
								max_width = 90
								min_width = 90
								align = center
								fontsize = 13

								text = "ACCOUNT"
								default_format = "#clickable"
							}
						}

						button_settings = {
							name = "settings"
							onclick = "[PauseMenu.OpenSettings]"
							size = { 35 35 }

							text_single = {
								parentanchor = bottom|hcenter
								position = { 0 20 }
								max_width = 90
								min_width = 90
								align = center
								fontsize = 13

								text = "SETTINGS"
								default_format = "#clickable"
							}
						}

						button_achievements = {
							name = "achievements"
							onclick = "[OpenAchievements]"
							enabled = "[AreAchievementsAvailable]"
							tooltip = "[GetAchievementsAvailableString]"
							size = { 35 35 }

							text_single = {
								parentanchor = bottom|hcenter
								position = { 0 20 }
								max_width = 90
								min_width = 90
								align = center
								fontsize = 13

								text = "ACHIEVEMENTS_LABEL"
								default_format = "#clickable"
							}
						}

						# button_achievements = {
						# 	name = "lotr_achievements"
						# 	onclick = "[GetVariableSystem.Toggle('lotr_achievement')]"
						
						# 	tooltip = "tab_achievement"
						# 	size = { 35 35 }

						# 	text_single = {
						# 		parentanchor = bottom|hcenter
						# 		position = { 0 20 }
						# 		max_width = 90
						# 		min_width = 90
						# 		align = center
						# 		fontsize = 13

						# 		text = "ACHIEVEMENTS_LABEL"
						# 		default_format = "#clickable"
						# 	}
						# }

						hbox = {
							button_rules = {
								name = "game_rules"
								onclick = "[OpenGameRules]"
								size = { 35 35 }

								text_single = {
									parentanchor = bottom|hcenter
									position = { 0 20 }
									max_width = 90
									min_width = 90
									align = center
									fontsize = 13

									default_format = "#clickable"
									text = "GAME_RULES"
								}
							}

							vbox = {
								datacontext = "[GetGameRules]"
								visible = "[Not( GameHasMultiplePlayers )]"
								ironman_save_icon = {
									visible = "[IsIronmanEnabled]"
									size = { 25 25 }
									tooltip = IRONMAN_ENABLED
								}
								ironman_disabled_icon = {
									visible = "[Not( IsIronmanEnabled )]"
									size = { 25 25 }
									tooltip = IRONMAN_DISBLED
								}
								achievements_enabled_icon = {
									visible = "[CanGetAchievements]"
									size = { 25 25 }
									tooltip = ACHIEVEMENTS_ENABLED
								}
								achievements_disabled_icon = {
									visible = "[Not( CanGetAchievements )]"
									size = { 25 25 }
									tooltip = ACHIEVEMENTS_DISABLED
								}
							}
						}
					}
				}
				clickable_version_number = {
					blockoverride "version_text" {
						text = "VERSION_SHORT"
						align = center
					}
				}
			}
		}
	}
}

window = {
	name = "ingame_load_ingame"
	movable = no
	layer = confirmation
	size = { 100% 100% }

	using = Animation_ShowHide_Quick
	using = Background_Full_Dim

	button_normal = {
		size = { 100% 100% }
		onclick = "[LoadIngameWindow.OnBack]"
	}

	widget_load_game = {
		parentanchor = center
		size = { 1030 70% }

		blockoverride "datamodel_savegames"
		{
			datamodel = "[LoadIngameWindow.GetSaveGames]"
		}

		blockoverride "invalid_saves_click"
		{
			onclick = "[LoadIngameWindow.OnShowInvalidSavegames]"
		}

		blockoverride "invalid_saves_checked"
		{
			checked = "[LoadIngameWindow.ShouldShowInvalidSavegames]"
		}

		blockoverride "button_back"
		{
			onclick = "[LoadIngameWindow.OnBack]"
		}

		blockoverride "selected_save"
		{
			datacontext = "[LoadIngameWindow.GetSelectedSavegame]"
			visible = "[LoadIngameWindow.HasSelectedSavegame]"
		}

		blockoverride "button_delete_save"
		{
			onclick = "[LoadIngameWindow.OnDelete]"
		}

		blockoverride "button_load_save"
		{
			onclick = "[LoadIngameWindow.OnLoad]"
		}
		blockoverride "layout_widget"
		{
			visible = "[Not(LoadIngameWindow.HasSelectedSavegame)]"
		}
	}
}

Types SaveGameTypes
{
	type cloud_save_checkbutton = button_checkbox
	{
		name = "cloud_save" # Name referenced from code
		checked = "[CloudSaveData.ShouldSaveToCloud]"
		tooltip = "[CloudSaveData.GetCloudSaveTooltip]"
		onclick = "[CloudSaveData.OnCloudSaveClick]"
		enabled = "[CloudSaveData.AreCloudSavesAvailable]"
	}
}