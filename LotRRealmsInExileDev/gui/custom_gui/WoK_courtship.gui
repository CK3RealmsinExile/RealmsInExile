types WoK_Courtship {
	type wok_hud_arranged_courtships = flowcontainer {
		name = "wok_courtship_schemes"
		datamodel = "[GetPlayer.MakeScope.GetList('arranged_courtships')]"
		parentanchor = vcenter
		spacing = 5
		margin = { 5 0 }

		item = {
			button_normal = {
				name = "tutorial_highlight_lifestyle_HUD_button"
				#onclick = "[BottomBarSchemeItem.OnClick]"
				datacontext = "[Scope.Scheme]"
				tooltip = "BOTTOMBAR_ARRANGED_COURTSHIP_TOOLTIP"
				size = { 60 60 }

				icon = {
					texture = "gfx/interface/buttons/button_lifestyles_base.dds"
					size = { 100% 100% }
				}

				icon = {
					name = "progress_frame"
					texture = "gfx/interface/progressbars/action_progress_frame.dds"
					size = { 100% 100% }
					parentanchor = center
					alpha = 0.5
				}

				progresspie = {
					name = "progress"
					size = { 60 60 }
					texture = "gfx/interface/progressbars/action_progress_thin.dds"
					framesize = { 124 124 }
					frame = 2
					widgetanchor = top|hcenter
					parentanchor = top|hcenter
					value = "[Scheme.GetProgressBar]"
				}

				highlight_icon = {
					visible = "[Not(Scheme.GetSchemeType.IsHostile)]"
					texture = "gfx/interface/icons/scheme_types/icon_scheme_personal.dds"
					alwaystransparent = yes
					size = { 45 45 }
					parentanchor = center
				}

				highlight_icon = {
					visible = "[Scheme.GetSchemeType.IsHostile]"
					texture = "gfx/interface/icons/icon_scheme.dds"
					alwaystransparent = yes
					size = { 45 45 }
					parentanchor = center
				}
			}
		}
	}
	type wok_intrigue_arranged_courtships = vbox {
		layoutpolicy_horizontal = expanding
		margin_top = 10

		text_label_center = {
			name = "label"
			layoutpolicy_horizontal = expanding

			text = "SCHEME_WINDOW_ARRANGED_COURTSHIPS"
		}

		vbox = {
			name = "known_schemes_grid"
			# visible = "[IntrigueWindow.HasKnownSchemes]"
			datamodel = "[GetPlayer.MakeScope.GetList('arranged_courtships')]"
			layoutpolicy_horizontal = expanding

			item = {
				wok_arranged_courtship_scheme_item = {
					#datacontext = "[Scope.GetScheme]"
					layoutpolicy_horizontal = expanding
				}
			}
		}

		text_multi = {
			name = "no_own_schemes"
			visible = "[Not(DataModelHasItems(GetPlayer.MakeScope.GetList('arranged_courtships')))]"
			layoutpolicy_horizontal = expanding
			minimumsize = { 0 110  }

			text = "SCHEME_WINDOW_NO_ARRANGED_COURTSHIPS"
			default_format = "#low"
			align = center

			background = {
				using = Background_Area
			}
		}
	}
	
	type wok_arranged_courtship_scheme_item = vbox {
		name = "arranged_schemes"
		datacontext = "[Scope.GetScheme]"

		background = {
			using = Background_Area_With_Header
		}
		margin_widget = {
			name = "my_own_scheme_header"
			layoutpolicy_horizontal = expanding
			size = { 0 30 }
			margin_left = 10
			margin_right = 5
			
			text_single = {
				parentanchor = left|vcenter

				text = "SCHEME_WINDOW_ITEM_ARRANGED_COURTSHIP_NAME"
				using = Font_Size_Medium
				align = center

				tooltip = "SCHEME_WINDOW_TT_ITEM"
			}

			# button_cancel = {
			# 	name = "cancel_button"
			# 	parentanchor = right|vcenter
			# 	position = { 0 2 }
			# 	size = { 30 30 }

			# 	onclick = "[SchemeItem.OnCancelClick]"
			# 	enabled = "[SchemeItem.CanCancelScheme]"
			# 	tooltip = "[SchemeItem.GetCancelSchemeDescription]"
			# }
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			margin = { 5 5 }
			margin_left = 15

			flowcontainer = {
				direction = vertical

				background = {
					visible = "[Scheme.IsExposed]"
					using = Status_Bad
					margin_right = 10
					margin_top = 5
				}

				flowcontainer  = {
					spacing = 5
					tooltip = "SCHEME_WINDOW_SUCCESS_TOOLTIP"

					icon = {
						name = success_icon
						size = { 30 30 }

						texture = "gfx/interface/icons/schemes/icon_scheme_success.dds"
					}

					text_single = {
						name = "success"
						text = "SCHEME_WINDOW_SUCCESS_CHANCE"
						using = Font_Size_Medium
						align = nobaseline
					}
				}

				flowcontainer  = {
					visible = "[Scheme.IsSecret]"
					spacing = 5
					tooltip = "SCHEME_WINDOW_SECRECY_TOOLTIP"

					icon = {
						name = "secrecy_icon"
						size = { 30 30 }
						texture = "gfx/interface/icons/schemes/icon_secrecy.dds"
					}

					text_single = {
						name = "secrecy"
						size = { 40 20 }
						text = "SCHEME_WINDOW_SECRECY"
						using = Font_Size_Medium
						align = nobaseline
					}
				}

				icon = {
					visible = "[Scheme.IsExposed]"
					size = { 35 35 }
					texture = "gfx/interface/icons/schemes/icon_discovered_scheme.dds"
					tooltip = "SCHEME_WINDOW_EXPOSED_TOOLTIP"
				}
			}

			# Progressbar
			# vbox = {
			# 	layoutpolicy_horizontal = expanding
			# 	layoutpolicy_vertical = expanding
			# 	margin_top = 13
			# 	progressbar_segmented_chance = {
			# 		name = "progress_courtship"
			# 		tooltip = "SCHEME_ITEM_PROGRESS_TOOLTIP"
			# 		datamodel = "[GetSegmentedProgressChanceBar( GetDefine( 'NScheme', 'STEPS_TO_PROGRESS' ), GetDefine( 'NScheme', 'PROGRESS_FRAMES' ), Scheme.GetProgress, Scheme.GetProgressChance )]"
			# 	}

			# 	text_single = {
			# 		name = "estimated_time"
			# 		text = "SW_ESTIMATED_TIME"
			# 		using = Font_Size_Medium
			# 		tooltip = "[SelectLocalization( Scheme.IsReady, 'SCHEME_READY_TOOLTIP', Scheme.GetEstimatedTimeRemaining )]"
			# 	}

			# 	expand = {}
			# }

			portrait_head = {
				datacontext = "[Scheme.GetTarget]"
				using = tooltip_es
				blockoverride "portrait_button"
				{
					tooltip = "SCHEME_WINDOW_SCHEME_TARGET"
				}
			}
		}
	}
}