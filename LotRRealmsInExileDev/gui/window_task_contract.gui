window = {
	name = "task_contract"
	layer = middle
	size = { 675 830 }
	position = { 450 200 }
	using = Window_Movable

	datacontext = "[TaskContractWindow.GetCurrentTaskContract]"

	state = {
		name = _show
		trigger_on_create = yes

		on_start = "[GetVariableSystem.Clear( 'event_window_mouse_leave')]"

		on_start = "[PdxGuiWidget.AccessChild('letter_paper').TriggerAnimation('show')]"
		on_start = "[PdxGuiWidget.AccessChild('letter_content').TriggerAnimation('show')]"
		on_start = "[PdxGuiWidget.AccessChild('letter_edges').TriggerAnimation('show')]"

		start_sound = {
			soundeffect = "event:/SFX/Events/Panels/sfx_event_panel_letter"
		}
	}

	state = {
		name = _hide
		duration = 1
		on_start = "[PdxGuiWidget.AccessChild('letter_paper').TriggerAnimation('hide')]"
		on_start = "[PdxGuiWidget.AccessChild('letter_content').TriggerAnimation('hide')]"
		on_start = "[PdxGuiWidget.AccessChild('letter_edges').TriggerAnimation('hide')]"
	}

	state = {
		name = _mouse_hierarchy_leave
		on_start = "[GetVariableSystem.Set( 'event_window_mouse_leave', 'true' )]"
	}

	### PAPER ###
	widget = {
		name = "letter_paper"
		size = { 675 45 }
		widgetanchor = center
		parentanchor = center
		alpha = 0

		state = {
			name = show
			next = a
			delay = 0.3

			using = Animation_FadeIn_Standard

			animation = {
				alpha = 1
				bezier = { 0.7 0 0.7 1 }
			}
		}

		state = {
			name = a
			duration = 0.25
			bezier = { 0.3 0 0.7 1 }

			animation = {
				size = { 675 830 }           ############ SIZES NEED TO MATCH
				bezier = { 0.8 0.3 0 1 }
			}

			animation = {
				alpha = 1
				bezier = { 0.7 0 0.7 1 }
			}
		}

		state = {
			name = hide
			size = { 585 -1 }
			using = Animation_FadeOut_Quick
		}

		widget = {
			visible = "[TaskContract.IsEasy]"
			size = { 100% 100% }
			using = Background_Letter
		}

		widget = {
			visible = "[TaskContract.IsMedium]"
			size = { 100% 100% }
			using = Contract_2
		}

		widget = {
			visible = "[TaskContract.IsHard]"
			size = { 100% 100% }
			using = Contract_3

			widget = {
				visible = "[Not(TaskContract.IsCriminal)]"
				position = { -2 0 }
				size = { 22 100% }

				background = {
					texture = "gfx/interface/window_contract/tile_contract_gold.dds"
					spriteType = corneredTiled
					using = Mask_Rough_Edges
				}
			}

			widget = {
				visible = "[Not(TaskContract.IsCriminal)]"
				parentanchor = right
				size = { 22 100% }

				background = {
					texture = "gfx/interface/window_contract/tile_contract_gold.dds"
					spriteType = corneredTiled
					using = Mask_Rough_Edges
				}
			}
		}

		widget = {
			visible = "[TaskContract.IsCriminal]"
			size = { 100% 100% }

			widget = {
				size = { 100% 100% }

				background = {
					texture = "gfx/interface/component_overlay/seamless_noise.dds"
					spriteType = corneredTiled
					texture_density = 0.8
					tintcolor = { 0.4 0.2 0.2 0.2 }
				}
			}

			widget = {
				position = { -2 0 }
				size = { 44 100% }

				background = {
					texture = "gfx/interface/window_contract/tile_contract_red.dds"
					spriteType = corneredTiled
					using = Mask_Rough_Edges
					alpha = 0.8

					modify_texture = {
						texture = "gfx/interface/component_masks/rough_edge_mask.dds"
						blend_mode = alphamultiply
						spriteType = corneredTiled
						texture_density = 3.5
					}
				}
			}

			widget = {
				position = { 2 0 }
				parentanchor = right
				size = { 44 100% }

				background = {
					texture = "gfx/interface/window_contract/tile_contract_red.dds"
					spriteType = corneredTiled
					using = Mask_Rough_Edges

					modify_texture = {
						texture = "gfx/interface/component_masks/rough_edge_mask.dds"
						blend_mode = alphamultiply
						spriteType = corneredTiled
						mirror = horizontal
						texture_density = 3.5
					}
				}
			}
		}

		widget = {
			size = { 650 350 }
			parentanchor = top|hcenter
			visible = "[And(Or(TaskContract.IsHard,TaskContract.IsMedium), Not(TaskContract.IsCriminal))]"

			background = {
				using = Background_Area_Dark
				texture = "gfx/interface/component_masks/patterns/mask_pattern_floral.dds"
				margin_top = 5

				alpha = 0.6

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_clouds.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_scratches.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_inverse.dds"
					blend_mode = alphamultiply
					alpha = 0.8
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_right.dds"
					blend_mode = alphamultiply
					mirror = vertical
					alpha = 0.2
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
					blend_mode = alphamultiply
					mirror = vertical
					alpha = 0.5
				}
			}
		}
	}

	### CONTRACT CONTENT ###
	widget = {
		name = "letter_content"
		widgetanchor = center
		parentanchor = center
		size = { 675 830 }           ############ SIZES NEED TO MATCH
		alpha = 0

		state = {
			name = show
			delay = 0.8

			using = Animation_FadeIn_Standard

			animation = {
				size = { 675 830 }           ############ SIZES NEED TO MATCH

				bezier = { 0.8 0.3 0 1 }
			}

			animation = {
				alpha = 1
				bezier = { 0.7 0 0.7 1 }
			}
		}

		state = {
			name = hide
			using = Animation_FadeOut_Quick
			duration = 0.08
		}

		### Contents start here
		vbox = {
			margin_top = 10
			visible = "[GetScriptedGui('lotr_contract_no_visible_success_or_failure').IsShown(GuiScope.SetRoot( TaskContractWindow.GetCurrentTaskContract.MakeScope ).End)]" #LotR

			### Header
			widget = {
				size = { 678 50 }
				background = {
					visible = "[Not(TaskContract.IsCriminal)]"
					texture = "gfx/interface/window_contract/header_letter.dds"
					alpha = 0.9
				}

				background = {
					visible = "[TaskContract.IsCriminal]"
					texture = "gfx/interface/window_contract/header_letter_crime.dds"
					alpha = 0.9
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					hbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						margin_left = 8
						margin_right = 10

						### Contract icon
						hbox = {
							layoutpolicy_vertical = expanding

							icon = {
								name = "contract_icon"
								size = { 56 56 }
								texture = "[TaskContract.GetType.GetIcon]"
							}

							header_text = {
								name = "header_text"
								text = "[TaskContract.GetType.GetName]"
								margin = { 4 0 }
								margin_bottom = 15
							}
						}

						expand = {}

						### Contract Tier and Stars
						hbox = {
							layoutpolicy_vertical = expanding
							margin_right = 20
							margin_bottom = 15

							background = {
								using = Background_Area_Dark
								alpha = 0.2
								margin_bottom = -15

								modify_texture = {
									texture = "gfx/interface/component_masks/mask_fade_horizontal_thick.dds"
									blend_mode = alphamultiply
								}
							}

							text_single = {
								text = "[SelectLocalization( IsLandlessAdventurer( TaskContract.GetTaker ) , 'TASK_CONTRACT_TIER' , 'GOVERNANCE_ISSUE_TIER')]"
								default_format = "#italic"
								margin_right = 5
							}

							### Filled Stars
							icon_flat_standard_gold = {
								name = "star_fill_easy"
								size = { 22 22 }
								texture = "gfx/interface/icons/flat_icons/star.dds"
							}

							icon_flat_standard_gold = {
								name = "star_fill_medium"
								visible = "[Or( TaskContract.IsMedium, TaskContract.IsHard )]"
								size = { 22 22 }
								texture = "gfx/interface/icons/flat_icons/star.dds"
							}

							icon_flat_standard_gold = {
								name = "star_fill_hard"
								visible = "[TaskContract.IsHard]"
								size = { 22 22 }
								texture = "gfx/interface/icons/flat_icons/star.dds"
							}

							### Empty Stars
							icon_flat_standard_black = {
								name = "star_empty_medium"
								visible = "[TaskContract.IsEasy]"
								size = { 22 22 }
								texture = "gfx/interface/icons/flat_icons/star.dds"
							}

							icon_flat_standard_black = {
								name = "star_empty_hard"
								visible = "[Or( TaskContract.IsEasy, TaskContract.IsMedium )]"
								size = { 22 22 }
								texture = "gfx/interface/icons/flat_icons/star.dds"
							}
						}

						blockoverride "header_text"
						{
						}

						widget = {
							size = { 42 42}

							button_close = {
								shortcut = "close_window"
								tooltip = "CLOSE_TOOLTIP"
								onclick = "[TaskContractWindow.Close]"
							}
						}
					}
				}
			}

			### Portrait and contract desc
			hbox = {
				margin = { 10 5 }
				margin_bottom = 10
				layoutpolicy_horizontal = expanding

				widget = {
					visible = "[Character.IsValid]"
					name = "portrait section"
					size = { 200 200}
					datacontext = "[TaskContract.GetEmployer]"

					icon = {
						name = "portrait_background"
						size = { 240 250 }
						position = { -10 -30 }
						texture = "gfx/interface/window_legend_chronicle/marginalia_portrait_gold_bg.dds"

						modify_texture = {
							visible = "[TaskContract.IsCriminal]"
							texture = "gfx/interface/colors/red.dds"
							alpha = 0.4
							blend_mode = multiply
						}

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_clouds.dds"
							blend_mode = alphamultiply
							spriteType = corneredTiled
							alpha = 0.5
						}

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_scratches.dds"
							blend_mode = alphamultiply
							spriteType = corneredTiled
						}

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_textured_vertical_up.dds"
							blend_mode = alphamultiply
						}

						modify_texture = {
							name = "mask"
							texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
							blend_mode = alphamultiply
						}

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_seamless_torn_edge_vertical.dds"
							spriteType = corneredtiled
							spriteborder_right = 1080
							blend_mode = alphamultiply
						}

						modify_texture = {
							name = "mask"
							texture = "gfx/interface/component_masks/mask_seamless_torn_edge_horizontal.dds"
							spriteType = corneredtiled
							spriteborder_top = 1080
							blend_mode = alphamultiply
						}
					}

					portrait_button = {
						visible = "[Not(TaskContract.IsCriminal)]"
						position = { 0 -30 }
						size = { 200 240 }

						using = portrait_base

						portrait_texture = "[Character.GetAnimatedPortrait( 'environment_hud', 'camera_torso', 'idle', PdxGetWidgetScreenSize( PdxGuiWidget.Self ) )]"
						background_texture = "gfx/portraits/portrait_transparent.dds"
						texture = "gfx/portraits/portrait_transparent.dds"
						mask = "gfx/portraits/portrait_mask_body.dds"
					}

					portrait_button = {
						#visible = "[TaskContract.IsCriminal]"
						visible = "[And(TaskContract.IsCriminal, Not( GreaterThan_CFixedPoint( TaskContract.MakeScope.Var('animation').GetValue, '(CFixedPoint)0' ) ))]"

						#visible = "[And(Not( IsPauseMenuShown ), )]"
						#visible = "[AND(TaskContract.IsCriminal, Not(GetVariableSystem.Exists( 'suppress_fear')))]"
						#Not(GetVariableSystem.Exists( 'hide_bottom_left_HUD'))
						#visible = "[And(Character.IsAlive, Character.HasLandedTitles)]"

						position = { 0 -30 }
						size = { 200 240 }

						using = portrait_base

						portrait_texture = "[Character.GetAnimatedPortrait( 'environment_hud', 'camera_torso', 'fear', PdxGetWidgetScreenSize( PdxGuiWidget.Self ) )]"
						background_texture = "gfx/portraits/portrait_transparent.dds"
						texture = "gfx/portraits/portrait_transparent.dds"
						mask = "gfx/portraits/portrait_mask_body.dds"
					}

					portrait_button = {
						visible = "[And(TaskContract.IsCriminal, GreaterThan_CFixedPoint( TaskContract.MakeScope.Var('animation').GetValue, '(CFixedPoint)0' ) )]"

						position = { 0 -30 }
						size = { 200 240 }

						using = portrait_base

						portrait_texture = "[Character.GetAnimatedPortrait( 'environment_hud', 'camera_torso', 'schadenfreude', PdxGetWidgetScreenSize( PdxGuiWidget.Self ) )]"
						background_texture = "gfx/portraits/portrait_transparent.dds"
						texture = "gfx/portraits/portrait_transparent.dds"
						mask = "gfx/portraits/portrait_mask_body.dds"
					}

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						widget = {
							size = { 200 200 }

							button = {
								name = "name_plate"

								parentanchor = bottom
								
								position = { 10 -10 }
								size = { 180 36 }
								using = Background_Letter
								alpha = 0.9

								datacontext = "[TaskContract.GetEmployer]"
								onclick = "[DefaultOnCharacterClick( Character.GetID )]"

								tooltipwidget = {
									container_character_tooltip = {}
								}

								text_multi = {
									min_width = 144
									max_width = 144
									min_height = 34
									max_height = 34

									position = { 30 1 }

									text = "[Character.GetTitledFirstNameNoTooltip]"
									default_format = "#light_background"
									align = vcenter|nobaseline|center
									using = Font_Size_Medium
									using = Font_Type_Flavor
									using = Text_Light_Background_Overrides
								}
							}

							coa_realm_small_crown = {
								datacontext = "[TaskContract.GetEmployer]"
								visible = "[And(Character.IsAlive, Character.HasLandedTitles)]"
								parentanchor = bottom|left
								position = { 3 -2 }
								scale = 0.85
							}

						}

					}

				}

				### Contract desc
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					expand = {}

					vbox = {
						icon = {
							visible = "[Not(TaskContract.IsCriminal)]"
							name = "decal"
							size = { 262 20 }
							texture = "gfx/interface/window_legend_chronicle/marginalia_divider.dds"
							alpha = 0.5
							mirror = vertical
						}

						icon = {
							visible = "[TaskContract.IsCriminal]"
							name = "decal_criminal"
							size = { 340 24 }
							texture = "gfx/interface/window_contract/decoration_criminal.dds"
							alpha = 0.8
							mirror = vertical
						}

						### Desc title
						hbox = {
							layoutpolicy_horizontal = expanding

							text_single = {
								margin = { 0 8 }
								margin_right = 20
								max_width = 440

								text = "[TaskContract.GetType.GetDescriptionTitle]"
								using = Font_Type_Flavor
								using = Font_Size_Big
								default_format = "#light_background"
							}

							expand = {}
						}
					}

					vbox = {

						### Desc
						hbox = {
							layoutpolicy_horizontal = expanding
							margin_bottom = 10

							text_multi = {
								margin_right = 20
								max_width = 440
								autoresize = yes

								text = "[TaskContract.GetTaskContractDescription]"
								default_format = "#light_background;italic"
								using = Font_Size_Medium
							}

							expand = {}
						}

						icon = {
							visible = "[Not(TaskContract.IsCriminal)]"
							name = "decal"
							size = { 262 20 }
							texture = "gfx/interface/window_legend_chronicle/marginalia_divider.dds"
							alpha = 0.5
						}

						icon = {
							visible = "[TaskContract.IsCriminal]"
							name = "decal_criminal"
							size = { 340 24 }
							texture = "gfx/interface/window_contract/decoration_criminal.dds"
							alpha = 0.8
							mirror = horizontal
						}
					}

					expand = {}
				}

				expand = {}
			}

			### Contract request
			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 20 10 }

				background = {
					margin = { -10 0}
					texture = "gfx/interface/colors/white.dds"
					tintcolor = { 0.1 0.05 0.05 0.6 }

					using = Mask_Rough_Edges

					modify_texture = {
						texture = "gfx/interface/component_masks/event_effect_mask.dds"
						blend_mode = alphaMultiply
					}
				}

				text_multi = {
					max_width = 620
					autoresize = yes
					align = center
					text = "[TaskContract.GetTaskContractRequest]"
					default_format = "#high;italic"
				}

			}

			### Success and Failure breakdowns
			vbox = {
				margin = { 20 5 }
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				
				background = {
					margin = { -20 -5 }
					using = Background_Area_Dark
					alpha = 0.8

					using = Mask_Rough_Edges

					modify_texture = {
						texture = "gfx/interface/component_overlay/seamless_noise.dds"
						spriteType = corneredtiled
						texture_density =  2
						alpha = 0.4
			
					}
				}

				# Tabs setup
				oncreate = "[BindTabsContext]"
				oncreate = "[PdxGuiTabs.AddTab( 'success' )]"
				oncreate = "[PdxGuiTabs.AddTab( 'failure' )]"

				### Tabs header

				hbox_tab_buttons = {
					name = "tab_buttons"

					blockoverride "button_tab"
					{
						texture = "gfx/interface/buttons/button_tab_light_bg.dds"
					}

					blockoverride "tab_name"
					{
						text = "[PdxGuiTabItem.LocalizeTab( 'task_contract_tab' )]"
						default_format = "#high"
					}
				}

				### Success Tab
				scrollbox = {
					name = "tab_success"
					visible = "[PdxGuiTabs.IsTabSet( 'success' )]"

					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					using = Animation_Tab_Switch

					blockoverride "scrollbox_margins" {
						margin = { 12 4 }
					}

					blockoverride "scrollbox_content"
					{
						vbox = {
							text_multi = {
								margin_top = 8
								max_width = 600
								min_width = 600
								autoresize = yes

								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								text = "[TaskContract.GetRewardEffectDescription( '(bool)yes' )]"
								format_override = { weak medium }
							}
						}
					}
				}

				### Failure Tab
				scrollbox = {
					name = "tab_failure"
					visible = "[PdxGuiTabs.IsTabSet( 'failure' )]"

					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					using = Animation_Tab_Switch

					blockoverride "scrollbox_margins" {
						margin = { 12 4 }
					}

					blockoverride "scrollbox_content"
					{
						vbox = {
							text_multi = {
								margin_top = 8
								max_width = 600
								min_width = 600
								autoresize = yes

								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								text = "[TaskContract.GetRewardEffectDescription( '(bool)no' )]"

								format_override = { weak medium }
							}
						}
					}
				}
			}

			### Footer buttons
			hbox = {
				name = "footer_buttons"
				margin = { 10 0 }
				margin_bottom = 34
				layoutpolicy_horizontal = expanding

				hbox = {
					margin = { 0 10 }
					spacing = 60
					layoutpolicy_horizontal = expanding

					expand = {}

					### Accept button
					button_primary_big = {
						size = { 250 42 }

						text = "[TaskContractWindow.GetAcceptText]"

						visible = "[Not( Or( TaskContractWindow.IsContractStarted, TaskContractWindow.IsTravelingDueToCurrentContract ) )]"

						enabled = "[IsValidCommand( TaskContract.AcceptTaskContract )]"
						onclick = "[TaskContractWindow.StartContract]"
						onclick = "[TaskContractWindow.Close]"
						tooltip = "[TaskContractWindow.GetTooltip]"
						tooltip_when_disabled = "[GetCommandDesc( TaskContract.AcceptTaskContract )]"
						using = tooltip_se
					}

					button_primary_big = {
						size = { 250 42 }

						text = "TASK_CONTRACT_ABANDON"

						visible = "[TaskContractWindow.IsContractStarted]"

						enabled = "[IsValidCommand( TaskContract.InvalidateTaskContract )]"
						onclick = "[CreateCommandPopup( TaskContract.InvalidateTaskContract )]"
						onclick = "[TaskContractWindow.Close]"

						tooltip = "[TaskContractWindow.GetInvalidateTooltip]"
						using = tooltip_se
					}

					expand = {}
				}

				expand = {}
			}
		}
		lotr_no_success_failure_window = {} #LotR 
	}

	widget = {
		name = "letter_edges"
		size = { 675 45 }
		widgetanchor = center
		parentanchor = center
		alpha = 0

		state = {
			name = show
			next = a
			delay = 0.3

			using = Animation_FadeIn_Standard

			animation = {
				alpha = 1
				bezier = { 0.7 0 0.7 1 }
			}
		}

		state = {
			name = a
			duration = 0.25
			bezier = { 0.3 0 0.7 1 }

			animation = {
				size = { 675 830 }           ############ SIZES NEED TO MATCH
				bezier = { 0.8 0.3 0 1 }
			}

			animation = {
				alpha = 1
				bezier = { 0.7 0 0.7 1 }
			}
		}

		state = {
			name = hide
			using = Animation_FadeOut_Quick
			size = { 585 -1 }
		}

		widget = {
			widgetanchor = center
			parentanchor = top|hcenter
			position = { 0 8 }
			size = { 700 40 }

			visible = "[Or(TaskContract.IsEasy, TaskContract.IsCriminal)]"

			background = {
				texture = "gfx/interface/window_event/letter_event_edge_top.dds"
				spriteType = Corneredstretched
				spriteborder = { 35 5 }
			}
		}

		widget = {
			widgetanchor = center
			parentanchor = bottom|hcenter
			position = { 0 -7 }
			size = { 700 40 }

			visible = "[Or(TaskContract.IsEasy, TaskContract.IsCriminal)]"

			background = {
				texture = "gfx/interface/window_event/letter_event_edge_bottom.dds"
				spriteType = Corneredstretched
				spriteborder = { 35 5 }
			}
		}

		widget = {
			widgetanchor = center
			parentanchor = bottom|hcenter
			position = { 0 -7 }
			size = { 750 40 }

			visible = "[And(Or(TaskContract.IsHard,TaskContract.IsMedium),Not(TaskContract.IsCriminal))]"

			background = {
				texture = "gfx/interface/window_contract/contract_edge_top.dds"
				spriteType = Corneredstretched
				spriteborder = { 35 5 }
			}
		}

		widget = {
			widgetanchor = center
			parentanchor = top|hcenter
			position = { 0 8 }
			size = { 750 40 }

			visible = "[And(Or(TaskContract.IsHard,TaskContract.IsMedium),Not(TaskContract.IsCriminal))]"

			background = {
				texture = "gfx/interface/window_contract/contract_edge_top.dds"
				spriteType = Corneredstretched
				spriteborder = { 35 5 }
			}
		}
	}
}

types lotr_story_content {
	type lotr_no_success_failure_window = vbox {
		margin_top = 10
		visible = "[Not(GetScriptedGui('lotr_contract_no_visible_success_or_failure').IsShown(GuiScope.SetRoot( TaskContractWindow.GetCurrentTaskContract.MakeScope ).End))]"

		### Header
		widget = {
			size = { 678 50 }
			background = {
				visible = "[Not(TaskContract.IsCriminal)]"
				texture = "gfx/interface/window_contract/header_letter.dds"
				alpha = 0.9
			}

			background = {
				visible = "[TaskContract.IsCriminal]"
				texture = "gfx/interface/window_contract/header_letter_crime.dds"
				alpha = 0.9
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_left = 8
					margin_right = 10

					### Contract icon
					hbox = {
						layoutpolicy_vertical = expanding

						icon = {
							name = "contract_icon"
							size = { 56 56 }
							texture = "[TaskContract.GetType.GetIcon]"
						}

						header_text = {
							name = "header_text"
							text = "[TaskContract.GetType.GetName]"
							margin = { 4 0 }
							margin_bottom = 15
						}
					}

					expand = {}

					### Contract Tier and Stars
					hbox = {
						layoutpolicy_vertical = expanding
						margin_right = 20
						margin_bottom = 15

						background = {
							using = Background_Area_Dark
							alpha = 0.2
							margin_bottom = -15

							modify_texture = {
								texture = "gfx/interface/component_masks/mask_fade_horizontal_thick.dds"
								blend_mode = alphamultiply
							}
						}

						text_single = {
							text = "[SelectLocalization( IsLandlessAdventurer( TaskContract.GetTaker ) , 'TASK_CONTRACT_TIER' , 'GOVERNANCE_ISSUE_TIER')]"
							default_format = "#italic"
							margin_right = 5
						}

						### Filled Stars
						icon_flat_standard_gold = {
							name = "star_fill_easy"
							size = { 22 22 }
							texture = "gfx/interface/icons/flat_icons/star.dds"
						}

						icon_flat_standard_gold = {
							name = "star_fill_medium"
							visible = "[Or( TaskContract.IsMedium, TaskContract.IsHard )]"
							size = { 22 22 }
							texture = "gfx/interface/icons/flat_icons/star.dds"
						}

						icon_flat_standard_gold = {
							name = "star_fill_hard"
							visible = "[TaskContract.IsHard]"
							size = { 22 22 }
							texture = "gfx/interface/icons/flat_icons/star.dds"
						}

						### Empty Stars
						icon_flat_standard_black = {
							name = "star_empty_medium"
							visible = "[TaskContract.IsEasy]"
							size = { 22 22 }
							texture = "gfx/interface/icons/flat_icons/star.dds"
						}

						icon_flat_standard_black = {
							name = "star_empty_hard"
							visible = "[Or( TaskContract.IsEasy, TaskContract.IsMedium )]"
							size = { 22 22 }
							texture = "gfx/interface/icons/flat_icons/star.dds"
						}
					}

					blockoverride "header_text"
					{
					}

					widget = {
						size = { 42 42}

						button_close = {
							shortcut = "close_window"
							tooltip = "CLOSE_TOOLTIP"
							onclick = "[TaskContractWindow.Close]"
						}
					}
				}
			}
		}

		expand = {
			visible = "[GetScriptedGui('lotr_contract_no_visible_employer_portrait').IsShown(GuiScope.SetRoot( TaskContractWindow.GetCurrentTaskContract.MakeScope ).End)]"
		}

		widget = {
			visible = "[And(Character.IsValid, Not(GetScriptedGui('lotr_contract_no_visible_employer_portrait').IsShown(GuiScope.SetRoot( TaskContractWindow.GetCurrentTaskContract.MakeScope ).End)))]"
			name = "portrait section"
			size = { 200 200}
			datacontext = "[TaskContract.GetEmployer]"

			icon = {
				name = "portrait_background"
				size = { 240 250 }
				position = { -10 -30 }
				texture = "gfx/interface/window_legend_chronicle/marginalia_portrait_gold_bg.dds"

				modify_texture = {
					visible = "[TaskContract.IsCriminal]"
					texture = "gfx/interface/colors/red.dds"
					alpha = 0.4
					blend_mode = multiply
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_clouds.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
					alpha = 0.5
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_scratches.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_textured_vertical_up.dds"
					blend_mode = alphamultiply
				}

				modify_texture = {
					name = "mask"
					texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
					blend_mode = alphamultiply
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_seamless_torn_edge_vertical.dds"
					spriteType = corneredtiled
					spriteborder_right = 1080
					blend_mode = alphamultiply
				}

				modify_texture = {
					name = "mask"
					texture = "gfx/interface/component_masks/mask_seamless_torn_edge_horizontal.dds"
					spriteType = corneredtiled
					spriteborder_top = 1080
					blend_mode = alphamultiply
				}
			}

			portrait_button = {
				visible = "[Not(TaskContract.IsCriminal)]"
				position = { 0 -30 }
				size = { 200 240 }

				using = portrait_base

				portrait_texture = "[Character.GetAnimatedPortrait( 'environment_hud', 'camera_torso', 'idle', PdxGetWidgetScreenSize( PdxGuiWidget.Self ) )]"
				background_texture = "gfx/portraits/portrait_transparent.dds"
				texture = "gfx/portraits/portrait_transparent.dds"
				mask = "gfx/portraits/portrait_mask_body.dds"
			}

			portrait_button = {
				#visible = "[TaskContract.IsCriminal]"
				visible = "[And(TaskContract.IsCriminal, Not( GreaterThan_CFixedPoint( TaskContract.MakeScope.Var('animation').GetValue, '(CFixedPoint)0' ) ))]"

				#visible = "[And(Not( IsPauseMenuShown ), )]"
				#visible = "[AND(TaskContract.IsCriminal, Not(GetVariableSystem.Exists( 'suppress_fear')))]"
				#Not(GetVariableSystem.Exists( 'hide_bottom_left_HUD'))
				#visible = "[And(Character.IsAlive, Character.HasLandedTitles)]"

				position = { 0 -30 }
				size = { 200 240 }

				using = portrait_base

				portrait_texture = "[Character.GetAnimatedPortrait( 'environment_hud', 'camera_torso', 'fear', PdxGetWidgetScreenSize( PdxGuiWidget.Self ) )]"
				background_texture = "gfx/portraits/portrait_transparent.dds"
				texture = "gfx/portraits/portrait_transparent.dds"
				mask = "gfx/portraits/portrait_mask_body.dds"
			}

			portrait_button = {
				visible = "[And(TaskContract.IsCriminal, GreaterThan_CFixedPoint( TaskContract.MakeScope.Var('animation').GetValue, '(CFixedPoint)0' ) )]"

				position = { 0 -30 }
				size = { 200 240 }

				using = portrait_base

				portrait_texture = "[Character.GetAnimatedPortrait( 'environment_hud', 'camera_torso', 'schadenfreude', PdxGetWidgetScreenSize( PdxGuiWidget.Self ) )]"
				background_texture = "gfx/portraits/portrait_transparent.dds"
				texture = "gfx/portraits/portrait_transparent.dds"
				mask = "gfx/portraits/portrait_mask_body.dds"
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				widget = {
					size = { 200 200 }

					button = {
						name = "name_plate"

						parentanchor = bottom
						
						position = { 10 -10 }
						size = { 180 36 }
						using = Background_Letter
						alpha = 0.9

						datacontext = "[TaskContract.GetEmployer]"
						onclick = "[DefaultOnCharacterClick( Character.GetID )]"

						tooltipwidget = {
							container_character_tooltip = {}
						}

						text_multi = {
							min_width = 144
							max_width = 144
							min_height = 34
							max_height = 34

							position = { 30 1 }

							text = "[Character.GetTitledFirstNameNoTooltip]"
							default_format = "#light_background"
							align = vcenter|nobaseline|center
							using = Font_Size_Medium
							using = Font_Type_Flavor
							using = Text_Light_Background_Overrides
						}
					}

					coa_realm_small_crown = {
						datacontext = "[TaskContract.GetEmployer]"
						visible = "[And(Character.IsAlive, Character.HasLandedTitles)]"
						parentanchor = bottom|left
						position = { 3 -2 }
						scale = 0.85
					}

				}

			}

		}

		### Portrait and contract desc
		hbox = {
			margin = { 10 5 }
			margin_bottom = 10
			layoutpolicy_horizontal = expanding

			### Contract desc
			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				expand = {}

				vbox = {
					icon = {
						visible = "[Not(TaskContract.IsCriminal)]"
						name = "decal"
						size = { 400 20 }
						texture = "gfx/interface/window_legend_chronicle/marginalia_divider.dds"
						alpha = 0.5
						mirror = vertical
					}

					icon = {
						visible = "[TaskContract.IsCriminal]"
						name = "decal_criminal"
						size = { 400 24 }
						texture = "gfx/interface/window_contract/decoration_criminal.dds"
						alpha = 0.8
						mirror = horizontal
					}

					### Desc title
					hbox = {
						layoutpolicy_horizontal = expanding

						text_single = {
							margin = { 0 8 }
							margin_right = 20
							max_width = 440

							text = "[TaskContract.GetType.GetDescriptionTitle]"
							using = Font_Type_Flavor
							using = Font_Size_Big
							default_format = "#light_background"
						}
					}
				}

				vbox = {

					### Desc
					hbox = {	
						layoutpolicy_horizontal = expanding
						margin_bottom = 10

						text_multi = {
							margin_right = 20
							max_width = 600
							autoresize = yes

							text = "[TaskContract.GetTaskContractDescription]"
							default_format = "#light_background;italic"
							using = Font_Size_Medium
						}

						expand = {}
					}

					icon = {
						visible = "[Not(TaskContract.IsCriminal)]"
						name = "decal"
						size = { 400 20 }
						texture = "gfx/interface/window_legend_chronicle/marginalia_divider.dds"
						alpha = 0.5
					}

					icon = {
						visible = "[TaskContract.IsCriminal]"
						name = "decal_criminal"
						size = { 400 24 }
						texture = "gfx/interface/window_contract/decoration_criminal.dds"
						alpha = 0.8
						mirror = horizontal
					}
				}

				expand = {}
			}

			expand = {}
		}
		expand = {}

		widget = {
			size = { 600 200 }
			icon = {
				size = { 600 250 }
				position = { -10 -30 }
				texture = "[GetIllustration( 'lotr_bountig_contract_illustrations' ).GetTexture( TaskContractWindow.GetCurrentTaskContract.MakeScope )]"

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_clouds.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
					alpha = 0.5
				}

				modify_texture = {
					block "scratch_texture" {
						texture = "gfx/interface/component_masks/mask_scratches.dds"
					}
					blend_mode = alphamultiply
					spriteType = corneredTiled
					block "scratch_alpha" {
						alpha = 0.35
					}
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_textured_vertical_up.dds"
					blend_mode = alphamultiply
				}

				modify_texture = {
					name = "mask"
					texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
					blend_mode = alphamultiply
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_seamless_torn_edge_vertical.dds"
					spriteType = corneredtiled
					spriteborder_right = 1080
					blend_mode = alphamultiply
				}

				modify_texture = {
					name = "mask"
					texture = "gfx/interface/component_masks/mask_seamless_torn_edge_horizontal.dds"
					spriteType = corneredtiled
					spriteborder_top = 1080
					blend_mode = alphamultiply
				}
			}
		}

		### Contract request
		hbox = {
			layoutpolicy_horizontal = expanding
			margin = { 20 10 }

			background = {
				margin = { -10 0}
				texture = "gfx/interface/colors/white.dds"
				tintcolor = { 0.1 0.05 0.05 0.6 }

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/event_effect_mask.dds"
					blend_mode = alphaMultiply
				}
			}

			text_multi = {
				max_width = 620
				autoresize = yes
				align = center
				text = "[TaskContract.GetTaskContractRequest]"
				default_format = "#high;italic"
			}

		}
		### Footer buttons
		hbox = {
			name = "footer_buttons"
			margin = { 10 0 }
			margin_bottom = 34
			layoutpolicy_horizontal = expanding

			hbox = {
				margin = { 0 10 }
				spacing = 60
				layoutpolicy_horizontal = expanding

				expand = {}

				### Accept button
				button_primary_big = {
					size = { 250 42 }

					text = "[TaskContractWindow.GetAcceptText]"

					visible = "[Not( Or( TaskContractWindow.IsContractStarted, TaskContractWindow.IsTravelingDueToCurrentContract ) )]"

					enabled = "[IsValidCommand( TaskContract.AcceptTaskContract )]"
					onclick = "[TaskContractWindow.StartContract]"
					onclick = "[TaskContractWindow.Close]"
					tooltip = "[TaskContractWindow.GetTooltip]"
					tooltip_when_disabled = "[GetCommandDesc( TaskContract.AcceptTaskContract )]"
					using = tooltip_se
				}

				button_primary_big = {
					size = { 250 42 }

					text = "TASK_CONTRACT_ABANDON"

					visible = "[TaskContractWindow.IsContractStarted]"

					enabled = "[IsValidCommand( TaskContract.InvalidateTaskContract )]"
					onclick = "[CreateCommandPopup( TaskContract.InvalidateTaskContract )]"
					onclick = "[TaskContractWindow.Close]"

					tooltip = "[TaskContractWindow.GetInvalidateTooltip]"
					using = tooltip_se
				}

				expand = {}
			}

			expand = {}
		}
	}

	type lotr_no_success_failure_window_with_video = vbox {
		name = "lotr_vbox"
		margin_top = 10
		visible = "[Not(GetScriptedGui('lotr_contract_no_visible_success_or_failure').IsShown(GuiScope.SetRoot( TaskContractWindow.GetCurrentTaskContract.MakeScope ).End))]"

		### Header
		widget = {
			size = { 678 50 }
			background = {
				visible = "[Not(TaskContract.IsCriminal)]"
				texture = "gfx/interface/window_contract/header_letter.dds"
				alpha = 0.9
			}

			background = {
				visible = "[TaskContract.IsCriminal]"
				texture = "gfx/interface/window_contract/header_letter_crime.dds"
				alpha = 0.9
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_left = 8
					margin_right = 10

					### Contract icon
					hbox = {
						layoutpolicy_vertical = expanding

						icon = {
							name = "contract_icon"
							size = { 56 56 }
							texture = "[TaskContract.GetType.GetIcon]"
						}

						header_text = {
							name = "header_text"
							text = "[TaskContract.GetType.GetName]"
							margin = { 4 0 }
							margin_bottom = 15
						}
					}

					expand = {}

					### Contract Tier and Stars
					hbox = {
						layoutpolicy_vertical = expanding
						margin_right = 20
						margin_bottom = 15

						background = {
							using = Background_Area_Dark
							alpha = 0.2
							margin_bottom = -15

							modify_texture = {
								texture = "gfx/interface/component_masks/mask_fade_horizontal_thick.dds"
								blend_mode = alphamultiply
							}
						}

						text_single = {
							text = "[SelectLocalization( IsLandlessAdventurer( TaskContract.GetTaker ) , 'TASK_CONTRACT_TIER' , 'GOVERNANCE_ISSUE_TIER')]"
							default_format = "#italic"
							margin_right = 5
						}

						### Filled Stars
						icon_flat_standard_gold = {
							name = "star_fill_easy"
							size = { 22 22 }
							texture = "gfx/interface/icons/flat_icons/star.dds"
						}

						icon_flat_standard_gold = {
							name = "star_fill_medium"
							visible = "[Or( TaskContract.IsMedium, TaskContract.IsHard )]"
							size = { 22 22 }
							texture = "gfx/interface/icons/flat_icons/star.dds"
						}

						icon_flat_standard_gold = {
							name = "star_fill_hard"
							visible = "[TaskContract.IsHard]"
							size = { 22 22 }
							texture = "gfx/interface/icons/flat_icons/star.dds"
						}

						### Empty Stars
						icon_flat_standard_black = {
							name = "star_empty_medium"
							visible = "[TaskContract.IsEasy]"
							size = { 22 22 }
							texture = "gfx/interface/icons/flat_icons/star.dds"
						}

						icon_flat_standard_black = {
							name = "star_empty_hard"
							visible = "[Or( TaskContract.IsEasy, TaskContract.IsMedium )]"
							size = { 22 22 }
							texture = "gfx/interface/icons/flat_icons/star.dds"
						}
					}

					blockoverride "header_text"
					{
					}

					widget = {
						size = { 42 42}

						button_close = {
							shortcut = "close_window"
							tooltip = "CLOSE_TOOLTIP"
							onclick = "[TaskContractWindow.Close]"
						}
					}
				}
			}
		}

		widget = {
			visible = "[Character.IsValid]"
			name = "portrait section"
			size = { 200 200}
			datacontext = "[TaskContract.GetEmployer]"

			icon = {
				name = "portrait_background"
				size = { 240 250 }
				position = { -10 -30 }
				texture = "gfx/interface/window_legend_chronicle/marginalia_portrait_gold_bg.dds"

				modify_texture = {
					visible = "[TaskContract.IsCriminal]"
					texture = "gfx/interface/colors/red.dds"
					alpha = 0.4
					blend_mode = multiply
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_clouds.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
					alpha = 0.5
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_scratches.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_textured_vertical_up.dds"
					blend_mode = alphamultiply
				}

				modify_texture = {
					name = "mask"
					texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
					blend_mode = alphamultiply
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_seamless_torn_edge_vertical.dds"
					spriteType = corneredtiled
					spriteborder_right = 1080
					blend_mode = alphamultiply
				}

				modify_texture = {
					name = "mask"
					texture = "gfx/interface/component_masks/mask_seamless_torn_edge_horizontal.dds"
					spriteType = corneredtiled
					spriteborder_top = 1080
					blend_mode = alphamultiply
				}
			}

			portrait_button = {
				visible = "[Not(TaskContract.IsCriminal)]"
				position = { 0 -30 }
				size = { 200 240 }

				using = portrait_base

				portrait_texture = "[Character.GetAnimatedPortrait( 'environment_hud', 'camera_torso', 'idle', PdxGetWidgetScreenSize( PdxGuiWidget.Self ) )]"
				background_texture = "gfx/portraits/portrait_transparent.dds"
				texture = "gfx/portraits/portrait_transparent.dds"
				mask = "gfx/portraits/portrait_mask_body.dds"
			}

			portrait_button = {
				visible = "[And(TaskContract.IsCriminal, Not( GreaterThan_CFixedPoint( TaskContract.MakeScope.Var('animation').GetValue, '(CFixedPoint)0' ) ))]"

				position = { 0 -30 }
				size = { 200 240 }

				using = portrait_base

				portrait_texture = "[Character.GetAnimatedPortrait( 'environment_hud', 'camera_torso', 'fear', PdxGetWidgetScreenSize( PdxGuiWidget.Self ) )]"
				background_texture = "gfx/portraits/portrait_transparent.dds"
				texture = "gfx/portraits/portrait_transparent.dds"
				mask = "gfx/portraits/portrait_mask_body.dds"
			}

			portrait_button = {
				visible = "[And(TaskContract.IsCriminal, GreaterThan_CFixedPoint( TaskContract.MakeScope.Var('animation').GetValue, '(CFixedPoint)0' ) )]"

				position = { 0 -30 }
				size = { 200 240 }

				using = portrait_base

				portrait_texture = "[Character.GetAnimatedPortrait( 'environment_hud', 'camera_torso', 'schadenfreude', PdxGetWidgetScreenSize( PdxGuiWidget.Self ) )]"
				background_texture = "gfx/portraits/portrait_transparent.dds"
				texture = "gfx/portraits/portrait_transparent.dds"
				mask = "gfx/portraits/portrait_mask_body.dds"
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				widget = {
					size = { 200 200 }

					button = {
						name = "name_plate"

						parentanchor = bottom
						
						position = { 10 -10 }
						size = { 180 36 }
						using = Background_Letter
						alpha = 0.9

						datacontext = "[TaskContract.GetEmployer]"
						onclick = "[DefaultOnCharacterClick( Character.GetID )]"

						tooltipwidget = {
							container_character_tooltip = {}
						}

						text_multi = {
							min_width = 144
							max_width = 144
							min_height = 34
							max_height = 34

							position = { 30 1 }

							text = "[Character.GetTitledFirstNameNoTooltip]"
							default_format = "#light_background"
							align = vcenter|nobaseline|center
							using = Font_Size_Medium
							using = Font_Type_Flavor
							using = Text_Light_Background_Overrides
						}
					}

					coa_realm_small_crown = {
						datacontext = "[TaskContract.GetEmployer]"
						visible = "[And(Character.IsAlive, Character.HasLandedTitles)]"
						parentanchor = bottom|left
						position = { 3 -2 }
						scale = 0.85
					}

				}

			}

		}

		### Portrait and contract desc
		hbox = {
			margin = { 10 5 }
			margin_bottom = 10
			layoutpolicy_horizontal = expanding

			### Contract desc
			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				expand = {}

				vbox = {
					icon = {
						visible = "[Not(TaskContract.IsCriminal)]"
						name = "decal"
						size = { 400 20 }
						texture = "gfx/interface/window_legend_chronicle/marginalia_divider.dds"
						alpha = 0.5
						mirror = vertical
					}

					icon = {
						visible = "[TaskContract.IsCriminal]"
						name = "decal_criminal"
						size = { 400 24 }
						texture = "gfx/interface/window_contract/decoration_criminal.dds"
						alpha = 0.8
						mirror = horizontal
					}

					### Desc title
					hbox = {
						layoutpolicy_horizontal = expanding

						text_single = {
							margin = { 0 8 }
							margin_right = 20
							max_width = 440

							text = "[TaskContract.GetType.GetDescriptionTitle]"
							using = Font_Type_Flavor
							using = Font_Size_Big
							default_format = "#light_background"
						}
					}
				}

				vbox = {

					### Desc
					hbox = {	
						layoutpolicy_horizontal = expanding
						margin_bottom = 10

						text_multi = {
							margin_right = 20
							max_width = 600
							autoresize = yes

							text = "[TaskContract.GetTaskContractDescription]"
							default_format = "#light_background;italic"
							using = Font_Size_Medium
						}

						expand = {}
					}

					icon = {
						visible = "[Not(TaskContract.IsCriminal)]"
						name = "decal"
						size = { 400 20 }
						texture = "gfx/interface/window_legend_chronicle/marginalia_divider.dds"
						alpha = 0.5
					}

					icon = {
						visible = "[TaskContract.IsCriminal]"
						name = "decal_criminal"
						size = { 400 24 }
						texture = "gfx/interface/window_contract/decoration_criminal.dds"
						alpha = 0.8
						mirror = horizontal
					}
				}

				expand = {}
			}

			expand = {}
		}
		expand = {}

		widget = {
			size = { 600 200 }
			video_icon = {
				name = "lotr_video_test"
				size = { 600 250 }
				position = { -10 -30 }
				video = "gfx/interface/animation/success_toast.bk2"
				loop = no
				restart_on_show = yes

				state = {
					name = show
					size = { 600 -1 }
					next = a
				}
				state = {
					name = a
					delay = 0.6
					duration = 0.25
					animation = {
						size = { 600 250 }
						bezier = { 0.8 0.3 0 1 }
					}
					
				}

				state = {
					name = hide
					using = Animation_FadeOut_Quick
					size = { 600 -1 }
					next = b
				}
				state = {
					name = b
					delay = 1
					size = { 600 250 }
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_clouds.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
					alpha = 0.5
				}

				modify_texture = {
					block "scratch_texture" {
						texture = "gfx/interface/component_masks/mask_scratches.dds"
					}
					blend_mode = alphamultiply
					spriteType = corneredTiled
					block "scratch_alpha" {
						alpha = 0.35
					}
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_textured_vertical_up.dds"
					blend_mode = alphamultiply
				}

				modify_texture = {
					name = "mask"
					texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
					blend_mode = alphamultiply
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_seamless_torn_edge_vertical.dds"
					spriteType = corneredtiled
					spriteborder_right = 1080
					blend_mode = alphamultiply
				}

				modify_texture = {
					name = "mask"
					texture = "gfx/interface/component_masks/mask_seamless_torn_edge_horizontal.dds"
					spriteType = corneredtiled
					spriteborder_top = 1080
					blend_mode = alphamultiply
				}
			}
		}

		### Contract request
		hbox = {
			layoutpolicy_horizontal = expanding
			margin = { 20 10 }

			background = {
				margin = { -10 0}
				texture = "gfx/interface/colors/white.dds"
				tintcolor = { 0.1 0.05 0.05 0.6 }

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/event_effect_mask.dds"
					blend_mode = alphaMultiply
				}
			}

			text_multi = {
				max_width = 620
				autoresize = yes
				align = center
				text = "[TaskContract.GetTaskContractRequest]"
				default_format = "#high;italic"
			}

		}
		### Footer buttons
		hbox = {
			name = "footer_buttons"
			margin = { 10 0 }
			margin_bottom = 34
			layoutpolicy_horizontal = expanding

			hbox = {
				margin = { 0 10 }
				spacing = 60
				layoutpolicy_horizontal = expanding

				expand = {}

				### Accept button
				button_primary_big = {
					size = { 250 42 }

					text = "[TaskContractWindow.GetAcceptText]"

					visible = "[Not( Or( TaskContractWindow.IsContractStarted, TaskContractWindow.IsTravelingDueToCurrentContract ) )]"

					enabled = "[IsValidCommand( TaskContract.AcceptTaskContract )]"
					onclick = "[TaskContractWindow.StartContract]"
					onclick = "[TaskContractWindow.Close]"
					tooltip = "[TaskContractWindow.GetTooltip]"
					tooltip_when_disabled = "[GetCommandDesc( TaskContract.AcceptTaskContract )]"
					using = tooltip_se
				}

				button_primary_big = {
					size = { 250 42 }

					text = "TASK_CONTRACT_ABANDON"

					visible = "[TaskContractWindow.IsContractStarted]"

					enabled = "[IsValidCommand( TaskContract.InvalidateTaskContract )]"
					onclick = "[CreateCommandPopup( TaskContract.InvalidateTaskContract )]"
					onclick = "[TaskContractWindow.Close]"

					tooltip = "[TaskContractWindow.GetInvalidateTooltip]"
					using = tooltip_se
				}

				expand = {}
			}

			expand = {}
		}
	}
}
