# LotR - changed to be compatable with custom calendar

### BATTLE SUMMARY WINDOW
window = {
	name = "battle_summary"
	parentanchor = top|hcenter
	position = { 0 80 }
	layer = middle

	using = Window_Decoration_Warfare
	blockoverride "frame_bottom" {}

	background = {
		texture = "gfx/interface/window_military/battle_summary_bg.dds"
		spritetype = corneredstretched
		spriteborder = { 0 200 }
		texture_density = 2
		margin = { -18 0 }
        margin_top = -8

		modify_texture = {
			texture = "gfx/interface/window_military/battle_summary_bg_overlay.dds"
			spritetype = corneredtiled
			blend_mode = overlay
			texture_density = 2
		}

		modify_texture = {
			texture = "gfx/interface/component_overlay/overlay_effect.dds"
			blend_mode = overlay
		}
	}

	state = {
		name = _show
		using = Animation_FadeIn_Quick

		position = { 0 80 }
		on_start = "[GetVariableSystem.Set( 'regiment_tab', 'total' )]"
		on_start = "[GetVariableSystem.Set( 'knight_tab', 'stats' )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick

		position_y = -50
	}

	state = {
		name = dismiss
		using = Animation_FadeOut_Quick

		position_y = 50
		on_finish = "[BattleSummaryWindow.AfterDismiss]"
	}

	vbox = {
		set_parent_size_to_minimum = yes
		margin = { 55 20 }
		margin_bottom = 70

		hbox = {
			layoutpolicy_horizontal = expanding
			datacontext = "[BattleSummaryWindow.GetLocation.GetTerrain]"
			min_width = 630

			background = {
				name = "terrain"
				texture = "[Terrain.GetIllustration]"
				size = { 40 40 }
				tooltip = "HOLDING_TERRAIN_TOOLTIP"
				alpha = 0.5
				#margin_bottom = -80

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
					blend_mode = alphamultiply
				}
			}

			hbox = {
				margin_top = 40

				portrait_torso = {
					name = "commander_left"
					datacontext = "[BattleSummaryWindow.GetLeftSideResult.GetCommander]"

					blockoverride "portrait_button_template_tooltip"
					{
						tooltip = "[BattleSummaryWindow.GetLeftSideCommanderTooltip]"
					}

					blockoverride "opinion_box" {}
					blockoverride "coa" {}
					blockoverride "status_icons" {}

					icon = {
						visible = "[BattleSummaryWindow.IsKnightWounded( Character.Self )]"
						parentanchor = bottom|hcenter
						size = { 30 30 }
						texture = "gfx/interface/icons/icon_wounded.dds"
						tooltip = "BATTLE_SUMMARY_KNIGHTS_WOUNDED_TT"
					}

					coa_realm_medium_crown  = {
						name = "left_realm"
						datacontext = "[BattleSummaryWindow.GetLeftSideMainParticipant]"
						parentanchor = bottom|left
						tooltip = "[BattleSummaryWindow.GetLeftSideRealmFlagTooltip]"
					}
					blockoverride "glow_visible"
					{
						visible = no
					}

				}
			}

			vbox = {
				hbox = {
					spacing = 30

					vbox = {
						background = {
							using = Background_Title
							margin = { 50 0 }
							margin_bottom = 5
						}

						text_single = {
							name = "outcome"
							text = "[BattleSummaryWindow.GetWonLostLabel]"
							using = Font_Type_Flavor
							fontsize = 40
						}

						text_single = {
							name = "name"
							text = "BATTLE_SUMMARY_BATTLE_TITLE"
							default_format = "#high"
							using = Font_Type_Flavor
							fontsize = 25
						}

						#text_single = { #LotR - removed for calendar compatability
						#	name = "date"
						#	text = "[BattleSummaryWindow.GetOutcomeText]"
						#}
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					margin = { 0 10 }
					spacing = 10


					background = {
						using = Background_Title
						margin = { 20 0 }
					}

					vbox = {
						name = "gold"
						visible = "[BattleSummaryWindow.GetCombatResultData.PlayerGotGold]"

						icon = {
							texture = "gfx/interface/icons/icon_gold.dds"
							size = { 40 40 }
						}

						text_single = {
							name = "value"
							text = "[BattleSummaryWindow.GetCombatResultData.GetPlayerGoldGain|0]"
							default_format = "#high"
						}

						text_single = {
							text = "[gold|E]"
						}
					}

					vbox = {
						name = "prestige"
						visible = "[BattleSummaryWindow.GetCombatResultData.PlayerGotPrestige]"

						icon = {
							texture = "[GetPlayer.GetPrestigeLevelTexture]"
							size = { 40 40 }
						}

						text_single = {
							name = "value"
							text = "[BattleSummaryWindow.GetCombatResultData.GetPlayerPrestigeGain|0]"
							default_format = "#high"
						}

						text_single = {
							visible = "[BattleSummaryWindow.GetCombatResultData.PlayerIsWinnerWarLeader]"
							text = "[prestige_experience|E]"
						}

						text_single = {
							visible = "[Not( BattleSummaryWindow.GetCombatResultData.PlayerIsWinnerWarLeader )]"
							text = "[prestige|E]"
						}
					}

					vbox = {
						name = "piety"
						visible = "[BattleSummaryWindow.GetCombatResultData.PlayerGotPiety]"

						icon = {
							texture = "[GetPlayer.GetPietyLevelTexture]"
							size = { 40 40 }
						}

						text_single = {
							name = "value"
							text = "[BattleSummaryWindow.GetCombatResultData.GetPlayerPietyGain|0]"
							default_format = "#high"
						}

						text_single = {
							visible = "[BattleSummaryWindow.GetCombatResultData.PlayerIsWinnerWarLeader]"
							text = "[piety_experience|E]"
						}

						text_single = {
							visible = "[Not( BattleSummaryWindow.GetCombatResultData.PlayerIsWinnerWarLeader )]"
							text = "[piety|E]"
						}
					}

					vbox = {
						name = "warscore"

						icon = {
							texture = "gfx/interface/icons/war_score/icon_war_score_battles.dds"
							size = { 40 40 }
						}

						text_single = {
							name = "value"
							text = "[BattleSummaryWindow.GetWarScore|%0+=]"

						}

						text_single = {
							text = "[war_score|E]"
						}
					}

					vbox = {
						name = "contribution"
						visible = "[BattleSummaryWindow.GetCombatResultData.GotWarContribution( GetPlayer )]"
						tooltip = "END_OF_COMBAT_CONTRIBUTION_TOOLTIP"


						icon = {
							name = "bg"
							texture = "gfx/interface/icons/regimenttypes/heavy_infantry.dds"
							size = { 40 40 }
						}

						text_single = {
							name = "value"
							text = "[BattleSummaryWindow.GetCombatResultData.GetWarContribution( GetPlayer )|=]"
							default_format = "#high"
						}

						text_single = {
							text = "[contribution|E]"
						}
					}
				}
			}

			hbox = {
				margin_top = 40

				portrait_torso = {
					name = "commander_right"
					datacontext = "[BattleSummaryWindow.GetRightSideResult.GetCommander]"

					blockoverride "portrait_button_template_tooltip"
					{
						tooltip = "[BattleSummaryWindow.GetRightSideCommanderTooltip]"
					}

					blockoverride "portrait_button"
					{
						portrait_scale = { -1 1 }
						portrait_offset = { 1 0 }
					}

					blockoverride "opinion_box" {}
					blockoverride "coa" {}
					blockoverride "status_icons" {}

					icon = {
						visible = "[BattleSummaryWindow.IsKnightWounded( Character.Self )]"
						parentanchor = bottom|hcenter
						size = { 30 30 }
						texture = "gfx/interface/icons/icon_wounded.dds"
						tooltip = "BATTLE_SUMMARY_KNIGHTS_WOUNDED_TT"
					}

					coa_realm_medium_crown  = {
						visible = "[Character.IsRuler]"
						name = "right_realm"
						datacontext = "[BattleSummaryWindow.GetRightSideMainParticipant]"
						parentanchor = bottom|right
						tooltip = "[BattleSummaryWindow.GetRightSideRealmFlagTooltip]"
					}
					blockoverride "glow_visible"
					{
						visible = no
					}
				}
			}
		}

		### SOLDIERS INFO
		vbox = {
			layoutpolicy_horizontal = expanding
			spacing = 10

			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 5 0 }
				spacing = 5

				progressbar_green = {
					layoutpolicy_horizontal = expanding
					layoutstretchfactor_horizontal = "[BattleSummaryWindow.GetLeftArmyStretch]"
					name = "left_ratio"
					value = "[BattleSummaryWindow.GetLeftSideResult.GetLossPercent]"
					tooltip = "[BattleSummaryWindow.GetLeftTotalTooltip]"
				}

				progressbar_red = {
					layoutpolicy_horizontal = expanding
					layoutstretchfactor_horizontal = "[BattleSummaryWindow.GetRightArmyStretch]"
					name = "right_ratio"
					value = "[BattleSummaryWindow.GetRightSideResult.GetLossPercent]"
					tooltip = "[BattleSummaryWindow.GetRightTotalTooltip]"
					invertprogress = yes
				}
			}

			hbox = {
				datacontext = "[BattleSummaryWindow.GetLocation.GetTerrain]"
				layoutpolicy_horizontal = expanding
				margin = { 10 0 }
				spacing = 10

				hbox = {
					tooltip = "BS_INITIAL_SOLDIERS"

					icon = {
						size = { 35 35 }
						texture = "gfx/interface/icons/icon_soldier.dds"
					}

					spacing = 3
					text_single = {
						text = "[BattleSummaryWindow.GetLeftSideResult.GetInitialNumberOfSoldiers|0]"
						default_format = "#high"
					}
				}

				hbox = {
					tooltip = "BS_LOSSES"

					icon = {
						size = { 35 35 }
						texture = "gfx/interface/icons/icon_dead.dds"
					}

					spacing = 3
					text_single = {
						text = "[BattleSummaryWindow.GetLeftSideResult.GetNumberOfLostSoldiers|0]"
						default_format = "#high"
					}
				}

				hbox = {
					tooltip = "BS_SURVIVORS"

					icon = {
						size = { 35 35 }
						texture = "gfx/interface/icons/icon_soldier_survivor.dds"
					}

					spacing = 3
					text_single = {
						text = "[BattleSummaryWindow.GetLeftSideResult.GetNumberOfSurvivingSoldiers|0]"
						default_format = "#high"
					}
				}

				expand = {}

				icon = {
					name = "terrain"
					datacontext = "[BattleSummaryWindow.GetLocation.GetTerrain]"
					texture = "[Terrain.GetIcon]"
					size = { 40 40 }
					tooltip = "HOLDING_TERRAIN_TOOLTIP"
				}

				expand = {}

				hbox = {
					tooltip = "BS_SURVIVORS"

					icon = {
						size = { 35 35 }
						texture = "gfx/interface/icons/icon_soldier_survivor.dds"
					}

					spacing = 3
					text_single = {
						text = "[BattleSummaryWindow.GetRightSideResult.GetNumberOfSurvivingSoldiers|0]"
						default_format = "#high"
					}
				}

				hbox = {
					tooltip = "BS_LOSSES"

					icon = {
						size = { 35 35 }
						texture = "gfx/interface/icons/icon_dead.dds"
					}

					spacing = 3
					text_single = {
						text = "[BattleSummaryWindow.GetRightSideResult.GetNumberOfLostSoldiers|0]"
						default_format = "#high"
					}
				}

				hbox = {
					tooltip = "BS_INITIAL_SOLDIERS"

					icon = {
						size = { 35 35 }
						texture = "gfx/interface/icons/icon_soldier.dds"
					}

					spacing = 3
					text_single = {
						text = "[BattleSummaryWindow.GetRightSideResult.GetInitialNumberOfSoldiers|0]"
						default_format = "#high"
					}
				}
			}
		}

		### DETAILS
		vbox = {
			visible = "[Or(BattleSummaryWindow.IsSoldiersShown, BattleSummaryWindow.IsKnightsShown)]"
			layoutpolicy_horizontal = expanding

			background = {
				using = Background_Tab_Area
				margin_top = -10
				margin_bottom = 5
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				margin_top = 10

				button_tab = {
					visible = "[Not(BattleSummaryWindow.IsSoldiersShown)]"
					layoutpolicy_horizontal = expanding
					text = "BATTLE_SUMMARY_SOLDIERS"
					onclick = "[BattleSummaryWindow.OnShowSoldiers]"
					onclick = "[BattleSummaryWindow.RestoreSort]"
					down = "[BattleSummaryWindow.IsSoldiersShown]"
				}

				button_tab = {
					visible = "[BattleSummaryWindow.IsSoldiersShown]"
					layoutpolicy_horizontal = expanding
					text = "BATTLE_SUMMARY_SOLDIERS"
					down = "[BattleSummaryWindow.IsSoldiersShown]"
				}

				button_tab = {
					visible = "[Not(BattleSummaryWindow.IsKnightsShown)]"
					layoutpolicy_horizontal = expanding
					text = "BATTLE_SUMMARY_KNIGHTS"
					onclick = "[BattleSummaryWindow.OnShowKnights]"
					onclick = "[BattleSummaryWindow.RestoreSort]"
					down = "[BattleSummaryWindow.IsKnightsShown]"
				}

				button_tab = {
					visible = "[BattleSummaryWindow.IsKnightsShown]"
					layoutpolicy_horizontal = expanding
					text = "BATTLE_SUMMARY_KNIGHTS"
					down = "[BattleSummaryWindow.IsKnightsShown]"
				}
			}

			vbox = {
				visible = "[BattleSummaryWindow.IsSoldiersShown]"
				layoutpolicy_horizontal = expanding
				margin = { 10 10 }

				state = {
					name = _show
					using = Animation_FadeIn_Quick
				}

				state = {
					name = _hide
					alpha = 0
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					margin = { 5 5 }
					spacing = 5

					button_standard = {
						name = "sort_order"
						size = { 25 25 }
						tooltip = "BATTLE_SUMMARY_SORT_ORDER_DESC"
						using = tooltip_ne
						onclick = "[BattleSummaryWindow.ToggleSortOrder]"
						onclick = "[BattleSummaryWindow.RestoreSort]"

						button_icon = {
							size = { 25 25 }
							texture = "gfx/interface/icons/flat_icons/sort_icon.dds"
							framesize = { 66 66 }
							frame = "[BoolTo2And1(BattleSummaryWindow.IsSortDescending)]"
						}
					}

					dropdown_menu_standard =
					{
						name = "sort_soldiers"

						blockoverride "dropdown_properties"
						{
							datamodel = "[BattleSummaryWindow.GetSoldiersSortOptions]"

							onselectionchanged = "[BattleSummaryWindow.SortSoldiers]"
							selectedindex = "[BattleSummaryWindow.GetSoldiersSortIndex]"
						}

						blockoverride "dropdown_active_item_properties"
						{
							text = "[CString.GetString]"
						}

						blockoverride "dropdown_item_properties"
						{
							text = "[CString.GetString]"
						}
					}

					spacer = {
						size = { 10 10 }
					}

					expand = {}

					button_standard_clean = {
						size = { 100 28}
						text = "BATTLE_SUMMARY_TOTAL"
						onclick = "[GetVariableSystem.Set( 'regiment_tab', 'total' )]"
						onclick = "[BattleSummaryWindow.SetDisplayedPhase( '(int32)3' )]"
						onclick = "[BattleSummaryWindow.RestoreSort]"
						onclick = "[PdxGuiTriggerAllAnimations('battle_summary_kl_refresh')]"
						down = "[GetVariableSystem.HasValue( 'regiment_tab', 'total' )]"
						alwaystransparent = "[GetVariableSystem.HasValue( 'regiment_tab', 'total' )]"
						using = tooltip_above
						tooltip = BATTLE_SUMMARY_TOTAL_TT
					}

					button_standard_clean = {
						size = { 100 28}
						text = "BATTLE_SUMMARY_MAIN_PHASE"
						onclick = "[GetVariableSystem.Set( 'regiment_tab', 'main' )]"
						onclick = "[BattleSummaryWindow.SetDisplayedPhase( '(int32)1' )]"
						onclick = "[BattleSummaryWindow.RestoreSort]"
						onclick = "[PdxGuiTriggerAllAnimations('battle_summary_kl_refresh')]"
						down = "[GetVariableSystem.HasValue( 'regiment_tab', 'main' )]"
						alwaystransparent = "[GetVariableSystem.HasValue( 'regiment_tab', 'main' )]"
						using = tooltip_above
						tooltip = BATTLE_SUMMARY_MAIN_PHASE_TT
					}

					button_standard_clean = {
						size = { 100 28}
						text = "BATTLE_SUMMARY_PURSUIT"
						onclick = "[GetVariableSystem.Set( 'regiment_tab', 'pursuit' )]"
						onclick = "[BattleSummaryWindow.SetDisplayedPhase( '(int32)2' )]"
						onclick = "[BattleSummaryWindow.RestoreSort]"
						onclick = "[PdxGuiTriggerAllAnimations('battle_summary_kl_refresh')]"
						down = "[GetVariableSystem.HasValue( 'regiment_tab', 'pursuit' )]"
						alwaystransparent = "[GetVariableSystem.HasValue( 'regiment_tab', 'pursuit' )]"
						using = tooltip_above
						tooltip = BATTLE_SUMMARY_PURSUIT_TT
					}
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					spacing = 10

					hbox = {
						layoutpolicy_horizontal = expanding
						margin = { 10 0 }
						spacing = 20

						hbox = {
							layoutpolicy_horizontal = expanding
							layoutstretchfactor_horizontal = 1

							text_single = {
								text = "BATTLE_SUMMARY_YOUR_SOLDIERS"
							}

							expand = {}

							text_single = {
								text = "BATTLE_SUMMARY_KL"
								tooltip = "BATTLE_SUMMARY_KL_TT"
							}
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							layoutstretchfactor_horizontal = 1

							text_single = {
								text = "BATTLE_SUMMARY_KL"
								tooltip = "BATTLE_SUMMARY_KL_TT"
							}

							expand = {}

							text_single = {
								text = "BATTLE_SUMMARY_ENEMY_SOLDIERS"
							}
						}
					}

					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						autoresizescrollarea = yes
						maximumsize = { -1 400 }

						blockoverride "scrollbox_replace_vbox" {
							hbox = {
								margin = { 5 5 }

								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									layoutstretchfactor_horizontal = 1

									vbox = {
										layoutpolicy_horizontal = expanding
										datamodel = "[BattleSummaryWindow.GetLeftSoldiersStats]"

										item = {
											widget_regiment_left = {
												layoutpolicy_horizontal = expanding
											}
										}
									}

									expand = {}
								}

								divider_light = {
									layoutpolicy_vertical = expanding
								}

								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									layoutstretchfactor_horizontal = 1

									vbox = {
										layoutpolicy_horizontal = expanding
										datamodel = "[BattleSummaryWindow.GetRightSoldiersStats]"

										item = {

											widget_regiment_right = {
												layoutpolicy_horizontal = expanding
											}
										}
									}

									expand = {}
								}
							}
						}
					}
				}
			}

			vbox = {
				visible = "[BattleSummaryWindow.IsKnightsShown]"
				layoutpolicy_horizontal = expanding
				margin = { 10 10 }

				state = {
					name = _show
					using = Animation_FadeIn_Quick
				}

				state = {
					name = _hide
					alpha = 0
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					margin = { 5 5 }
					spacing = 5

					button_standard = {
						name = "sort_order"
						size = { 25 25 }
						tooltip = "BATTLE_SUMMARY_SORT_ORDER_DESC"
						onclick = "[BattleSummaryWindow.ToggleSortOrder]"
						onclick = "[BattleSummaryWindow.RestoreSort]"

						button_icon = {
							size = { 25 25 }
							texture = "gfx/interface/icons/flat_icons/sort_icon.dds"
							framesize = { 66 66 }
							frame = "[BoolTo2And1(BattleSummaryWindow.IsSortDescending)]"
						}
					}

					dropdown_menu_standard =
					{
						name = "sort_knights"

						blockoverride "dropdown_properties"
						{
							datamodel = "[BattleSummaryWindow.GetKnightsSortOptions]"
							onselectionchanged = "[BattleSummaryWindow.SortKnights]"
							selectedindex = "[BattleSummaryWindow.GetKnightsSortIndex]"
						}

						blockoverride "dropdown_active_item_properties"
						{
							text = "[CString.GetString]"
							tooltip = "BATTLE_SUMMARY_SORT_DESC"
						}

						blockoverride "dropdown_item_properties"
						{
							text = "[CString.GetString]"
						}

					}

					expand = {}

					button_standard = {
						size = { 100 28 }
						text = "BATTLE_SUMMARY_KNIGHTS_STATS"
						onclick = "[GetVariableSystem.Set( 'knight_tab', 'stats' )]"
						onclick = "[BattleSummaryWindow.RestoreSort]"
						onclick = "[PdxGuiTriggerAllAnimations('battle_summary_knights_refresh')]"
						down = "[GetVariableSystem.HasValue( 'knight_tab', 'stats' )]"
						alwaystransparent = "[GetVariableSystem.HasValue( 'knight_tab', 'stats' )]"
					}

					button_standard = {
						size = { 100 28 }
						text = "BATTLE_SUMMARY_KNIGHTS_EVENTS"
						onclick = "[GetVariableSystem.Set( 'knight_tab', 'events' )]"
						onclick = "[BattleSummaryWindow.RestoreSort]"
						onclick = "[PdxGuiTriggerAllAnimations('battle_summary_knights_refresh')]"
						down = "[GetVariableSystem.HasValue( 'knight_tab', 'events' )]"
						alwaystransparent = "[GetVariableSystem.HasValue( 'knight_tab', 'events' )]"
					}
				}

				vbox = {
					visible = "[GetVariableSystem.HasValue( 'knight_tab', 'stats' )]"
					layoutpolicy_horizontal = expanding
					spacing = 10

					state = {
						name = "battle_summary_knights_refresh"
						using = Animation_Refresh_FadeOut
					}

					state = {
						using = Animation_Refresh_FadeIn
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						margin = { 10 0 }
						spacing = 20

						text_single = {
							text = "BATTLE_SUMMARY_YOUR_KNIGHTS"
							min_width = 140
						}

						expand = {}

						text_single = {
							text = "BATTLE_SUMMARY_KILLS"
						}

						expand = {}

						text_single = {
							text = "BATTLE_SUMMARY_ENEMY_KNIGHTS"
							align = right
							min_width = 140
						}
					}

					scrollbox = {
						layoutpolicy_horizontal = expanding
						autoresizescrollarea = yes
						maximumsize = { -1 400 }

						blockoverride "scrollbox_content" {
							hbox = {
								layoutpolicy_horizontal = expanding
								margin = { 5 5 }

								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									layoutstretchfactor_horizontal = 1

									vbox = {
										layoutpolicy_horizontal = expanding
										datamodel = "[BattleSummaryWindow.GetLeftKnightsStats]"

										item = {
											widget_knight_left = {
												layoutpolicy_horizontal = expanding
											}
										}
									}

									expand = {}
								}

								divider_light = {
									layoutpolicy_vertical = expanding
								}

								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									layoutstretchfactor_horizontal = 1

									vbox = {
										layoutpolicy_horizontal = expanding
										datamodel = "[BattleSummaryWindow.GetRightKnightsStats]"

										item = {
											widget_knight_right = {
												layoutpolicy_horizontal = expanding
											}
										}
									}

									expand = {}
								}
							}
						}

						blockoverride "scrollbox_empty"
						{
							text = "BATTLE_SUMMARY_NO_KNIGHTS"
							visible = "[And( IsDataModelEmpty( BattleSummaryWindow.GetLeftKnightsStats ), IsDataModelEmpty( BattleSummaryWindow.GetRightKnightsStats ) )]"
						}
					}
				}


				vbox = {
					visible = "[GetVariableSystem.HasValue( 'knight_tab', 'events' )]"
					layoutpolicy_horizontal = expanding
					spacing = 10

					state = {
						name = "battle_summary_knights_refresh"
						using = Animation_Refresh_FadeOut
					}

					state = {
						using = Animation_Refresh_FadeIn
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						margin = { 10 0 }
						spacing = 20

						text_single = {
							text = "BATTLE_SUMMARY_YOUR_KNIGHTS"
						}

						expand = {}

						text_single = {
							text = "BATTLE_SUMMARY_EVENTS"
						}

						expand = {}

						text_single = {
							text = "BATTLE_SUMMARY_ENEMY_KNIGHTS"
						}
					}

					scrollbox = {
						name = "events_list"
						layoutpolicy_horizontal = expanding
						autoresizescrollarea = yes
						maximumsize = { -1 400 }

						blockoverride "scrollbox_replace_vbox"
						{
							vbox = {
								name = "battle_events"
								datamodel = "[BattleSummaryWindow.GetBattleEvents]"
								margin = { 5 5 }

								item = {
									widget = {
										layoutpolicy_horizontal = expanding
										size = { 0 95 }

										hbox = {
											hbox = {
												layoutpolicy_horizontal = expanding
												layoutpolicy_vertical = expanding

												background = {
													visible = "[BattleSummaryWindow.IsKnightKilled( BattleEvent.GetLeftCharacter( BattleSummaryWindow.IsPlayerAttacker ) )]"
													using = Status_Bad
												}

												expand = {}
											}

											hbox = {
												layoutpolicy_horizontal = expanding
												layoutpolicy_vertical = expanding

												background = {
													visible = "[BattleSummaryWindow.IsKnightKilled( BattleEvent.GetRightCharacter( BattleSummaryWindow.IsPlayerAttacker ) )]"
													using = Status_Bad
												}

												expand = {}
											}
										}

										vbox = {
											hbox = {
												layoutpolicy_horizontal = expanding

												portrait_head_small = {
													name = "left_portrait"
													datacontext = "[BattleEvent.GetLeftCharacter( BattleSummaryWindow.IsPlayerAttacker )]"
													visible = "[Character.IsValid]"

													blockoverride "opinion_box" {}
												}

												vbox = {
													spacing = 5
													visible = "[BattleEvent.GetLeftCharacter( BattleSummaryWindow.IsPlayerAttacker ).IsValid]"

													hbox = {
														text_single = {
															text = "BATTLE_SUMMARY_KILLS"
														}

														text_single = {
															layoutpolicy_horizontal = expanding
															raw_text = ": [BattleSummaryWindow.GetKnightKills( BattleEvent.GetLeftCharacter( BattleSummaryWindow.IsPlayerAttacker ) )|0]"
															tooltip = "BATTLE_SUMMARY_KILLS_TOTAL_TT"
														}
													}

													hbox = {
														spacing = 2

														icon = {
															name = "prowess_icon"
															size = { 35 35 }
															texture = "gfx/interface/icons/icon_prowess.dds"
															tooltip = "prowess"
														}

														text_single = {
															name = "prowess_value"
															minimumsize = { 10 0 }
															text = "[BattleEvent.GetLeftCharacter( BattleSummaryWindow.IsPlayerAttacker ).GetProwess|0]"
															tooltip = "prowess"
															using = Font_Size_Medium
															align = nobaseline
														}

														icon = {
															visible = "[And( BattleEvent.IsWound, BattleEvent.IsShowForPlayer( BattleSummaryWindow.IsPlayerAttacker ) )]"
															size = { 25 25 }
															texture = "gfx/interface/icons/icon_wounded.dds"
															tooltip = "BATTLE_SUMMARY_KNIGHTS_WOUNDED_TT"
														}

														icon = {
															visible = "[BattleSummaryWindow.IsKnightKilled( BattleEvent.GetLeftCharacter( BattleSummaryWindow.IsPlayerAttacker ) )]"
															size = { 25 25 }
															texture = "gfx/interface/icons/icon_kill.dds"
															tooltip = "BATTLE_SUMMARY_KNIGHTS_KILLED_TT"
														}
													}
												}

												text_multi = {
													name = "message"
													layoutpolicy_horizontal = expanding
													layoutpolicy_vertical = expanding
													text = "[BattleEvent.GetTitle( BattleSummaryWindow.IsPlayerAttacker )] [BattleSummaryWindow.GetEventSequenceSizeText( BattleEvent.GetRightCharacter( BattleSummaryWindow.IsPlayerAttacker ) )]"
													align = center
													margin = { 10 0 }

													tooltip_visible =  "[BattleSummaryWindow.HasEventSequence( BattleEvent.GetRightCharacter( BattleSummaryWindow.IsPlayerAttacker ) )]"

													tooltipwidget = {
														container = {
															using = GeneralTooltipSetup
															alwaystransparent = no

															widget = {
																name = "background"
																using = DefaultTooltipBackground
																size = { 100% 100% }
																alwaystransparent = no
															}

															flowcontainer = {
																direction = vertical
																layoutpolicy_horizontal = expanding
																margin = { 15 15 }

																text_single = {
																	text = "BATTLE_SUMMARY_KNIGHT_EVENT_EXPAND_HEADER_TT"
																	default_format = "#tooltip_heading"
																	layoutpolicy_horizontal = expanding
																}

																datamodel = "[BattleSummaryWindow.GetEventSequence( BattleEvent.GetRightCharacter( BattleSummaryWindow.IsPlayerAttacker ) )]"

																item = {
																	text_single = {
																		layoutpolicy_horizontal = expanding
																		datacontext = "[BattleEvent.GetLeftCharacter( BattleSummaryWindow.IsPlayerAttacker )]"
																		text = "BATTLE_SUMMARY_KNIGHT_EVENT_EXPAND_ENTRY_TT"
																	}
																}
															}
														}
													}
												}

												vbox = {
													spacing = 5
													visible = "[BattleEvent.GetRightCharacter( BattleSummaryWindow.IsPlayerAttacker ).IsValid]"

													hbox = {
														text_single = {
															text = "BATTLE_SUMMARY_KILLS"
														}

														text_single = {
															raw_text = ": [BattleSummaryWindow.GetKnightKills( BattleEvent.GetRightCharacter( BattleSummaryWindow.IsPlayerAttacker ) )|0]"
															tooltip = "BATTLE_SUMMARY_KILLS_TOTAL_TT"
														}
													}

													hbox = {
														spacing = 2

														icon = {
															visible = "[BattleSummaryWindow.IsKnightKilled( BattleEvent.GetRightCharacter( BattleSummaryWindow.IsPlayerAttacker ) )]"
															size = { 25 25 }
															texture = "gfx/interface/icons/icon_kill.dds"
															tooltip = "BATTLE_SUMMARY_KNIGHTS_KILLED_TT"
														}

														icon = {
															visible = "[And( BattleEvent.IsWound, Not( BattleEvent.IsShowForPlayer( BattleSummaryWindow.IsPlayerAttacker ) ) )]"
															size = { 25 25 }
															texture = "gfx/interface/icons/icon_wounded.dds"
															tooltip = "BATTLE_SUMMARY_KNIGHTS_WOUNDED_TT"
														}

														text_single = {
															name = "prowess_value"
															minimumsize = { 10 0 }
															text = "[BattleEvent.GetRightCharacter( BattleSummaryWindow.IsPlayerAttacker ).GetProwess|0]"
															tooltip = "prowess"
															using = Font_Size_Medium
															align = nobaseline
														}

														icon = {
															name = "prowess_icon"
															size = { 35 35 }
															texture = "gfx/interface/icons/icon_prowess.dds"
															tooltip = "prowess"
														}
													}
												}

												portrait_head_small = {
													name = "right_portrait"
													datacontext = "[BattleEvent.GetRightCharacter( BattleSummaryWindow.IsPlayerAttacker )]"
													visible = "[Character.IsValid]"

													blockoverride "opinion_box" {}

													blockoverride "portrait_transformation"
													{
														portrait_scale = { -1 1 }
														portrait_offset = { 1 0 }
													}
												}
											}

											divider_light = {
												layoutpolicy_horizontal = expanding
												alpha = 0.5
											}
										}
									}
								}
								text_single = {
									default_format = "#low;italic"

									text = "BATTLE_SUMMARY_NO_EVENTS"
									visible = "[IsDataModelEmpty(BattleSummaryWindow.GetBattleEvents)]"
								}
							}
						}

					}
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 17 0 }
				margin_bottom = 10

				expand = {}

				button_checkbox_label = {
					name = "auto_expand"
					onclick = "[BattleSummaryWindow.ToggleAutoExpand]"
					tooltip = "BATTLE_SUMMARY_AUTO_EXPAND_TT"

					blockoverride "checkbox"
					{
						checked = "[BattleSummaryWindow.IsAutoExpand]"
					}

					blockoverride "text"
					{
						text = "BATTLE_SUMMARY_AUTO_EXPAND"
					}
				}

			}
		}

		spacer = {
			visible = "[Not(Or(BattleSummaryWindow.IsSoldiersShown, BattleSummaryWindow.IsKnightsShown))]"
			size = { 20 25 }
		}

		hbox = {
			name = "bottom_buttons"
			margin_bottom = 18
			margin_top = 10
			spacing = 10

			button_standard = {
				visible = "[Not(Or(BattleSummaryWindow.IsSoldiersShown, BattleSummaryWindow.IsKnightsShown))]"
				name = "show_more"
				text = "BATTLE_SUMMARY_DETAILS"
				onclick = "[BattleSummaryWindow.OnShowSoldiers]"
				onclick = "[BattleSummaryWindow.RestoreSort]"
			}

			button_primary = {
				name = "dismiss"
				text = "DISMISS"
				onclick = "[BattleSummaryWindow.Dismiss]"
			}
		}
	}

	buttons_window_control = {
		parentanchor = top|right
		position = { -50 15 }

		blockoverride "button_close"
		{
			visible = no
		}

		blockoverride "button_minimize"
		{
			onclick = "[BattleSummaryWindow.Close]"
		}

		blockoverride "button_go_to"
		{
			onclick = "[BattleSummaryWindow.GoToProvince]"
			tooltip = "GOTO_PROVINCE"
		}
	}
}

types BattleSummary
{
	type container_bs_maa_icon = hbox {
		icon = {
			name = "maa_icon"
			texture = "[MenAtArmsType.GetIcon]"
			visible = "[RegimentCombatStats.IsMaa]"
			size = { 30 30 }

			glow = {
				glow_radius = 3
				using = Glow_Standard

				block "glow"
				{
					using = Color_Green
				}
			}

			tooltipwidget = {
				widget_maa_summary = {}
			}

			using = tooltip_nw
		}
	}

	type widget_regiment_icon = widget {
		block "size" {
			size = { 80 80 }
		}

		scissor = yes

		icon = {
			widgetanchor = center
			parentanchor = center
			size = { 80 80 }

			block "icon_texture" {
				texture = "gfx/interface/illustrations/men_at_arms_small/levies.dds"
				using = Mask_Rough_Edges
			}
		}
	}

	type widget_regiment_left = widget {
		size = { 0 90 }

		background = {
			using = Status_Bad
			visible = "[EqualTo_CFixedPoint( RegimentCombatStats.GetFinalCount, '(CFixedPoint)0')]"
		}

		hbox = {
			margin = { 10 5 }

			widget_regiment_icon = {
				visible = "[RegimentCombatStats.IsLevy]"
				tooltip = "ARMY_VIEW_LEVIES_TOOLTIP"
			}

			widget_regiment_icon = {
				visible = "[Not( Or( RegimentCombatStats.IsKnight, RegimentCombatStats.IsLevy ) )]"

				blockoverride "icon_texture" {
					texture = "[RegimentCombatStats.GetMenAtArmsType.GetVerticalImage]"

					using = Mask_Rough_Edges
				}

				tooltipwidget = {
					widget_maa_summary = {
						datacontext = "[RegimentCombatStats.GetMenAtArmsType]"

						blockoverride "counter_datamodel" {
							datamodel = "[BattleSummaryWindow.GetLeftCounter( MenAtArmsType.Self )]"
						}

						blockoverride "countered_by_datamodel" {
							datamodel = "[BattleSummaryWindow.GetLeftCounteredBy( MenAtArmsType.Self )]"
						}
					}
				}
			}

			widget_regiment_icon = {
				visible = "[RegimentCombatStats.IsKnight]"

				blockoverride "icon_texture" {
					texture = "gfx/interface/illustrations/men_at_arms_small/knights.dds"

					using = Mask_Rough_Edges
				}

				tooltipwidget = {
					widget_knight_summary = {

						blockoverride "knights_header" {
							text = "BATTLE_SUMMARY_LEFT_KNIGHTS_HEADER"
						}

						blockoverride "knights_datamodel" {
							datamodel = "[BattleSummaryWindow.GetLeftKnightsStats]"
						}
					}
				}
			}

			vbox = {
				margin = { 10 2 }
				layoutpolicy_horizontal = expanding
				spacing = 5

				hbox = {
					layoutpolicy_horizontal = expanding
					spacing = 2

					text_single = {
						visible = "[RegimentCombatStats.IsLevy]"
						text = "ARMY_VIEW_LEVIES"
						using = Font_Size_Medium
						tooltip = "ARMY_VIEW_LEVIES_TOOLTIP"
					}

					text_single = {
						visible = "[Not( Or( RegimentCombatStats.IsKnight, RegimentCombatStats.IsLevy ) )]"
						text = "[RegimentCombatStats.GetMenAtArmsType.GetNameNoTooltip]"

						tooltipwidget = {
							widget_maa_summary = {
								datacontext = "[RegimentCombatStats.GetMenAtArmsType]"

								blockoverride "counter_datamodel" {
									datamodel = "[BattleSummaryWindow.GetLeftCounter( MenAtArmsType.Self )]"
								}

								blockoverride "countered_by_datamodel" {
									datamodel = "[BattleSummaryWindow.GetLeftCounteredBy( MenAtArmsType.Self )]"
								}
							}
						}
					}

					text_single = {
						visible = "[RegimentCombatStats.IsKnight]"
						text = "BATTLE_SUMMARY_KNIGHTS"

						tooltipwidget = {
							widget_knight_summary = {

								blockoverride "knights_header" {
									text = "BATTLE_SUMMARY_LEFT_KNIGHTS_HEADER"
								}

								blockoverride "knights_datamodel" {
									datamodel = "[BattleSummaryWindow.GetLeftKnightsStats]"
								}
							}
						}
					}

					expand = {}

					hbox = {
						state = {
							name = "battle_summary_kl_refresh"
							using = Animation_Refresh_FadeOut
						}

						state = {
							using = Animation_Refresh_FadeIn
						}

						text_single = {
							text = "[RegimentCombatStats.GetTotalKills|0]"
							visible = "[GetVariableSystem.HasValue( 'regiment_tab', 'total' )]"
							tooltip = "BATTLE_SUMMARY_KILLS_TOTAL_TT"
							default_format = "#positive_value"
						}

						text_single = {
							text = "[RegimentCombatStats.GetMainKills|0]"
							visible = "[GetVariableSystem.HasValue( 'regiment_tab', 'main' )]"
							tooltip = "BATTLE_SUMMARY_KILLS_MAIN_TT"
							default_format = "#positive_value"
						}

						text_single = {
							text = "[RegimentCombatStats.GetPursuitKills|0]"
							visible = "[GetVariableSystem.HasValue( 'regiment_tab', 'pursuit' )]"
							tooltip = "BATTLE_SUMMARY_KILLS_PURSUIT_TT"
							default_format = "#positive_value"
						}
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding

					hbox = {
						datacontext = "[RegimentCombatStats.GetMenAtArmsType]"

						container_bs_maa_icon = {
							visible = "[EqualTo_int32( BattleSummaryWindow.GetBonusLeft( MenAtArmsType.Self ), '(int32)1' )]"
							margin_right = 5

							blockoverride "glow"
							{
								using = Color_Green
							}

							blockoverride "counter_datamodel" {
								datamodel = "[BattleSummaryWindow.GetLeftCounter( MenAtArmsType.Self )]"
							}

							blockoverride "countered_by_datamodel" {
								datamodel = "[BattleSummaryWindow.GetLeftCounteredBy( MenAtArmsType.Self )]"
							}
						}

						container_bs_maa_icon = {
							visible = "[EqualTo_int32( BattleSummaryWindow.GetBonusLeft( MenAtArmsType.Self ), '(int32)2' )]"
							margin_right = 5

							blockoverride "glow"
							{
								using = Color_Red
							}

							blockoverride "counter_datamodel" {
								datamodel = "[BattleSummaryWindow.GetLeftCounter( MenAtArmsType.Self )]"
							}

							blockoverride "countered_by_datamodel" {
								datamodel = "[BattleSummaryWindow.GetLeftCounteredBy( MenAtArmsType.Self )]"
							}
						}

						container_bs_maa_icon = {
							visible = "[EqualTo_int32( BattleSummaryWindow.GetBonusLeft( MenAtArmsType.Self ), '(int32)3' )]"
							margin_right = 5

							blockoverride "glow"
							{
								using = Color_Bright_Yellow
							}

							blockoverride "counter_datamodel" {
								datamodel = "[BattleSummaryWindow.GetLeftCounter( MenAtArmsType.Self )]"
							}

							blockoverride "countered_by_datamodel" {
								datamodel = "[BattleSummaryWindow.GetLeftCounteredBy( MenAtArmsType.Self )]"
							}
						}
					}

					icon = {
						visible = "[RegimentCombatStats.IsKnight]"
						size = { 30 30 }
						texture = "gfx/interface/icons/icon_knight_small.dds"

						tooltipwidget = {
							widget_knight_summary = {

								blockoverride "knights_header" {
									text = "BATTLE_SUMMARY_LEFT_KNIGHTS_HEADER"
								}

								blockoverride "knights_datamodel" {
									datamodel = "[BattleSummaryWindow.GetLeftKnightsStats]"
								}
							}
						}
					}

					widget = {
						size = { 0 30 }
						visible = "[RegimentCombatStats.IsLevy]"
					}

					text_single = {
						text = "[RegimentCombatStats.GetFinalCount|0]/[RegimentCombatStats.GetInitialCount|0]"
						tooltip = "BATTLE_SUMMARY_REGIMENT_COUNT"
						default_format = "#high"
					}

					expand = {}

					hbox = {
						state = {
							name = "battle_summary_kl_refresh"
							using = Animation_Refresh_FadeOut
						}

						state = {
							using = Animation_Refresh_FadeIn
						}

						text_single = {
							text = "[RegimentCombatStats.GetTotalLosses|0]"
							visible = "[GetVariableSystem.HasValue( 'regiment_tab', 'total' )]"
							tooltip = "BATTLE_SUMMARY_LOSSES_TOTAL_TT"
							default_format = "#negative_value"
						}

						text_single = {
							text = "[RegimentCombatStats.GetMainLosses|0]"
							visible = "[GetVariableSystem.HasValue( 'regiment_tab', 'main' )]"
							tooltip = "BATTLE_SUMMARY_LOSSES_MAIN_TT"
							default_format = "#negative_value"
						}

						text_single = {
							text = "[RegimentCombatStats.GetPursuitLosses|0]"
							visible = "[GetVariableSystem.HasValue( 'regiment_tab', 'pursuit' )]"
							tooltip = "BATTLE_SUMMARY_LOSSES_PURSUIT_TT"
							default_format = "#negative_value"
						}
					}
				}
			}
		}
	}

	type widget_regiment_right = widget {
		size = { 0 90 }

		background = {
			using = Status_Bad
			visible = "[EqualTo_CFixedPoint( RegimentCombatStats.GetFinalCount, '(CFixedPoint)0')]"
		}

		hbox = {
			margin = { 10 5 }

			vbox = {
				margin = { 10 2 }
				layoutpolicy_horizontal = expanding
				spacing = 5

				hbox = {
					layoutpolicy_horizontal = expanding
					spacing = 2

					hbox = {
						state = {
							name = "battle_summary_kl_refresh"
							using = Animation_Refresh_FadeOut
						}

						state = {
							using = Animation_Refresh_FadeIn
						}

						text_single = {
							visible = "[GetVariableSystem.HasValue( 'regiment_tab', 'total' )]"
							text = "[RegimentCombatStats.GetTotalKills|0]"
							tooltip = "BATTLE_SUMMARY_KILLS_TOTAL_TT"
							default_format = "#positive_value"
						}

						text_single = {
							visible = "[GetVariableSystem.HasValue( 'regiment_tab', 'main' )]"
							text = "[RegimentCombatStats.GetMainKills|0]"
							tooltip = "BATTLE_SUMMARY_KILLS_MAIN_TT"
							default_format = "#positive_value"
						}

						text_single = {
							visible = "[GetVariableSystem.HasValue( 'regiment_tab', 'pursuit' )]"

							text = "[RegimentCombatStats.GetPursuitKills|0]"
							tooltip = "BATTLE_SUMMARY_KILLS_PURSUIT_TT"
							default_format = "#positive_value"
						}
					}

					expand = {}

					text_single = {
						visible = "[RegimentCombatStats.IsLevy]"
						text = "ARMY_VIEW_LEVIES"
						tooltip = "ARMY_VIEW_LEVIES_TOOLTIP"
					}

					text_single = {
						visible = "[Not( Or( RegimentCombatStats.IsKnight, RegimentCombatStats.IsLevy ) )]"
						text = "[RegimentCombatStats.GetMenAtArmsType.GetNameNoTooltip]"

						tooltipwidget = {
							widget_maa_summary = {
								datacontext = "[RegimentCombatStats.GetMenAtArmsType]"

								blockoverride "counter_datamodel" {
									datamodel = "[BattleSummaryWindow.GetRightCounter( MenAtArmsType.Self )]"
								}

								blockoverride "countered_by_datamodel" {
									datamodel = "[BattleSummaryWindow.GetRightCounteredBy( MenAtArmsType.Self )]"
								}
							}
						}
					}

					text_single = {
						visible = "[RegimentCombatStats.IsKnight]"
						text = "BATTLE_SUMMARY_KNIGHTS"

						tooltipwidget = {
							widget_knight_summary = {

								blockoverride "knights_header" {
									text = "BATTLE_SUMMARY_RIGHT_KNIGHTS_HEADER"
								}

								blockoverride "knights_datamodel" {
									datamodel = "[BattleSummaryWindow.GetRightKnightsStats]"
								}
							}
						}
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding

					hbox = {
						state = {
							name = "battle_summary_kl_refresh"
							using = Animation_Refresh_FadeOut
						}

						state = {
							using = Animation_Refresh_FadeIn
						}

						text_single = {
							text = "[RegimentCombatStats.GetTotalLosses|0]"
							visible = "[GetVariableSystem.HasValue( 'regiment_tab', 'total' )]"
							tooltip = "BATTLE_SUMMARY_LOSSES_TOTAL_TT"
							default_format = "#negative_value"
						}

						text_single = {
							text = "[RegimentCombatStats.GetMainLosses|0]"
							visible = "[GetVariableSystem.HasValue( 'regiment_tab', 'main' )]"
							tooltip = "BATTLE_SUMMARY_LOSSES_MAIN_TT"
							default_format = "#negative_value"
						}

						text_single = {
							text = "[RegimentCombatStats.GetPursuitLosses|0]"
							visible = "[GetVariableSystem.HasValue( 'regiment_tab', 'pursuit' )]"
							tooltip = "BATTLE_SUMMARY_LOSSES_PURSUIT_TT"
							default_format = "#negative_value"
						}
					}

					expand = {}

					text_single = {
						text = "[RegimentCombatStats.GetFinalCount|0]/[RegimentCombatStats.GetInitialCount|0]"
						tooltip = "BATTLE_SUMMARY_REGIMENT_COUNT"
						default_format = "#high"
					}

					hbox = {
						datacontext = "[RegimentCombatStats.GetMenAtArmsType]"

						container_bs_maa_icon = {
							visible = "[EqualTo_int32( BattleSummaryWindow.GetBonusRight( MenAtArmsType.Self ), '(int32)1' )]"
							margin_left = 5

							blockoverride "glow"
							{
								using = Color_Green
							}

							blockoverride "counter_datamodel" {
								datamodel = "[BattleSummaryWindow.GetRightCounter( MenAtArmsType.Self )]"
							}

							blockoverride "countered_by_datamodel" {
								datamodel = "[BattleSummaryWindow.GetRightCounteredBy( MenAtArmsType.Self )]"
							}
						}

						container_bs_maa_icon = {
							visible = "[EqualTo_int32( BattleSummaryWindow.GetBonusRight( MenAtArmsType.Self ), '(int32)2' )]"
							margin_left = 5

							blockoverride "glow"
							{
								using = Color_Red
							}

							blockoverride "counter_datamodel" {
								datamodel = "[BattleSummaryWindow.GetRightCounter( MenAtArmsType.Self )]"
							}

							blockoverride "countered_by_datamodel" {
								datamodel = "[BattleSummaryWindow.GetRightCounteredBy( MenAtArmsType.Self )]"
							}
						}

						container_bs_maa_icon = {
							visible = "[EqualTo_int32( BattleSummaryWindow.GetBonusRight( MenAtArmsType.Self ), '(int32)3' )]"
							margin_left = 5

							blockoverride "glow"
							{
								using = Color_Bright_Yellow
							}

							blockoverride "counter_datamodel" {
								datamodel = "[BattleSummaryWindow.GetRightCounter( MenAtArmsType.Self )]"
							}

							blockoverride "countered_by_datamodel" {
								datamodel = "[BattleSummaryWindow.GetRightCounteredBy( MenAtArmsType.Self )]"
							}
						}
					}

					icon = {
						size = { 30 30 }
						texture = "gfx/interface/icons/icon_knight_small.dds"
						visible = "[RegimentCombatStats.IsKnight]"

						tooltipwidget = {
							widget_knight_summary = {

								blockoverride "knights_header" {
									text = "BATTLE_SUMMARY_RIGHT_KNIGHTS_HEADER"
								}

								blockoverride "knights_datamodel" {
									datamodel = "[BattleSummaryWindow.GetRightKnightsStats]"
								}
							}
						}
					}

					widget = {
						size = { 0 30 }
						visible = "[RegimentCombatStats.IsLevy]"
					}
				}
			}

			widget_regiment_icon = {
				visible = "[RegimentCombatStats.IsLevy]"
				tooltip = "ARMY_VIEW_LEVIES_TOOLTIP"
			}

			widget_regiment_icon = {
				visible = "[Not( Or( RegimentCombatStats.IsKnight, RegimentCombatStats.IsLevy ) )]"

				blockoverride "icon_texture" {
					texture = "[RegimentCombatStats.GetMenAtArmsType.GetVerticalImage]"
					using = Mask_Rough_Edges
				}

				tooltipwidget = {
					widget_maa_summary = {
						datacontext = "[RegimentCombatStats.GetMenAtArmsType]"

						blockoverride "counter_datamodel" {
							datamodel = "[BattleSummaryWindow.GetLeftCounter( MenAtArmsType.Self )]"
						}

						blockoverride "countered_by_datamodel" {
							datamodel = "[BattleSummaryWindow.GetLeftCounteredBy( MenAtArmsType.Self )]"
						}
					}
				}
			}

			widget_regiment_icon = {
				visible = "[RegimentCombatStats.IsKnight]"

				blockoverride "icon_texture" {
					texture = "gfx/interface/illustrations/men_at_arms_small/knights.dds"
					using = Mask_Rough_Edges
				}

				tooltipwidget = {
					widget_knight_summary = {

						blockoverride "knights_header" {
							text = "BATTLE_SUMMARY_RIGHT_KNIGHTS_HEADER"
						}

						blockoverride "knights_datamodel" {
							datamodel = "[BattleSummaryWindow.GetRightKnightsStats]"
						}
					}
				}
			}
		}
	}

	type widget_knight_left = widget {
		datacontext = "[RegimentCombatStats.GetKnight]"
		size = { 0 95 }

		divider_light = {
			parentanchor = bottom
			position = { 0 3 }
			size = { 100% 3 }
		}

		hbox = {
			portrait_head_small = {}

			vbox = {
				layoutpolicy_horizontal = expanding
				margin = { 2 2 }

				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					text_multi = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						text = "[Character.GetNameNoTooltip]"
					}

					text_single = {
						text = "[RegimentCombatStats.GetTotalKills|0]"
						default_format = "#high"
						align = nobaseline
						using = Font_Size_Big
						margin = { 12 0 }
						tooltip = "BATTLE_SUMMARY_KILLS_TOTAL_TT"
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					spacing = 2

					icon = {
						name = "prowess_icon"
						size = { 35 35 }
						texture = "gfx/interface/icons/icon_prowess.dds"
						tooltip = "prowess"
					}

					text_single = {
						name = "prowess_value"
						text = "[Character.GetProwess|0]"
						tooltip = "prowess"
						size = { 22 0 }
					}

					icon = {
						visible = "[BattleSummaryWindow.IsKnightWounded( Character.Self )]"
						size = { 25 25 }
						texture = "gfx/interface/icons/icon_wounded.dds"
						tooltip = "BATTLE_SUMMARY_KNIGHTS_WOUNDED_TT"
					}

					expand = {}
				}
			}
		}
	}

	type widget_knight_right = widget {
		datacontext = "[RegimentCombatStats.GetKnight]"
		size = { 0 95 }

		background = {
			using = Status_Bad
			visible = "[BattleSummaryWindow.IsKnightKilled( RegimentCombatStats.GetKnight )]"
		}

		divider_light = {
			parentanchor = bottom
			position = { 0 3 }
			size = { 100% 3 }
		}

		hbox = {
			vbox = {
				layoutpolicy_horizontal = expanding
				margin = { 2 2 }

				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					text_single = {
						text = "[RegimentCombatStats.GetTotalKills|0]"
						default_format = "#high"
						align = nobaseline
						using = Font_Size_Big
						margin = { 12 0 }
						tooltip = "BATTLE_SUMMARY_KILLS_TOTAL_TT"

					}

					text_multi = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						text = "[Character.GetNameNoTooltip]"
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					spacing = 5

					expand = {}

					icon = {
						visible = "[BattleSummaryWindow.IsKnightWounded( Character.Self )]"
						size = { 25 25 }
						texture = "gfx/interface/icons/icon_wounded.dds"
						tooltip = "BATTLE_SUMMARY_KNIGHTS_WOUNDED_TT"
					}

					text_single = {
						name = "prowess_value"
						text = "[Character.GetProwess|0]"
						tooltip = "prowess"
						size = { 22 0 }
					}

					icon = {
						name = "prowess_icon"
						size = { 35 35 }
						texture = "gfx/interface/icons/icon_prowess.dds"
						tooltip = "prowess"
					}
				}
			}

			portrait_head_small = {}
		}
	}

	type widget_maa_summary = widget {
		alwaystransparent = no

		widget = {
			name = "background"
			size = { 100% 100% }
			using = DefaultTooltipBackground
			alwaystransparent = no
		}

		vbox = {
			set_parent_size_to_minimum = yes
			margin_top = 5
			margin = { 3 3 }

			vbox_maa_stats = {
				layoutpolicy_horizontal = expanding
				margin = { 10 0 }

				blockoverride "type_text" {}
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				margin = { 20 10 }
				margin_top = 0
				spacing = 5

				hbox = {
					layoutpolicy_horizontal = expanding
					margin_top = 10
					spacing = 5

					icon = {
						name = "icon"
						size = { 40 40 }
						texture = "[MenAtArmsType.GetIcon]"
					}

					text_single = {
						name = "type"
						text = "MEN_AT_ARMS_TYPE_NAME"
						align = nobaseline
					}

					expand = {}
				}

				hbox = {
					layoutpolicy_horizontal = expanding

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "[RegimentCombatStats.GetFinalCount|0]/[RegimentCombatStats.GetInitialCount|0]"
						default_format = "#high"
						using = Font_Size_Medium
					}

					text_single = {
						text = "COMBAT_WINDOW_MAA_TT_REGIMENTS"
						visible = no
					}
				}

				text_single = {
					layoutpolicy_horizontal = expanding
					visible = "[GreaterThan_CFixedPoint( BattleSummaryWindow.GetTerrainBonus( MenAtArmsType.Self ), '(CFixedPoint)0' )]"
					text = "BATTLE_SUMMARY_TARRAIN_BONUS"
					default_format = "#positive_value"
				}

				text_single = {
					layoutpolicy_horizontal = expanding
					visible = "[LessThan_CFixedPoint( BattleSummaryWindow.GetTerrainBonus( MenAtArmsType.Self ), '(CFixedPoint)0' )]"
					text = "BATTLE_SUMMARY_TARRAIN_PENALTY"
					default_format = "#negative_value"
				}

				vbox = {
					layoutpolicy_horizontal = expanding

					block "counter_datamodel" {
						datamodel = "[BattleSummaryWindow.GetLeftCounter( MenAtArmsType.Self )]"
					}

					item = {
						text_single = {
							layoutpolicy_horizontal = expanding
							text = "BATTLE_SUMMARY_COUNTERS"
							default_format = "#positive_value"
						}
					}
				}

				vbox = {
					layoutpolicy_horizontal = expanding

					block "countered_by_datamodel" {
						datamodel = "[BattleSummaryWindow.GetLeftCounteredBy( MenAtArmsType.Self )]"
					}

					item = {
						text_single = {
							layoutpolicy_horizontal = expanding
							text = "BATTLE_SUMMARY_COUNTERED_BY"
							default_format = "#negative_value"
						}
					}
				}
			}
		}
	}

	type widget_knight_summary = widget {
		alwaystransparent = no

		widget = {
			name = "background"
			using = DefaultTooltipBackground
			size = { 100% 100% }
			alwaystransparent = no
		}

		vbox = {
			set_parent_size_to_minimum = yes
			margin = { 15 15 }
			spacing = 5

			text_single = {
				layoutpolicy_horizontal = expanding
				default_format = "#tooltip_heading"

				block "knights_header" {
					text = "[knights|E]"
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				block "knights_datamodel" {}

				item = {
					hbox = {
						layoutpolicy_horizontal = expanding
						datacontext = "[RegimentCombatStats.GetKnight]"
						spacing = 5

						text_single = {
							raw_text = "[Character.GetNameNoTooltip]: "
							max_width = 230
						}

						expand = {}

						text_single = {
							text = "BATTLE_SUMMARY_KNIGHT_OUTCOME_TEXT"
							default_format = "#high"
						}
					}
				}
			}
		}
	}
}
